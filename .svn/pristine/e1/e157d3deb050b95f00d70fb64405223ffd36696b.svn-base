var Laya=window.Laya=function(l,t){var u={__internals:[],__packages:{},__classmap:{Object:Object,Function:Function,Array:Array,String:String},__sysClass:{object:"Object",array:"Array",string:"String",dictionary:"Dictionary"},__propun:{writable:!0,enumerable:!1,configurable:!0},__presubstr:String.prototype.substr,__substr:function(t,e){return 1==arguments.length?u.__presubstr.call(this,t):u.__presubstr.call(this,t,0<e?e:this.length+e)},__init:function(t){t.forEach(function(t){t.__init$&&t.__init$()})},__isClass:function(t){return t&&(t.__isclass||t==Object||t==String||t==Array)},__newvec:function(t,e){var i=[];i.length=t;for(var n=0;n<t;n++)i[n]=e;return i},__extend:function(t,e){for(var i in e)if(e.hasOwnProperty(i)){var n=Object.getOwnPropertyDescriptor(e,i),s=n.get,r=n.set;s||r?s&&r?Object.defineProperty(t,i,n):(s&&Object.defineProperty(t,i,s),r&&Object.defineProperty(t,i,r)):t[i]=e[i]}function o(){u.un(this,"constructor",t)}o.prototype=e.prototype,t.prototype=new o,u.un(t.prototype,"__imps",u.__copy({},e.prototype.__imps))},__copy:function(t,e){if(!e)return null;for(var i in t=t||{},e)t[i]=e[i];return t},__package:function(t,e){if(!u.__packages[t]){u.__packages[t]=!0;var i=l,n=t.split(".");if(1<n.length)for(var s=0,r=n.length-1;s<r;s++){var o=i[n[s]];i=o||(i[n[s]]={})}i[n[n.length-1]]||(i[n[n.length-1]]=e||{})}},__hasOwnProperty:function(t,e){return e=e||this,Object.hasOwnProperty.call(e,t)||function t(e,i){if(Object.hasOwnProperty.call(i.prototype,e))return!0;var n=i.prototype.__super;return null==n?null:t(e,n)}(t,e.__class)},__typeof:function(t,e){if(!t||!e)return!1;if(e===String)return"string"==typeof t;if(e===Number)return"number"==typeof t;if(e.__interface__)e=e.__interface__;else if("string"!=typeof e)return t instanceof e;return t.__imps&&t.__imps[e]||t.__class==e},__as:function(t,e){return this.__typeof(t,e)?t:null},__int:function(t){return t?parseInt(t):0},interface:function(t,e){u.__package(t,{});var i=u.__internals,n=i[t]=i[t]||{self:t};if(e){var s=e.split(",");n.extend=[];for(var r=0;r<s.length;r++){var o=s[r];i[o]=i[o]||{self:o},n.extend.push(i[o])}}var a=l,h=t.split(".");for(r=0;r<h.length-1;r++)a=a[h[r]];a[h[h.length-1]]={__interface__:t}},class:function(t,e,i,n){if(i&&u.__extend(t,i),e)if(u.__package(e,t),u.__classmap[e]=t,0<e.indexOf(".")){if(0==e.indexOf("laya.")){var s=e.split(".");n=n||s[s.length-1],u[n]&&console.log("Warning!,this class["+n+"] already exist:",u[n]),u[n]=t}}else"Main"==e?l.Main=t:(u[e]&&console.log("Error!,this class["+e+"] already exist:",u[e]),u[e]=t);var r=u.un,o=t.prototype;r(o,"hasOwnProperty",u.__hasOwnProperty),r(o,"__class",t),r(o,"__super",i),r(o,"__className",e),r(t,"__super",i),r(t,"__className",e),r(t,"__isclass",!0),r(t,"super",function(t){this.__super.call(t)})},imps:function(t,e){if(!e)return null;var s=t.__imps||u.un(t,"__imps",{});function r(t){var e,i;if((e=u.__internals[t])&&(s[t]=!0,i=e.extend))for(var n=0;n<i.length;n++)r(i[n].self)}for(var i in e)r(i)},superSet:function(t,e,i,n){var s=t.prototype["_$set_"+i];s&&s.call(e,n)},superGet:function(t,e,i){var n=t.prototype["_$get_"+i];return n?n.call(e):null},getset:function(t,e,i,n,s){t?(n&&(e["_$GET_"+i]=n),s&&(e["_$SET_"+i]=s)):(n&&u.un(e,"_$get_"+i,n),s&&u.un(e,"_$set_"+i,s)),n&&s?Object.defineProperty(e,i,{get:n,set:s,enumerable:!1,configurable:!0}):(n&&Object.defineProperty(e,i,{get:n,enumerable:!1,configurable:!0}),s&&Object.defineProperty(e,i,{set:s,enumerable:!1,configurable:!0}))},static:function(i,n){for(var s=0,t=n.length;s<t;s+=2)if("length"==n[s])i.length=n[s+1].call(i);else{function e(){var e=n[s],t=n[s+1];Object.defineProperty(i,e,{get:function(){return delete this[e],this[e]=t.call(this)},set:function(t){delete this[e],this[e]=t},enumerable:!0,configurable:!0})}e()}},un:function(t,e,i){return i||(i=t[e]),u.__propun.value=i,Object.defineProperty(t,e,u.__propun),i},uns:function(e,t){t.forEach(function(t){u.un(e,t)})}};return l.console=l.console||{log:function(){}},l.trace=l.console.log,Error.prototype.throwError=function(){throw arguments},Object.defineProperty(Array.prototype,"fixed",{enumerable:!1}),u}(window,document);!function(t,e,i){i.un,i.uns,i.static,i.class,i.getset,i.__newvec}(window,document,Laya),function(o,e,b){b.un,b.uns;var h=b.static,p=b.class,u=b.getset;b.__newvec;b.interface("laya.runtime.IMarket"),b.interface("laya.filters.IFilter"),b.interface("laya.display.ILayout"),b.interface("laya.resource.IDispose"),b.interface("laya.runtime.IPlatform"),b.interface("laya.resource.IDestroy"),b.interface("laya.runtime.IConchNode"),b.interface("laya.filters.IFilterAction"),b.interface("laya.runtime.ICPlatformClass"),b.interface("laya.resource.ICreateResource"),b.interface("laya.runtime.IConchRenderObject"),b.interface("laya.runtime.IPlatformClass","laya.runtime.IPlatform");var A=function(){function r(){}return p(r,"laya.utils.RunDriver"),r.FILTER_ACTIONS=[],r.pixelRatio=-1,r._charSizeTestDiv=null,r.now=function(){return Date.now()},r.getWindow=function(){return o},r.getPixelRatio=function(){if(r.pixelRatio<0){var t=B.context,e=t.backingStorePixelRatio||t.webkitBackingStorePixelRatio||t.mozBackingStorePixelRatio||t.msBackingStorePixelRatio||t.oBackingStorePixelRatio||t.backingStorePixelRatio||1;(r.pixelRatio=(B.window.devicePixelRatio||1)/e)<1&&(r.pixelRatio=1)}return r.pixelRatio},r.getIncludeStr=function(t){return null},r.createShaderCondition=function(t){var e="(function() {return "+t+";})";return b._runScript(e)},r.fontMap=[],r.measureText=function(t,e){var i=r.hanzi.test(t);if(i&&r.fontMap[e])return r.fontMap[e];var n=B.context;n.font=e;var s=n.measureText(t);return i&&(r.fontMap[e]=s),s},r.getWebGLContext=function(t){},r.beginFlush=function(){},r.endFinish=function(){},r.addToAtlas=null,r.flashFlushImage=function(t){},r.drawToCanvas=function(t,e,i,n,s,r){var o=yt.create("2D"),a=new F(i,n,o);return k.renders[e]._fun(t,a,s,r),o},r.createParticleTemplate2D=null,r.createGLTextur=null,r.createWebGLContext2D=null,r.changeWebGLSize=function(t,e){},r.createRenderSprite=function(t,e){return new k(t,e)},r.createFilterAction=function(t){return new y},r.createGraphics=function(){return new _},r.clear=function(t){D._context.ctx.clear()},r.cancelLoadByUrl=function(t){},r.clearAtlas=function(t){},r.isAtlas=function(t){return!1},r.addTextureToAtlas=function(t){},r.getTexturePixels=function(t,e,i,n,s){return null},r.skinAniSprite=function(){return null},r.update3DLoop=function(){},h(r,["hanzi",function(){return this.hanzi=new RegExp("^[一-龥]$")}]),r}(),n=(u(1,b,"alertGlobalError",null,function(t){var r=0;B.window.onerror=t?function(t,e,i,n,s){r++<5&&s&&alert("出错啦，请把此信息截图给研发商\n"+t+"\n"+s.stack||s)}:null}),b.init=function(t,e,i){for(var n=[],s=2,r=arguments.length;s<r;s++)n.push(arguments[s]);if(!b._isinit){ArrayBuffer.prototype.slice||(ArrayBuffer.prototype.slice=b._arrayBufferSlice),b._isinit=!0,B.__init__(),O.__init__(),_.__init__(),b.timer=new j,b.scaleTimer=new j,b.loader=new ht,J.__init__(),s=0;for(var o=n.length;s<o;s++)n[s].enable&&n[s].enable();return d.__init__(),a.__init__(),N.__init__(),G.beginCheck(),b._currentStage=b.stage=new mt,b.stage.conchModel&&b.stage.conchModel.setRootNode(),b._getUrlPath(),b.render=new D(0,0),b.stage.size(t,e),k.__init__(),c.__init__(),f.instance.__init__(b.stage,D.canvas),xt.__init__(),E.autoStopMusic=!0,S.__init__(),D.canvas}},b._getUrlPath=function(){var t=B.window.location,e=t.pathname;e=":"==e.charAt(2)?e.substring(1):e,R.rootPath=R.basePath=R.getPath("file:"==t.protocol?e:t.protocol+"//"+t.host+t.pathname)},b._arrayBufferSlice=function(t,e){var i=new Uint8Array(this,t,e-t),n=new Uint8Array(i.length);return n.set(i),n.buffer},b._runScript=function(t){return B.window[b._evcode](t)},b.stage=null,b.timer=null,b.scaleTimer=null,b.loader=null,b.version="1.8.0beta",b.render=null,b._currentStage=null,b._isinit=!1,b.MiniAdpter={init:function(){o.navigator&&o.navigator.userAgent&&-1<o.navigator.userAgent.indexOf("MiniGame")&&console.error("请先引用小游戏适配库laya.wxmini.js,详细教程：https://ldc.layabox.com/doc/?nav=zh-ts-5-0-0")}},h(b,["conchMarket",function(){return this.conchMarket=o.conch?conchMarket:null},"PlatformClass",function(){return this.PlatformClass=o.PlatformClass},"_evcode",function(){return this._evcode="e"+String.fromCharCode(118)+"al"}]),function(){function t(){}return p(t,"Config"),t.WebGLTextCacheCount=500,t.atlasEnable=!1,t.showCanvasMark=!1,t.animationInterval=50,t.isAntialias=!1,t.isAlpha=!1,t.premultipliedAlpha=!0,t.isStencil=!0,t.preserveDrawingBuffer=!1,t}()),l=function(){var h;function e(){this._events=null}p(e,"laya.events.EventDispatcher");var t=e.prototype;return t.hasListener=function(t){return!!(this._events&&this._events[t])},t.event=function(t,e){if(!this._events||!this._events[t])return!1;var i=this._events[t];if(i.run)i.once&&delete this._events[t],null!=e?i.runWith(e):i.run();else{for(var n=0,s=i.length;n<s;n++){var r=i[n];r&&(null!=e?r.runWith(e):r.run()),r&&!r.once||(i.splice(n,1),n--,s--)}0===i.length&&this._events&&delete this._events[t]}return!0},t.on=function(t,e,i,n){return this._createListener(t,e,i,n,!1)},t.once=function(t,e,i,n){return this._createListener(t,e,i,n,!0)},t._createListener=function(t,e,i,n,s,r){void 0===r&&(r=!0),r&&this.off(t,e,i,s);var o=h.create(e||this,i,n,s);this._events||(this._events={});var a=this._events;return a[t]?a[t].run?a[t]=[a[t],o]:a[t].push(o):a[t]=o,this},t.off=function(t,e,i,n){if(void 0===n&&(n=!1),!this._events||!this._events[t])return this;var s=this._events[t];if(null!=s)if(s.run)e&&s.caller!==e||s.method!==i||n&&!s.once||(delete this._events[t],s.recover());else{for(var r=0,o=0,a=s.length;o<a;o++){var h=s[o];h?!h||e&&h.caller!==e||h.method!==i||n&&!h.once||(r++,s[o]=null,h.recover()):r++}r===a&&delete this._events[t]}return this},t.offAll=function(t){var e=this._events;if(!e)return this;if(t)this._recoverHandlers(e[t]),delete e[t];else{for(var i in e)this._recoverHandlers(e[i]);this._events=null}return this},t._recoverHandlers=function(t){if(t)if(t.run)t.recover();else for(var e=t.length-1;-1<e;e--)t[e]&&(t[e].recover(),t[e]=null)},t.isMouseEvent=function(t){return e.MOUSE_EVENTS[t]},e.MOUSE_EVENTS={rightmousedown:!0,rightmouseup:!0,rightclick:!0,mousedown:!0,mouseup:!0,mousemove:!0,mouseover:!0,mouseout:!0,click:!0,doubleclick:!0},e.__init$=function(){Object.defineProperty(laya.events.EventDispatcher.prototype,"_events",{enumerable:!1,writable:!0}),h=function(t){function s(t,e,i,n){s.__super.call(this,t,e,i,n)}return p(s,"",v),s.prototype.recover=function(){0<this._id&&(this._id=0,s._pool.push(this.clear()))},s.create=function(t,e,i,n){return void 0===n&&(n=!0),s._pool.length?s._pool.pop().setTo(t,e,i,n):new s(t,e,i,n)},s._pool=[],s}()},e}(),v=function(){function s(t,e,i,n){this.once=!1,void(this._id=0)===n&&(n=!1),this.setTo(t,e,i,n)}p(s,"laya.utils.Handler");var t=s.prototype;return t.setTo=function(t,e,i,n){return this._id=s._gid++,this.caller=t,this.method=e,this.args=i,this.once=n,this},t.run=function(){if(null==this.method)return null;var t=this._id,e=this.method.apply(this.caller,this.args);return this._id===t&&this.once&&this.recover(),e},t.runWith=function(t){if(null==this.method)return null;var e=this._id;if(null==t)var i=this.method.apply(this.caller,this.args);else i=this.args||t.unshift?this.args?this.method.apply(this.caller,this.args.concat(t)):this.method.apply(this.caller,t):this.method.call(this.caller,t);return this._id===e&&this.once&&this.recover(),i},t.clear=function(){return this.caller=null,this.method=null,this.args=null,this},t.recover=function(){0<this._id&&(this._id=0,s._pool.push(this.clear()))},s.create=function(t,e,i,n){return void 0===n&&(n=!0),s._pool.length?s._pool.pop().setTo(t,e,i,n):new s(t,e,i,n)},s._pool=[],s._gid=1,s}(),P=function(){function t(){this._texture=null,this._fontCharDic={},this._fontWidthMap={},this._complete=null,this._path=null,this._maxWidth=0,this._spaceWidth=10,this._padding=null,this.fontSize=12,this.autoScaleSize=!1,this.letterSpacing=0}p(t,"laya.display.BitmapFont");var e=t.prototype;return e.loadFont=function(t,e){this._path=t,this._complete=e,b.loader.load([{url:this._path,type:"xml"},{url:this._path.replace(".fnt",".png"),type:"image"}],v.create(this,this.onLoaded))},e.onLoaded=function(){this.parseFont(at.getRes(this._path),at.getRes(this._path.replace(".fnt",".png"))),this._complete&&this._complete.runWith(this._texture?this:null)},e.parseFont=function(t,e){if(null!=t&&null!=e){this._texture=e;var i=t.getElementsByTagName("info");if(!i[0].getAttributeNode)return this.parseFont2(t,e);this.fontSize=parseInt(i[0].getAttributeNode("size").nodeValue);var n,s=i[0].getAttributeNode("padding").nodeValue.split(",");this._padding=[parseInt(s[0]),parseInt(s[1]),parseInt(s[2]),parseInt(s[3])],n=t.getElementsByTagName("char");var r=0;for(r=0;r<n.length;r++){var o=n[r],a=parseInt(o.getAttributeNode("id").nodeValue),h=parseInt(o.getAttributeNode("xoffset").nodeValue)/1,l=parseInt(o.getAttributeNode("yoffset").nodeValue)/1,u=parseInt(o.getAttributeNode("xadvance").nodeValue)/1,c=new M;c.x=parseInt(o.getAttributeNode("x").nodeValue),c.y=parseInt(o.getAttributeNode("y").nodeValue),c.width=parseInt(o.getAttributeNode("width").nodeValue),c.height=parseInt(o.getAttributeNode("height").nodeValue);var _=ut.create(e,c.x,c.y,c.width,c.height,h,l);this._maxWidth=Math.max(this._maxWidth,u+this.letterSpacing),this._fontCharDic[a]=_,this._fontWidthMap[a]=u}}},e.parseFont2=function(t,e){if(null!=t&&null!=e){this._texture=e;var i=t.getElementsByTagName("info");this.fontSize=parseInt(i[0].attributes.size.nodeValue);var n=i[0].attributes.padding.nodeValue.split(",");this._padding=[parseInt(n[0]),parseInt(n[1]),parseInt(n[2]),parseInt(n[3])];var s=t.getElementsByTagName("char"),r=0;for(r=0;r<s.length;r++){var o=s[r].attributes,a=parseInt(o.id.nodeValue),h=parseInt(o.xoffset.nodeValue)/1,l=parseInt(o.yoffset.nodeValue)/1,u=parseInt(o.xadvance.nodeValue)/1,c=new M;c.x=parseInt(o.x.nodeValue),c.y=parseInt(o.y.nodeValue),c.width=parseInt(o.width.nodeValue),c.height=parseInt(o.height.nodeValue);var _=ut.create(e,c.x,c.y,c.width,c.height,h,l);this._maxWidth=Math.max(this._maxWidth,u+this.letterSpacing),this._fontCharDic[a]=_,this._fontWidthMap[a]=u}}},e.getCharTexture=function(t){return this._fontCharDic[t.charCodeAt(0)]},e.destroy=function(){if(this._texture){for(var t in this._fontCharDic){var e=this._fontCharDic[t];e&&e.destroy()}this._texture.destroy(),this._fontCharDic=null,this._fontWidthMap=null,this._texture=null}},e.setSpaceWidth=function(t){this._spaceWidth=t},e.getCharWidth=function(t){var e=t.charCodeAt(0);return this._fontWidthMap[e]?this._fontWidthMap[e]+this.letterSpacing:" "==t?this._spaceWidth+this.letterSpacing:0},e.getTextWidth=function(t){for(var e=0,i=0,n=t.length;i<n;i++)e+=this.getCharWidth(t.charAt(i));return e},e.getMaxWidth=function(){return this._maxWidth},e.getMaxHeight=function(){return this.fontSize},e.drawText=function(t,e,i,n,s,r){var o,a=this.getTextWidth(t),h=0;"center"===s&&(h=(r-a)/2),"right"===s&&(h=r-a);for(var l=0,u=0,c=t.length;u<c;u++)(o=this.getCharTexture(t.charAt(u)))&&(e.graphics.drawTexture(o,i+l+h,n),l+=this.getCharWidth(t.charAt(u)))},t}(),a=function(){function i(){this.alpha=1,this.visible=!0,this.scrollRect=null,this.blendMode=null,this._type=0,this._tf=i._TF_EMPTY}p(i,"laya.display.css.Style");var t=i.prototype;return t.getTransform=function(){return this._tf},t.setTransform=function(t){this._tf="none"!==t&&t?t:i._TF_EMPTY},t.setTranslateX=function(t){this._tf===i._TF_EMPTY&&(this._tf=new s),this._tf.translateX=t},t.setTranslateY=function(t){this._tf===i._TF_EMPTY&&(this._tf=new s),this._tf.translateY=t},t.setScaleX=function(t){this._tf===i._TF_EMPTY&&(this._tf=new s),this._tf.scaleX=t},t.setScale=function(t,e){this._tf===i._TF_EMPTY&&(this._tf=new s),this._tf.scaleX=t,this._tf.scaleY=e},t.setScaleY=function(t){this._tf===i._TF_EMPTY&&(this._tf=new s),this._tf.scaleY=t},t.setRotate=function(t){this._tf===i._TF_EMPTY&&(this._tf=new s),this._tf.rotate=t},t.setSkewX=function(t){this._tf===i._TF_EMPTY&&(this._tf=new s),this._tf.skewX=t},t.setSkewY=function(t){this._tf===i._TF_EMPTY&&(this._tf=new s),this._tf.skewY=t},t.destroy=function(){this.scrollRect=null},t.render=function(t,e,i,n){},t.getCSSStyle=function(){return et.EMPTY},t._enableLayout=function(){return!1},u(0,t,"scaleX",function(){return this._tf.scaleX},function(t){this.setScaleX(t)}),u(0,t,"transform",function(){return this.getTransform()},function(t){this.setTransform(t)}),u(0,t,"translateX",function(){return this._tf.translateX},function(t){this.setTranslateX(t)}),u(0,t,"translateY",function(){return this._tf.translateY},function(t){this.setTranslateY(t)}),u(0,t,"scaleY",function(){return this._tf.scaleY},function(t){this.setScaleY(t)}),u(0,t,"block",function(){return 0!=(1&this._type)}),u(0,t,"skewY",function(){return this._tf.skewY},function(t){this.setSkewY(t)}),u(0,t,"rotate",function(){return this._tf.rotate},function(t){this.setRotate(t)}),u(0,t,"skewX",function(){return this._tf.skewX},function(t){this.setSkewX(t)}),u(0,t,"paddingLeft",function(){return 0}),u(0,t,"paddingTop",function(){return 0}),u(0,t,"absolute",function(){return!0}),i.__init__=function(){i._TF_EMPTY=new s,i.EMPTY=new i},i.EMPTY=null,i._TF_EMPTY=null,i}(),d=function(){function e(t){this._type=0,this._weight=0,this._decoration=null,this._text=null,this.indent=0,this._color=z.create(e.defaultColor),this.family=e.defaultFamily,this.stroke=e._STROKE,this.size=e.defaultSize,t&&t!==e.EMPTY&&t.copyTo(this)}p(e,"laya.display.css.Font");var t=e.prototype;return t.set=function(t){this._text=null;for(var e=t.split(" "),i=0,n=e.length;i<n;i++){var s=e[i];switch(s){case"italic":this.italic=!0;continue;case"bold":this.bold=!0;continue}0<s.indexOf("px")&&(this.size=parseInt(s),this.family=e[i+1],i++)}},t.toString=function(){return this._text="",this.italic&&(this._text+="italic "),this.bold&&(this._text+="bold "),this._text+=this.size+"px "+this.family},t.copyTo=function(t){t._type=this._type,t._text=this._text,t._weight=this._weight,t._color=this._color,t.family=this.family,t.stroke=this.stroke!=e._STROKE?this.stroke.slice():e._STROKE,t.indent=this.indent,t.size=this.size},u(0,t,"password",function(){return 0!=(1024&this._type)},function(t){t?this._type|=1024:this._type&=-1025}),u(0,t,"color",function(){return this._color.strColor},function(t){this._color=z.create(t)}),u(0,t,"italic",function(){return 0!=(512&this._type)},function(t){t?this._type|=512:this._type&=-513}),u(0,t,"bold",function(){return 0!=(2048&this._type)},function(t){t?this._type|=2048:this._type&=-2049}),u(0,t,"weight",function(){return""+this._weight},function(t){var e=0;switch(t){case"normal":break;case"bold":this.bold=!0,e=700;break;case"bolder":e=800;break;case"lighter":e=100;break;default:e=parseInt(t)}this._weight=e,this._text=null}),u(0,t,"decoration",function(){return this._decoration?this._decoration.value:null},function(t){var e=t.split(" ");switch(this._decoration||(this._decoration={}),e[0]){case"_":this._decoration.type="underline";break;case"-":this._decoration.type="line-through";break;case"overline":this._decoration.type="overline";break;default:this._decoration.type=e[0]}e[1]&&(this._decoration.color=z.create(e)),this._decoration.value=t}),e.__init__=function(){e.EMPTY=new e(null)},e.EMPTY=null,e.defaultColor="#000000",e.defaultSize=12,e.defaultFamily="Arial",e.defaultFont="12px Arial",e._STROKE=[0,"#000000"],e._ITALIC=512,e._PASSWORD=1024,e._BOLD=2048,e}(),s=function(){function t(){this.translateX=0,this.translateY=0,this.scaleX=1,this.scaleY=1,this.rotate=0,this.skewX=0,this.skewY=0}return p(t,"laya.display.css.TransformInfo"),t}(),_=function(){function c(){if(this._one=null,this._cmds=null,this._render=this._renderEmpty,D.isConchNode){this._nativeObj=new o._conchGraphics,this.id=this._nativeObj.conchID}}p(c,"laya.display.Graphics");var t=c.prototype;return t.destroy=function(){this.clear(),this._graphicBounds&&this._graphicBounds.destroy(),this._graphicBounds=null,this._vectorgraphArray=null,this._sp&&(this._sp._renderType=0),this._sp=null},t.clear=function(t){void 0===t&&(t=!1);var e=0,i=0;if(t){var n=this._one;if(this._cmds){for(i=this._cmds.length,e=0;e<i;e++)!(n=this._cmds[e])||n.callee!==D._context._drawTexture&&n.callee!==D._context._drawTextureWithTransform||(n[0]=null,c._cache.push(n));this._cmds.length=0}else n&&(!n||n.callee!==D._context._drawTexture&&n.callee!==D._context._drawTextureWithTransform||(n[0]=null,c._cache.push(n)))}else this._cmds=null;if(this._one=null,this._render=this._renderEmpty,this._sp&&(this._sp._renderType&=-514),this._repaint(),this._vectorgraphArray){for(e=0,i=this._vectorgraphArray.length;e<i;e++)Q.getInstance().deleteShape(this._vectorgraphArray[e]);this._vectorgraphArray.length=0}},t._clearBoundsCache=function(){this._graphicBounds&&this._graphicBounds.reset()},t._initGraphicBounds=function(){this._graphicBounds||(this._graphicBounds=new i,this._graphicBounds._graphics=this)},t._repaint=function(){this._clearBoundsCache(),this._sp&&this._sp.repaint()},t._isOnlyOne=function(){return!this._cmds||0===this._cmds.length},t.getBounds=function(t){return void 0===t&&(t=!1),this._initGraphicBounds(),this._graphicBounds.getBounds(t)},t.getBoundPoints=function(t){return void 0===t&&(t=!1),this._initGraphicBounds(),this._graphicBounds.getBoundPoints(t)},t._addCmd=function(t){this._cmds=this._cmds||[],t.callee=t.shift(),this._cmds.push(t)},t.setFilters=function(t){this._saveToCmd(D._context._setFilters,t)},t.drawTexture=function(t,e,i,n,s,r,o){if(void 0===e&&(e=0),void 0===i&&(i=0),void 0===n&&(n=0),void 0===s&&(s=0),void 0===o&&(o=1),!t||o<.01)return null;n||(n=t.sourceWidth),s||(s=t.sourceHeight),o=o<0?0:1<o?1:o;var a,h=!D.isWebGL&&(B.onFirefox||B.onEdge||B.onIE||B.onSafari)?.5:0,l=n/t.sourceWidth,u=s/t.sourceHeight;return n=t.width*l,s=t.height*u,t.loaded&&(n<=0||s<=0)?null:(e+=t.offsetX*l,i+=t.offsetY*u,this._sp&&(this._sp._renderType|=512),e-=h,i-=h,n+=2*h,s+=2*h,c._cache.length?((a=c._cache.pop())[0]=t,a[1]=e,a[2]=i,a[3]=n,a[4]=s,a[5]=r,a[6]=o):a=[t,e,i,n,s,r,o],a.callee=r||1!=o?D._context._drawTextureWithTransform:D._context._drawTexture,null!=this._one||r||1!=o?this._saveToCmd(a.callee,a):(this._one=a,this._render=this._renderOneImg),t.loaded||t.once("loaded",this,this._textureLoaded,[t,a]),this._repaint(),a)},t.cleanByTexture=function(t,e,i,n,s){if(void 0===n&&(n=0),void 0===s&&(s=0),!t)return this.clear();if(this._one&&this._render===this._renderOneImg){n||(n=t.sourceWidth),s||(s=t.sourceHeight);var r=n/t.sourceWidth,o=s/t.sourceHeight;n=t.width*r,s=t.height*o,e+=t.offsetX*r,i+=t.offsetY*o,this._one[0]=t,this._one[1]=e,this._one[2]=i,this._one[3]=n,this._one[4]=s,this._repaint()}else this.clear(),t&&this.drawTexture(t,e,i,n,s)},t.drawTextures=function(t,e){t&&this._saveToCmd(D._context._drawTextures,[t,e])},t.fillTexture=function(t,e,i,n,s,r,o){if(void 0===n&&(n=0),void 0===s&&(s=0),void 0===r&&(r="repeat"),t){var a=[t,e,i,n,s,r,o||C.EMPTY,{}];t.loaded||t.once("loaded",this,this._textureLoaded,[t,a]),this._saveToCmd(D._context._fillTexture,a)}},t._textureLoaded=function(t,e){e[3]=e[3]||t.width,e[4]=e[4]||t.height,this._repaint()},t.fillCircle=function(t,e,i,n,s,r,o){i.bitmap.enableMerageInAtlas=!1;var a=new Float32Array(2*(o+1)),h=new Float32Array(2*(o+1)),l=new Uint16Array(3*o),u=2*Math.PI/o,c=0;a[0]=n,a[1]=s,h[0]=n/i.width,h[1]=s/i.height;for(var _=2,d=0;d<o;d++){var f=r*Math.cos(c)+n,p=r*Math.sin(c)+s;a[_]=f,a[_+1]=p,h[_]=f/i.width,h[_+1]=p/i.height,c+=u,_+=2}for(d=_=0;d<o;d++)l[_++]=0,l[_++]=d+1,l[_++]=o+1<=d+2?1:d+2;this.drawTriangles(i,t,e,a,h,l)},t.drawTriangles=function(t,e,i,n,s,r,o,a,h,l){void 0===a&&(a=1),this._saveToCmd(D._context.drawTriangles,[t,e,i,n,s,r,o,a,h,l])},t._saveToCmd=function(t,e){return this._sp&&(this._sp._renderType|=512),null==this._one?(this._one=e,this._render=this._renderOne):(this._sp&&(this._sp._renderType&=-2),this._render=this._renderAll,0===(this._cmds||(this._cmds=[])).length&&this._cmds.push(this._one),this._cmds.push(e)),e.callee=t,this._repaint(),e},t.clipRect=function(t,e,i,n){this._saveToCmd(D._context._clipRect,[t,e,i,n])},t.fillText=function(t,e,i,n,s,r,o){void 0===o&&(o=0),this._saveToCmd(D._context._fillText,[t,e,i,n||d.defaultFont,s,r])},t.fillBorderText=function(t,e,i,n,s,r,o,a){this._saveToCmd(D._context._fillBorderText,[t,e,i,n||d.defaultFont,s,r,o,a])},t.strokeText=function(t,e,i,n,s,r,o){this._saveToCmd(D._context._strokeText,[t,e,i,n||d.defaultFont,s,r,o])},t.alpha=function(t){t=t<0?0:1<t?1:t,this._saveToCmd(D._context._alpha,[t])},t.setAlpha=function(t){t=t<0?0:1<t?1:t,this._saveToCmd(D._context._setAlpha,[t])},t.transform=function(t,e,i){void 0===e&&(e=0),void 0===i&&(i=0),this._saveToCmd(D._context._transform,[t,e,i])},t.rotate=function(t,e,i){void 0===e&&(e=0),void 0===i&&(i=0),this._saveToCmd(D._context._rotate,[t,e,i])},t.scale=function(t,e,i,n){void 0===i&&(i=0),void 0===n&&(n=0),this._saveToCmd(D._context._scale,[t,e,i,n])},t.translate=function(t,e){this._saveToCmd(D._context._translate,[t,e])},t.save=function(){this._saveToCmd(D._context._save,[])},t.restore=function(){this._saveToCmd(D._context._restore,[])},t.replaceText=function(t){this._repaint();var e=this._cmds;if(e){for(var i=e.length-1;-1<i;i--)if(this._isTextCmd(e[i].callee))return e[i][0].toUpperCase?e[i][0]=t:e[i][0].setText(t),!0}else if(this._one&&this._isTextCmd(this._one.callee))return this._one[0].toUpperCase?this._one[0]=t:this._one[0].setText(t),!0;return!1},t._isTextCmd=function(t){return t===D._context._fillText||t===D._context._fillBorderText||t===D._context._strokeText},t.replaceTextColor=function(t){this._repaint();var e=this._cmds;if(e)for(var i=e.length-1;-1<i;i--)this._isTextCmd(e[i].callee)&&(e[i][4]=t,e[i][0].toUpperCase||(e[i][0].changed=!0));else this._one&&this._isTextCmd(this._one.callee)&&(this._one[4]=t,this._one[0].toUpperCase||(this._one[0].changed=!0))},t.loadImage=function(t,e,i,n,s,r){var o=this;void 0===e&&(e=0),void 0===i&&(i=0),void 0===n&&(n=0),void 0===s&&(s=0);var a=at.getRes(t);function h(t){t&&(o.drawTexture(t,e,i,n,s),null!=r&&r.call(o._sp,t))}a?h(a):b.loader.load(t,v.create(null,h),null,"image")},t._renderEmpty=function(t,e,i,n){},t._renderAll=function(t,e,i,n){for(var s,r=this._cmds,o=0,a=r.length;o<a;o++)(s=r[o]).callee.call(e,i,n,s)},t._renderOne=function(t,e,i,n){this._one.callee.call(e,i,n,this._one)},t._renderOneImg=function(t,e,i,n){this._one.callee.call(e,i,n,this._one),2305!==t._renderType&&(t._renderType|=1)},t.drawLine=function(t,e,i,n,s,r){void 0===r&&(r=1);var o=0;D.isWebGL&&(o=Q.getInstance().getId(),null==this._vectorgraphArray&&(this._vectorgraphArray=[]),this._vectorgraphArray.push(o));var a=r%2==0?0:.5,h=[t+a,e+a,i+a,n+a,s,r,o];this._saveToCmd(D._context._drawLine,h)},t.drawLines=function(t,e,i,n,s){void 0===s&&(s=1);var r=0;if(i&&!(i.length<4)){D.isWebGL&&(r=Q.getInstance().getId(),null==this._vectorgraphArray&&(this._vectorgraphArray=[]),this._vectorgraphArray.push(r));var o=s%2==0?0:.5,a=[t+o,e+o,i,n,s,r];this._saveToCmd(D._context._drawLines,a)}},t.drawCurves=function(t,e,i,n,s){void 0===s&&(s=1);var r=[t,e,i,n,s];this._saveToCmd(D._context._drawCurves,r)},t.drawRect=function(t,e,i,n,s,r,o){void 0===o&&(o=1);var a=r?o/2:0,h=r?o:0,l=[t+a,e+a,i-h,n-h,s,r,o];this._saveToCmd(D._context._drawRect,l)},t.drawCircle=function(t,e,i,n,s,r){void 0===r&&(r=1);var o=s?r/2:0,a=0;D.isWebGL&&(a=Q.getInstance().getId(),null==this._vectorgraphArray&&(this._vectorgraphArray=[]),this._vectorgraphArray.push(a));var h=[t,e,i-o,n,s,r,a];this._saveToCmd(D._context._drawCircle,h)},t.drawPie=function(t,e,i,n,s,r,o,a){void 0===a&&(a=1);var h=o?a/2:0,l=o?a:0,u=0;D.isWebGL&&(u=Q.getInstance().getId(),null==this._vectorgraphArray&&(this._vectorgraphArray=[]),this._vectorgraphArray.push(u));var c=[t+h,e+h,i-l,n,s,r,o,a,u];c[3]=q.toRadian(n),c[4]=q.toRadian(s),this._saveToCmd(D._context._drawPie,c)},t.drawPoly=function(t,e,i,n,s,r){void 0===r&&(r=1);var o=0,a=!1;D.isWebGL&&(o=Q.getInstance().getId(),null==this._vectorgraphArray&&(this._vectorgraphArray=[]),this._vectorgraphArray.push(o),a=!(6<i.length));var h=s?r%2==0?0:.5:0,l=[t+h,e+h,i,n,s,r,o,a];this._saveToCmd(D._context._drawPoly,l)},t.drawPath=function(t,e,i,n,s){var r=[t,e,i,n,s];this._saveToCmd(D._context._drawPath,r)},u(0,t,"cmds",function(){return this._cmds},function(t){this._sp&&(this._sp._renderType|=512),this._cmds=t,this._render=this._renderAll,this._repaint()}),c.__init__=function(){if(D.isConchNode){for(var t=laya.display.Graphics.prototype,e=B.window.ConchGraphics.prototype,i=["clear","destroy","alpha","rotate","transform","scale","translate","save","restore","clipRect","blendMode","fillText","fillBorderText","_fands","drawRect","drawCircle","drawPie","drawPoly","drawPath","drawImageM","drawLine","drawLines","_drawPs","drawCurves","replaceText","replaceTextColor","_fillImage","fillTexture","setSkinMesh","drawParticle","drawImageS"],n=0,s=i.length;n<=s;n++){var r=i[n];t[r]=e[r]}t._saveToCmd=null,e.drawImageS&&(t.drawTextures=function(t,e){if(t&&t.loaded&&t.bitmap&&t.source){var i=t.uv,n=t.bitmap.width,s=t.bitmap.height;this.drawImageS(t.bitmap.source,i[0]*n,i[1]*s,(i[2]-i[0])*n,(i[5]-i[3])*s,t.offsetX,t.offsetY,t.width,t.height,e)}}),t.drawTexture=function(t,e,i,n,s,r,o){if(void 0===e&&(e=0),void 0===i&&(i=0),void 0===n&&(n=0),void 0===s&&(s=0),void 0===o&&(o=1),t)if(t.loaded){if(t.loaded&&t.bitmap&&t.source&&(n||(n=t.sourceWidth),s||(s=t.sourceHeight),o=o<0?0:1<o?1:o,n=n-t.sourceWidth+t.width,s=s-t.sourceHeight+t.height,!(n<=0||s<=0))){e+=t.offsetX,i+=t.offsetY;var a=t.uv,h=t.bitmap.width,l=t.bitmap.height;a[4]<a[0]&&a[5]<a[1]?this.drawImageM(t.bitmap.source,a[4]*h,a[5]*l,(a[0]-a[4])*h,(a[1]-a[5])*l,e,i,n,s,r,o):this.drawImageM(t.bitmap.source,a[0]*h,a[1]*l,(a[2]-a[0])*h,(a[5]-a[3])*l,e,i,n,s,r,o),this._repaint()}}else t.once("loaded",this,function(){this.drawTexture(t,e,i,n,s,r)})},t.fillTexture=function(t,e,i,n,s,r,o){if(void 0===n&&(n=0),void 0===s&&(s=0),void 0===r&&(r="repeat"),t&&t.loaded){var a,h=D._context.ctx,l=t.bitmap.width,u=t.bitmap.height,c=t.uv;a=t.uv!=ut.DEF_UV?h.createPattern(t.bitmap.source,r,c[0]*l,c[1]*u,(c[2]-c[0])*l,(c[5]-c[3])*u):h.createPattern(t.bitmap.source,r);var _=0,d=0;o&&(e+=o.x%t.width,i+=o.y%t.height,_-=o.x%t.width,d-=o.y%t.height),this._fillImage(a,e,i,_,d,n,s)}}}},c._cache=[],c}(),i=function(){function y(){this._cacheBoundsType=!1}p(y,"laya.display.GraphicsBounds");var t=y.prototype;return t.destroy=function(){this._graphics=null,this._temp=null,this._rstBoundPoints=null,this._bounds=null},t.reset=function(){this._temp&&(this._temp.length=0)},t.getBounds=function(t){return void 0===t&&(t=!1),(!this._bounds||!this._temp||this._temp.length<1||t!=this._cacheBoundsType)&&(this._bounds=M._getWrapRec(this.getBoundPoints(t),this._bounds)),this._cacheBoundsType=t,this._bounds},t.getBoundPoints=function(t){return void 0===t&&(t=!1),(!this._temp||this._temp.length<1||t!=this._cacheBoundsType)&&(this._temp=this._getCmdPoints(t)),this._cacheBoundsType=t,this._rstBoundPoints=q.copyArray(this._rstBoundPoints,this._temp)},t._getCmdPoints=function(t){void 0===t&&(t=!1);var e,i,n=D._context,s=this._graphics.cmds;if((e=this._temp||(this._temp=[])).length=0,s||null==this._graphics._one||(y._tempCmds.length=0,y._tempCmds.push(this._graphics._one),s=y._tempCmds),!s)return e;(i=y._tempMatrixArrays).length=0;var r=y._initMatrix;r.identity();for(var o,a,h=y._tempMatrix,l=NaN,u=NaN,c=NaN,_=NaN,d=NaN,f=NaN,p=0,g=s.length;p<g;p++)if((o=s[p]).callee)switch(o.callee){case n._save:case 7:i.push(r),r=r.clone();break;case n._restore:case 8:r=i.pop();break;case n._scale:case 5:h.identity(),h.translate(-o[2],-o[3]),h.scale(o[0],o[1]),h.translate(o[2],o[3]),this._switchMatrix(r,h);break;case n._rotate:case 3:h.identity(),h.translate(-o[1],-o[2]),h.rotate(o[0]),h.translate(o[1],o[2]),this._switchMatrix(r,h);break;case n._translate:case 6:h.identity(),h.translate(o[0],o[1]),this._switchMatrix(r,h);break;case n._transform:case 4:h.identity(),h.translate(-o[1],-o[2]),h.concat(o[0]),h.translate(o[1],o[2]),this._switchMatrix(r,h);break;case 16:case 24:y._addPointArrToRst(e,M._getBoundPointS(o[0],o[1],o[2],o[3]),r);break;case 17:r.copyTo(h),h.concat(o[4]),y._addPointArrToRst(e,M._getBoundPointS(o[0],o[1],o[2],o[3]),h);break;case n._drawTexture:a=o[0],t?o[3]&&o[4]?y._addPointArrToRst(e,M._getBoundPointS(o[1],o[2],o[3],o[4]),r):(a=o[0],y._addPointArrToRst(e,M._getBoundPointS(o[1],o[2],a.width,a.height),r)):(l=(o[3]||a.sourceWidth)/a.width,u=(o[4]||a.sourceHeight)/a.height,c=l*a.sourceWidth,_=u*a.sourceHeight,d=0<a.offsetX?a.offsetX:0,f=0<a.offsetY?a.offsetY:0,d*=l,f*=u,y._addPointArrToRst(e,M._getBoundPointS(o[1]-d,o[2]-f,c,_),r));break;case n._fillTexture:o[3]&&o[4]?y._addPointArrToRst(e,M._getBoundPointS(o[1],o[2],o[3],o[4]),r):(a=o[0],y._addPointArrToRst(e,M._getBoundPointS(o[1],o[2],a.width,a.height),r));break;case n._drawTextureWithTransform:var m;m=o[5]?(r.copyTo(h),h.concat(o[5]),h):r,t?o[3]&&o[4]?y._addPointArrToRst(e,M._getBoundPointS(o[1],o[2],o[3],o[4]),m):(a=o[0],y._addPointArrToRst(e,M._getBoundPointS(o[1],o[2],a.width,a.height),m)):(a=o[0],l=(o[3]||a.sourceWidth)/a.width,u=(o[4]||a.sourceHeight)/a.height,c=l*a.sourceWidth,_=u*a.sourceHeight,d=0<a.offsetX?a.offsetX:0,f=0<a.offsetY?a.offsetY:0,d*=l,f*=u,y._addPointArrToRst(e,M._getBoundPointS(o[1]-d,o[2]-f,c,_),m));break;case n._drawRect:case 13:y._addPointArrToRst(e,M._getBoundPointS(o[0],o[1],o[2],o[3]),r);break;case n._drawCircle:case n._fillCircle:case 14:y._addPointArrToRst(e,M._getBoundPointS(o[0]-o[2],o[1]-o[2],o[2]+o[2],o[2]+o[2]),r);break;case n._drawLine:case 20:y._tempPoints.length=0;var v;v=.5*o[5],o[0]==o[2]?y._tempPoints.push(o[0]+v,o[1],o[2]+v,o[3],o[0]-v,o[1],o[2]-v,o[3]):o[1]==o[3]?y._tempPoints.push(o[0],o[1]+v,o[2],o[3]+v,o[0],o[1]-v,o[2],o[3]-v):y._tempPoints.push(o[0],o[1],o[2],o[3]),y._addPointArrToRst(e,y._tempPoints,r);break;case n._drawCurves:case 22:y._addPointArrToRst(e,w.I.getBezierPoints(o[2]),r,o[0],o[1]);break;case n._drawPoly:case n._drawLines:case 18:y._addPointArrToRst(e,o[2],r,o[0],o[1]);break;case n._drawPath:case 19:y._addPointArrToRst(e,this._getPathPoints(o[2]),r,o[0],o[1]);break;case n._drawPie:case 15:y._addPointArrToRst(e,this._getPiePoints(o[0],o[1],o[2],o[3],o[4]),r)}return 200<e.length?e=q.copyArray(e,M._getWrapRec(e)._getBoundPoints()):8<e.length&&(e=x.scanPList(e)),e},t._switchMatrix=function(t,e){e.concat(t),e.copyTo(t)},t._getPiePoints=function(t,e,i,n,s){var r=y._tempPoints;y._tempPoints.length=0,r.push(t,e);var o=(s-n)%(2*Math.PI)/10,a=NaN,h=n;for(a=0;a<=10;a++)r.push(t+i*Math.cos(h),e+i*Math.sin(h)),h+=o;return r},t._getPathPoints=function(t){var e,i,n=0,s=y._tempPoints;for(s.length=0,e=t.length,n=0;n<e;n++)1<(i=t[n]).length&&(s.push(i[1],i[2]),3<i.length&&s.push(i[3],i[4]));return s},y._addPointArrToRst=function(t,e,i,n,s){void 0===n&&(n=0),void 0===s&&(s=0);var r,o=0;for(r=e.length,o=0;o<r;o+=2)y._addPointToRst(t,e[o]+n,e[o+1]+s,i)},y._addPointToRst=function(t,e,i,n){var s=C.TEMP;s.setTo(e||0,i||0),n.transformPoint(s),t.push(s.x,s.y)},y._tempPoints=[],y._tempMatrixArrays=[],y._tempCmds=[],h(y,["_tempMatrix",function(){return this._tempMatrix=new I},"_initMatrix",function(){return this._initMatrix=new I}]),y}(),r=function(){function t(){}p(t,"laya.events.Event");var e=t.prototype;return e.setTo=function(t,e,i){return this.type=t,this.currentTarget=e,this.target=i,this},e.stopPropagation=function(){this._stoped=!0},u(0,e,"stageY",function(){return b.stage.mouseY}),u(0,e,"charCode",function(){return this.nativeEvent.charCode}),u(0,e,"touches",function(){var t=this.nativeEvent.touches;if(t)for(var e=b.stage,i=0,n=t.length;i<n;i++){var s=t[i],r=C.TEMP;r.setTo(s.clientX,s.clientY),e._canvasTransform.invertTransformPoint(r),e.transform.invertTransformPoint(r),s.stageX=r.x,s.stageY=r.y}return t}),u(0,e,"keyLocation",function(){return this.nativeEvent.keyLocation}),u(0,e,"ctrlKey",function(){return this.nativeEvent.ctrlKey}),u(0,e,"altKey",function(){return this.nativeEvent.altKey}),u(0,e,"shiftKey",function(){return this.nativeEvent.shiftKey}),u(0,e,"stageX",function(){return b.stage.mouseX}),t.EMPTY=new t,t.MOUSE_DOWN="mousedown",t.MOUSE_UP="mouseup",t.CLICK="click",t.RIGHT_MOUSE_DOWN="rightmousedown",t.RIGHT_MOUSE_UP="rightmouseup",t.RIGHT_CLICK="rightclick",t.MOUSE_MOVE="mousemove",t.MOUSE_OVER="mouseover",t.MOUSE_OUT="mouseout",t.MOUSE_WHEEL="mousewheel",t.ROLL_OVER="mouseover",t.ROLL_OUT="mouseout",t.DOUBLE_CLICK="doubleclick",t.CHANGE="change",t.CHANGED="changed",t.RESIZE="resize",t.ADDED="added",t.REMOVED="removed",t.DISPLAY="display",t.UNDISPLAY="undisplay",t.ERROR="error",t.COMPLETE="complete",t.LOADED="loaded",t.PROGRESS="progress",t.INPUT="input",t.RENDER="render",t.OPEN="open",t.MESSAGE="message",t.CLOSE="close",t.KEY_DOWN="keydown",t.KEY_PRESS="keypress",t.KEY_UP="keyup",t.FRAME="enterframe",t.DRAG_START="dragstart",t.DRAG_MOVE="dragmove",t.DRAG_END="dragend",t.ENTER="enter",t.SELECT="select",t.BLUR="blur",t.FOCUS="focus",t.VISIBILITY_CHANGE="visibilitychange",t.FOCUS_CHANGE="focuschange",t.PLAYED="played",t.PAUSED="paused",t.STOPPED="stopped",t.START="start",t.END="end",t.ENABLE_CHANGED="enablechanged",t.ACTIVE_IN_HIERARCHY_CHANGED="activeinhierarchychanged",t.COMPONENT_ADDED="componentadded",t.COMPONENT_REMOVED="componentremoved",t.LAYER_CHANGED="layerchanged",t.HIERARCHY_LOADED="hierarchyloaded",t.RECOVERED="recovered",t.RELEASED="released",t.LINK="link",t.LABEL="label",t.FULL_SCREEN_CHANGE="fullscreenchange",t.DEVICE_LOST="devicelost",t.MESH_CHANGED="meshchanged",t.MATERIAL_CHANGED="materialchanged",t.WORLDMATRIX_NEEDCHANGE="worldmatrixneedchanged",t.ANIMATION_CHANGED="animationchanged",t.TRIGGER_ENTER="triggerenter",t.TRIGGER_STAY="triggerstay",t.TRIGGER_EXIT="triggerexit",t.TRAIL_FILTER_CHANGE="trailfilterchange",t.DOMINO_FILTER_CHANGE="dominofilterchange",t}(),c=(function(){function t(){}p(t,"laya.events.Keyboard"),t.NUMBER_0=48,t.NUMBER_1=49,t.NUMBER_2=50,t.NUMBER_3=51,t.NUMBER_4=52,t.NUMBER_5=53,t.NUMBER_6=54,t.NUMBER_7=55,t.NUMBER_8=56,t.NUMBER_9=57,t.A=65,t.B=66,t.C=67,t.D=68,t.E=69,t.F=70,t.G=71,t.H=72,t.I=73,t.J=74,t.K=75,t.L=76,t.M=77,t.N=78,t.O=79,t.P=80,t.Q=81,t.R=82,t.S=83,t.T=84,t.U=85,t.V=86,t.W=87,t.X=88,t.Y=89,t.Z=90,t.F1=112,t.F2=113,t.F3=114,t.F4=115,t.F5=116,t.F6=117,t.F7=118,t.F8=119,t.F9=120,t.F10=121,t.F11=122,t.F12=123,t.F13=124,t.F14=125,t.F15=126,t.NUMPAD=21,t.NUMPAD_0=96,t.NUMPAD_1=97,t.NUMPAD_2=98,t.NUMPAD_3=99,t.NUMPAD_4=100,t.NUMPAD_5=101,t.NUMPAD_6=102,t.NUMPAD_7=103,t.NUMPAD_8=104,t.NUMPAD_9=105,t.NUMPAD_ADD=107,t.NUMPAD_DECIMAL=110,t.NUMPAD_DIVIDE=111,t.NUMPAD_ENTER=108,t.NUMPAD_MULTIPLY=106,t.NUMPAD_SUBTRACT=109,t.SEMICOLON=186,t.EQUAL=187,t.COMMA=188,t.MINUS=189,t.PERIOD=190,t.SLASH=191,t.BACKQUOTE=192,t.LEFTBRACKET=219,t.BACKSLASH=220,t.RIGHTBRACKET=221,t.QUOTE=222,t.ALTERNATE=18,t.BACKSPACE=8,t.CAPS_LOCK=20,t.COMMAND=15,t.CONTROL=17,t.DELETE=46,t.ENTER=13,t.ESCAPE=27,t.PAGE_UP=33,t.PAGE_DOWN=34,t.END=35,t.HOME=36,t.LEFT=37,t.UP=38,t.RIGHT=39,t.DOWN=40,t.SHIFT=16,t.SPACE=32,t.TAB=9,t.INSERT=45}(),function(){function s(){}return p(s,"laya.events.KeyBoardManager"),s.__init__=function(){s._addEvent("keydown"),s._addEvent("keypress"),s._addEvent("keyup")},s._addEvent=function(e){B.document.addEventListener(e,function(t){laya.events.KeyBoardManager._dispatch(t,e)},!0)},s._dispatch=function(t,e){if(s.enabled){s._event._stoped=!1,s._event.nativeEvent=t,s._event.keyCode=t.keyCode||t.which||t.charCode,"keydown"===e?s._pressKeys[s._event.keyCode]=!0:"keyup"===e&&(s._pressKeys[s._event.keyCode]=null);for(var i=b.stage.focus&&null!=b.stage.focus.event&&b.stage.focus.displayedInStage?b.stage.focus:b.stage,n=i;n;)n.event(e,s._event.setTo(e,n,i)),n=n.parent}},s.hasKeyDown=function(t){return s._pressKeys[t]},s._pressKeys={},s.enabled=!0,h(s,["_event",function(){return this._event=new r}]),s}()),f=(function(){function t(){}p(t,"laya.events.KeyLocation"),t.STANDARD=0,t.LEFT=1,t.RIGHT=2,t.NUM_PAD=3}(),function(){function u(){this.mouseX=0,this.mouseY=0,this.disableMouseEvent=!1,this.mouseDownTime=0,this.mouseMoveAccuracy=2,this._stage=null,this._target=null,this._lastMoveTimer=0,this._isLeftMouse=!1,this._eventList=[],this._touchIDs={},this._id=1,this._tTouchID=0,this._event=new r,this._matrix=new I,this._point=new C,this._rect=new M,this._prePoint=new C,this._curTouchID=NaN}p(u,"laya.events.MouseManager");var t=u.prototype;return t.__init__=function(t,e){var i=this;this._stage=t;var n=this,s=this._eventList;e.oncontextmenu=function(t){if(u.enabled)return!1},e.addEventListener("mousedown",function(t){u.enabled&&(B.onIE||t.preventDefault(),s.push(t),n.mouseDownTime=B.now())}),e.addEventListener("mouseup",function(t){u.enabled&&(t.preventDefault(),s.push(t),n.mouseDownTime=-B.now())},!0),e.addEventListener("mousemove",function(t){if(u.enabled){t.preventDefault();var e=B.now();if(e-n._lastMoveTimer<10)return;n._lastMoveTimer=e,s.push(t)}},!0),e.addEventListener("mouseout",function(t){u.enabled&&s.push(t)}),e.addEventListener("mouseover",function(t){u.enabled&&s.push(t)}),e.addEventListener("touchstart",function(t){u.enabled&&(s.push(t),u._isFirstTouch||xt.isInputting||t.preventDefault(),n.mouseDownTime=B.now())}),e.addEventListener("touchend",function(t){u.enabled?(u._isFirstTouch||xt.isInputting||t.preventDefault(),u._isFirstTouch=!1,s.push(t),n.mouseDownTime=-B.now()):i._curTouchID=NaN},!0),e.addEventListener("touchmove",function(t){u.enabled&&(t.preventDefault(),s.push(t))},!0),e.addEventListener("touchcancel",function(t){u.enabled?(t.preventDefault(),s.push(t)):i._curTouchID=NaN},!0),e.addEventListener("mousewheel",function(t){u.enabled&&s.push(t)}),e.addEventListener("DOMMouseScroll",function(t){u.enabled&&s.push(t)})},t.initEvent=function(t,e){var i,n=this;n._event._stoped=!1,n._event.nativeEvent=e||t,n._target=null,this._point.setTo(t.pageX||t.clientX,t.pageY||t.clientY),this._stage._canvasTransform.invertTransformPoint(this._point),n.mouseX=this._point.x,n.mouseY=this._point.y,n._event.touchId=t.identifier||0,this._tTouchID=n._event.touchId,(i=g.I._event)._stoped=!1,i.nativeEvent=n._event.nativeEvent,i.touchId=n._event.touchId},t.checkMouseWheel=function(t){this._event.delta=t.wheelDelta?.025*t.wheelDelta:-t.detail;for(var e=g.I.getLastOvers(),i=0,n=e.length;i<n;i++){var s=e[i];s.event("mousewheel",this._event.setTo("mousewheel",s,this._target))}},t.onMouseMove=function(t){g.I.onMouseMove(t,this._tTouchID)},t.onMouseDown=function(t){if(xt.isInputting&&b.stage.focus&&b.stage.focus.focus&&!b.stage.focus.contains(this._target)){var e=b.stage.focus._tf||b.stage.focus,i=t._tf||t;i instanceof laya.display.Input&&i.multiline==e.multiline?e._focusOut():e.focus=!1}g.I.onMouseDown(t,this._tTouchID,this._isLeftMouse)},t.onMouseUp=function(t){g.I.onMouseUp(t,this._tTouchID,this._isLeftMouse)},t.check=function(t,e,i,n){this._point.setTo(e,i),t.fromParentPoint(this._point),e=this._point.x,i=this._point.y;var s=t.scrollRect;if(s&&(this._rect.setTo(s.x,s.y,s.width,s.height),!this._rect.contains(e,i)))return!1;if(!this.disableMouseEvent){if(t.hitTestPrior&&!t.mouseThrough&&!this.hitTest(t,e,i))return!1;for(var r=t._childs.length-1;-1<r;r--){var o=t._childs[r];if(!o.destroyed&&o.mouseEnabled&&o.visible&&this.check(o,e,i,n))return!0}}var a=!(!t.hitTestPrior||t.mouseThrough||this.disableMouseEvent)||this.hitTest(t,e,i);return a?(this._target=t,n.call(this,t)):n===this.onMouseUp&&t===this._stage&&(this._target=this._stage,n.call(this,this._target)),a},t.hitTest=function(t,e,i){var n=!1;if(t.scrollRect&&(e-=t.scrollRect.x,i-=t.scrollRect.y),t.hitArea instanceof laya.utils.HitArea)return t.hitArea.isHit(e,i);if(0<t.width&&0<t.height||t.mouseThrough||t.hitArea)if(t.mouseThrough)n=t.getGraphicBounds().contains(e,i);else{var s=this._rect;t.hitArea?s=t.hitArea:s.setTo(0,0,t.width,t.height),n=s.contains(e,i)}return n},t.runEvent=function(){var t=this._eventList.length;if(t){for(var e,i=this,n=0,s=0,r=0;n<t;){var o=this._eventList[n];switch("mousemove"!==o.type&&(this._prePoint.x=this._prePoint.y=-1e6),o.type){case"mousedown":this._touchIDs[0]=this._id++,u._isTouchRespond?u._isTouchRespond=!1:(i._isLeftMouse=0===o.button,i.initEvent(o),i.check(i._stage,i.mouseX,i.mouseY,i.onMouseDown));break;case"mouseup":i._isLeftMouse=0===o.button,i.initEvent(o),i.check(i._stage,i.mouseX,i.mouseY,i.onMouseUp);break;case"mousemove":Math.abs(this._prePoint.x-o.clientX)+Math.abs(this._prePoint.y-o.clientY)>=this.mouseMoveAccuracy&&(this._prePoint.x=o.clientX,this._prePoint.y=o.clientY,i.initEvent(o),i.check(i._stage,i.mouseX,i.mouseY,i.onMouseMove));break;case"touchstart":u._isTouchRespond=!0,i._isLeftMouse=!0;var a=o.changedTouches;for(s=0,r=a.length;s<r;s++)e=a[s],(u.multiTouchEnabled||isNaN(this._curTouchID))&&(this._curTouchID=e.identifier,this._id%200==0&&(this._touchIDs={}),this._touchIDs[e.identifier]=this._id++,i.initEvent(e,o),i.check(i._stage,i.mouseX,i.mouseY,i.onMouseDown));break;case"touchend":case"touchcancel":u._isTouchRespond=!0,i._isLeftMouse=!0;var h=o.changedTouches;for(s=0,r=h.length;s<r;s++)if(e=h[s],u.multiTouchEnabled||e.identifier==this._curTouchID){this._curTouchID=NaN,i.initEvent(e,o);i.check(i._stage,i.mouseX,i.mouseY,i.onMouseUp)||i.onMouseUp(null)}break;case"touchmove":var l=o.changedTouches;for(s=0,r=l.length;s<r;s++)e=l[s],(u.multiTouchEnabled||e.identifier==this._curTouchID)&&(i.initEvent(e,o),i.check(i._stage,i.mouseX,i.mouseY,i.onMouseMove));break;case"wheel":case"mousewheel":case"DOMMouseScroll":i.checkMouseWheel(o);break;case"mouseout":g.I.stageMouseOut();break;case"mouseover":i._stage.event("mouseover",i._event.setTo("mouseover",i._stage,i._stage))}n++}this._eventList.length=0}},u.enabled=!0,u.multiTouchEnabled=!0,u._isTouchRespond=!1,u._isFirstTouch=!0,h(u,["instance",function(){return this.instance=new u}]),u}()),g=function(){function f(){this.preOvers=[],this.preDowns=[],this.preRightDowns=[],this.enable=!0,this._lastClickTime=0,this._event=new r}p(f,"laya.events.TouchManager");var t=f.prototype;return t._clearTempArrs=function(){f._oldArr.length=0,f._newArr.length=0,f._tEleArr.length=0},t.getTouchFromArr=function(t,e){var i,n,s=0;for(i=e.length,s=0;s<i;s++)if((n=e[s]).id==t)return n;return null},t.removeTouchFromArr=function(t,e){var i=0;for(i=e.length-1;0<=i;i--)e[i].id==t&&e.splice(i,1)},t.createTouchO=function(t,e){var i;return(i=$.getItem("TouchData")||{}).id=e,i.tar=t,i},t.onMouseDown=function(t,e,i){var n,s,r,o;(void 0===i&&(i=!1),this.enable)&&(n=this.getTouchFromArr(e,this.preOvers),r=this.getEles(t,null,f._tEleArr),n?n.tar=t:(s=this.createTouchO(t,e),this.preOvers.push(s)),B.onMobile&&this.sendEvents(r,"mouseover"),o=i?this.preDowns:this.preRightDowns,(n=this.getTouchFromArr(e,o))?n.tar=t:(s=this.createTouchO(t,e),o.push(s)),this.sendEvents(r,i?"mousedown":"rightmousedown"),this._clearTempArrs())},t.sendEvents=function(t,e){var i,n,s,r=0;for(i=t.length,this._event._stoped=!1,n=t[0],r=0;r<i;r++){if((s=t[r]).destroyed)return;if(s.event(e,this._event.setTo(e,s,n)),this._event._stoped)break}},t.getEles=function(t,e,i){for(i?i.length=0:i=[];t&&t!=e;)i.push(t),t=t.parent;return i},t.checkMouseOutAndOverOfMove=function(t,e,i){if(void 0===i&&(i=0),e!=t){var n,s,r=0,o=0;if(e.contains(t))s=this.getEles(t,e,f._tEleArr),this.sendEvents(s,"mouseover");else if(t.contains(e))s=this.getEles(e,t,f._tEleArr),this.sendEvents(s,"mouseout");else{var a,h;(s=f._tEleArr).length=0,a=this.getEles(e,null,f._oldArr),h=this.getEles(t,null,f._newArr),o=a.length;var l=0;for(r=0;r<o;r++){if(n=a[r],0<=(l=h.indexOf(n))){h.splice(l,h.length-l);break}s.push(n)}0<s.length&&this.sendEvents(s,"mouseout"),0<h.length&&this.sendEvents(h,"mouseover")}}},t.onMouseMove=function(t,e){var i,n;this.enable&&((i=this.getTouchFromArr(e,this.preOvers))?(this.checkMouseOutAndOverOfMove(t,i.tar),i.tar=t,n=this.getEles(t,null,f._tEleArr)):(n=this.getEles(t,null,f._tEleArr),this.sendEvents(n,"mouseover"),this.preOvers.push(this.createTouchO(t,e))),this.sendEvents(n,"mousemove"),this._clearTempArrs())},t.getLastOvers=function(){return(f._tEleArr.length=0)<this.preOvers.length&&this.preOvers[0].tar?this.getEles(this.preOvers[0].tar,null,f._tEleArr):(f._tEleArr.push(b.stage),f._tEleArr)},t.stageMouseOut=function(){var t;t=this.getLastOvers(),this.preOvers.length=0,this.sendEvents(t,"mouseout")},t.onMouseUp=function(t,e,i){if(void 0===i&&(i=!1),this.enable){var n,s,r,o,a,h,l=0,u=0,c=B.onMobile;if(s=this.getEles(t,null,f._tEleArr),this.sendEvents(s,i?"mouseup":"rightmouseup"),h=i?this.preDowns:this.preRightDowns,n=this.getTouchFromArr(e,h)){var _,d=B.now();if(_=d-this._lastClickTime<300,this._lastClickTime=d,t==n.tar)a=s;else for(r=this.getEles(n.tar,null,f._oldArr),(a=f._newArr).length=0,u=r.length,l=0;l<u;l++)o=r[l],0<=s.indexOf(o)&&a.push(o);0<a.length&&this.sendEvents(a,i?"click":"rightclick"),i&&_&&this.sendEvents(a,"doubleclick"),this.removeTouchFromArr(e,h),n.tar=null,$.recover("TouchData",n)}else;(n=this.getTouchFromArr(e,this.preOvers))&&c&&((a=this.getEles(n.tar,null,a))&&0<a.length&&this.sendEvents(a,"mouseout"),this.removeTouchFromArr(e,this.preOvers),n.tar=null,$.recover("TouchData",n)),this._clearTempArrs()}},f._oldArr=[],f._newArr=[],f._tEleArr=[],h(f,["I",function(){return this.I=new f}]),f}(),m=function(){function t(){this._action=null}p(t,"laya.filters.Filter");var e=t.prototype;return b.imps(e,{"laya.filters.IFilter":!0}),e.callNative=function(t){},u(0,e,"type",function(){return-1}),u(0,e,"action",function(){return this._action}),t.BLUR=16,t.COLOR=32,t.GLOW=8,t._filterStart=null,t._filterEnd=null,t._EndTarget=null,t._recycleScope=null,t._filter=null,t._useSrc=null,t._endSrc=null,t._useOut=null,t._endOut=null,t}(),y=function(){function t(){this.data=null}p(t,"laya.filters.ColorFilterAction");var e=t.prototype;return b.imps(e,{"laya.filters.IFilterAction":!0}),e.apply=function(t){var e=t.ctx.ctx,i=t.ctx.ctx.canvas;if(0==i.width||0==i.height)return i;for(var n,s=e.getImageData(0,0,i.width,i.height),r=s.data,o=0,a=r.length;o<a;o+=4)n=this.getColor(r[o],r[o+1],r[o+2],r[o+3]),0!=r[o+3]&&(r[o]=n[0],r[o+1]=n[1],r[o+2]=n[2],r[o+3]=n[3]);return e.putImageData(s,0,0),t},e.getColor=function(t,e,i,n){var s=[];if(this.data._mat&&this.data._alpha){var r=this.data._mat,o=this.data._alpha;s[0]=r[0]*t+r[1]*e+r[2]*i+r[3]*n+o[0],s[1]=r[4]*t+r[5]*e+r[6]*i+r[7]*n+o[1],s[2]=r[8]*t+r[9]*e+r[10]*i+r[11]*n+o[2],s[3]=r[12]*t+r[13]*e+r[14]*i+r[15]*n+o[3]}return s},t}(),w=(function(){function t(){}p(t,"laya.maths.Arith"),t.formatR=function(t){return t>Math.PI&&(t-=2*Math.PI),t<-Math.PI&&(t+=2*Math.PI),t},t.isPOT=function(t,e){return 0<t&&0==(t&t-1)&&0<e&&0==(e&e-1)},t.setMatToArray=function(t,e){t.a,t.b,t.c,t.d,t.tx,t.ty,e[0]=t.a,e[1]=t.b,e[4]=t.c,e[5]=t.d,e[12]=t.tx,e[13]=t.ty}}(),function(){function t(){this._controlPoints=[new C,new C,new C],this._calFun=this.getPoint2}p(t,"laya.maths.Bezier");var e=t.prototype;return e._switchPoint=function(t,e){var i=this._controlPoints.shift();i.setTo(t,e),this._controlPoints.push(i)},e.getPoint2=function(t,e){var i=this._controlPoints[0],n=this._controlPoints[1],s=this._controlPoints[2],r=Math.pow(1-t,2)*i.x+2*t*(1-t)*n.x+Math.pow(t,2)*s.x,o=Math.pow(1-t,2)*i.y+2*t*(1-t)*n.y+Math.pow(t,2)*s.y;e.push(r,o)},e.getPoint3=function(t,e){var i=this._controlPoints[0],n=this._controlPoints[1],s=this._controlPoints[2],r=this._controlPoints[3],o=Math.pow(1-t,3)*i.x+3*n.x*t*(1-t)*(1-t)+3*s.x*t*t*(1-t)+r.x*Math.pow(t,3),a=Math.pow(1-t,3)*i.y+3*n.y*t*(1-t)*(1-t)+3*s.y*t*t*(1-t)+r.y*Math.pow(t,3);e.push(o,a)},e.insertPoints=function(t,e){var i,n=NaN;for(i=1/(t=0<t?t:5),n=0;n<=1;n+=i)this._calFun(n,e)},e.getBezierPoints=function(t,e,i){void 0===e&&(e=5),void 0===i&&(i=2);var n,s,r=0;if((n=t.length)<2*(i+1))return[];switch(s=[],i){case 2:this._calFun=this.getPoint2;break;case 3:this._calFun=this.getPoint3;break;default:return[]}for(;this._controlPoints.length<=i;)this._controlPoints.push(new C);for(r=0;r<2*i;r+=2)this._switchPoint(t[r],t[r+1]);for(r=2*i;r<n;r+=2)this._switchPoint(t[r],t[r+1]),r/2%i==0&&this.insertPoints(e,s);return s},h(t,["I",function(){return this.I=new t}]),t}()),x=function(){function l(){}return p(l,"laya.maths.GrahamScan"),l.multiply=function(t,e,i){return(t.x-i.x)*(e.y-i.y)-(e.x-i.x)*(t.y-i.y)},l.dis=function(t,e){return(t.x-e.x)*(t.x-e.x)+(t.y-e.y)*(t.y-e.y)},l._getPoints=function(t,e,i){for(void 0===e&&(e=!1),l._mPointList||(l._mPointList=[]);l._mPointList.length<t;)l._mPointList.push(new C);return i||(i=[]),i.length=0,e?l.getFrom(i,l._mPointList,t):l.getFromR(i,l._mPointList,t),i},l.getFrom=function(t,e,i){var n=0;for(n=0;n<i;n++)t.push(e[n]);return t},l.getFromR=function(t,e,i){var n=0;for(n=0;n<i;n++)t.push(e.pop());return t},l.pListToPointList=function(t,e){void 0===e&&(e=!1);var i=0,n=t.length/2,s=l._getPoints(n,e,l._tempPointList);for(i=0;i<n;i++)s[i].setTo(t[i+i],t[i+i+1]);return s},l.pointListToPlist=function(t){var e,i=0,n=t.length,s=l._temPList;for(i=s.length=0;i<n;i++)e=t[i],s.push(e.x,e.y);return s},l.scanPList=function(t){return q.copyArray(t,l.pointListToPlist(l.scan(l.pListToPointList(t,!0))))},l.scan=function(t){var e,i,n,s=0,r=0,o=0,a=t.length,h={};for((i=l._temArr).length=0,s=(a=t.length)-1;0<=s;s--)n=(e=t[s]).x+"_"+e.y,h.hasOwnProperty(n)||(h[n]=!0,i.push(e));for(a=i.length,q.copyArray(t,i),s=1;s<a;s++)(t[s].y<t[o].y||t[s].y==t[o].y&&t[s].x<t[o].x)&&(o=s);for(e=t[0],t[0]=t[o],t[o]=e,s=1;s<a-1;s++){for(r=(o=s)+1;r<a;r++)(0<l.multiply(t[r],t[o],t[0])||0==l.multiply(t[r],t[o],t[0])&&l.dis(t[0],t[r])<l.dis(t[0],t[o]))&&(o=r);e=t[s],t[s]=t[o],t[o]=e}if((i=l._temArr).length=0,t.length<3)return q.copyArray(i,t);for(i.push(t[0],t[1],t[2]),s=3;s<a;s++){for(;2<=i.length&&0<=l.multiply(t[s],i[i.length-1],i[i.length-2]);)i.pop();t[s]&&i.push(t[s])}return i},l._mPointList=null,l._tempPointList=[],l._temPList=[],l._temArr=[],l}(),T=function(){function s(){}return p(s,"laya.maths.MathUtil"),s.subtractVector3=function(t,e,i){i[0]=t[0]-e[0],i[1]=t[1]-e[1],i[2]=t[2]-e[2]},s.lerp=function(t,e,i){return t*(1-i)+e*i},s.scaleVector3=function(t,e,i){i[0]=t[0]*e,i[1]=t[1]*e,i[2]=t[2]*e},s.lerpVector3=function(t,e,i,n){var s=t[0],r=t[1],o=t[2];n[0]=s+i*(e[0]-s),n[1]=r+i*(e[1]-r),n[2]=o+i*(e[2]-o)},s.lerpVector4=function(t,e,i,n){var s=t[0],r=t[1],o=t[2],a=t[3];n[0]=s+i*(e[0]-s),n[1]=r+i*(e[1]-r),n[2]=o+i*(e[2]-o),n[3]=a+i*(e[3]-a)},s.slerpQuaternionArray=function(t,e,i,n,s,r,o){var a,h,l,u,c,_=t[e+0],d=t[e+1],f=t[e+2],p=t[e+3],g=i[n+0],m=i[n+1],v=i[n+2],y=i[n+3];return(h=_*g+d*m+f*v+p*y)<0&&(h=-h,g=-g,m=-m,v=-v,y=-y),c=1e-6<1-h?(a=Math.acos(h),l=Math.sin(a),u=Math.sin((1-s)*a)/l,Math.sin(s*a)/l):(u=1-s,s),r[o+0]=u*_+c*g,r[o+1]=u*d+c*m,r[o+2]=u*f+c*v,r[o+3]=u*p+c*y,r},s.getRotation=function(t,e,i,n){return Math.atan2(n-e,i-t)/Math.PI*180},s.sortBigFirst=function(t,e){return t==e?0:t<e?1:-1},s.sortSmallFirst=function(t,e){return t==e?0:t<e?-1:1},s.sortNumBigFirst=function(t,e){return parseFloat(e)-parseFloat(t)},s.sortNumSmallFirst=function(t,e){return parseFloat(t)-parseFloat(e)},s.sortByKey=function(i,t,e){var n;return void 0===t&&(t=!1),void 0===e&&(e=!0),n=t?e?s.sortNumBigFirst:s.sortBigFirst:e?s.sortNumSmallFirst:s.sortSmallFirst,function(t,e){return n(t[i],e[i])}},s}(),I=function(){function i(t,e,i,n,s,r){this.inPool=!1,this.bTransform=!1,void 0===t&&(t=1),void 0===e&&(e=0),void 0===i&&(i=0),void 0===n&&(n=1),void 0===s&&(s=0),void 0===r&&(r=0),this.a=t,this.b=e,this.c=i,this.d=n,this.tx=s,this.ty=r,this._checkTransform()}p(i,"laya.maths.Matrix");var t=i.prototype;return t.identity=function(){return this.a=this.d=1,this.b=this.tx=this.ty=this.c=0,this.bTransform=!1,this},t._checkTransform=function(){return this.bTransform=1!==this.a||0!==this.b||0!==this.c||1!==this.d},t.setTranslate=function(t,e){return this.tx=t,this.ty=e,this},t.translate=function(t,e){return this.tx+=t,this.ty+=e,this},t.scale=function(t,e){this.a*=t,this.d*=e,this.c*=t,this.b*=e,this.tx*=t,this.ty*=e,this.bTransform=!0},t.rotate=function(t){var e=Math.cos(t),i=Math.sin(t),n=this.a,s=this.c,r=this.tx;this.a=n*e-this.b*i,this.b=n*i+this.b*e,this.c=s*e-this.d*i,this.d=s*i+this.d*e,this.tx=r*e-this.ty*i,this.ty=r*i+this.ty*e,this.bTransform=!0},t.skew=function(t,e){var i=Math.tan(t),n=Math.tan(e),s=this.a,r=this.b;return this.a+=n*this.c,this.b+=n*this.d,this.c+=i*s,this.d+=i*r,this},t.invertTransformPoint=function(t){var e=this.a,i=this.b,n=this.c,s=this.d,r=this.tx,o=e*s-i*n,a=s/o,h=-i/o,l=-n/o,u=e/o,c=(n*this.ty-s*r)/o,_=-(e*this.ty-i*r)/o;return t.setTo(a*t.x+l*t.y+c,h*t.x+u*t.y+_)},t.transformPoint=function(t){return t.setTo(this.a*t.x+this.c*t.y+this.tx,this.b*t.x+this.d*t.y+this.ty)},t.transformPointN=function(t){return t.setTo(this.a*t.x+this.c*t.y,this.b*t.x+this.d*t.y)},t.transformPointArray=function(t,e){for(var i=t.length,n=0;n<i;n+=2){var s=t[n],r=t[n+1];e[n]=this.a*s+this.c*r+this.tx,e[n+1]=this.b*s+this.d*r+this.ty}return e},t.transformPointArrayScale=function(t,e){for(var i=t.length,n=0;n<i;n+=2){var s=t[n],r=t[n+1];e[n]=this.a*s+this.c*r,e[n+1]=this.b*s+this.d*r}return e},t.getScaleX=function(){return 0===this.b?this.a:Math.sqrt(this.a*this.a+this.b*this.b)},t.getScaleY=function(){return 0===this.c?this.d:Math.sqrt(this.c*this.c+this.d*this.d)},t.invert=function(){var t=this.a,e=this.b,i=this.c,n=this.d,s=this.tx,r=t*n-e*i;return this.a=n/r,this.b=-e/r,this.c=-i/r,this.d=t/r,this.tx=(i*this.ty-n*s)/r,this.ty=-(t*this.ty-e*s)/r,this},t.setTo=function(t,e,i,n,s,r){return this.a=t,this.b=e,this.c=i,this.d=n,this.tx=s,this.ty=r,this},t.concat=function(t){var e=this.a,i=this.c,n=this.tx;return this.a=e*t.a+this.b*t.c,this.b=e*t.b+this.b*t.d,this.c=i*t.a+this.d*t.c,this.d=i*t.b+this.d*t.d,this.tx=n*t.a+this.ty*t.c+t.tx,this.ty=n*t.b+this.ty*t.d+t.ty,this},t.scaleEx=function(t,e){var i=this.a,n=this.b,s=this.c,r=this.d;this.d=(this.c=0!==n||0!==s?(this.a=t*i,this.b=t*n,e*s):(this.a=t*i,this.b=0*r,0*i),e*r),this.bTransform=!0},t.rotateEx=function(t){var e=Math.cos(t),i=Math.sin(t),n=this.a,s=this.b,r=this.c,o=this.d;this.d=0!==s||0!==r?(this.a=e*n+i*r,this.b=e*s+i*o,this.c=-i*n+e*r,-i*s+e*o):(this.a=e*n,this.b=i*o,this.c=-i*n,e*o),this.bTransform=!0},t.clone=function(){var t=i.create();return t.a=this.a,t.b=this.b,t.c=this.c,t.d=this.d,t.tx=this.tx,t.ty=this.ty,t.bTransform=this.bTransform,t},t.copyTo=function(t){return t.a=this.a,t.b=this.b,t.c=this.c,t.d=this.d,t.tx=this.tx,t.ty=this.ty,t.bTransform=this.bTransform,t},t.toString=function(){return this.a+","+this.b+","+this.c+","+this.d+","+this.tx+","+this.ty},t.destroy=function(){if(!this.inPool){var t=i._cache;this.inPool=!0,t._length||(t._length=0),(t[t._length++]=this).a=this.d=1,this.b=this.c=this.tx=this.ty=0,this.bTransform=!1}},i.mul=function(t,e,i){var n=t.a,s=t.b,r=t.c,o=t.d,a=t.tx,h=t.ty,l=e.a,u=e.b,c=e.c,_=e.d,d=e.tx,f=e.ty;return i.ty=0!==u||0!==c?(i.a=n*l+s*c,i.b=n*u+s*_,i.c=r*l+o*c,i.d=r*u+o*_,i.tx=l*a+c*h+d,u*a+_*h+f):(i.a=n*l,i.b=s*_,i.c=r*l,i.d=o*_,i.tx=l*a+d,_*h+f),i},i.mul16=function(t,e,i){var n=t.a,s=t.b,r=t.c,o=t.d,a=t.tx,h=t.ty,l=e.a,u=e.b,c=e.c,_=e.d,d=e.tx,f=e.ty;return i[13]=0!==u||0!==c?(i[0]=n*l+s*c,i[1]=n*u+s*_,i[4]=r*l+o*c,i[5]=r*u+o*_,i[12]=l*a+c*h+d,u*a+_*h+f):(i[0]=n*l,i[1]=s*_,i[4]=r*l,i[5]=o*_,i[12]=l*a+d,_*h+f),i},i.mulPre=function(t,e,i,n,s,r,o,a){var h=t.a,l=t.b,u=t.c,c=t.d,_=t.tx,d=t.ty;return a.ty=0!==i||0!==n?(a.a=h*e+l*n,a.b=h*i+l*s,a.c=u*e+c*n,a.d=u*i+c*s,a.tx=e*_+n*d+r,i*_+s*d+o):(a.a=h*e,a.b=l*s,a.c=u*e,a.d=c*s,a.tx=e*_+r,s*d+o),a},i.mulPos=function(t,e,i,n,s,r,o,a){var h=t.a,l=t.b,u=t.c,c=t.d,_=t.tx,d=t.ty;return a.ty=0!==l||0!==u?(a.a=e*h+i*u,a.b=e*l+i*c,a.c=n*h+s*u,a.d=n*l+s*c,a.tx=h*r+u*o+_,l*r+c*o+d):(a.a=e*h,a.b=i*c,a.c=n*h,a.d=s*c,a.tx=h*r+_,c*o+d),a},i.preMul=function(t,e,i){var n=t.a,s=t.b,r=t.c,o=t.d,a=e.a,h=e.b,l=e.c,u=e.d,c=e.tx,_=e.ty;return i.a=a*n,i.b=i.c=0,i.d=u*o,i.tx=c*n+t.tx,i.ty=_*o+t.ty,0===h&&0===l&&0===s&&0===r||(i.a+=h*r,i.d+=l*s,i.b+=a*s+h*o,i.c+=l*n+u*r,i.tx+=_*r,i.ty+=c*s),i},i.preMulXY=function(t,e,i,n){var s=t.a,r=t.b,o=t.c,a=t.d;return n.a=s,n.b=r,n.c=o,n.d=a,n.tx=e*s+t.tx+i*o,n.ty=i*a+t.ty+e*r,n},i.create=function(){var t=i._cache,e=t._length?t[--t._length]:new i;return e.inPool=!1,e},i.EMPTY=new i,i.TEMP=new i,i._cache=[],i}(),C=function(){function t(t,e){void 0===t&&(t=0),void 0===e&&(e=0),this.x=t,this.y=e}p(t,"laya.maths.Point");var e=t.prototype;return e.setTo=function(t,e){return this.x=t,this.y=e,this},e.distance=function(t,e){return Math.sqrt((this.x-t)*(this.x-t)+(this.y-e)*(this.y-e))},e.toString=function(){return this.x+","+this.y},e.normalize=function(){var t=Math.sqrt(this.x*this.x+this.y*this.y);if(0<t){var e=1/t;this.x*=e,this.y*=e}},t.TEMP=new t,t.EMPTY=new t,t}(),M=function(){function l(t,e,i,n){void 0===t&&(t=0),void 0===e&&(e=0),void 0===i&&(i=0),void 0===n&&(n=0),this.x=t,this.y=e,this.width=i,this.height=n}p(l,"laya.maths.Rectangle");var t=l.prototype;return t.setTo=function(t,e,i,n){return this.x=t,this.y=e,this.width=i,this.height=n,this},t.copyFrom=function(t){return this.x=t.x,this.y=t.y,this.width=t.width,this.height=t.height,this},t.contains=function(t,e){return!(this.width<=0||this.height<=0)&&(t>=this.x&&t<this.right&&e>=this.y&&e<this.bottom)},t.intersects=function(t){return!(t.x>this.x+this.width||t.x+t.width<this.x||t.y>this.y+this.height||t.y+t.height<this.y)},t.intersection=function(t,e){return this.intersects(t)?(e||(e=new l),e.x=Math.max(this.x,t.x),e.y=Math.max(this.y,t.y),e.width=Math.min(this.right,t.right)-e.x,e.height=Math.min(this.bottom,t.bottom)-e.y,e):null},t.union=function(t,e){return e||(e=new l),this.clone(e),t.width<=0||t.height<=0?e:(e.addPoint(t.x,t.y),e.addPoint(t.right,t.bottom),this)},t.clone=function(t){return t||(t=new l),t.x=this.x,t.y=this.y,t.width=this.width,t.height=this.height,t},t.toString=function(){return this.x+","+this.y+","+this.width+","+this.height},t.equals=function(t){return!(!t||t.x!==this.x||t.y!==this.y||t.width!==this.width||t.height!==this.height)},t.addPoint=function(t,e){return this.x>t&&(this.width+=this.x-t,this.x=t),this.y>e&&(this.height+=this.y-e,this.y=e),this.width<t-this.x&&(this.width=t-this.x),this.height<e-this.y&&(this.height=e-this.y),this},t._getBoundPoints=function(){var t=l._temB;return(t.length=0)==this.width||0==this.height||t.push(this.x,this.y,this.x+this.width,this.y,this.x,this.y+this.height,this.x+this.width,this.y+this.height),t},t.isEmpty=function(){return this.width<=0||this.height<=0},u(0,t,"right",function(){return this.x+this.width}),u(0,t,"bottom",function(){return this.y+this.height}),l._getBoundPointS=function(t,e,i,n){var s=l._temA;return(s.length=0)==i||0==n||s.push(t,e,t+i,e,t,e+n,t+i,e+n),s},l._getWrapRec=function(t,e){if(!t||t.length<1)return e?e.setTo(0,0,0,0):l.TEMP.setTo(0,0,0,0);e=e||new l;var i,n,s,r,o,a=t.length,h=C.TEMP;for(s=o=-(n=r=99999),i=0;i<a;i+=2)h.x=t[i],h.y=t[i+1],n=n<h.x?n:h.x,r=r<h.y?r:h.y,s=s>h.x?s:h.x,o=o>h.y?o:h.y;return e.setTo(n,r,s-n,o-r)},l.EMPTY=new l,l.TEMP=new l,l._temB=[],l._temA=[],l}(),E=function(){function h(){}return p(h,"laya.media.SoundManager"),u(1,h,"useAudioMusic",function(){return h._useAudioMusic},function(t){h._useAudioMusic=t,h._musicClass=t?it:null}),u(1,h,"autoStopMusic",function(){return h._autoStopMusic},function(t){b.stage.off("blur",null,h._stageOnBlur),b.stage.off("focus",null,h._stageOnFocus),b.stage.off("visibilitychange",null,h._visibilityChange),(h._autoStopMusic=t)&&(b.stage.on("blur",null,h._stageOnBlur),b.stage.on("focus",null,h._stageOnFocus),b.stage.on("visibilitychange",null,h._visibilityChange))}),u(1,h,"muted",function(){return h._muted},function(t){t!=h._muted&&(t&&h.stopAllSound(),h.musicMuted=t,h._muted=t)}),u(1,h,"musicMuted",function(){return h._musicMuted},function(t){t!=h._musicMuted&&(t?(h._tMusic&&h._musicChannel&&!h._musicChannel.isStopped?D.isConchApp?h._musicChannel._audio&&(h._musicChannel._audio.muted=!0):h._musicChannel.pause():h._musicChannel=null,h._musicMuted=t):(h._musicMuted=t,h._tMusic&&h._musicChannel&&(D.isConchApp?h._musicChannel._audio&&(h._musicChannel._audio.muted=!1):h._musicChannel.resume())))}),u(1,h,"soundMuted",function(){return h._soundMuted},function(t){h._soundMuted=t}),h.addChannel=function(t){0<=h._channels.indexOf(t)||h._channels.push(t)},h.removeChannel=function(t){var e=0;for(e=h._channels.length-1;0<=e;e--)h._channels[e]==t&&h._channels.splice(e,1)},h.disposeSoundIfNotUsed=function(t){var e=0;for(e=h._channels.length-1;0<=e;e--)if(h._channels[e].url==t)return;h.destroySound(t)},h._visibilityChange=function(){b.stage.isVisibility?h._stageOnFocus():h._stageOnBlur()},h._stageOnBlur=function(){h._isActive=!1,h._musicChannel&&(h._musicChannel.isStopped||(h._blurPaused=!0,h._musicChannel.pause())),h.stopAllSound(),b.stage.once("mousedown",null,h._stageOnFocus)},h._recoverWebAudio=function(){rt.ctx&&"running"!=rt.ctx.state&&rt.ctx.resume&&rt.ctx.resume()},h._stageOnFocus=function(){h._isActive=!0,h._recoverWebAudio(),b.stage.off("mousedown",null,h._stageOnFocus),h._blurPaused&&h._musicChannel&&h._musicChannel.isStopped&&(h._blurPaused=!1,h._musicChannel.resume())},h.playSound=function(t,e,i,n,s){if(void 0===e&&(e=1),void 0===s&&(s=0),!h._isActive||!t)return null;if(h._muted)return null;if(h._recoverWebAudio(),(t=R.formatURL(t))==h._tMusic){if(h._musicMuted)return null}else{if(D.isConchApp){var r=q.getFileExtension(t);if("wav"!=r&&"ogg"!=r)return alert("The sound only supports wav or ogg format,for optimal performance reason,please refer to the official website document."),null}if(h._soundMuted)return null}var o,a;return B.onMiniGame||(o=b.loader.getRes(t)),n||(n=h._soundClass),o||((o=new n).load(t),B.onMiniGame||at.cacheRes(t,o)),(a=o.play(s,e))?(a.url=t,a.volume=t==h._tMusic?h.musicVolume:h.soundVolume,a.completeHandler=i,a):null},h.destroySound=function(t){var e=b.loader.getRes(t);e&&(at.clearRes(t),e.dispose())},h.playMusic=function(t,e,i,n){return void 0===e&&(e=0),void 0===n&&(n=0),t=R.formatURL(t),h._tMusic=t,h._musicChannel&&h._musicChannel.stop(),h._musicChannel=h.playSound(t,e,i,h._musicClass,n)},h.stopSound=function(t){t=R.formatURL(t);var e,i=0;for(i=h._channels.length-1;0<=i;i--)(e=h._channels[i]).url==t&&e.stop()},h.stopAll=function(){h._tMusic=null;var t=0;for(t=h._channels.length-1;0<=t;t--)h._channels[t].stop()},h.stopAllSound=function(){var t,e=0;for(e=h._channels.length-1;0<=e;e--)(t=h._channels[e]).url!=h._tMusic&&t.stop()},h.stopMusic=function(){h._musicChannel&&h._musicChannel.stop(),h._tMusic=null},h.setSoundVolume=function(t,e){if(e)e=R.formatURL(e),h._setVolume(e,t);else{h.soundVolume=t;var i,n=0;for(n=h._channels.length-1;0<=n;n--)(i=h._channels[n]).url!=h._tMusic&&(i.volume=t)}},h.setMusicVolume=function(t){h.musicVolume=t,h._setVolume(h._tMusic,t)},h._setVolume=function(t,e){t=R.formatURL(t);var i,n=0;for(n=h._channels.length-1;0<=n;n--)(i=h._channels[n]).url==t&&(i.volume=e)},h.musicVolume=1,h.soundVolume=1,h.playbackRate=1,h._useAudioMusic=!0,h._muted=!1,h._soundMuted=!1,h._musicMuted=!1,h._tMusic=null,h._musicChannel=null,h._channels=[],h._autoStopMusic=!1,h._blurPaused=!1,h._isActive=!0,h._soundClass=null,h._musicClass=null,h.autoReleaseSound=!0,h}(),S=function(){var t;function i(){}return p(i,"laya.net.LocalStorage"),i.__init__=function(){i._baseClass||(i._baseClass=t).init(),i.items=i._baseClass.items,i.support=i._baseClass.support},i.setItem=function(t,e){i._baseClass.setItem(t,e)},i.getItem=function(t){return i._baseClass.getItem(t)},i.setJSON=function(t,e){i._baseClass.setJSON(t,e)},i.getJSON=function(t){return i._baseClass.getJSON(t)},i.removeItem=function(t){i._baseClass.removeItem(t)},i.clear=function(){i._baseClass.clear()},i._baseClass=null,i.items=null,i.support=!1,i.__init$=function(){t=function(){function i(){}return p(i,""),i.init=function(){try{i.support=!0,i.items=o.localStorage,i.setItem("laya","1"),i.removeItem("laya")}catch(t){i.support=!1}i.support||console.log("LocalStorage is not supprot or browser is private mode.")},i.setItem=function(t,e){try{i.support&&i.items.setItem(t,e)}catch(t){console.warn("set localStorage failed",t)}},i.getItem=function(t){return i.support?i.items.getItem(t):null},i.setJSON=function(t,e){try{i.support&&i.items.setItem(t,JSON.stringify(e))}catch(t){console.warn("set localStorage failed",t)}},i.getJSON=function(t){return JSON.parse(i.support?i.items.getItem(t):null)},i.removeItem=function(t){i.support&&i.items.removeItem(t)},i.clear=function(){i.support&&i.items.clear()},i.items=null,i.support=!1,i}()},i}(),L=(function(){function n(){}p(n,"laya.net.ResourceVersion"),n.enable=function(t,e,i){void 0===i&&(i=2),laya.net.ResourceVersion.type=i,b.loader.load(t,v.create(null,n.onManifestLoaded,[e]),null,"json"),R.customFormat=n.addVersionPrefix},n.onManifestLoaded=function(t,e){n.manifest=e,t.run(),e||console.warn("资源版本清单文件不存在，不使用资源版本管理。忽略ERR_FILE_NOT_FOUND错误。")},n.addVersionPrefix=function(t){return n.manifest&&n.manifest[t]?2==n.type?n.manifest[t]:n.manifest[t]+"/"+t:t},n.FOLDER_VERSION=1,n.FILENAME_VERSION=2,n.manifest=null,n.type=1}(),function(){function t(){this.fontName=null,this.complete=null,this.err=null,this._fontTxt=null,this._url=null,this._div=null,this._txtWidth=NaN,this._http=null}p(t,"laya.net.TTFLoader");var e=t.prototype;return e.load=function(t){var e=(this._url=t).split(".ttf")[0].split("/");this.fontName=e[e.length-1],B.window.conch?this._loadConch():B.window.FontFace?this._loadWithFontFace():this._loadWithCSS()},e._loadConch=function(){this._http=new ot,this._http.on("error",this,this._onErr),this._http.on("complete",this,this._onHttpLoaded),this._http.send(this._url,null,"get","arraybuffer")},e._onHttpLoaded=function(t){B.window.conch.setFontFaceFromBuffer(this.fontName,t),this._clearHttp(),this._complete()},e._clearHttp=function(){this._http&&(this._http.off("error",this,this._onErr),this._http.off("complete",this,this._onHttpLoaded),this._http=null)},e._onErr=function(){this._clearHttp(),this.err&&(this.err.runWith("fail:"+this._url),this.err=null)},e._complete=function(){b.timer.clear(this,this._complete),b.timer.clear(this,this._checkComplete),this._div&&this._div.parentNode&&(this._div.parentNode.removeChild(this._div),this._div=null),this.complete&&(this.complete.runWith(this),this.complete=null)},e._checkComplete=function(){A.measureText("LayaTTFFont",this._fontTxt).width!=this._txtWidth&&this._complete()},e._loadWithFontFace=function(){var t=new B.window.FontFace(this.fontName,"url('"+this._url+"')");B.window.document.fonts.add(t);var e=this;t.loaded.then(function(){e._complete()}),t.load()},e._createDiv=function(){this._div=B.createElement("div"),this._div.innerHTML="laya";var t=this._div.style;t.fontFamily=this.fontName,t.position="absolute",t.left="-100px",t.top="-100px",B.document.body.appendChild(this._div)},e._loadWithCSS=function(){var t=this,e=B.createElement("style");e.type="text/css",B.document.body.appendChild(e),e.textContent="@font-face { font-family:'"+this.fontName+"'; src:url('"+this._url+"');}",this._fontTxt="40px "+this.fontName,this._txtWidth=A.measureText("LayaTTFFont",this._fontTxt).width;var i=this;e.onload=function(){b.timer.once(1e4,i,t._complete)},b.timer.loop(20,this,this._checkComplete),this._createDiv()},t._testString="LayaTTFFont",t}()),R=function(){function n(t){this._url=null,this._path=null,this._url=n.formatURL(t),this._path=n.getPath(t)}p(n,"laya.net.URL");var t=n.prototype;return u(0,t,"path",function(){return this._path}),u(0,t,"url",function(){return this._url}),n.formatURL=function(t,e){if(!t)return"null path";if(0<t.indexOf(":"))return t;null!=n.customFormat&&(t=n.customFormat(t,e));var i=t.charAt(0);if("."===i)return n.formatRelativePath((e||n.basePath)+t);if("~"===i)return n.rootPath+t.substring(1);if("d"===i){if(0===t.indexOf("data:image"))return t}else if("/"===i)return t;return(e||n.basePath)+t},n.formatRelativePath=function(t){for(var e=t.split("/"),i=0,n=e.length;i<n;i++)".."==e[i]&&(e.splice(i-1,2),i-=2);return e.join("/")},n.isAbsolute=function(t){return 0<t.indexOf(":")||"/"==t.charAt(0)},n.getPath=function(t){var e=t.lastIndexOf("/");return 0<e?t.substr(0,e+1):""},n.getFileName=function(t){var e=t.lastIndexOf("/");return 0<e?t.substr(e+1):t},n.version={},n.basePath="",n.rootPath="",n.customFormat=function(t){var e=n.version[t];return!D.isConchApp&&e&&(t+="?v="+e),t},n}(),D=function(){function s(t,e){this._timeId=0;var i=s._mainCanvas.source.style;i.position="absolute",i.top=i.left="0px",i.background="#000000",s._mainCanvas.source.id="layaCanvas";var n=laya.renders.Render.isWebGL;s._mainCanvas.source.width=t,s._mainCanvas.source.height=e,n&&s.WebGL.init(s._mainCanvas,t,e),B.container.appendChild(s._mainCanvas.source),(s._context=new F(t,e,n?null:s._mainCanvas)).ctx.setIsMainContext(),B.window.requestAnimationFrame(function t(e){b.stage._loop();B.window.requestAnimationFrame(t)}),b.stage.on("visibilitychange",this,this._onVisibilitychange)}p(s,"laya.renders.Render");var t=s.prototype;return t._onVisibilitychange=function(){b.stage.isVisibility?0!=this._timeId&&B.window.clearInterval(this._timeId):this._timeId=B.window.setInterval(this._enterFrame,1e3)},t._enterFrame=function(t){b.stage._loop()},u(1,s,"context",function(){return s._context}),u(1,s,"canvas",function(){return s._mainCanvas.source}),s._context=null,s._mainCanvas=null,s.WebGL=null,s.isConchNode=!1,s.isConchApp=!1,s.isConchWebGL=!1,s.isWebGL=!1,s.is3DMode=!1,s.optimizeTextureMemory=function(t,e){return!0},s.__init$=function(){o.ConchRenderType=o.ConchRenderType||1,o.ConchRenderType|=o.conch?4:0,s.isConchNode=5==(5&o.ConchRenderType),s.isConchApp=4==(4&o.ConchRenderType),s.isConchWebGL=6==o.ConchRenderType},s}(),F=function(){function o(t,e,i){this.x=0,this.y=0,this._drawTexture=function(t,e,i){i[0].loaded&&this.ctx.drawTexture(i[0],i[1],i[2],i[3],i[4],t,e)},this._fillTexture=function(t,e,i){i[0].loaded&&this.ctx.fillTexture(i[0],i[1]+t,i[2]+e,i[3],i[4],i[5],i[6],i[7])},this._drawTextureWithTransform=function(t,e,i){i[0].loaded&&this.ctx.drawTextureWithTransform(i[0],i[1],i[2],i[3],i[4],i[5],t,e,i[6])},this._fillQuadrangle=function(t,e,i){this.ctx.fillQuadrangle(i[0],i[1],i[2],i[3],i[4])},this._drawRect=function(t,e,i){var n=this.ctx;null!=i[4]&&(n.fillStyle=i[4],n.fillRect(t+i[0],e+i[1],i[2],i[3],null)),null!=i[5]&&(n.strokeStyle=i[5],n.lineWidth=i[6],n.strokeRect(t+i[0],e+i[1],i[2],i[3],i[6]))},this._drawPie=function(t,e,i){var n=this.ctx;D.isWebGL&&n.setPathId(i[8]),n.beginPath(),D.isWebGL?(n.movePath(i[0]+t,i[1]+e),n.moveTo(0,0)):n.moveTo(t+i[0],e+i[1]),n.arc(t+i[0],e+i[1],i[2],i[3],i[4]),n.closePath(),this._fillAndStroke(i[5],i[6],i[7],!0)},this._clipRect=function(t,e,i){this.ctx.clipRect(t+i[0],e+i[1],i[2],i[3])},this._fillRect=function(t,e,i){this.ctx.fillRect(t+i[0],e+i[1],i[2],i[3],i[4])},this._drawCircle=function(t,e,i){var n=this.ctx;D.isWebGL&&n.setPathId(i[6]),V.drawCall++,n.beginPath(),D.isWebGL&&n.movePath(i[0]+t,i[1]+e),n.arc(i[0]+t,i[1]+e,i[2],0,o.PI2),n.closePath(),this._fillAndStroke(i[3],i[4],i[5],!0)},this._fillCircle=function(t,e,i){V.drawCall++;var n=this.ctx;n.beginPath(),n.fillStyle=i[3],n.arc(i[0]+t,i[1]+e,i[2],0,o.PI2),n.fill()},this._setShader=function(t,e,i){this.ctx.setShader(i[0])},this._drawLine=function(t,e,i){var n=this.ctx;D.isWebGL&&n.setPathId(i[6]),n.beginPath(),n.strokeStyle=i[4],n.lineWidth=i[5],D.isWebGL?(n.movePath(t,e),n.moveTo(i[0],i[1]),n.lineTo(i[2],i[3])):(n.moveTo(t+i[0],e+i[1]),n.lineTo(t+i[2],e+i[3])),n.stroke()},this._drawLines=function(t,e,i){var n=this.ctx;D.isWebGL&&n.setPathId(i[5]),n.beginPath(),t+=i[0],e+=i[1],D.isWebGL&&n.movePath(t,e),n.strokeStyle=i[3],n.lineWidth=i[4];var s=i[2],r=2,o=s.length;if(D.isWebGL)for(n.moveTo(s[0],s[1]);r<o;)n.lineTo(s[r++],s[r++]);else for(n.moveTo(t+s[0],e+s[1]);r<o;)n.lineTo(t+s[r++],e+s[r++]);n.stroke()},this._drawLinesWebGL=function(t,e,i){this.ctx.drawLines(t+this.x+i[0],e+this.y+i[1],i[2],i[3],i[4])},this._drawCurves=function(t,e,i){this.ctx.drawCurves(t,e,i)},this._draw=function(t,e,i){i[0].call(null,this,t,e)},this._transformByMatrix=function(t,e,i){this.ctx.transformByMatrix(i[0])},this._setTransform=function(t,e,i){this.ctx.setTransform(i[0],i[1],i[2],i[3],i[4],i[5])},this._setTransformByMatrix=function(t,e,i){this.ctx.setTransformByMatrix(i[0])},this._save=function(t,e,i){this.ctx.save()},this._restore=function(t,e,i){this.ctx.restore()},this._translate=function(t,e,i){this.ctx.translate(i[0],i[1])},this._transform=function(t,e,i){this.ctx.translate(i[1]+t,i[2]+e);var n=i[0];this.ctx.transform(n.a,n.b,n.c,n.d,n.tx,n.ty),this.ctx.translate(-t-i[1],-e-i[2])},this._rotate=function(t,e,i){this.ctx.translate(i[1]+t,i[2]+e),this.ctx.rotate(i[0]),this.ctx.translate(-t-i[1],-e-i[2])},this._scale=function(t,e,i){this.ctx.translate(i[2]+t,i[3]+e),this.ctx.scale(i[0],i[1]),this.ctx.translate(-t-i[2],-e-i[3])},this._alpha=function(t,e,i){this.ctx.globalAlpha*=i[0]},this._setAlpha=function(t,e,i){this.ctx.globalAlpha=i[0]},this._fillText=function(t,e,i){this.ctx.fillText(i[0],i[1]+t,i[2]+e,i[3],i[4],i[5])},this._strokeText=function(t,e,i){this.ctx.strokeText(i[0],i[1]+t,i[2]+e,i[3],i[4],i[5],i[6])},this._fillBorderText=function(t,e,i){this.ctx.fillBorderText(i[0],i[1]+t,i[2]+e,i[3],i[4],i[5],i[6],i[7])},this._blendMode=function(t,e,i){this.ctx.globalCompositeOperation=i[0]},this._beginClip=function(t,e,i){this.ctx.beginClip&&this.ctx.beginClip(t+i[0],e+i[1],i[2],i[3])},this._setIBVB=function(t,e,i){this.ctx.setIBVB(i[0]+t,i[1]+e,i[2],i[3],i[4],i[5],i[6],i[7])},this._fillTrangles=function(t,e,i){this.ctx.fillTrangles(i[0],i[1]+t,i[2]+e,i[3],i[4])},this._drawPath=function(t,e,i){var n=this.ctx;D.isWebGL&&n.setPathId(-1),n.beginPath(),t+=i[0],e+=i[1],D.isWebGL&&n.movePath(t,e);for(var s=i[2],r=0,o=s.length;r<o;r++){var a=s[r];switch(a[0]){case"moveTo":D.isWebGL?n.moveTo(a[1],a[2]):n.moveTo(t+a[1],e+a[2]);break;case"lineTo":D.isWebGL?n.lineTo(a[1],a[2]):n.lineTo(t+a[1],e+a[2]);break;case"arcTo":D.isWebGL?n.arcTo(a[1],a[2],a[3],a[4],a[5]):n.arcTo(t+a[1],e+a[2],t+a[3],e+a[4],a[5]);break;case"closePath":n.closePath()}}var h=i[3];null!=h&&(n.fillStyle=h.fillStyle,n.fill());var l=i[4];null!=l&&(n.strokeStyle=l.strokeStyle,n.lineWidth=l.lineWidth||1,n.lineJoin=l.lineJoin,n.lineCap=l.lineCap,n.miterLimit=l.miterLimit,n.stroke())},this.drawPoly=function(t,e,i){this.ctx.drawPoly(t+this.x+i[0],e+this.y+i[1],i[2],i[3],i[4],i[5],i[6])},this._drawPoly=function(t,e,i){var n=this.ctx,s=i[2],r=2,o=s.length;if(D.isWebGL)for(n.setPathId(i[6]),n.beginPath(),t+=i[0],e+=i[1],n.movePath(t,e),n.moveTo(s[0],s[1]);r<o;)n.lineTo(s[r++],s[r++]);else for(n.beginPath(),t+=i[0],e+=i[1],n.moveTo(t+s[0],e+s[1]);r<o;)n.lineTo(t+s[r++],e+s[r++]);n.closePath(),this._fillAndStroke(i[3],i[4],i[5],i[7])},this._drawSkin=function(t,e,i){var n=i[0];if(n){var s=this.ctx;n.render(s,t,e)}},this._drawParticle=function(t,e,i){this.ctx.drawParticle(t+this.x,e+this.y,i[0])},this._setFilters=function(t,e,i){this.ctx.setFilters(i)},i?this.ctx=i.getContext("2d"):(i=yt.create("3D"),this.ctx=A.createWebGLContext2D(i),i._setContext(this.ctx)),i.size(t,e),this.canvas=i}p(o,"laya.renders.RenderContext");var t=o.prototype;return t.destroy=function(){this.canvas&&(this.canvas.destroy(),this.canvas=null,this.ctx=null),this.ctx&&(this.ctx.destroy(),this.ctx=null)},t.drawTexture=function(t,e,i,n,s){t.loaded&&this.ctx.drawTexture(t,e,i,n,s,this.x,this.y)},t._drawTextures=function(t,e,i){i[0].loaded&&this.ctx.drawTextures(i[0],i[1],t+this.x,e+this.y)},t.drawTextureWithTransform=function(t,e,i,n,s,r,o){t.loaded&&this.ctx.drawTextureWithTransform(t,e,i,n,s,r,this.x,this.y,o)},t.fillQuadrangle=function(t,e,i,n,s){this.ctx.fillQuadrangle(t,e,i,n,s)},t.drawCanvas=function(t,e,i,n,s){this.ctx.drawCanvas(t,e+this.x,i+this.y,n,s)},t.drawRect=function(t,e,i,n,s,r){void 0===r&&(r=1);var o=this.ctx;o.strokeStyle=s,o.lineWidth=r,o.strokeRect(t+this.x,e+this.y,i,n,r)},t._fillAndStroke=function(t,e,i,n){void 0===n&&(n=!1);var s=this.ctx;null!=t&&(s.fillStyle=t,D.isWebGL?s.fill(n):s.fill()),null!=e&&0<i&&(s.strokeStyle=e,s.lineWidth=i,s.stroke())},t.clipRect=function(t,e,i,n){this.ctx.clipRect(t+this.x,e+this.y,i,n)},t.fillRect=function(t,e,i,n,s){this.ctx.fillRect(t+this.x,e+this.y,i,n,s)},t.drawCircle=function(t,e,i,n,s){void 0===s&&(s=1),V.drawCall++;var r=this.ctx;r.beginPath(),r.strokeStyle=n,r.lineWidth=s,r.arc(t+this.x,e+this.y,i,0,o.PI2),r.stroke()},t.drawTriangles=function(t,e,i){if(D.isWebGL)this.ctx.drawTriangles(i[0],t+i[1],e+i[2],i[3],i[4],i[5],i[6],i[7],i[8],i[9]);else{var n=i[5],s=0,r=n.length,o=this.ctx;for(s=0;s<r;s+=3){var a=2*n[s],h=2*n[s+1],l=2*n[s+2];o.drawTriangle(i[0],i[3],i[4],a,h,l,i[6],!0)}}},t.fillCircle=function(t,e,i,n){V.drawCall++;var s=this.ctx;s.beginPath(),s.fillStyle=n,s.arc(t+this.x,e+this.y,i,0,o.PI2),s.fill()},t.setShader=function(t){this.ctx.setShader(t)},t.drawLine=function(t,e,i,n,s,r){void 0===r&&(r=1);var o=this.ctx;o.beginPath(),o.strokeStyle=s,o.lineWidth=r,o.moveTo(this.x+t,this.y+e),o.lineTo(this.x+i,this.y+n),o.stroke()},t.clear=function(){this.ctx.clear()},t.transformByMatrix=function(t){this.ctx.transformByMatrix(t)},t.setTransform=function(t,e,i,n,s,r){this.ctx.setTransform(t,e,i,n,s,r)},t.setTransformByMatrix=function(t){this.ctx.setTransformByMatrix(t)},t.save=function(){this.ctx.save()},t.restore=function(){this.ctx.restore()},t.translate=function(t,e){this.ctx.translate(t,e)},t.transform=function(t,e,i,n,s,r){this.ctx.transform(t,e,i,n,s,r)},t.rotate=function(t){this.ctx.rotate(t)},t.scale=function(t,e){this.ctx.scale(t,e)},t.alpha=function(t){this.ctx.globalAlpha*=t},t.setAlpha=function(t){this.ctx.globalAlpha=t},t.fillWords=function(t,e,i,n,s,r){void 0===r&&(r=0),this.ctx.fillWords(t,e,i,n,s,r)},t.fillBorderWords=function(t,e,i,n,s,r,o){this.ctx.fillBorderWords(t,e,i,n,s,r,o)},t.fillText=function(t,e,i,n,s,r){this.ctx.fillText(t,e+this.x,i+this.y,n,s,r)},t.strokeText=function(t,e,i,n,s,r,o){this.ctx.strokeText(t,e+this.x,i+this.y,n,s,r,o)},t.blendMode=function(t){this.ctx.globalCompositeOperation=t},t.flush=function(){this.ctx.flush&&this.ctx.flush()},t.addRenderObject=function(t){this.ctx.addRenderObject(t)},t.beginClip=function(t,e,i,n){this.ctx.beginClip&&this.ctx.beginClip(t,e,i,n)},t.endClip=function(){this.ctx.endClip&&this.ctx.endClip()},t.fillTrangles=function(t,e,i){this.ctx.fillTrangles(i[0],i[1],i[2],i[3],4<i.length?i[4]:null)},o.PI2=2*Math.PI,o}(),k=function(){function o(t,e){switch(this._next=e||o.NORENDER,t){case 0:return void(this._fun=this._no);case 1:return void(this._fun=this._image);case 2:return void(this._fun=this._alpha);case 4:return void(this._fun=this._transform);case 8:return void(this._fun=this._blend);case 16:return void(this._fun=this._canvas);case 64:return void(this._fun=this._mask);case 128:return void(this._fun=this._clip);case 256:return void(this._fun=this._style);case 512:return void(this._fun=this._graphics);case 2048:return void(this._fun=this._childs);case 1024:return void(this._fun=this._custom);case 513:case 517:return void(this._fun=this._image2);case 32:return void(this._fun=m._filter);case 69905:return void(this._fun=o._initRenderFun)}this.onCreate(t)}p(o,"laya.renders.RenderSprite");var t=o.prototype;return t.onCreate=function(t){},t._style=function(t,e,i,n){t._style.render(t,e,i,n);var s=this._next;s._fun.call(s,t,e,i,n)},t._no=function(t,e,i,n){},t._custom=function(t,e,i,n){t.customRender(e,i,n);var s=t._style._tf;this._next._fun.call(this._next,t,e,i-s.translateX,n-s.translateY)},t._clip=function(t,e,i,n){var s=this._next;if(s!=o.NORENDER){var r=t._style.scrollRect;e.ctx.save(),e.ctx.clipRect(i,n,r.width,r.height),s._fun.call(s,t,e,i-r.x,n-r.y),e.ctx.restore()}},t._blend=function(t,e,i,n){var s=t._style;s.blendMode&&(e.ctx.globalCompositeOperation=s.blendMode);var r=this._next;r._fun.call(r,t,e,i,n),e.ctx.globalCompositeOperation="source-over"},t._mask=function(t,e,i,n){var s=this._next;s._fun.call(s,t,e,i,n);var r=t.mask;r&&(e.ctx.globalCompositeOperation="destination-in",(0<r.numChildren||!r.graphics._isOnlyOne())&&(r.cacheAsBitmap=!0),r.render(e,i-t.pivotX,n-t.pivotY)),e.ctx.globalCompositeOperation="source-over"},t._graphics=function(t,e,i,n){var s=t._style._tf;t._graphics&&t._graphics._render(t,e,i-s.translateX,n-s.translateY);var r=this._next;r._fun.call(r,t,e,i,n)},t._image=function(t,e,i,n){var s=t._style;e.ctx.drawTexture2(i,n,s._tf.translateX,s._tf.translateY,t.transform,s.alpha,s.blendMode,t._graphics._one)},t._image2=function(t,e,i,n){var s=t._style._tf;e.ctx.drawTexture2(i,n,s.translateX,s.translateY,t.transform,1,null,t._graphics._one)},t._alpha=function(t,e,i,n){var s;if(.01<(s=t._style.alpha)||t._needRepaint()){var r=e.ctx.globalAlpha;e.ctx.globalAlpha*=s;var o=this._next;o._fun.call(o,t,e,i,n),e.ctx.globalAlpha=r}},t._transform=function(t,e,i,n){var s=t.transform,r=this._next;s&&r!=o.NORENDER?(e.save(),e.transform(s.a,s.b,s.c,s.d,s.tx+i,s.ty+n),r._fun.call(r,t,e,0,0),e.restore()):r._fun.call(r,t,e,i,n)},t._childs=function(t,e,i,n){var s=t._style,r=s._tf;if(i=i-r.translateX+s.paddingLeft,n=n-r.translateY+s.paddingTop,s._calculation){var o=t._getWords();if(o){var a=s;a&&(a.stroke?e.fillBorderWords(o,i,n,a.font,a.color,a.strokeColor,a.stroke):e.fillWords(o,i,n,a.font,a.color,"none"!=a.textDecoration&&a.underLine?1:0))}}var h,l=t._childs,u=l.length;if(t.viewport||t.optimizeScrollRect&&t._style.scrollRect){var c=t.viewport||t._style.scrollRect,_=c.x,d=c.y,f=c.right,p=c.bottom,g=NaN,m=NaN;for(v=0;v<u;++v)(h=l[v]).visible&&(g=h._x)<f&&g+h.width>_&&(m=h._y)<p&&m+h.height>d&&h.render(e,i,n)}else for(var v=0;v<u;++v)(h=l[v])._style.visible&&h.render(e,i,n)},t._canvas=function(t,e,i,n){var s=t._$P.cacheCanvas;if(s){"bitmap"===s.type?V.canvasBitmap++:V.canvasNormal++;var r=s.ctx;if(t._needRepaint()||!r)this._canvas_repaint(t,e,i,n);else{var o=s._cacheRec;e.drawCanvas(r.canvas,i+o.x,n+o.y,o.width,o.height)}}else this._next._fun.call(this._next,t,e,i,n)},t._canvas_repaint=function(t,e,i,n){var s=t._$P.cacheCanvas,r=this._next;if(s){var o,a,h,l,u=s.ctx,c=t._needRepaint()||!u,_=s.type;if("bitmap"===_?V.canvasBitmap++:V.canvasNormal++,c){var d,f;s._cacheRec||(s._cacheRec=new M),D.isWebGL&&"bitmap"!==_?s._cacheRec.setTo(-t.pivotX,-t.pivotY,1,1):((l=t.getSelfBounds()).x=l.x-t.pivotX,l.y=l.y-t.pivotY,l.x=l.x-16,l.y=l.y-16,l.width=l.width+32,l.height=l.height+32,l.x=Math.floor(l.x+i)-i,l.y=Math.floor(l.y+n)-n,l.width=Math.floor(l.width),l.height=Math.floor(l.height),s._cacheRec.copyFrom(l)),l=s._cacheRec;var p,g=D.isWebGL?1:B.pixelRatio*b.stage.clientScaleX,m=D.isWebGL?1:B.pixelRatio*b.stage.clientScaleY;if(!D.isWebGL){var v,y=1,w=1;for(v=t;v&&v!=b.stage;)y*=v.scaleX,w*=v.scaleY,v=v.parent;D.isWebGL?(y<1&&(g*=y),w<1&&(m*=w)):(1<y&&(g*=y),1<w&&(m*=w))}if(t.scrollRect){var x=t.scrollRect;l.x-=x.x,l.y-=x.y}if(d=l.width*g,f=l.height*m,a=l.x,h=l.y,D.isWebGL&&"bitmap"===_&&(2048<d||2048<f))return console.warn("cache bitmap size larger than 2048,cache ignored"),s.ctx&&($.recover("RenderContext",s.ctx),s.ctx.canvas.size(0,0),s.ctx=null),void r._fun.call(r,t,e,i,n);if(u||(u=s.ctx=$.getItem("RenderContext")||new F(d,f,yt.create("AUTO"))),u.ctx.sprite=t,(o=u.canvas).clear(),(o.width!=d||o.height!=f)&&o.size(d,f),"bitmap"===_?o.context.asBitmap=!0:"normal"===_&&(o.context.asBitmap=!1),1!=g||1!=m){var T=u.ctx;T.save(),T.scale(g,m),!D.isConchWebGL&&D.isConchApp&&(p=t._$P.cf)&&T.setFilterMatrix&&T.setFilterMatrix(p._mat,p._alpha),r._fun.call(r,t,u,-a,-h),T.restore(),D.isConchApp&&!D.isConchWebGL||t._applyFilters()}else T=u.ctx,!D.isConchWebGL&&D.isConchApp&&(p=t._$P.cf)&&T.setFilterMatrix&&T.setFilterMatrix(p._mat,p._alpha),r._fun.call(r,t,u,-a,-h),D.isConchApp&&!D.isConchWebGL||t._applyFilters();t._$P.staticCache&&(s.reCache=!1),V.canvasReCache++}else a=(l=s._cacheRec).x,h=l.y,o=u.canvas;e.drawCanvas(o,i+a,n+h,l.width,l.height)}else r._fun.call(r,t,u,i,n)},o.__init__=function(){var t,e,i=0;for(e=A.createRenderSprite(69905,null),t=o.renders.length=4096,i=0;i<t;i++)o.renders[i]=e;o.renders[0]=A.createRenderSprite(0,null),function(t,e){for(var i=0,n=0;n<t.length;n++)i|=t[n],o.renders[i]=e}([1,512,4,2],new o(1,null)),o.renders[513]=A.createRenderSprite(513,null),o.renders[517]=new o(517,null)},o._initRenderFun=function(t,e,i,n){var s=t._renderType;(o.renders[s]=o._getTypeRender(s))._fun(t,e,i,n)},o._getTypeRender=function(t){for(var e=null,i=2048;1<i;)i&t&&(e=A.createRenderSprite(i,e)),i>>=1;return e},o.IMAGE=1,o.ALPHA=2,o.TRANSFORM=4,o.BLEND=8,o.CANVAS=16,o.FILTERS=32,o.MASK=64,o.CLIP=128,o.STYLE=256,o.GRAPHICS=512,o.CUSTOM=1024,o.CHILDS=2048,o.INIT=69905,o.renders=[],o.NORENDER=new o(0,null),o}(),O=function(){function a(){this._repaint=!1}p(a,"laya.resource.Context");var t=a.prototype;return t.replaceReset=function(){var t,e,i=0;for(t=a.replaceKeys.length,i=0;i<t;i++)e=a.replaceKeys[i],this[a.newKeys[i]]=this[e]},t.replaceResotre=function(){this.__restore(),this.__reset()},t.setIsMainContext=function(){},t.drawTextures=function(t,e,i,n){V.drawCall+=e.length/2;for(var s=t.width,r=t.height,o=0,a=e.length;o<a;o+=2)this.drawTexture(t,e[o],e[o+1],s,r,i,n)},t.drawCanvas=function(t,e,i,n,s){V.drawCall++,this.drawImage(t.source,e,i,n,s)},t.fillRect=function(t,e,i,n,s){V.drawCall++,s&&(this.fillStyle=s),this.__fillRect(t,e,i,n)},t.fillText=function(t,e,i,n,s,r){V.drawCall++,3<arguments.length&&null!=n&&(this.font=n,this.fillStyle=s,this.textAlign=r,this.textBaseline="top"),this.__fillText(t,e,i)},t.fillBorderText=function(t,e,i,n,s,r,o,a){V.drawCall++,this.font=n,this.fillStyle=s,this.textBaseline="top",this.strokeStyle=r,this.lineWidth=o,this.textAlign=a,this.__strokeText(t,e,i),this.__fillText(t,e,i)},t.strokeText=function(t,e,i,n,s,r,o){V.drawCall++,3<arguments.length&&null!=n&&(this.font=n,this.strokeStyle=s,this.lineWidth=r,this.textAlign=o,this.textBaseline="top"),this.__strokeText(t,e,i)},t.transformByMatrix=function(t){this.transform(t.a,t.b,t.c,t.d,t.tx,t.ty)},t.setTransformByMatrix=function(t){this.setTransform(t.a,t.b,t.c,t.d,t.tx,t.ty)},t.clipRect=function(t,e,i,n){V.drawCall++,this.beginPath(),this.rect(t,e,i,n),this.clip()},t.drawTexture=function(t,e,i,n,s,r,o){V.drawCall++;var a=t.uv,h=t.bitmap.width,l=t.bitmap.height;this.drawImage(t.source,a[0]*h,a[1]*l,(a[2]-a[0])*h,(a[5]-a[3])*l,e+r,i+o,n,s)},t.drawTextureWithTransform=function(t,e,i,n,s,r,o,a,h){V.drawCall++;var l=t.uv,u=t.bitmap.width,c=t.bitmap.height;this.save(),1!=h&&(this.globalAlpha*=h),r?(this.transform(r.a,r.b,r.c,r.d,r.tx+o,r.ty+a),this.drawImage(t.source,l[0]*u,l[1]*c,(l[2]-l[0])*u,(l[5]-l[3])*c,e,i,n,s)):this.drawImage(t.source,l[0]*u,l[1]*c,(l[2]-l[0])*u,(l[5]-l[3])*c,e+o,i+a,n,s),this.restore()},t.drawTexture2=function(t,e,i,n,s,r,o,a){var h=a[0];if(h.loaded&&h.bitmap&&h.source){V.drawCall++;var l=1!==r;if(l){var u=this.globalAlpha;this.globalAlpha*=r}var c=h.uv,_=h.bitmap.width,d=h.bitmap.height;s?(this.save(),this.transform(s.a,s.b,s.c,s.d,s.tx+t,s.ty+e),this.drawImage(h.source,c[0]*_,c[1]*d,(c[2]-c[0])*_,(c[5]-c[3])*d,a[1]-i,a[2]-n,a[3],a[4]),this.restore()):this.drawImage(h.source,c[0]*_,c[1]*d,(c[2]-c[0])*_,(c[5]-c[3])*d,a[1]-i+t,a[2]-n+e,a[3],a[4]),l&&(this.globalAlpha=u)}},t.fillTexture=function(t,e,i,n,s,r,o,a){if(!a.pat){if(t.uv!=ut.DEF_UV){var h=new yt("2D");h.getContext("2d"),h.size(t.width,t.height),h.context.drawTexture(t,0,0,t.width,t.height,0,0),t=new ut(h)}a.pat=this.createPattern(t.bitmap.source,r)}var l=e,u=i,c=0,_=0;o&&(l+=o.x%t.width,u+=o.y%t.height,c-=o.x%t.width,_-=o.y%t.height),this.translate(l,u),this.fillRect(c,_,n,s,a.pat),this.translate(-l,-u)},t.drawTriangle=function(t,e,i,n,s,r,o,a){var h=t.bitmap,l=h.source,u=t.width,c=t.height,_=h.width,d=h.height,f=i[n]*_,p=i[s]*_,g=i[r]*_,m=i[n+1]*d,v=i[s+1]*d,y=i[r+1]*d,w=e[n],x=e[s],T=e[r],b=e[n+1],C=e[s+1],M=e[r+1];if(a){var S=(w+x+T)/3,P=(b+C+M)/3,E=w-S,A=b-P,I=Math.sqrt(E*E+A*A);w=S+E/I*(I+1),b=P+A/I*(I+1),A=C-P,x=S+(E=x-S)/(I=Math.sqrt(E*E+A*A))*(I+1),C=P+A/I*(I+1),A=M-P,T=S+(E=T-S)/(I=Math.sqrt(E*E+A*A))*(I+1),M=P+A/I*(I+1)}this.save(),o&&this.transform(o.a,o.b,o.c,o.d,o.tx,o.ty),this.beginPath(),this.moveTo(w,b),this.lineTo(x,C),this.lineTo(T,M),this.closePath(),this.clip();var L=1/(f*v+m*g+p*y-v*g-m*p-f*y),R=w*v+m*T+x*y-v*T-m*x-w*y,D=f*x+w*g+p*T-x*g-w*p-f*T,F=f*v*T+m*x*g+w*p*y-w*v*g-m*p*T-f*x*y,k=b*v+m*M+C*y-v*M-m*C-b*y,O=f*C+b*g+p*M-C*g-b*p-f*M,N=f*v*M+m*C*g+b*p*y-b*v*g-m*p*M-f*C*y;this.transform(R*L,k*L,D*L,O*L,F*L,N*L),this.drawImage(l,t.uv[0]*_,t.uv[1]*d,u,c,t.uv[0]*_,t.uv[1]*d,u,c),this.restore()},t.flush=function(){return 0},t.fillWords=function(t,e,i,n,s,r){n&&(this.font=n),s&&(this.fillStyle=s);this.textBaseline="top",this.textAlign="left";for(var o=0,a=t.length;o<a;o++){var h=t[o];if(this.__fillText(h.char,h.x+e,h.y+i),1===r){var l=h.height,u=.5*h.style.letterSpacing;u||(u=0),this.beginPath(),this.strokeStyle=s,this.lineWidth=1,this.moveTo(e+h.x-u+.5,i+h.y+l+.5),this.lineTo(e+h.x+h.width+u+.5,i+h.y+l+.5),this.stroke()}}},t.fillBorderWords=function(t,e,i,n,s,r,o){n&&(this.font=n),s&&(this.fillStyle=s),this.textBaseline="top",this.lineWidth=o,this.textAlign="left",this.strokeStyle=r;for(var a=0,h=t.length;a<h;a++){var l=t[a];this.__strokeText(l.char,l.x+e,l.y+i),this.__fillText(l.char,l.x+e,l.y+i)}},t.destroy=function(){this.canvas.width=this.canvas.height=0},t.clear=function(){this.clearRect(0,0,this._canvas.width,this._canvas.height),this._repaint=!1},t.drawCurves=function(t,e,i){this.beginPath(),this.strokeStyle=i[3],this.lineWidth=i[4];var n=i[2];t+=i[0],e+=i[1],this.moveTo(t+n[0],e+n[1]);for(var s=2,r=n.length;s<r;)this.quadraticCurveTo(t+n[s++],e+n[s++],t+n[s++],e+n[s++]);this.stroke()},a.__init__=function(e){var i=laya.resource.Context.prototype;if(!(e=e||CanvasRenderingContext2D.prototype).inited){e.inited=!0,e.__fillText=e.fillText,e.__fillRect=e.fillRect,e.__strokeText=e.strokeText;["drawTextures","drawTriangle","fillWords","fillBorderWords","setIsMainContext","fillRect","strokeText","fillTexture","fillText","transformByMatrix","setTransformByMatrix","clipRect","drawTexture","drawTexture2","drawTextureWithTransform","flush","clear","destroy","drawCanvas","fillBorderText","drawCurves"].forEach(function(t){e[t]=i[t]})}},a.replaceCanvasGetSet=function(t,e){var i=Object.getOwnPropertyDescriptor(t,e);if(!i||!i.configurable)return!1;var n,s={};for(n in i)"set"!=n&&(s[n]=i[n]);var r=i.set;return s.set=function(t){r.call(this,t);var e=this.getContext("2d");e&&"__reset"in e&&e.__reset()},Object.defineProperty(t,e,s),!0},a.replaceGetSet=function(t,e){var i=Object.getOwnPropertyDescriptor(t,e);if(!i||!i.configurable)return!1;var n,s={};for(n in i)"set"!=n&&(s[n]=i[n]);var r=i.set,o="___"+e+"__";return a.newKeys.push(o),s.set=function(t){t!=this[o]&&(this[o]=t,r.call(this,t))},Object.defineProperty(t,e,s),!0},a._default=new a,a.newKeys=[],h(a,["replaceKeys",function(){return this.replaceKeys=["font","fillStyle","textBaseline"]}]),a}(),N=function(){function r(t){this._id=0,this._name=null,this._resources=null,this._memorySize=0,this._garbageCollectionRate=NaN,this._isOverflow=!1,this.autoRelease=!1,this.autoReleaseMaxSize=0,this._id=++r._uniqueIDCounter,this._name=t||"Content Manager",r._isResourceManagersSorted=!1,this._memorySize=0,this._isOverflow=!1,this.autoRelease=!1,this.autoReleaseMaxSize=536870912,this._garbageCollectionRate=.2,r._resourceManagers.push(this),this._resources=[]}p(r,"laya.resource.ResourceManager");var t=r.prototype;return b.imps(t,{"laya.resource.IDispose":!0}),t.getResourceByIndex=function(t){return this._resources[t]},t.getResourcesLength=function(){return this._resources.length},t.addResource=function(t){return t.resourceManager&&t.resourceManager.removeResource(t),-1===this._resources.indexOf(t)&&((t._resourceManager=this)._resources.push(t),this.addSize(t.memorySize),!0)},t.removeResource=function(t){var e=this._resources.indexOf(t);return-1!==e&&(this._resources.splice(e,1),t._resourceManager=null,this._memorySize-=t.memorySize,!0)},t.unload=function(){for(var t=this._resources.slice(0,this._resources.length),e=0;e<t.length;e++){t[e].destroy()}t.length=0},t.dispose=function(){if(this===r._systemResourceManager)throw new Error("systemResourceManager不能被释放！");r._resourceManagers.splice(r._resourceManagers.indexOf(this),1),r._isResourceManagersSorted=!1;for(var t=this._resources.slice(0,this._resources.length),e=0;e<t.length;e++){var i=t[e];i.resourceManager.removeResource(i),i.destroy()}t.length=0},t.addSize=function(t){t&&(this.autoRelease&&0<t&&this._memorySize+t>this.autoReleaseMaxSize&&this.garbageCollection((1-this._garbageCollectionRate)*this.autoReleaseMaxSize),this._memorySize+=t)},t.garbageCollection=function(t){var e=this._resources;(e=e.slice()).sort(function(t,e){if(!t||!e)throw new Error("a或b不能为空！");return t.released&&e.released?0:t.released?1:e.released?-1:t._lastUseFrameCount-e._lastUseFrameCount});for(var i=V.loopCount,n=0,s=e.length;n<s;n++){var r=e[n];if(!(1<i-r._lastUseFrameCount))return void(this._memorySize>=t&&(this._isOverflow=!0));if(r.releaseResource(),this._memorySize<t)return void(this._isOverflow=!1)}},u(0,t,"id",function(){return this._id}),u(0,t,"name",function(){return this._name},function(t){!t&&""===t||this._name===t||(this._name=t,r._isResourceManagersSorted=!1)}),u(0,t,"memorySize",function(){return this._memorySize}),u(1,r,"systemResourceManager",function(){return r._systemResourceManager}),r.__init__=function(){r.currentResourceManager=r.systemResourceManager},r.getLoadedResourceManagerByIndex=function(t){return r._resourceManagers[t]},r.getLoadedResourceManagersCount=function(){return r._resourceManagers.length},r.recreateContentManagers=function(t){void 0===t&&(t=!1);for(var e=r.currentResourceManager,i=0;i<r._resourceManagers.length;i++){r.currentResourceManager=r._resourceManagers[i];for(var n=0;n<r.currentResourceManager._resources.length;n++)r.currentResourceManager._resources[n].releaseResource(t),r.currentResourceManager._resources[n].activeResource(t)}r.currentResourceManager=e},r.releaseContentManagers=function(t){void 0===t&&(t=!1);for(var e=r.currentResourceManager,i=0;i<r._resourceManagers.length;i++){r.currentResourceManager=r._resourceManagers[i];for(var n=0;n<r.currentResourceManager._resources.length;n++){var s=r.currentResourceManager._resources[n];!s.released&&s.releaseResource(t)}}r.currentResourceManager=e},r._uniqueIDCounter=0,r._isResourceManagersSorted=!1,r._resourceManagers=[],h(r,["_systemResourceManager",function(){return this._systemResourceManager=new r("System Resource Manager")},"currentResourceManager",function(){return this.currentResourceManager=r._systemResourceManager}]),r}(),B=(function(){function t(){}p(t,"laya.system.System"),t.changeDefinition=function(t,e){b[t]=e;var i=t+"=classObj";b._runScript(i)},t.__init__=function(){D.isConchApp&&(conch.disableConchResManager(),conch.disableConchAutoRestoreLostedDevice())}}(),function(){function i(){}return p(i,"laya.utils.Browser"),u(1,i,"pixelRatio",function(){return i.__init__(),-1<i.userAgent.indexOf("Mozilla/6.0(Linux; Android 6.0; HUAWEI NXT-AL10 Build/HUAWEINXT-AL10)")?2:A.getPixelRatio()}),u(1,i,"height",function(){return i.__init__(),(b.stage&&b.stage.canvasRotation?i.clientWidth:i.clientHeight)*i.pixelRatio}),u(1,i,"clientWidth",function(){return i.__init__(),i.window.innerWidth||i.document.body.clientWidth}),u(1,i,"window",function(){return i.__init__(),i._window}),u(1,i,"clientHeight",function(){return i.__init__(),i.window.innerHeight||i.document.body.clientHeight||i.document.documentElement.clientHeight}),u(1,i,"width",function(){return i.__init__(),(b.stage&&b.stage.canvasRotation?i.clientHeight:i.clientWidth)*i.pixelRatio}),u(1,i,"container",function(){return i.__init__(),i._container||((i._container=i.createElement("div")).id="layaContainer",i.document.body.appendChild(i._container)),i._container},function(t){i._container=t}),u(1,i,"document",function(){return i.__init__(),i._document}),i.__init__=function(){if(!i._window){i._window=A.getWindow(),i._document=i.window.document,i._window.addEventListener("message",function(t){laya.utils.Browser._onMessage(t)},!1),i.document.__createElement=i.document.createElement,o.requestAnimationFrame=o.requestAnimationFrame||o.webkitRequestAnimationFrame||o.mozRequestAnimationFrame||o.oRequestAnimationFrame||o.msRequestAnimationFrame||function(t){return o.setTimeout(t,1e3/60)};var t=o.document.body.style;t["-webkit-user-select"]="none",t["-webkit-tap-highlight-color"]="rgba(200,200,200,0)",i.userAgent=i.window.navigator.userAgent,i.onIOS=!!(i.u=i.userAgent).match(/\(i[^;]+;(U;)? CPU.+Mac OS X/),i.onMobile=-1<i.u.indexOf("Mobile"),i.onIPhone=-1<i.u.indexOf("iPhone"),i.onMac=-1<i.u.indexOf("Mac OS X"),i.onIPad=-1<i.u.indexOf("iPad"),i.onAndroid=-1<i.u.indexOf("Android")||-1<i.u.indexOf("Adr"),i.onWP=-1<i.u.indexOf("Windows Phone"),i.onQQBrowser=-1<i.u.indexOf("QQBrowser"),i.onMQQBrowser=-1<i.u.indexOf("MQQBrowser")||-1<i.u.indexOf("Mobile")&&-1<i.u.indexOf("QQ"),i.onIE=!!i.window.ActiveXObject||"ActiveXObject"in i.window,i.onWeiXin=-1<i.u.indexOf("MicroMessenger"),i.onPC=!i.onMobile,i.onSafari=-1<i.u.indexOf("Safari"),i.onFirefox=-1<i.u.indexOf("Firefox"),i.onEdge=-1<i.u.indexOf("Edge"),i.onMiniGame=-1<i.u.indexOf("MiniGame"),i.onLimixiu=-1<i.u.indexOf("limixiu"),i.httpProtocol="http:"==i.window.location.protocol,i.onMiniGame&&null==i.window.focus&&console.error("请先初始化小游戏适配库，详细教程https://ldc.layabox.com/doc/?nav=zh-ts-5-0-0"),i.webAudioEnabled=!!(i.window.AudioContext||i.window.webkitAudioContext||i.window.mozAudioContext),i.soundType=i.webAudioEnabled?"WEBAUDIOSOUND":"AUDIOSOUND",st=i.webAudioEnabled?rt:it,i.webAudioEnabled&&rt.initWebAudio(),it._initMusicAudio(),i.enableTouch="ontouchstart"in o||o.DocumentTouch&&e instanceof DocumentTouch,o.focus(),E._soundClass=st,E._musicClass=it,D._mainCanvas=D._mainCanvas||yt.create("2D"),i.canvas||(i.canvas=yt.create("2D"),i.context=i.canvas.getContext("2d"))}},i._onMessage=function(t){if(t.data&&"size"==t.data.name){if(i.window.innerWidth=t.data.width,i.window.innerHeight=t.data.height,i.window.__innerHeight=t.data.clientHeight,!i.document.createEvent)return void console.warn("no document.createEvent");var e=i.document.createEvent("HTMLEvents");return e.initEvent("resize",!1,!1),void i.window.dispatchEvent(e)}},i.createElement=function(t){return i.__init__(),i.document.__createElement(t)},i.getElementById=function(t){return i.__init__(),i.document.getElementById(t)},i.removeElement=function(t){t&&t.parentNode&&t.parentNode.removeChild(t)},i.now=function(){return A.now()},i._window=null,i._document=null,i._container=null,i.userAgent=null,i.u=null,i.onIOS=!1,i.onMac=!1,i.onMobile=!1,i.onIPhone=!1,i.onIPad=!1,i.onAndroid=!1,i.onWP=!1,i.onQQBrowser=!1,i.onMQQBrowser=!1,i.onSafari=!1,i.onFirefox=!1,i.onEdge=!1,i.onIE=!1,i.onWeiXin=!1,i.onMiniGame=!1,i.onLimixiu=!1,i.onPC=!1,i.httpProtocol=!1,i.webAudioEnabled=!1,i.soundType=null,i.enableTouch=!1,i.canvas=null,i.context=null,i.__init$=function(){},i}()),W=function(){function e(t){this._xd_=!0,this._allocated_=8,this._pos_=0,this._length=0,t?(this._u8d_=new Uint8Array(t),this._d_=new DataView(this._u8d_.buffer),this._length=this._d_.byteLength):this.___resizeBuffer(this._allocated_)}p(e,"laya.utils.Byte");var t=e.prototype;return t.___resizeBuffer=function(e){try{var t=new Uint8Array(e);null!=this._u8d_&&(this._u8d_.length<=e?t.set(this._u8d_):t.set(this._u8d_.subarray(0,e))),this._u8d_=t,this._d_=new DataView(t.buffer)}catch(t){throw"___resizeBuffer err:"+e}},t.getString=function(){return this.rUTF(this.getUint16())},t.getFloat32Array=function(t,e){var i=t+e;i=i>this._length?this._length:i;var n=new Float32Array(this._d_.buffer.slice(t,i));return this._pos_=i,n},t.getUint8Array=function(t,e){var i=t+e;i=i>this._length?this._length:i;var n=new Uint8Array(this._d_.buffer.slice(t,i));return this._pos_=i,n},t.getInt16Array=function(t,e){var i=t+e;i=i>this._length?this._length:i;var n=new Int16Array(this._d_.buffer.slice(t,i));return this._pos_=i,n},t.getFloat32=function(){if(this._pos_+4>this._length)throw"getFloat32 error - Out of bounds";var t=this._d_.getFloat32(this._pos_,this._xd_);return this._pos_+=4,t},t.getFloat64=function(){if(this._pos_+8>this._length)throw"getFloat64 error - Out of bounds";var t=this._d_.getFloat64(this._pos_,this._xd_);return this._pos_+=8,t},t.writeFloat32=function(t){this.ensureWrite(this._pos_+4),this._d_.setFloat32(this._pos_,t,this._xd_),this._pos_+=4},t.writeFloat64=function(t){this.ensureWrite(this._pos_+8),this._d_.setFloat64(this._pos_,t,this._xd_),this._pos_+=8},t.getInt32=function(){if(this._pos_+4>this._length)throw"getInt32 error - Out of bounds";var t=this._d_.getInt32(this._pos_,this._xd_);return this._pos_+=4,t},t.getUint32=function(){if(this._pos_+4>this._length)throw"getUint32 error - Out of bounds";var t=this._d_.getUint32(this._pos_,this._xd_);return this._pos_+=4,t},t.writeInt32=function(t){this.ensureWrite(this._pos_+4),this._d_.setInt32(this._pos_,t,this._xd_),this._pos_+=4},t.writeUint32=function(t){this.ensureWrite(this._pos_+4),this._d_.setUint32(this._pos_,t,this._xd_),this._pos_+=4},t.getInt16=function(){if(this._pos_+2>this._length)throw"getInt16 error - Out of bounds";var t=this._d_.getInt16(this._pos_,this._xd_);return this._pos_+=2,t},t.getUint16=function(){if(this._pos_+2>this._length)throw"getUint16 error - Out of bounds";var t=this._d_.getUint16(this._pos_,this._xd_);return this._pos_+=2,t},t.writeUint16=function(t){this.ensureWrite(this._pos_+2),this._d_.setUint16(this._pos_,t,this._xd_),this._pos_+=2},t.writeInt16=function(t){this.ensureWrite(this._pos_+2),this._d_.setInt16(this._pos_,t,this._xd_),this._pos_+=2},t.getUint8=function(){if(this._pos_+1>this._length)throw"getUint8 error - Out of bounds";return this._d_.getUint8(this._pos_++)},t.writeUint8=function(t){this.ensureWrite(this._pos_+1),this._d_.setUint8(this._pos_,t),this._pos_++},t._getUInt8=function(t){return this._d_.getUint8(t)},t._getUint16=function(t){return this._d_.getUint16(t,this._xd_)},t._getMatrix=function(){return new I(this.getFloat32(),this.getFloat32(),this.getFloat32(),this.getFloat32(),this.getFloat32(),this.getFloat32())},t.rUTF=function(t){for(var e="",i=this._pos_+t,n=0,s=String.fromCharCode,r=this._u8d_;this._pos_<i;)(n=r[this._pos_++])<128?0!=n&&(e+=s(n)):e+=s(n<224?(63&n)<<6|127&r[this._pos_++]:n<240?(31&n)<<12|(127&r[this._pos_++])<<6|127&r[this._pos_++]:(15&n)<<18|(127&r[this._pos_++])<<12|r[this._pos_++]<<6&127|127&r[this._pos_++]),0;return e},t.getCustomString=function(t){for(var e="",i=0,n=0,s=String.fromCharCode,r=this._u8d_;0<t;)if((n=r[this._pos_])<128)e+=s(n),this._pos_++,t--;else for(i=n-128,this._pos_++,t-=i;0<i;)n=r[this._pos_++],e+=s(r[this._pos_++]<<8|n),i--;return e},t.clear=function(){this._pos_=0,this.length=0},t.__getBuffer=function(){return this._d_.buffer},t.writeUTFBytes=function(t){for(var e=0,i=(t+="").length;e<i;e++){var n=t.charCodeAt(e);n<=127?this.writeByte(n):n<=2047?(this.ensureWrite(this._pos_+2),this._u8d_.set([192|n>>6,128|63&n],this._pos_),this._pos_+=2):n<=65535?(this.ensureWrite(this._pos_+3),this._u8d_.set([224|n>>12,128|n>>6&63,128|63&n],this._pos_),this._pos_+=3):(this.ensureWrite(this._pos_+4),this._u8d_.set([240|n>>18,128|n>>12&63,128|n>>6&63,128|63&n],this._pos_),this._pos_+=4)}},t.writeUTFString=function(t){var e=this.pos;this.writeUint16(1),this.writeUTFBytes(t);var i=this.pos-e-2;if(65536<=i)throw"writeUTFString byte len more than 65536";this._d_.setUint16(e,i,this._xd_)},t.readUTFString=function(){return this.readUTFBytes(this.getUint16())},t.getUTFString=function(){return this.readUTFString()},t.readUTFBytes=function(t){if(void 0===t&&(t=-1),0==t)return"";var e=this.bytesAvailable;if(e<t)throw"readUTFBytes error - Out of bounds";return t=0<t?t:e,this.rUTF(t)},t.getUTFBytes=function(t){return void 0===t&&(t=-1),this.readUTFBytes(t)},t.writeByte=function(t){this.ensureWrite(this._pos_+1),this._d_.setInt8(this._pos_,t),this._pos_+=1},t.readByte=function(){if(this._pos_+1>this._length)throw"readByte error - Out of bounds";return this._d_.getInt8(this._pos_++)},t.getByte=function(){return this.readByte()},t.ensureWrite=function(t){this._length<t&&(this._length=t),this._allocated_<t&&(this.length=t)},t.writeArrayBuffer=function(t,e,i){if(void 0===e&&(e=0),void 0===i&&(i=0),e<0||i<0)throw"writeArrayBuffer error - Out of bounds";0==i&&(i=t.byteLength-e),this.ensureWrite(this._pos_+i);var n=new Uint8Array(t);this._u8d_.set(n.subarray(e,e+i),this._pos_),this._pos_+=i},t.readArrayBuffer=function(t){var e;return e=this._u8d_.buffer.slice(this._pos_,this._pos_+t),this._pos_=this._pos_+t,e},u(0,t,"buffer",function(){var t=this._d_.buffer;return t.byteLength==this.length?t:t.slice(0,this.length)}),u(0,t,"endian",function(){return this._xd_?"littleEndian":"bigEndian"},function(t){this._xd_="littleEndian"==t}),u(0,t,"length",function(){return this._length},function(t){this._allocated_<t?this.___resizeBuffer(this._allocated_=Math.floor(Math.max(t,2*this._allocated_))):this._allocated_>t&&this.___resizeBuffer(this._allocated_=t),this._length=t}),u(0,t,"pos",function(){return this._pos_},function(t){this._pos_=t}),u(0,t,"bytesAvailable",function(){return this._length-this._pos_}),e.getSystemEndian=function(){if(!e._sysEndian){var t=new ArrayBuffer(2);new DataView(t).setInt16(0,256,!0),e._sysEndian=256===new Int16Array(t)[0]?"littleEndian":"bigEndian"}return e._sysEndian},e.BIG_ENDIAN="bigEndian",e.LITTLE_ENDIAN="littleEndian",e._sysEndian=null,e}(),G=function(){function s(){}return p(s,"laya.utils.CacheManager"),s.regCacheByFunction=function(t,e){var i;s.unRegCacheByFunction(t,e),i={tryDispose:t,getCacheList:e},s._cacheList.push(i)},s.unRegCacheByFunction=function(t,e){var i,n=0;for(i=s._cacheList.length,n=0;n<i;n++)if(s._cacheList[n].tryDispose==t&&s._cacheList[n].getCacheList==e)return void s._cacheList.splice(n,1)},s.forceDispose=function(){var t=0,e=s._cacheList.length;for(t=0;t<e;t++)s._cacheList[t].tryDispose(!0)},s.beginCheck=function(t){void 0===t&&(t=15e3),b.timer.loop(t,null,s._checkLoop)},s.stopCheck=function(){b.timer.clear(null,s._checkLoop)},s._checkLoop=function(){var t=s._cacheList;if(!(t.length<1)){var e,i=B.now(),n=0;for(e=n=t.length;0<n&&(t[s._index=++s._index%e].tryDispose(!1),!(B.now()-i>s.loopTimeLimit));)n--}},s.loopTimeLimit=2,s._cacheList=[],s._index=0,s}(),U=function(){function d(){}return p(d,"laya.utils.ClassUtils"),d.regClass=function(t,e){d._classMap[t]=e},d.getRegClass=function(t){return d._classMap[t]},d.getInstance=function(t){var e=d.getClass(t);return e?new e:(console.warn("[error] Undefined class:",t),null)},d.createByJson=function(t,e,i,n,s){"string"==typeof t&&(t=JSON.parse(t));var r=t.props;if(!e&&!(e=s?s.runWith(t):d.getInstance(r.runtime||t.type)))return null;var o=t.child;if(o)for(var a=0,h=o.length;a<h;a++){var l=o[a];if("render"!==l.props.name&&"render"!==l.props.renderType||!e._$set_itemRender)if("Graphic"==l.type)d.addGraphicsToSprite(l,e);else if(d.isDrawType(l.type))d.addGraphicToSprite(l,e,!0);else{var u=d.createByJson(l,null,i,n,s);"Script"==l.type?u.hasOwnProperty("owner")?u.owner=e:u.hasOwnProperty("target")&&(u.target=e):"mask"==l.props.renderType?e.mask=u:e.addChild(u)}else e.itemRender=l}if(r)for(var c in r){var _=r[c];"var"===c&&i?i[_]=e:_ instanceof Array&&"function"==typeof e[c]?e[c].apply(e,_):e[c]=_}return n&&t.customProps&&n.runWith([e,t]),e.created&&e.created(),e},d.addGraphicsToSprite=function(t,e){var i;if((i=t.child)&&!(i.length<1)){var n;n=d._getGraphicsFromSprite(t,e);var s=0,r=0;t.props&&(s=d._getObjVar(t.props,"x",0),r=d._getObjVar(t.props,"y",0)),0!=s&&0!=r&&n.translate(s,r);var o,a=0;for(o=i.length,a=0;a<o;a++)d._addGraphicToGraphics(i[a],n);0!=s&&0!=r&&n.translate(-s,-r)}},d.addGraphicToSprite=function(t,e,i){var n;void 0===i&&(i=!1),n=i?d._getGraphicsFromSprite(t,e):e.graphics,d._addGraphicToGraphics(t,n)},d._getGraphicsFromSprite=function(t,e){var i,n;if(!t||!t.props)return e.graphics;switch(n=t.props.renderType){case"hit":case"unHit":var s;e.hitArea||(e.hitArea=new X),(s=e.hitArea)[n]||(s[n]=new _),i=s[n]}return i||(i=e.graphics),i},d._getTransformData=function(t){var e;(t.hasOwnProperty("pivotX")||t.hasOwnProperty("pivotY"))&&(e=e||new I).translate(-d._getObjVar(t,"pivotX",0),-d._getObjVar(t,"pivotY",0));var i=d._getObjVar(t,"scaleX",1),n=d._getObjVar(t,"scaleY",1),s=d._getObjVar(t,"rotation",0);d._getObjVar(t,"skewX",0),d._getObjVar(t,"skewY",0);return 1==i&&1==n&&0==s||((e=e||new I).scale(i,n),e.rotate(.0174532922222222*s)),e},d._addGraphicToGraphics=function(t,e){var i,n;if((i=t.props)&&(n=d.DrawTypeDic[t.type])){var s,r;s=e;var o=d._getParams(i,n[1],n[2],n[3]);((r=d._tM)||1!=d._alpha)&&(s.save(),r&&s.transform(r),1!=d._alpha&&s.alpha(d._alpha)),s[n[0]].apply(s,o),(r||1!=d._alpha)&&s.restore()}},d._adptLineData=function(t){return t[2]=parseFloat(t[0])+parseFloat(t[2]),t[3]=parseFloat(t[1])+parseFloat(t[3]),t},d._adptTextureData=function(t){return t[0]=at.getRes(t[0]),t},d._adptLinesData=function(t){return t[2]=d._getPointListByStr(t[2]),t},d.isDrawType=function(t){return"Image"!=t&&d.DrawTypeDic.hasOwnProperty(t)},d._getParams=function(t,e,i,n){var s;void 0===i&&(i=0),(s=d._temParam).length=e.length;var r,o,a=0;for(r=e.length,a=0;a<r;a++)s[a]=d._getObjVar(t,e[a][0],e[a][1]);return d._alpha=d._getObjVar(t,"alpha",1),o=d._getTransformData(t),d._tM=o?(i||(i=0),o.translate(s[i],s[i+1]),s[i]=s[i+1]=0,o):null,n&&d[n]&&(s=d[n](s)),s},d._getPointListByStr=function(t){var e,i,n=0;for(i=(e=t.split(",")).length,n=0;n<i;n++)e[n]=parseFloat(e[n]);return e},d._getObjVar=function(t,e,i){return t.hasOwnProperty(e)?t[e]:i},d._temParam=[],d._classMap={Sprite:"laya.display.Sprite",Text:"laya.display.Text",Animation:"laya.display.Animation",Skeleton:"laya.ani.bone.Skeleton",Particle2D:"laya.particle.Particle2D",div:"laya.html.dom.HTMLDivElement",p:"laya.html.dom.HTMLElement",img:"laya.html.dom.HTMLImageElement",span:"laya.html.dom.HTMLElement",br:"laya.html.dom.HTMLBrElement",style:"laya.html.dom.HTMLStyleElement",font:"laya.html.dom.HTMLElement",a:"laya.html.dom.HTMLElement","#text":"laya.html.dom.HTMLElement"},d.getClass=function(t){var e=d._classMap[t]||t;return"string"==typeof e?b.__classmap[e]:e},d._tM=null,d._alpha=NaN,h(d,["DrawTypeDic",function(){return this.DrawTypeDic={Rect:["drawRect",[["x",0],["y",0],["width",0],["height",0],["fillColor",null],["lineColor",null],["lineWidth",1]]],Circle:["drawCircle",[["x",0],["y",0],["radius",0],["fillColor",null],["lineColor",null],["lineWidth",1]]],Pie:["drawPie",[["x",0],["y",0],["radius",0],["startAngle",0],["endAngle",0],["fillColor",null],["lineColor",null],["lineWidth",1]]],Image:["drawTexture",[["x",0],["y",0],["width",0],["height",0]]],Texture:["drawTexture",[["skin",null],["x",0],["y",0],["width",0],["height",0]],1,"_adptTextureData"],FillTexture:["fillTexture",[["skin",null],["x",0],["y",0],["width",0],["height",0],["repeat",null]],1,"_adptTextureData"],FillText:["fillText",[["text",""],["x",0],["y",0],["font",null],["color",null],["textAlign",null]],1],Line:["drawLine",[["x",0],["y",0],["toX",0],["toY",0],["lineColor",null],["lineWidth",0]],0,"_adptLineData"],Lines:["drawLines",[["x",0],["y",0],["points",""],["lineColor",null],["lineWidth",0]],0,"_adptLinesData"],Curves:["drawCurves",[["x",0],["y",0],["points",""],["lineColor",null],["lineWidth",0]],0,"_adptLinesData"],Poly:["drawPoly",[["x",0],["y",0],["points",""],["fillColor",null],["lineColor",null],["lineWidth",1]],0,"_adptLinesData"]}}]),d}(),z=function(){function r(t){if(this._color=[],"string"==typeof t){null===(this.strColor=t)&&(t="#000000"),"#"==t.charAt(0)&&(t=t.substr(1));var e=t.length;if(3==e||4==e){for(var i="",n=0;n<e;n++)i+=t[n]+t[n];t=i}var s=this.numColor=parseInt(t,16);if(8==t.length)return void(this._color=[parseInt(t.substr(0,2),16)/255,((16711680&s)>>16)/255,((65280&s)>>8)/255,(255&s)/255])}else s=this.numColor=t,this.strColor=q.toHexColor(s);this._color=[((16711680&s)>>16)/255,((65280&s)>>8)/255,(255&s)/255,1],this._color.__id=++r._COLODID}return p(r,"laya.utils.Color"),r._initDefault=function(){for(var t in r._DEFAULT={},r._COLOR_MAP)r._SAVE[t]=r._DEFAULT[t]=new r(r._COLOR_MAP[t]);return r._DEFAULT},r._initSaveMap=function(){for(var t in r._SAVE_SIZE=0,r._SAVE={},r._DEFAULT)r._SAVE[t]=r._DEFAULT[t]},r.create=function(t){var e=r._SAVE[t+""];return null!=e?e:(r._SAVE_SIZE<1e3||r._initSaveMap(),r._SAVE[t+""]=new r(t))},r._SAVE={},r._SAVE_SIZE=0,r._COLOR_MAP={white:"#FFFFFF",red:"#FF0000",green:"#00FF00",blue:"#0000FF",black:"#000000",yellow:"#FFFF00",gray:"#AAAAAA"},r._DEFAULT=r._initDefault(),r._COLODID=1,r}(),H=(function(){function t(){this._values=[],this._keys=[]}p(t,"laya.utils.Dictionary");var e=t.prototype;e.set=function(t,e){var i=this.indexOf(t);0<=i?this._values[i]=e:(this._keys.push(t),this._values.push(e))},e.indexOf=function(t){var e=this._keys.indexOf(t);return 0<=e?e:(t="string"==typeof t?Number(t):"number"==typeof t?t.toString():t,this._keys.indexOf(t))},e.get=function(t){var e=this.indexOf(t);return e<0?null:this._values[e]},e.remove=function(t){var e=this.indexOf(t);return 0<=e&&(this._keys.splice(e,1),this._values.splice(e,1),!0)},e.clear=function(){this._values.length=0,this._keys.length=0},u(0,e,"values",function(){return this._values}),u(0,e,"keys",function(){return this._keys})}(),function(){function t(){this.ratio=.92,this.maxOffset=60,this._dragging=!1,this._clickOnly=!0}p(t,"laya.utils.Dragging");var e=t.prototype;return e.start=function(t,e,i,n,s,r,o,a){void 0===a&&(a=.92),this.clearTimer(),this.target=t,this.area=e,this.hasInertia=i,this.elasticDistance=e?n:0,this.elasticBackTime=s,this.data=r,this._disableMouseEvent=o,this.ratio=a,this._parent=t.parent,this._clickOnly=!0,this._dragging=!0,this._elasticRateX=this._elasticRateY=1,this._lastX=this._parent.mouseX,this._lastY=this._parent.mouseY,b.stage.on("mouseup",this,this.onStageMouseUp),b.stage.on("mouseout",this,this.onStageMouseUp),b.timer.frameLoop(1,this,this.loop)},e.clearTimer=function(){b.timer.clear(this,this.loop),b.timer.clear(this,this.tweenMove),this._tween&&(this._tween.recover(),this._tween=null)},e.stop=function(){this._dragging&&(f.instance.disableMouseEvent=!1,b.stage.off("mouseup",this,this.onStageMouseUp),b.stage.off("mouseout",this,this.onStageMouseUp),this._dragging=!1,this.target&&this.area&&this.backToArea(),this.clear())},e.loop=function(){var t=this._parent.getMousePoint(),e=t.x,i=t.y,n=e-this._lastX,s=i-this._lastY;if(this._clickOnly){if(!(1<Math.abs(n*b.stage._canvasTransform.getScaleX())||1<Math.abs(s*b.stage._canvasTransform.getScaleY())))return;this._clickOnly=!1,this._offsets||(this._offsets=[]),this._offsets.length=0,this.target.event("dragstart",this.data),f.instance.disableMouseEvent=this._disableMouseEvent,this.target._set$P("$_MOUSEDOWN",!1)}else this._offsets.push(n,s);0===n&&0===s||(this._lastX=e,this._lastY=i,this.target.x+=n*this._elasticRateX,this.target.y+=s*this._elasticRateY,this.area&&this.checkArea(),this.target.event("dragmove",this.data))},e.checkArea=function(){if(this.elasticDistance<=0)this.backToArea();else{if(this.target.x<this.area.x)var t=this.area.x-this.target.x;else t=this.target.x>this.area.x+this.area.width?this.target.x-this.area.x-this.area.width:0;if(this._elasticRateX=Math.max(0,1-t/this.elasticDistance),this.target.y<this.area.y)var e=this.area.y-this.target.y;else e=this.target.y>this.area.y+this.area.height?this.target.y-this.area.y-this.area.height:0;this._elasticRateY=Math.max(0,1-e/this.elasticDistance)}},e.backToArea=function(){this.target.x=Math.min(Math.max(this.target.x,this.area.x),this.area.x+this.area.width),this.target.y=Math.min(Math.max(this.target.y,this.area.y),this.area.y+this.area.height)},e.onStageMouseUp=function(t){if(f.instance.disableMouseEvent=!1,b.stage.off("mouseup",this,this.onStageMouseUp),b.stage.off("mouseout",this,this.onStageMouseUp),b.timer.clear(this,this.loop),!this._clickOnly&&this.target)if(this.hasInertia){this._offsets.length<1&&this._offsets.push(this._parent.mouseX-this._lastX,this._parent.mouseY-this._lastY),this._offsetX=this._offsetY=0;for(var e=this._offsets.length,i=Math.min(e,6),n=this._offsets.length-i,s=e-1;n<s;s--)this._offsetY+=this._offsets[s--],this._offsetX+=this._offsets[s];this._offsetX=this._offsetX/i*2,this._offsetY=this._offsetY/i*2,Math.abs(this._offsetX)>this.maxOffset&&(this._offsetX=0<this._offsetX?this.maxOffset:-this.maxOffset),Math.abs(this._offsetY)>this.maxOffset&&(this._offsetY=0<this._offsetY?this.maxOffset:-this.maxOffset),b.timer.frameLoop(1,this,this.tweenMove)}else 0<this.elasticDistance?this.checkElastic():this.clear()},e.checkElastic=function(){var t=NaN,e=NaN;if(this.target.x<this.area.x?t=this.area.x:this.target.x>this.area.x+this.area.width&&(t=this.area.x+this.area.width),this.target.y<this.area.y?e=this.area.y:this.target.y>this.area.y+this.area.height&&(e=this.area.y+this.area.height),isNaN(t)&&isNaN(e))this.clear();else{var i={};isNaN(t)||(i.x=t),isNaN(e)||(i.y=e),this._tween=K.to(this.target,i,this.elasticBackTime,Y.sineOut,v.create(this,this.clear),0,!1,!1)}},e.tweenMove=function(){this._offsetX*=this.ratio*this._elasticRateX,this._offsetY*=this.ratio*this._elasticRateY,this.target.x+=this._offsetX,this.target.y+=this._offsetY,this.area&&this.checkArea(),this.target.event("dragmove",this.data),(Math.abs(this._offsetX)<1&&Math.abs(this._offsetY)<1||this._elasticRateX<.5||this._elasticRateY<.5)&&(b.timer.clear(this,this.tweenMove),0<this.elasticDistance?this.checkElastic():this.clear())},e.clear=function(){if(this.target){this.clearTimer();var t=this.target;this.target=null,this._parent=null,t.event("dragend",this.data)}},t}()),Y=function(){function a(){}return p(a,"laya.utils.Ease"),a.linearNone=function(t,e,i,n){return i*t/n+e},a.linearIn=function(t,e,i,n){return i*t/n+e},a.linearInOut=function(t,e,i,n){return i*t/n+e},a.linearOut=function(t,e,i,n){return i*t/n+e},a.bounceIn=function(t,e,i,n){return i-a.bounceOut(n-t,0,i,n)+e},a.bounceInOut=function(t,e,i,n){return t<.5*n?.5*a.bounceIn(2*t,0,i,n)+e:.5*a.bounceOut(2*t-n,0,i,n)+.5*i+e},a.bounceOut=function(t,e,i,n){return(t/=n)<1/2.75?i*(7.5625*t*t)+e:t<2/2.75?i*(7.5625*(t-=1.5/2.75)*t+.75)+e:t<2.5/2.75?i*(7.5625*(t-=2.25/2.75)*t+.9375)+e:i*(7.5625*(t-=2.625/2.75)*t+.984375)+e},a.backIn=function(t,e,i,n,s){return void 0===s&&(s=1.70158),i*(t/=n)*t*((s+1)*t-s)+e},a.backInOut=function(t,e,i,n,s){return void 0===s&&(s=1.70158),(t/=.5*n)<1?.5*i*(t*t*((1+(s*=1.525))*t-s))+e:i/2*((t-=2)*t*((1+(s*=1.525))*t+s)+2)+e},a.backOut=function(t,e,i,n,s){return void 0===s&&(s=1.70158),i*((t=t/n-1)*t*((s+1)*t+s)+1)+e},a.elasticIn=function(t,e,i,n,s,r){var o;return void 0===s&&(s=0),void 0===r&&(r=0),0==t?e:1==(t/=n)?e+i:(r||(r=.3*n),o=!s||0<i&&s<i||i<0&&s<-i?(s=i,r/4):r/a.PI2*Math.asin(i/s),-s*Math.pow(2,10*(t-=1))*Math.sin((t*n-o)*a.PI2/r)+e)},a.elasticInOut=function(t,e,i,n,s,r){var o;return void 0===s&&(s=0),void 0===r&&(r=0),0==t?e:2==(t/=.5*n)?e+i:(r||(r=n*(.3*1.5)),o=!s||0<i&&s<i||i<0&&s<-i?(s=i,r/4):r/a.PI2*Math.asin(i/s),t<1?s*Math.pow(2,10*(t-=1))*Math.sin((t*n-o)*a.PI2/r)*-.5+e:s*Math.pow(2,-10*(t-=1))*Math.sin((t*n-o)*a.PI2/r)*.5+i+e)},a.elasticOut=function(t,e,i,n,s,r){var o;return void 0===s&&(s=0),void 0===r&&(r=0),0==t?e:1==(t/=n)?e+i:(r||(r=.3*n),o=!s||0<i&&s<i||i<0&&s<-i?(s=i,r/4):r/a.PI2*Math.asin(i/s),s*Math.pow(2,-10*t)*Math.sin((t*n-o)*a.PI2/r)+i+e)},a.strongIn=function(t,e,i,n){return i*(t/=n)*t*t*t*t+e},a.strongInOut=function(t,e,i,n){return(t/=.5*n)<1?.5*i*t*t*t*t*t+e:.5*i*((t-=2)*t*t*t*t+2)+e},a.strongOut=function(t,e,i,n){return i*((t=t/n-1)*t*t*t*t+1)+e},a.sineInOut=function(t,e,i,n){return.5*-i*(Math.cos(Math.PI*t/n)-1)+e},a.sineIn=function(t,e,i,n){return-i*Math.cos(t/n*a.HALF_PI)+i+e},a.sineOut=function(t,e,i,n){return i*Math.sin(t/n*a.HALF_PI)+e},a.quintIn=function(t,e,i,n){return i*(t/=n)*t*t*t*t+e},a.quintInOut=function(t,e,i,n){return(t/=.5*n)<1?.5*i*t*t*t*t*t+e:.5*i*((t-=2)*t*t*t*t+2)+e},a.quintOut=function(t,e,i,n){return i*((t=t/n-1)*t*t*t*t+1)+e},a.quartIn=function(t,e,i,n){return i*(t/=n)*t*t*t+e},a.quartInOut=function(t,e,i,n){return(t/=.5*n)<1?.5*i*t*t*t*t+e:.5*-i*((t-=2)*t*t*t-2)+e},a.quartOut=function(t,e,i,n){return-i*((t=t/n-1)*t*t*t-1)+e},a.cubicIn=function(t,e,i,n){return i*(t/=n)*t*t+e},a.cubicInOut=function(t,e,i,n){return(t/=.5*n)<1?.5*i*t*t*t+e:.5*i*((t-=2)*t*t+2)+e},a.cubicOut=function(t,e,i,n){return i*((t=t/n-1)*t*t+1)+e},a.quadIn=function(t,e,i,n){return i*(t/=n)*t+e},a.quadInOut=function(t,e,i,n){return(t/=.5*n)<1?.5*i*t*t+e:.5*-i*(--t*(t-2)-1)+e},a.quadOut=function(t,e,i,n){return-i*(t/=n)*(t-2)+e},a.expoIn=function(t,e,i,n){return 0==t?e:i*Math.pow(2,10*(t/n-1))+e-.001*i},a.expoInOut=function(t,e,i,n){return 0==t?e:t==n?e+i:(t/=.5*n)<1?.5*i*Math.pow(2,10*(t-1))+e:.5*i*(2-Math.pow(2,-10*--t))+e},a.expoOut=function(t,e,i,n){return t==n?e+i:i*(1-Math.pow(2,-10*t/n))+e},a.circIn=function(t,e,i,n){return-i*(Math.sqrt(1-(t/=n)*t)-1)+e},a.circInOut=function(t,e,i,n){return(t/=.5*n)<1?.5*-i*(Math.sqrt(1-t*t)-1)+e:.5*i*(Math.sqrt(1-(t-=2)*t)+1)+e},a.circOut=function(t,e,i,n){return i*Math.sqrt(1-(t=t/n-1)*t)+e},a.HALF_PI=.5*Math.PI,a.PI2=2*Math.PI,a}(),X=function(){function c(){this._hit=null,this._unHit=null}p(c,"laya.utils.HitArea");var t=c.prototype;return t.isHit=function(t,e){return!!c.isHitGraphic(t,e,this.hit)&&!c.isHitGraphic(t,e,this.unHit)},t.contains=function(t,e){return this.isHit(t,e)},u(0,t,"hit",function(){return this._hit||(this._hit=new _),this._hit},function(t){this._hit=t}),u(0,t,"unHit",function(){return this._unHit||(this._unHit=new _),this._unHit},function(t){this._unHit=t}),c.isHitGraphic=function(t,e,i){if(!i)return!1;var n;if(!(n=i.cmds)&&i._one&&((n=c._cmds).length=1,n[0]=i._one),!n)return!1;var s,r,o=0;for(s=n.length,o=0;o<s;o++)if(r=n[o]){var a=D._context;switch(r.callee){case a._translate:case 6:t-=r[0],e-=r[1]}if(c.isHitCmd(t,e,r))return!0}return!1},c.isHitCmd=function(t,e,i){if(!i)return!1;var n=D._context,s=!1;switch(i.callee){case n._drawRect:case 13:c._rec.setTo(i[0],i[1],i[2],i[3]),s=c._rec.contains(t,e);break;case n._drawCircle:case n._fillCircle:case 14:s=(t-=i[0])*t+(e-=i[1])*e<i[2]*i[2];break;case n._drawPoly:case 18:t-=i[0],e-=i[1],s=c.ptInPolygon(t,e,i[2])}return s},c.ptInPolygon=function(t,e,i){var n;(n=c._ptPoint).setTo(t,e);var s,r=0,o=NaN,a=NaN,h=NaN,l=NaN;s=i.length;for(var u=0;u<s;u+=2){if(o=i[u],a=i[u+1],h=i[(u+2)%s],a!=(l=i[(u+3)%s]))if(!(n.y<Math.min(a,l)))if(!(n.y>=Math.max(a,l)))(n.y-a)*(h-o)/(l-a)+o>n.x&&r++}return r%2==1},c._cmds=[],h(c,["_rec",function(){return this._rec=new M},"_ptPoint",function(){return this._ptPoint=new C}]),c}(),$=(function(){function s(t,e,i,n){this.char=t,this.charNum=t.charCodeAt(0),this._x=this._y=0,this.width=e,this.height=i,this.style=n,this.isWord=!s._isWordRegExp.test(t)}p(s,"laya.utils.HTMLChar");var t=s.prototype;b.imps(t,{"laya.display.ILayout":!0}),t.setSprite=function(t){this._sprite=t},t.getSprite=function(){return this._sprite},t._isChar=function(){return!0},t._getCSSStyle=function(){return this.style},u(0,t,"width",function(){return this._w},function(t){this._w=t}),u(0,t,"x",function(){return this._x},function(t){this._sprite&&(this._sprite.x=t),this._x=t}),u(0,t,"y",function(){return this._y},function(t){this._sprite&&(this._sprite.y=t),this._y=t}),u(0,t,"height",function(){return this._h},function(t){this._h=t}),s._isWordRegExp=new RegExp("[\\w.]","")}(),function(){function e(){}p(e,"laya.utils.Log"),e.enable=function(){e._logdiv||(e._logdiv=B.window.document.createElement("div"),B.window.document.body.appendChild(e._logdiv),e._logdiv.style.cssText="pointer-events:none;border:white;overflow:hidden;z-index:1000000;background:rgba(100,100,100,0.6);color:white;position: absolute;left:0px;top:0px;width:50%;height:50%;")},e.toggle=function(){var t=e._logdiv.style;"1px"==t.width?t.width=t.height="50%":t.width=t.height="1px"},e.print=function(t){e._logdiv&&(e.maxCount<=e._count&&e.clear(),e._count++,e._logdiv.innerText+=t+"\n",e._logdiv.scrollTop=e._logdiv.scrollHeight)},e.clear=function(){e._logdiv.innerText="",e._count=0},e._logdiv=null,e._count=0,e.maxCount=20}(),function(){function e(){}p(e,"laya.utils.Mouse"),u(1,e,"cursor",function(){return e._style.cursor},function(t){e._style.cursor=t}),e.hide=function(){"none"!=e.cursor&&(e._preCursor=e.cursor,e.cursor="none")},e.show=function(){"none"==e.cursor&&(e.cursor=e._preCursor?e._preCursor:"auto")},e._preCursor=null,h(e,["_style",function(){return this._style=B.document.body.style}])}(),function(){function r(){}return p(r,"laya.utils.Pool"),r.getPoolBySign=function(t){return r._poolDic[t]||(r._poolDic[t]=[])},r.clearBySign=function(t){r._poolDic[t]&&(r._poolDic[t].length=0)},r.recover=function(t,e){e.__InPool||(e.__InPool=!0,r.getPoolBySign(t).push(e))},r.getItemByClass=function(t,e){var i=r.getPoolBySign(t),n=i.length?i.pop():new e;return n.__InPool=!1,n},r.getItemByCreateFun=function(t,e,i){var n=r.getPoolBySign(t),s=n.length?n.pop():e.call(i);return s.__InPool=!1,s},r.getItem=function(t){var e=r.getPoolBySign(t),i=e.length?e.pop():null;return i&&(i.__InPool=!1),i},r._poolDic={},r.InPoolSign="__InPool",r}()),V=(function(){function n(){this.sign=null,this.maxCount=1e3}p(n,"laya.utils.PoolCache");var t=n.prototype;t.getCacheList=function(){return $.getPoolBySign(this.sign)},t.tryDispose=function(t){var e;(e=$.getPoolBySign(this.sign)).length>this.maxCount&&e.splice(this.maxCount,e.length-this.maxCount)},n.addPoolCacheManager=function(t,e){var i;void 0===e&&(e=100),(i=new n).sign=t,i.maxCount=e,G.regCacheByFunction(q.bind(i.tryDispose,i),q.bind(i.getCacheList,i))}}(),function(){function h(){}return p(h,"laya.utils.Stat"),u(1,h,"onclick",null,function(t){h._sp&&h._sp.on("click",h._sp,t),h._canvas&&(h._canvas.source.onclick=t,h._canvas.source.style.pointerEvents="")}),h.show=function(t,e){void 0===t&&(t=0),void 0===e&&(e=0),!D.isConchApp||D.isConchWebGL?(D.isConchWebGL||B.onMiniGame||B.onLimixiu||(h._useCanvas=!0),h._show=!0,h._fpsData.length=60,h._view[0]={title:"FPS(Canvas)",value:"_fpsStr",color:"yellow",units:"int"},h._view[1]={title:"Sprite",value:"_spriteStr",color:"white",units:"int"},h._view[2]={title:"DrawCall",value:"drawCall",color:"white",units:"int"},h._view[3]={title:"CurMem",value:"currentMemorySize",color:"yellow",units:"M"},D.isWebGL?(h._view[4]={title:"Shader",value:"shaderCall",color:"white",units:"int"},D.is3DMode?(h._view[0].title="FPS(3D)",h._view[5]={title:"TriFaces",value:"trianglesFaces",color:"white",units:"int"},h._view[6]={title:"treeNodeColl",value:"treeNodeCollision",color:"white",units:"int"},h._view[7]={title:"treeSpriteColl",value:"treeSpriteCollision",color:"white",units:"int"}):(h._view[0].title="FPS(WebGL)",h._view[5]={title:"Canvas",value:"_canvasStr",color:"white",units:"int"})):h._view[4]={title:"Canvas",value:"_canvasStr",color:"white",units:"int"},h._useCanvas?h.createUIPre(t,e):h.createUI(t,e),h.enable()):B.window.conch.showFPS&&B.window.conch.showFPS(t,e)},h.createUIPre=function(t,e){var i=B.pixelRatio;h._width=130*i,h._vx=75*i,h._height=i*(12*h._view.length+3*i)+4,h._fontSize=12*i;for(var n=0;n<h._view.length;n++)h._view[n].x=4,h._view[n].y=n*h._fontSize+2*i;h._canvas||((h._canvas=new yt("2D")).size(h._width,h._height),(h._ctx=h._canvas.getContext("2d")).textBaseline="top",h._ctx.font=h._fontSize+"px Sans-serif",h._canvas.source.style.cssText="pointer-events:none;background:rgba(150,150,150,0.8);z-index:100000;position: absolute;direction:ltr;left:"+t+"px;top:"+e+"px;width:"+h._width/i+"px;height:"+h._height/i+"px;"),h._first=!0,h.loop(),h._first=!1,B.container.appendChild(h._canvas.source)},h.createUI=function(t,e){var i=h._sp,n=B.pixelRatio;i||(i=new ct,(h._leftText=new gt).pos(5,5),h._leftText.color="#ffffff",i.addChild(h._leftText),(h._txt=new gt).pos(80*n,5),h._txt.color="#ffffff",i.addChild(h._txt),h._sp=i),i.pos(t,e);for(var s="",r=0;r<h._view.length;r++){s+=h._view[r].title+"\n"}h._leftText.text=s;var o=138*n,a=n*(12*h._view.length+3*n)+4;h._txt.fontSize=h._fontSize*n,h._leftText.fontSize=h._fontSize*n,i.size(o,a),i.graphics.clear(),i.graphics.setAlpha(.5),i.graphics.drawRect(0,0,o,a,"#999999"),i.graphics.setAlpha(1),h.loop()},h.enable=function(){b.timer.frameLoop(1,h,h.loop)},h.hide=function(){h._show=!1,b.timer.clear(h,h.loop),h._canvas&&B.removeElement(h._canvas.source)},h.clear=function(){h.trianglesFaces=h.drawCall=h.shaderCall=h.spriteCount=h.spriteRenderUseCacheCount=h.treeNodeCollision=h.treeSpriteCollision=h.canvasNormal=h.canvasBitmap=h.canvasReCache=0},h.loop=function(){h._count++;var t=B.now();if(!(t-h._timer<1e3)){var e=h._count;if(h.FPS=Math.round(1e3*e/(t-h._timer)),h._show){h.trianglesFaces=Math.round(h.trianglesFaces/e),h.spriteCount=h._useCanvas?(h.drawCall=Math.round(h.drawCall/e)-2,h.shaderCall=Math.round(h.shaderCall/e),Math.round(h.spriteCount/e)-1):(h.drawCall=Math.round(h.drawCall/e)-2,h.shaderCall=Math.round(h.shaderCall/e)-4,Math.round(h.spriteCount/e)-4),h.spriteRenderUseCacheCount=Math.round(h.spriteRenderUseCacheCount/e),h.canvasNormal=Math.round(h.canvasNormal/e),h.canvasBitmap=Math.round(h.canvasBitmap/e),h.canvasReCache=Math.ceil(h.canvasReCache/e),h.treeNodeCollision=Math.round(h.treeNodeCollision/e),h.treeSpriteCollision=Math.round(h.treeSpriteCollision/e);var i=0<h.FPS?Math.floor(1e3/h.FPS).toString():" ";h._fpsStr=h.FPS+(h.renderSlow?" slow":"")+" "+i,h._spriteStr=h.spriteCount+(h.spriteRenderUseCacheCount?"/"+h.spriteRenderUseCacheCount:""),h._canvasStr=h.canvasReCache+"/"+h.canvasNormal+"/"+h.canvasBitmap,h.currentMemorySize=N.systemResourceManager.memorySize,h._useCanvas?h.renderInfoPre():h.renderInfo(),h.clear()}h._count=0,h._timer=t}},h.renderInfoPre=function(){if(h._canvas){var t=h._ctx;t.clearRect(h._first?0:h._vx,0,h._width,h._height);for(var e=0;e<h._view.length;e++){var i=h._view[e];h._first&&(t.fillStyle="white",t.fillText(i.title,i.x,i.y,null,null,null)),t.fillStyle=i.color;var n=h[i.value];"M"==i.units&&(n=Math.floor(n/1048576*100)/100+" M"),t.fillText(n+"",i.x+h._vx,i.y,null,null,null)}}},h.renderInfo=function(){for(var t="",e=0;e<h._view.length;e++){var i=h._view[e],n=h[i.value];"M"==i.units&&(n=Math.floor(n/1048576*100)/100+" M"),"K"==i.units&&(n=Math.floor(n/1024*100)/100+" K"),t+=n+"\n"}h._txt.text=t},h.FPS=0,h.loopCount=0,h.shaderCall=0,h.drawCall=0,h.trianglesFaces=0,h.spriteCount=0,h.spriteRenderUseCacheCount=0,h.treeNodeCollision=0,h.treeSpriteCollision=0,h.canvasNormal=0,h.canvasBitmap=0,h.canvasReCache=0,h.renderSlow=!1,h.currentMemorySize=0,h._fpsStr=null,h._canvasStr=null,h._spriteStr=null,h._fpsData=[],h._timer=0,h._count=0,h._view=[],h._fontSize=12,h._txt=null,h._leftText=null,h._sp=null,h._show=!1,h._useCanvas=!1,h._canvas=null,h._ctx=null,h._first=!1,h._vx=NaN,h._width=0,h._height=100,h}()),j=(function(){function t(){this._strsToID={},this._idToStrs=[],this._length=0}p(t,"laya.utils.StringKey");var e=t.prototype;e.add=function(t){var e=this._strsToID[t];return null!=e?e:(this._idToStrs[this._length]=t,this._strsToID[t]=this._length++)},e.getID=function(t){var e=this._strsToID[t];return null==e?-1:e},e.getName=function(t){var e=this._idToStrs[t];return null==e?void 0:e}}(),function(){var h;function l(){this._delta=0,this.scale=1,this.currFrame=0,this._mid=1,this._map=[],this._laters=[],this._handlers=[],this._temp=[],this._count=0,this.currTimer=this._now(),this._lastTimer=this._now(),this._init()}p(l,"laya.utils.Timer");var t=l.prototype;return t._init=function(){b.timer&&b.timer.frameLoop(1,this,this._update)},t._now=function(){return Date.now()},t._update=function(){if(this.scale<=0)this._lastTimer=this._now();else{var t=this.currFrame=this.currFrame+this.scale,e=this._now();this._delta=(e-this._lastTimer)*this.scale;var i=this.currTimer=this.currTimer+this._delta;this._lastTimer=e;var n=this._handlers;for(o=this._count=0,a=n.length;o<a;o++)if(null!==(h=n[o]).method){var s=h.userFrame?t:i;if(s>=h.exeTime)if(h.repeat)if(h.jumpFrame)for(;s>=h.exeTime;)h.exeTime+=h.delay,h.run(!1);else h.exeTime+=h.delay,h.run(!1),s>h.exeTime&&(h.exeTime+=Math.ceil((s-h.exeTime)/h.delay)*h.delay);else h.run(!0)}else this._count++;(30<this._count||t%200==0)&&this._clearHandlers();for(var r=this._laters,o=0,a=r.length-1;o<=a;o++){var h=r[o];null!==h.method&&(this._map[h.key]=null,h.run(!1)),this._recoverHandler(h),o===a&&(a=r.length-1)}r.length=0}},t._clearHandlers=function(){for(var t=this._handlers,e=0,i=t.length;e<i;e++){var n=t[e];null!==n.method?this._temp.push(n):this._recoverHandler(n)}this._handlers=this._temp,this._temp=t,this._temp.length=0},t._recoverHandler=function(t){this._map[t.key]==t&&(this._map[t.key]=null),t.clear(),l._pool.push(t)},t._create=function(t,e,i,n,s,r,o){if(!i)return s.apply(n,r),null;if(o){var a=this._getHandler(n,s);if(a)return a.repeat=e,a.userFrame=t,a.delay=i,a.caller=n,a.method=s,a.args=r,a.exeTime=i+(t?this.currFrame:this.currTimer+this._now()-this._lastTimer),a}return(a=0<l._pool.length?l._pool.pop():new h).repeat=e,a.userFrame=t,a.delay=i,a.caller=n,a.method=s,a.args=r,a.exeTime=i+(t?this.currFrame:this.currTimer+this._now()-this._lastTimer)+1,this._indexHandler(a),this._handlers.push(a),a},t._indexHandler=function(t){var e=t.caller,i=t.method,n=e?e.$_GID||(e.$_GID=q.getGID()):0,s=i.$_TID||(i.$_TID=1e5*this._mid++);t.key=n+s,this._map[t.key]=t},t.once=function(t,e,i,n,s){void 0===s&&(s=!0),this._create(!1,!1,t,e,i,n,s)},t.loop=function(t,e,i,n,s,r){void 0===s&&(s=!0),void 0===r&&(r=!1);var o=this._create(!1,!0,t,e,i,n,s);o&&(o.jumpFrame=r)},t.frameOnce=function(t,e,i,n,s){void 0===s&&(s=!0),this._create(!0,!1,t,e,i,n,s)},t.frameLoop=function(t,e,i,n,s){void 0===s&&(s=!0),this._create(!0,!0,t,e,i,n,s)},t.toString=function(){return"callLater:"+this._laters.length+" handlers:"+this._handlers.length+" pool:"+l._pool.length},t.clear=function(t,e){var i=this._getHandler(t,e);i&&(this._map[i.key]=null,i.key=0,i.clear())},t.clearAll=function(t){if(t)for(var e=0,i=this._handlers.length;e<i;e++){var n=this._handlers[e];n.caller===t&&(this._map[n.key]=null,n.key=0,n.clear())}},t._getHandler=function(t,e){var i=t?t.$_GID||(t.$_GID=q.getGID()):0,n=e.$_TID||(e.$_TID=1e5*this._mid++);return this._map[i+n]},t.callLater=function(t,e,i){if(null==this._getHandler(t,e)){if(l._pool.length)var n=l._pool.pop();else n=new h;n.caller=t,n.method=e,n.args=i,this._indexHandler(n),this._laters.push(n)}},t.runCallLater=function(t,e){var i=this._getHandler(t,e);i&&null!=i.method&&(this._map[i.key]=null,i.run(!0))},t.runTimer=function(t,e){this.runCallLater(t,e)},u(0,t,"delta",function(){return this._delta}),l._pool=[],l.__init$=function(){h=function(){function t(){this.key=0,this.repeat=!1,this.delay=0,this.userFrame=!1,this.exeTime=0,this.caller=null,this.method=null,this.args=null,this.jumpFrame=!1}p(t,"");var e=t.prototype;return e.clear=function(){this.caller=null,this.method=null,this.args=null},e.run=function(t){var e=this.caller;if(e&&e.destroyed)return this.clear();var i=this.method,n=this.args;t&&this.clear(),null!=i&&(n?i.apply(e,n):i.call(e))},t}()},l}()),K=function(){function c(){this.gid=0}p(c,"laya.utils.Tween");var t=c.prototype;return t.to=function(t,e,i,n,s,r,o){return void 0===r&&(r=0),void 0===o&&(o=!1),this._create(t,e,i,n,s,r,o,!0,!1,!0)},t.from=function(t,e,i,n,s,r,o){return void 0===r&&(r=0),void 0===o&&(o=!1),this._create(t,e,i,n,s,r,o,!1,!1,!0)},t._create=function(t,e,i,n,s,r,o,a,h,l){if(!t)throw new Error("Tween:target is null");this._target=t,this._duration=i,this._ease=n||e.ease||c.easeNone,this._complete=s||e.complete,this._delay=r,this._props=[],this._usedTimer=0,this._startTimer=B.now(),this._usedPool=h,this._delayParam=null,this.update=e.update;var u=t.$_GID||(t.$_GID=q.getGID());return c.tweenMap[u]?(o&&c.clearTween(t),c.tweenMap[u].push(this)):c.tweenMap[u]=[this],l?r<=0?this.firstStart(t,e,a):(this._delayParam=[t,e,a],b.scaleTimer.once(r,this,this.firstStart,this._delayParam)):this._initProps(t,e,a),this},t.firstStart=function(t,e,i){this._delayParam=null,t.destroyed?this.clear():(this._initProps(t,e,i),this._beginLoop())},t._initProps=function(t,e,i){for(var n in e)if("number"==typeof t[n]){var s=i?t[n]:e[n],r=i?e[n]:t[n];this._props.push([n,s,r-s]),i||(t[n]=s)}},t._beginLoop=function(){b.scaleTimer.frameLoop(1,this,this._doEase)},t._doEase=function(){this._updateEase(B.now())},t._updateEase=function(t){var e=this._target;if(e){if(e.destroyed)return c.clearTween(e);var i=this._usedTimer=t-this._startTimer-this._delay;if(!(i<0)){if(i>=this._duration)return this.complete();for(var n=0<i?this._ease(i,0,1,this._duration):0,s=this._props,r=0,o=s.length;r<o;r++){var a=s[r];e[a[0]]=a[1]+n*a[2]}this.update&&this.update.run()}}},t.complete=function(){if(this._target){b.scaleTimer.runTimer(this,this.firstStart);for(var t=this._target,e=this._props,i=this._complete,n=0,s=e.length;n<s;n++){var r=e[n];t[r[0]]=r[1]+r[2]}this.update&&this.update.run(),this.clear(),i&&i.run()}},t.pause=function(){b.scaleTimer.clear(this,this._beginLoop),b.scaleTimer.clear(this,this._doEase),b.scaleTimer.clear(this,this.firstStart);var t;(t=B.now()-this._startTimer-this._delay)<0&&(this._usedTimer=t)},t.setStartTime=function(t){this._startTimer=t},t.clear=function(){this._target&&(this._remove(),this._clear())},t._clear=function(){this.pause(),b.scaleTimer.clear(this,this.firstStart),this._complete=null,this._target=null,this._ease=null,this._props=null,this._delayParam=null,this._usedPool&&(this.update=null,$.recover("tween",this))},t.recover=function(){this._usedPool=!0,this._clear()},t._remove=function(){var t=c.tweenMap[this._target.$_GID];if(t)for(var e=0,i=t.length;e<i;e++)if(t[e]===this){t.splice(e,1);break}},t.restart=function(){if(this.pause(),this._usedTimer=0,this._startTimer=B.now(),this._delayParam)b.scaleTimer.once(this._delay,this,this.firstStart,this._delayParam);else{for(var t=this._props,e=0,i=t.length;e<i;e++){var n=t[e];this._target[n[0]]=n[1]}b.scaleTimer.once(this._delay,this,this._beginLoop)}},t.resume=function(){this._usedTimer>=this._duration||(this._startTimer=B.now()-this._usedTimer-this._delay,this._delayParam?this._usedTimer<0?b.scaleTimer.once(-this._usedTimer,this,this.firstStart,this._delayParam):this.firstStart.apply(this,this._delayParam):this._beginLoop())},u(0,t,"progress",null,function(t){var e=t*this._duration;this._startTimer=B.now()-this._delay-e}),c.to=function(t,e,i,n,s,r,o,a){return void 0===r&&(r=0),void 0===o&&(o=!1),void 0===a&&(a=!0),$.getItemByClass("tween",c)._create(t,e,i,n,s,r,o,!0,a,!0)},c.from=function(t,e,i,n,s,r,o,a){return void 0===r&&(r=0),void 0===o&&(o=!1),void 0===a&&(a=!0),$.getItemByClass("tween",c)._create(t,e,i,n,s,r,o,!1,a,!0)},c.clearAll=function(t){if(t&&t.$_GID){var e=c.tweenMap[t.$_GID];if(e){for(var i=0,n=e.length;i<n;i++)e[i]._clear();e.length=0}}},c.clear=function(t){t.clear()},c.clearTween=function(t){c.clearAll(t)},c.easeNone=function(t,e,i,n){return i*t/n+e},c.tweenMap={},c}(),q=function(){function a(){}return p(a,"laya.utils.Utils"),a.toRadian=function(t){return t*a._pi2},a.toAngle=function(t){return t*a._pi},a.toHexColor=function(t){if(t<0||isNaN(t))return null;for(var e=t.toString(16);e.length<6;)e="0"+e;return"#"+e},a.getGID=function(){return a._gid++},a.concatArray=function(t,e){if(!e)return t;if(!t)return e;var i=0,n=e.length;for(i=0;i<n;i++)t.push(e[i]);return t},a.clearArray=function(t){return t&&(t.length=0),t},a.copyArray=function(t,e){if(t||(t=[]),!e)return t;t.length=e.length;var i=0,n=e.length;for(i=0;i<n;i++)t[i]=e[i];return t},a.getGlobalRecByPoints=function(t,e,i,n,s){var r,o;return r=new C(e,i),r=t.localToGlobal(r),o=new C(n,s),o=t.localToGlobal(o),M._getWrapRec([r.x,r.y,o.x,o.y])},a.getGlobalPosAndScale=function(t){return a.getGlobalRecByPoints(t,0,0,1,1)},a.bind=function(t,e){return t.bind(e)},a.measureText=function(t,e){return A.measureText(t,e)},a.updateOrder=function(t){if(!t||t.length<2)return!1;for(var e,i=1,n=0,s=t.length,r=NaN;i<s;){for(e=t[n=i],r=t[n]._zOrder;-1<--n&&t[n]._zOrder>r;)t[n+1]=t[n];t[n+1]=e,i++}var o=e.parent.conchModel;if(o)if(null!=o.updateZOrder)o.updateZOrder();else{for(i=0;i<s;i++)o.removeChild(t[i].conchModel);for(i=0;i<s;i++)o.addChildAt(t[i].conchModel,i)}return!0},a.transPointList=function(t,e,i){var n=0,s=t.length;for(n=0;n<s;n+=2)t[n]+=e,t[n+1]+=i},a.parseInt=function(t,e){void 0===e&&(e=0);var i=B.window.parseInt(t,e);return isNaN(i)?0:i},a.getFileExtension=function(t){a._extReg.lastIndex=t.lastIndexOf(".");var e=a._extReg.exec(t);return e&&1<e.length?e[1].toLowerCase():null},a.getTransformRelativeToWindow=function(t,e,i){var n=b.stage,s=laya.utils.Utils.getGlobalPosAndScale(t),r=n._canvasTransform.clone(),o=r.tx,a=r.ty;r.rotate(-Math.PI/180*b.stage.canvasDegree),r.scale(b.stage.clientScaleX,b.stage.clientScaleY);var h=b.stage.canvasDegree%180!=0,l=NaN,u=NaN;h?(l=i+s.y,u=e+s.x,l*=r.d,u*=r.a,90==b.stage.canvasDegree?(l=o-l,u+=a):(l+=o,u=a-u)):(l=e+s.x,u=i+s.y,l*=r.a,u*=r.d,l+=o,u+=a);var c=NaN,_=NaN;return _=h?(c=r.d*s.height,r.a*s.width):(c=r.a*s.width,r.d*s.height),{x:l,y:u,scaleX:c,scaleY:_}},a.fitDOMElementInArea=function(t,e,i,n,s,r){t._fitLayaAirInitialized||(t._fitLayaAirInitialized=!0,t.style.transformOrigin=t.style.webKittransformOrigin="left top",t.style.position="absolute");var o=a.getTransformRelativeToWindow(e,i,n);t.style.transform=t.style.webkitTransform="scale("+o.scaleX+","+o.scaleY+") rotate("+b.stage.canvasDegree+"deg)",t.style.width=s+"px",t.style.height=r+"px",t.style.left=o.x+"px",t.style.top=o.y+"px"},a.isOkTextureList=function(t){if(!t)return!1;var e,i=0,n=t.length;for(i=0;i<n;i++)if(!(e=t[i])||!e.source)return!1;return!0},a.isOKCmdList=function(t){if(!t)return!1;var e,i,n=0,s=t.length,r=D._context;for(n=0;n<s;n++)switch((e=t[n]).callee){case r._drawTexture:case r._fillTexture:case r._drawTextureWithTransform:if(!(i=e[0])||!i.source)return!1}return!0},a._gid=1,a._pi=180/Math.PI,a._pi2=Math.PI/180,a._extReg=/\.(\w+)\??/g,a.parseXMLFromString=function(t){var e;if(t=t.replace(/>\s+</g,"><"),-1<(e=(new DOMParser).parseFromString(t,"text/xml")).firstChild.textContent.indexOf("This page contains the following errors"))throw new Error(e.firstChild.firstChild.textContent);return e},a}(),Q=function(){function t(){this.useDic={},this.shapeDic={},this.shapeLineDic={},this._id=0,this._checkKey=!1,this._freeIdArray=[],D.isWebGL&&G.regCacheByFunction(q.bind(this.startDispose,this),q.bind(this.getCacheList,this))}p(t,"laya.utils.VectorGraphManager");var e=t.prototype;return e.getId=function(){return this._id++},e.addShape=function(t,e){this.shapeDic[t]=e,this.useDic[t]||(this.useDic[t]=!0)},e.addLine=function(t,e){this.shapeLineDic[t]=e,this.shapeLineDic[t]||(this.shapeLineDic[t]=!0)},e.getShape=function(t){this._checkKey&&null!=this.useDic[t]&&(this.useDic[t]=!0)},e.deleteShape=function(t){this.shapeDic[t]&&(this.shapeDic[t]=null,delete this.shapeDic[t]),this.shapeLineDic[t]&&(this.shapeLineDic[t]=null,delete this.shapeLineDic[t]),null!=this.useDic[t]&&delete this.useDic[t]},e.getCacheList=function(){var t,e=[];for(t in this.shapeDic)e.push(this.shapeDic[t]);for(t in this.shapeLineDic)e.push(this.shapeLineDic[t]);return e},e.startDispose=function(t){var e;for(e in this.useDic)this.useDic[e]=!1;this._checkKey=!0},e.endDispose=function(){if(this._checkKey){var t;for(t in this.useDic)this.useDic[t]||this.deleteShape(t);this._checkKey=!1}},t.getInstance=function(){return t.instance=t.instance||new t},t.instance=null,t}(),J=function(){function n(){this._obj=null,this._obj=n.supportWeakMap?new B.window.WeakMap:{},n.supportWeakMap||n._maps.push(this)}p(n,"laya.utils.WeakObject");var t=n.prototype;return t.set=function(t,e){if(null!=t)if(n.supportWeakMap){var i=t;"string"!=typeof t&&"number"!=typeof t||(i=n._keys[t])||(i=n._keys[t]={k:t}),this._obj.set(i,e)}else"string"==typeof t||"number"==typeof t?this._obj[t]=e:(t.$_GID||(t.$_GID=q.getGID()),this._obj[t.$_GID]=e)},t.get=function(t){if(null==t)return null;if(n.supportWeakMap){var e="string"==typeof t||"number"==typeof t?n._keys[t]:t;return e?this._obj.get(e):null}return"string"==typeof t||"number"==typeof t?this._obj[t]:this._obj[t.$_GID]},t.del=function(t){if(null!=t)if(n.supportWeakMap){var e="string"==typeof t||"number"==typeof t?n._keys[t]:t;if(!e)return;this._obj.delete(e)}else"string"==typeof t||"number"==typeof t?delete this._obj[t]:delete this._obj[this._obj.$_GID]},t.has=function(t){if(null==t)return!1;if(n.supportWeakMap){var e="string"==typeof t||"number"==typeof t?n._keys[t]:t;return this._obj.has(e)}return"string"==typeof t||"number"==typeof t?null!=this._obj[t]:null!=this._obj[this._obj.$_GID]},n.__init__=function(){(n.supportWeakMap=null!=B.window.WeakMap)||b.timer.loop(n.delInterval,null,n.clearCache)},n.clearCache=function(){for(var t=0,e=n._maps.length;t<e;t++){n._maps[t]._obj={}}},n.supportWeakMap=!1,n.delInterval=3e5,n._keys={},n._maps=[],h(n,["I",function(){return this.I=new n}]),n}(),Z=function(){function t(){this.id=NaN,this.save=[],this.toUpperCase=null,this.changed=!1,this._text=null}p(t,"laya.utils.WordText");var e=t.prototype;return e.setText=function(t){this.changed=!0,this._text=t},e.toString=function(){return this._text},e.charCodeAt=function(t){return this._text?this._text.charCodeAt(t):NaN},e.charAt=function(t){return this._text?this._text.charAt(t):null},u(0,e,"length",function(){return this._text?this._text.length:0}),t}(),tt=function(t){function o(){this._bits=0,this._displayedInStage=!1,this._parent=null,this.conchModel=null,this.name="",this._destroyed=!1,o.__super.call(this),this._childs=o.ARRAY_EMPTY,this._$P=o.PROP_EMPTY,this.timer=b.scaleTimer,this.conchModel=D.isConchNode?this.createConchModel():null}p(o,"laya.display.Node",l);var e=o.prototype;return e._setBit=function(t,e){1==t&&(this._getBit(t)!=e&&this._updateDisplayedInstage());e?this._bits|=t:this._bits&=~t},e._getBit=function(t){return 0!=(this._bits&t)},e._setUpNoticeChain=function(){this._getBit(1)&&this._setUpNoticeType(1)},e._setUpNoticeType=function(t){var e=this;for(e._setBit(t,!0),e=e.parent;e;){if(e._getBit(t))return;e._setBit(t,!0),e=e.parent}},e.on=function(t,e,i,n){return"display"!==t&&"undisplay"!==t||this._getBit(1)||this._setUpNoticeType(1),this._createListener(t,e,i,n,!1)},e.once=function(t,e,i,n){return"display"!==t&&"undisplay"!==t||this._getBit(1)||this._setUpNoticeType(1),this._createListener(t,e,i,n,!0)},e.createConchModel=function(){return null},e.destroy=function(t){void 0===t&&(t=!0),this._destroyed=!0,this._parent&&this._parent.removeChild(this),this._childs&&(t?this.destroyChildren():this.removeChildren()),this._childs=null,this._$P=null,this.offAll(),this.timer.clearAll(this)},e.destroyChildren=function(){if(this._childs)for(var t=this._childs.length-1;-1<t;t--)this._childs[t].destroy(!0)},e.addChild=function(t){if(!t||this.destroyed||t===this)return t;if(t.zOrder&&this._set$P("hasZorder",!0),t._parent===this){var e=this.getChildIndex(t);e!==this._childs.length-1&&(this._childs.splice(e,1),this._childs.push(t),this.conchModel&&(this.conchModel.removeChild(t.conchModel),this.conchModel.addChildAt(t.conchModel,this._childs.length-1)),this._childChanged())}else t.parent&&t.parent.removeChild(t),this._childs===o.ARRAY_EMPTY&&(this._childs=[]),this._childs.push(t),this.conchModel&&this.conchModel.addChildAt(t.conchModel,this._childs.length-1),(t.parent=this)._childChanged();return t},e.addChildren=function(t){for(var e=arguments,i=0,n=e.length;i<n;)this.addChild(e[i++])},e.addChildAt=function(t,e){if(!t||this.destroyed||t===this)return t;if(t.zOrder&&this._set$P("hasZorder",!0),0<=e&&e<=this._childs.length){if(t._parent===this){var i=this.getChildIndex(t);this._childs.splice(i,1),this._childs.splice(e,0,t),this.conchModel&&(this.conchModel.removeChild(t.conchModel),this.conchModel.addChildAt(t.conchModel,e)),this._childChanged()}else t.parent&&t.parent.removeChild(t),this._childs===o.ARRAY_EMPTY&&(this._childs=[]),this._childs.splice(e,0,t),this.conchModel&&this.conchModel.addChildAt(t.conchModel,e),t.parent=this;return t}throw new Error("appendChildAt:The index is out of bounds")},e.getChildIndex=function(t){return this._childs.indexOf(t)},e.getChildByName=function(t){var e=this._childs;if(e)for(var i=0,n=e.length;i<n;i++){var s=e[i];if(s.name===t)return s}return null},e._get$P=function(t){return this._$P[t]},e._set$P=function(t,e){return this.destroyed||(this._$P===o.PROP_EMPTY&&(this._$P={}),this._$P[t]=e),e},e.getChildAt=function(t){return this._childs[t]},e.setChildIndex=function(t,e){var i=this._childs;if(e<0||e>=i.length)throw new Error("setChildIndex:The index is out of bounds.");var n=this.getChildIndex(t);if(n<0)throw new Error("setChildIndex:node is must child of this object.");return i.splice(n,1),i.splice(e,0,t),this.conchModel&&(this.conchModel.removeChild(t.conchModel),this.conchModel.addChildAt(t.conchModel,e)),this._childChanged(),t},e._childChanged=function(t){},e.removeChild=function(t){if(!this._childs)return t;var e=this._childs.indexOf(t);return this.removeChildAt(e)},e.removeSelf=function(){return this._parent&&this._parent.removeChild(this),this},e.removeChildByName=function(t){var e=this.getChildByName(t);return e&&this.removeChild(e),e},e.removeChildAt=function(t){var e=this.getChildAt(t);return e&&(this._childs.splice(t,1),this.conchModel&&this.conchModel.removeChild(e.conchModel),e.parent=null),e},e.removeChildren=function(t,e){if(void 0===t&&(t=0),void 0===e&&(e=2147483647),this._childs&&0<this._childs.length){var i=this._childs;if(0===t&&r<=e){var n=i;this._childs=o.ARRAY_EMPTY}else n=i.splice(t,e-t);for(var s=0,r=n.length;s<r;s++)n[s].parent=null,this.conchModel&&this.conchModel.removeChild(n[s].conchModel)}return this},e.replaceChild=function(t,e){var i=this._childs.indexOf(e);return-1<i?(this._childs.splice(i,1,t),this.conchModel&&(this.conchModel.removeChild(e.conchModel),this.conchModel.addChildAt(t.conchModel,i)),e.parent=null,t.parent=this,t):null},e._updateDisplayedInstage=function(){var t;t=this;var e=b.stage;for(this._displayedInStage=!1;t;){if(t._getBit(1)){this._displayedInStage=t._displayedInStage;break}if(t==e||t._displayedInStage){this._displayedInStage=!0;break}t=t.parent}},e._setDisplay=function(t){this._displayedInStage!==t&&((this._displayedInStage=t)?this.event("display"):this.event("undisplay"))},e._displayChild=function(t,e){var i=t._childs;if(i)for(var n=0,s=i.length;n<s;n++){var r=i[n];r._getBit(1)&&(0<r._childs.length?this._displayChild(r,e):r._setDisplay(e))}t._setDisplay(e)},e.contains=function(t){if(t===this)return!0;for(;t;){if(t.parent===this)return!0;t=t.parent}return!1},e.timerLoop=function(t,e,i,n,s,r){void 0===s&&(s=!0),void 0===r&&(r=!1),this.timer.loop(t,e,i,n,s,r)},e.timerOnce=function(t,e,i,n,s){void 0===s&&(s=!0),this.timer._create(!1,!1,t,e,i,n,s)},e.frameLoop=function(t,e,i,n,s){void 0===s&&(s=!0),this.timer._create(!0,!0,t,e,i,n,s)},e.frameOnce=function(t,e,i,n,s){void 0===s&&(s=!0),this.timer._create(!0,!1,t,e,i,n,s)},e.clearTimer=function(t,e){this.timer.clear(t,e)},u(0,e,"numChildren",function(){return this._childs.length}),u(0,e,"destroyed",function(){return this._destroyed}),u(0,e,"parent",function(){return this._parent},function(t){this._parent!==t&&(t?(this._parent=t,this.event("added"),this._getBit(1)&&(this._setUpNoticeChain(),t.displayedInStage&&this._displayChild(this,!0)),t._childChanged(this)):(this.event("removed"),this._parent._childChanged(),this._getBit(1)&&this._displayChild(this,!1),this._parent=t))}),u(0,e,"displayedInStage",function(){return this._getBit(1)||this._setUpNoticeType(1),this._displayedInStage}),o.ARRAY_EMPTY=[],o.PROP_EMPTY={},o.NOTICE_DISPLAY=1,o.MOUSEENABLE=2,o}(),et=function(t){function _(t){this._bgground=null,this._border=null,this._rect=null,this.underLine=0,this.lineHeight=0,_.__super.call(this),this._padding=_._PADDING,this._spacing=_._SPACING,this._aligns=_._ALIGNS,this._font=d.EMPTY,this._ower=t}p(_,"laya.display.css.CSSStyle",t);var e=_.prototype;return e.destroy=function(){this._ower=null,this._font=null,this._rect=null},e.inherit=function(t){this._font=t._font,this._spacing=t._spacing===_._SPACING?_._SPACING:t._spacing.slice(),this.lineHeight=t.lineHeight},e._widthAuto=function(){return 0!=(262144&this._type)},e.widthed=function(t){return 0!=(8&this._type)},e._calculation=function(t,e){if(e.indexOf("%")<0)return!1;var n=this._ower,s=n.parent,r=this._rect;function o(t,e,i){return t*i[0]+e*i[1]+i[2]}function i(t){var e=s.width,i=n.width;r.width&&(n.width=o(e,i,r.width)),r.height&&(n.height=o(e,i,r.height)),r.left&&(n.x=o(e,i,r.left)),r.top&&(n.y=o(e,i,r.top))}null===r&&(s._getCSSStyle()._type|=524288,s.on("resize",this,i),this._rect=r={input:{}});var a=e.split(" ");return a[0]=parseFloat(a[0])/100,1==a.length?a[1]=a[2]=0:(a[1]=parseFloat(a[1])/100,a[2]=parseFloat(a[2])),r[t]=a,r.input[t]=e,i(),!0},e.heighted=function(t){return 0!=(8192&this._type)},e.size=function(t,e){var i=this._ower,n=!1;-1!==t&&t!=this._ower.width&&(this._type|=8,this._ower.width=t,n=!0),-1!==e&&e!=this._ower.height&&(this._type|=8192,this._ower.height=e,n=!0),n&&(i._layoutLater(),524288&this._type&&i.event("resize",this))},e._getAlign=function(){return this._aligns[0]},e._getValign=function(){return this._aligns[1]},e._getCssFloat=function(){return 0!=(32768&this._type)?32768:0},e._createFont=function(){return 4096&this._type?this._font:(this._type|=4096,this._font=new d(this._font))},e.render=function(t,e,i,n){var s=t.width,r=t.height;i-=t.pivotX,n-=t.pivotY,this._bgground&&null!=this._bgground.color&&e.ctx.fillRect(i,n,s,r,this._bgground.color),this._border&&this._border.color&&e.drawRect(i,n,s,r,this._border.color.strColor,this._border.size)},e.getCSSStyle=function(){return this},e.cssText=function(t){this.attrs(_.parseOneCSS(t,";"))},e.attrs=function(t){if(t)for(var e=0,i=t.length;e<i;e++){var n=t[e];this[n[0]]=n[1]}},e.setTransform=function(t){"none"===t?this._tf=a._TF_EMPTY:this.attrs(_.parseOneCSS(t,","))},e.translate=function(t,e){this._tf===a._TF_EMPTY&&(this._tf=new s),this._tf.translateX=t,this._tf.translateY=e},e.scale=function(t,e){this._tf===a._TF_EMPTY&&(this._tf=new s),this._tf.scaleX=t,this._tf.scaleY=e},e._enableLayout=function(){return 0==(2&this._type)&&0==(4&this._type)},u(0,e,"block",t.prototype._$get_block,function(t){t?this._type|=1:this._type&=-2}),u(0,e,"valign",function(){return _._valigndef[this._aligns[1]]},function(t){this._aligns===_._ALIGNS&&(this._aligns=[0,0,0]),this._aligns[1]=_._valigndef[t]}),u(0,e,"height",null,function(t){if(this._type|=8192,"string"==typeof t){if(this._calculation("height",t))return;t=parseInt(t)}this.size(-1,t)}),u(0,e,"width",null,function(t){if(this._type|=8,"string"==typeof t){var e=t.indexOf("auto");if(0<=e&&(this._type|=262144,t=t.substr(0,e)),this._calculation("width",t))return;t=parseInt(t)}this.size(t,-1)}),u(0,e,"fontWeight",function(){return this._font.weight},function(t){this._createFont().weight=t}),u(0,e,"left",null,function(t){var e=this._ower;if("string"==typeof t){if("center"===t?t="50% -50% 0":"right"===t&&(t="100% -100% 0"),this._calculation("left",t))return;t=parseInt(t)}e.x=t}),u(0,e,"_translate",null,function(t){this.translate(t[0],t[1])}),u(0,e,"absolute",function(){return 0!=(4&this._type)}),u(0,e,"top",null,function(t){var e=this._ower;if("string"==typeof t){if("middle"===t?t="50% -50% 0":"bottom"===t&&(t="100% -100% 0"),this._calculation("top",t))return;t=parseInt(t)}e.y=t}),u(0,e,"align",function(){return _._aligndef[this._aligns[0]]},function(t){this._aligns===_._ALIGNS&&(this._aligns=[0,0,0]),this._aligns[0]=_._aligndef[t]}),u(0,e,"bold",function(){return this._font.bold},function(t){this._createFont().bold=t}),u(0,e,"padding",function(){return this._padding},function(t){this._padding=t}),u(0,e,"leading",function(){return this._spacing[1]},function(t){"string"==typeof t&&(t=parseInt(t+"")),this._spacing===_._SPACING&&(this._spacing=[0,0]),this._spacing[1]=t}),u(0,e,"lineElement",function(){return 0!=(65536&this._type)},function(t){t?this._type|=65536:this._type&=-65537}),u(0,e,"cssFloat",function(){return 0!=(32768&this._type)?"right":"left"},function(t){this.lineElement=!1,"right"===t?this._type|=32768:this._type&=-32769}),u(0,e,"textDecoration",function(){return this._font.decoration},function(t){this._createFont().decoration=t}),u(0,e,"whiteSpace",function(){return 131072&this._type?"nowrap":""},function(t){"nowrap"===t&&(this._type|=131072),"none"===t&&(this._type&=-131073)}),u(0,e,"background",null,function(t){t?(this._bgground||(this._bgground={}),this._bgground.color=t,this._ower.conchModel&&this._ower.conchModel.bgColor(t),this._type|=16384,this._ower._renderType|=256):this._bgground=null}),u(0,e,"wordWrap",function(){return 0==(131072&this._type)},function(t){t?this._type&=-131073:this._type|=131072}),u(0,e,"color",function(){return this._font.color},function(t){this._createFont().color=t}),u(0,e,"password",function(){return this._font.password},function(t){this._createFont().password=t}),u(0,e,"backgroundColor",function(){return this._bgground?this._bgground.color:null},function(t){"none"===t?this._bgground=null:(this._bgground||(this._bgground={}),this._bgground.color=t),this._ower.conchModel&&this._ower.conchModel.bgColor(t),this._ower._renderType|=256}),u(0,e,"font",function(){return this._font.toString()},function(t){this._createFont().set(t)}),u(0,e,"weight",null,function(t){this._createFont().weight=t}),u(0,e,"letterSpacing",function(){return this._spacing[0]},function(t){"string"==typeof t&&(t=parseInt(t+"")),this._spacing===_._SPACING&&(this._spacing=[0,0]),this._spacing[0]=t}),u(0,e,"fontSize",function(){return this._font.size},function(t){this._createFont().size=t}),u(0,e,"italic",function(){return this._font.italic},function(t){this._createFont().italic=t}),u(0,e,"fontFamily",function(){return this._font.family},function(t){this._createFont().family=t}),u(0,e,"stroke",function(){return this._font.stroke[0]},function(t){this._createFont().stroke===d._STROKE&&(this._font.stroke=[0,"#000000"]),this._font.stroke[0]=t}),u(0,e,"strokeColor",function(){return this._font.stroke[1]},function(t){this._createFont().stroke===d._STROKE&&(this._font.stroke=[0,"#000000"]),this._font.stroke[1]=t}),u(0,e,"border",function(){return this._border?this._border.value:""},function(t){if("none"!=t){this._border||(this._border={});var e=(this._border.value=t).split(" ");if(this._border.color=z.create(e[e.length-1]),1==e.length)return this._border.size=1,void(this._border.type="solid");var i=0;0<e[0].indexOf("px")?(this._border.size=parseInt(e[0]),i++):this._border.size=1,this._border.type=e[i],this._ower._renderType|=256}else this._border=null}),u(0,e,"borderColor",function(){return this._border&&this._border.color?this._border.color.strColor:null},function(t){t?(this._border||(this._border={size:1,type:"solid"}),this._border.color=null==t?null:z.create(t),this._ower.conchModel&&this._ower.conchModel.border(this._border.color.strColor),this._ower._renderType|=256):this._border=null}),u(0,e,"position",function(){return 4&this._type?"absolute":""},function(t){"absolute"==t?this._type|=4:this._type&=-5}),u(0,e,"display",null,function(t){switch(t){case"":this._type&=-3,this.visible=!0;break;case"none":this._type|=2,this.visible=!1,this._ower._layoutLater()}}),u(0,e,"paddingLeft",function(){return this.padding[3]}),u(0,e,"paddingTop",function(){return this.padding[0]}),u(0,e,"_scale",null,function(t){this._ower.scale(t[0],t[1])}),u(0,e,"_rotate",null,function(t){this._ower.rotation=t}),_.parseOneCSS=function(t,e){for(var i,n=[],s=t.split(e),r=0,o=s.length;r<o;r++){var a=s[r],h=a.indexOf(":"),l=a.substr(0,h).replace(/^\s+|\s+$/g,"");if(0!=l.length){var u=a.substr(h+1).replace(/^\s+|\s+$/g,""),c=[l,u];switch(l){case"italic":case"bold":c[1]="true"==u;break;case"line-height":c[0]="lineHeight",c[1]=parseInt(u);break;case"font-size":c[0]="fontSize",c[1]=parseInt(u);break;case"padding":1<(i=u.split(" ")).length||(i[1]=i[2]=i[3]=i[0]),c[1]=[parseInt(i[0]),parseInt(i[1]),parseInt(i[2]),parseInt(i[3])];break;case"rotate":c[0]="_rotate",c[1]=parseFloat(u);break;case"scale":i=u.split(" "),c[0]="_scale",c[1]=[parseFloat(i[0]),parseFloat(i[1])];break;case"translate":i=u.split(" "),c[0]="_translate",c[1]=[parseInt(i[0]),parseInt(i[1])];break;default:(c[0]=_._CSSTOVALUE[l])||(c[0]=l)}n.push(c)}}return n},_.parseCSS=function(t,e){for(var i;null!=(i=_._parseCSSRegExp.exec(t));)_.styleSheets[i[1]]=_.parseOneCSS(i[2],";")},_.EMPTY=new _(null),_._CSSTOVALUE={"letter-spacing":"letterSpacing","line-spacing":"lineSpacing","white-space":"whiteSpace","line-height":"lineHeight","scale-x":"scaleX","scale-y":"scaleY","translate-x":"translateX","translate-y":"translateY","font-family":"fontFamily","font-weight":"fontWeight","vertical-align":"valign","text-decoration":"textDecoration","background-color":"backgroundColor","border-color":"borderColor",float:"cssFloat"},_._parseCSSRegExp=new RegExp("([.#]\\w+)\\s*{([\\s\\S]*?)}","g"),_._aligndef={left:0,center:1,right:2,0:"left",1:"center",2:"right"},_._valigndef={top:0,middle:1,bottom:2,0:"top",1:"middle",2:"bottom"},_.styleSheets={},_.ALIGN_CENTER=1,_.ALIGN_RIGHT=2,_.VALIGN_MIDDLE=1,_.VALIGN_BOTTOM=2,_._CSS_BLOCK=1,_._DISPLAY_NONE=2,_._ABSOLUTE=4,_._WIDTH_SET=8,_._PADDING=[0,0,0,0],_._RECT=[-1,-1,-1,-1],_._SPACING=[0,0],_._ALIGNS=[0,0,0],_.ADDLAYOUTED=512,_._NEWFONT=4096,_._HEIGHT_SET=8192,_._BACKGROUND_SET=16384,_._FLOAT_RIGHT=32768,_._LINE_ELEMENT=65536,_._NOWARP=131072,_._WIDTHAUTO=262144,_._LISTERRESZIE=524288,_}(a),it=function(t){function o(){this.url=null,this.audio=null,this.loaded=!1,o.__super.call(this)}p(o,"laya.media.h5audio.AudioSound",l);var e=o.prototype;return e.dispose=function(){var t=o._audioCache[this.url];t&&(t.src="",delete o._audioCache[this.url])},e.load=function(t){var e;if(t=R.formatURL(t),(this.url=t)==E._tMusic?(o._initMusicAudio(),(e=o._musicAudio).src!=t&&(o._audioCache[e.src]=null,e=null)):e=o._audioCache[t],e&&2<=e.readyState)this.event("complete");else{e||(e=t==E._tMusic?(o._initMusicAudio(),o._musicAudio):B.createElement("audio"),(o._audioCache[t]=e).src=t),e.addEventListener("canplaythrough",n),e.addEventListener("error",s);var i=this;(this.audio=e).load?e.load():s()}function n(){r(),i.loaded=!0,i.event("complete")}function s(){e.load=null,r(),i.event("error")}function r(){e.removeEventListener("canplaythrough",n),e.removeEventListener("error",s)}},e.play=function(t,e){if(void 0===t&&(t=0),void 0===e&&(e=0),!this.url)return null;var i,n;if(!(i=this.url==E._tMusic?o._musicAudio:o._audioCache[this.url]))return null;n=$.getItem("audio:"+this.url),D.isConchApp?n||((n=B.createElement("audio")).src=this.url):this.url==E._tMusic?(o._initMusicAudio(),(n=o._musicAudio).src=this.url):n=n||i.cloneNode(!0);var s=new _t(n);return s.url=this.url,s.loops=e,s.startTime=t,s.play(),E.addChannel(s),s},u(0,e,"duration",function(){var t;return(t=o._audioCache[this.url])?t.duration:0}),o._initMusicAudio=function(){o._musicAudio||(o._musicAudio||(o._musicAudio=B.createElement("audio")),D.isConchApp||B.document.addEventListener("mousedown",o._makeMusicOK))},o._makeMusicOK=function(){B.document.removeEventListener("mousedown",o._makeMusicOK),o._musicAudio.src?o._musicAudio.play():(o._musicAudio.src="",o._musicAudio.load())},o._audioCache={},o._musicAudio=null,o}(),nt=function(t){function e(){this.url=null,this.loops=0,this.startTime=NaN,this.isStopped=!1,this.completeHandler=null,e.__super.call(this)}p(e,"laya.media.SoundChannel",l);var i=e.prototype;return i.play=function(){},i.stop=function(){},i.pause=function(){},i.resume=function(){},i.__runComplete=function(t){t&&t.run()},u(0,i,"volume",function(){return 1},function(t){}),u(0,i,"position",function(){return 0}),u(0,i,"duration",function(){return 0}),e}(),st=function(t){function e(){e.__super.call(this)}p(e,"laya.media.Sound",l);var i=e.prototype;return i.load=function(t){},i.play=function(t,e){return void 0===t&&(t=0),void 0===e&&(e=0),null},i.dispose=function(){},u(0,i,"duration",function(){return 0}),e}(),rt=function(t){function s(){this.url=null,this.loaded=!1,this.data=null,this.audioBuffer=null,this.__toPlays=null,this._disposed=!1,s.__super.call(this)}p(s,"laya.media.webaudio.WebAudioSound",l);var e=s.prototype;return e.load=function(t){var e=this;if(t=R.formatURL(t),this.url=t,this.audioBuffer=s._dataCache[t],this.audioBuffer)this._loaded(this.audioBuffer);else if(s.e.on("loaded:"+t,this,this._loaded),s.e.on("err:"+t,this,this._err),!s.__loadingSound[t]){s.__loadingSound[t]=!0;var i=new B.window.XMLHttpRequest;i.open("GET",t,!0),i.responseType="arraybuffer",i.onload=function(){e._disposed?e._removeLoadEvents():(e.data=i.response,s.buffs.push({buffer:e.data,url:e.url}),s.decode())},i.onerror=function(t){e._err()},i.send()}},e._err=function(){if(this._removeLoadEvents(),s.__loadingSound[this.url]=!1,this.event("error"),this.__toPlays){var t,e,i,n=0;for(t=(e=this.__toPlays).length,n=0;n<t;n++)(i=e[n])[2]&&!i[2].isStopped&&i[2].event("error");this.__toPlays.length=0}},e._loaded=function(t){this._removeLoadEvents(),this._disposed||(this.audioBuffer=t,s._dataCache[this.url]=this.audioBuffer,this.loaded=!0,this.event("complete"))},e._removeLoadEvents=function(){s.e.off("loaded:"+this.url,this,this._loaded),s.e.off("err:"+this.url,this,this._err)},e.__playAfterLoaded=function(){if(this.__toPlays){var t,e,i,n=0;for(t=(e=this.__toPlays).length,n=0;n<t;n++)(i=e[n])[2]&&!i[2].isStopped&&this.play(i[0],i[1],i[2]);this.__toPlays.length=0}},e.play=function(t,e,i){return void 0===t&&(t=0),void 0===e&&(e=0),i=i||new dt,this.audioBuffer||this.url&&(this.__toPlays||(this.__toPlays=[]),this.__toPlays.push([t,e,i]),this.once("complete",this,this.__playAfterLoaded),this.load(this.url)),i.url=this.url,i.loops=e,i.audioBuffer=this.audioBuffer,i.startTime=t,i.play(),E.addChannel(i),i},e.dispose=function(){this._disposed=!0,delete s._dataCache[this.url],delete s.__loadingSound[this.url],this.audioBuffer=null,this.data=null,this.__toPlays=[]},u(0,e,"duration",function(){return this.audioBuffer?this.audioBuffer.duration:0}),s.decode=function(){s.buffs.length<=0||s.isDecoding||(s.isDecoding=!0,s.tInfo=s.buffs.shift(),s.ctx.decodeAudioData(s.tInfo.buffer,s._done,s._fail))},s._done=function(t){s.e.event("loaded:"+s.tInfo.url,t),s.isDecoding=!1,s.decode()},s._fail=function(){s.e.event("err:"+s.tInfo.url,null),s.isDecoding=!1,s.decode()},s._playEmptySound=function(){if(null!=s.ctx){var t=s.ctx.createBufferSource();t.buffer=s._miniBuffer,t.connect(s.ctx.destination),t.start(0,0,0)}},s._unlock=function(){s._unlocked||(s._playEmptySound(),"running"==s.ctx.state&&(B.document.removeEventListener("mousedown",s._unlock,!0),B.document.removeEventListener("touchend",s._unlock,!0),B.document.removeEventListener("touchstart",s._unlock,!0),s._unlocked=!0))},s.initWebAudio=function(){"running"!=s.ctx.state&&(s._unlock(),B.document.addEventListener("mousedown",s._unlock,!0),B.document.addEventListener("touchend",s._unlock,!0),B.document.addEventListener("touchstart",s._unlock,!0))},s._dataCache={},s.buffs=[],s.isDecoding=!1,s._unlocked=!1,s.tInfo=null,s.__loadingSound={},h(s,["window",function(){return this.window=B.window},"webAudioEnabled",function(){return this.webAudioEnabled=s.window.AudioContext||s.window.webkitAudioContext||s.window.mozAudioContext},"ctx",function(){return this.ctx=s.webAudioEnabled?new(s.window.AudioContext||s.window.webkitAudioContext||s.window.mozAudioContext):void 0},"_miniBuffer",function(){return this._miniBuffer=s.ctx.createBuffer(1,1,22050)},"e",function(){return this.e=new l}]),s}(),ot=function(t){function e(){this._responseType=null,this._data=null,e.__super.call(this),this._http=new B.window.XMLHttpRequest}p(e,"laya.net.HttpRequest",l);var i=e.prototype;return i.send=function(t,e,i,n,s){void 0===i&&(i="get"),void 0===n&&(n="text"),this._responseType=n,this._data=null;var r=this,o=this._http;if(o.open(i,t,!0),s)for(var a=0;a<s.length;a++)o.setRequestHeader(s[a++],s[a]);else D.isConchApp||(e&&"string"!=typeof e?o.setRequestHeader("Content-Type","application/json"):o.setRequestHeader("Content-Type","application/x-www-form-urlencoded"));o.responseType="arraybuffer"!==n?"text":"arraybuffer",o.onerror=function(t){r._onError(t)},o.onabort=function(t){r._onAbort(t)},o.onprogress=function(t){r._onProgress(t)},o.onload=function(t){r._onLoad(t)},o.send(e)},i._onProgress=function(t){t&&t.lengthComputable&&this.event("progress",t.loaded/t.total)},i._onAbort=function(t){this.error("Request was aborted by user")},i._onError=function(t){this.error("Request failed Status:"+this._http.status+" text:"+this._http.statusText)},i._onLoad=function(t){var e=this._http,i=void 0!==e.status?e.status:200;200===i||204===i||0===i?this.complete():this.error("["+e.status+"]"+e.statusText+":"+e.responseURL)},i.error=function(t){this.clear(),this.event("error",t)},i.complete=function(){this.clear();var e=!0;try{"json"===this._responseType?this._data=JSON.parse(this._http.responseText):"xml"===this._responseType?this._data=q.parseXMLFromString(this._http.responseText):this._data=this._http.response||this._http.responseText}catch(t){e=!1,this.error(t.message)}e&&this.event("complete",this._data instanceof Array?[this._data]:this._data)},i.clear=function(){var t=this._http;t.onerror=t.onabort=t.onprogress=t.onload=null},u(0,i,"url",function(){return this._http.responseURL}),u(0,i,"http",function(){return this._http}),u(0,i,"data",function(){return this._data}),e}(),at=function(t){function S(){this._data=null,this._class=null,this._url=null,this._type=null,this._cache=!1,this._http=null,this._customParse=!1,S.__super.call(this)}p(S,"laya.net.Loader",l);var e=S.prototype;return e.load=function(t,e,i,n,s){if(void 0===i&&(i=!0),void 0===s&&(s=!1),0===(this._url=t).indexOf("data:image")?this._type=e="image":(this._type=e||(e=this.getTypeFromUrl(t)),t=R.formatURL(t)),this._cache=i,this._data=null,!s&&S.loadedMap[t])return this._data=S.loadedMap[t],this.event("progress",1),void this.event("complete",this._data);if(n&&S.setGroup(t,n),null!=S.parserMap[e])return this._customParse=!0,void(S.parserMap[e]instanceof laya.utils.Handler?S.parserMap[e].runWith(this):S.parserMap[e].call(null,this));if("image"===e||"htmlimage"===e||"nativeimage"===e)return this._loadImage(t);if("sound"===e)return this._loadSound(t);if("ttf"===e)return this._loadTTF(t);var r;switch(e){case"atlas":case"plf":r="json";break;case"font":r="xml";break;case"pkm":r="arraybuffer";break;default:r=e}S.preLoadedMap[t]?this.onLoaded(S.preLoadedMap[t]):(this._http||(this._http=new ot,this._http.on("progress",this,this.onProgress),this._http.on("error",this,this.onError),this._http.on("complete",this,this.onLoaded)),this._http.send(t,null,"get",r))},e.getTypeFromUrl=function(t){var e=q.getFileExtension(t);return e?S.typeMap[e]:(console.warn("Not recognize the resources suffix",t),"text")},e._loadTTF=function(t){t=R.formatURL(t);var e=new L;e.complete=v.create(this,this.onLoaded),e.load(t)},e._loadImage=function(e){e=R.formatURL(e);var i,t=this;function n(){i.onload=null,i.onerror=null,delete S.imgCache[e]}var s=function(){n(),t.onLoaded(i)},r=function(){n(),t.event("error","Load image failed")};"nativeimage"===this._type?((i=new B.window.Image).crossOrigin="",i.onload=s,i.onerror=r,i.src=e,S.imgCache[e]=i):new Tt.create(e,{onload:s,onerror:r,onCreate:function(t){i=t,S.imgCache[e]=t}})},e._loadSound=function(t){var e=new E._soundClass,i=this;function n(){e.offAll()}e.on("complete",this,function(){n(),i.onLoaded(e)}),e.on("error",this,function(){n(),e.dispose(),i.event("error","Load sound failed")}),e.load(t)},e.onProgress=function(t){"atlas"===this._type?this.event("progress",.3*t):this.event("progress",t)},e.onError=function(t){this.event("error",t)},e.onLoaded=function(t){var e=this._type;if("plf"==e)this.parsePLFData(t),this.complete(t);else if("image"===e){var i=new ut(t);i.url=this._url,this.complete(i)}else if("sound"===e||"htmlimage"===e||"nativeimage"===e)this.complete(t);else if("atlas"===e){if(!t.src&&!t._setContext){if(!this._data){if((this._data=t).meta&&t.meta.image)for(var n=t.meta.image.split(","),s=0<=this._url.indexOf("/")?"/":"\\",r=this._url.lastIndexOf(s),o=0<=r?this._url.substr(0,r+1):"",a=0,h=n.length;a<h;a++)n[a]=o+n[a];else n=[this._url.replace(".json",".png")];n.reverse(),t.toLoads=n,t.pics=[]}return this.event("progress",.3+1/n.length*.6),this._loadImage(n.pop())}if(this._data.pics.push(t),0<this._data.toLoads.length)return this.event("progress",.3+1/this._data.toLoads.length*.6),this._loadImage(this._data.toLoads.pop());var l=this._data.frames,u=this._url.split("?")[0],c=this._data.meta&&this._data.meta.prefix?this._data.meta.prefix:u.substring(0,u.lastIndexOf("."))+"/",_=this._data.pics,d=R.formatURL(this._url),f=S.atlasMap[d]||(S.atlasMap[d]=[]);f.dir=c;var p=1;if(this._data.meta&&this._data.meta.scale&&1!=this._data.meta.scale)for(var g in p=parseFloat(this._data.meta.scale),l){var m,v=l[g],y=_[v.frame.idx?v.frame.idx:0],w=R.formatURL(c+g);y.scaleRate=p,m=ut.create(y,v.frame.x,v.frame.y,v.frame.w,v.frame.h,v.spriteSourceSize.x,v.spriteSourceSize.y,v.sourceSize.w,v.sourceSize.h),S.cacheRes(w,m),m.url=w,f.push(w)}else for(g in l)y=_[(v=l[g]).frame.idx?v.frame.idx:0],w=R.formatURL(c+g),S.cacheRes(w,ut.create(y,v.frame.x,v.frame.y,v.frame.w,v.frame.h,v.spriteSourceSize.x,v.spriteSourceSize.y,v.sourceSize.w,v.sourceSize.h)),S.loadedMap[w].url=w,f.push(w);delete this._data.pics,this.complete(this._data)}else if("font"==e){if(!t.src)return this._data=t,this.event("progress",.5),this._loadImage(this._url.replace(".fnt",".png"));var x=new P;x.parseFont(this._data,t);var T=this._url.split(".fnt")[0].split("/"),b=T[T.length-1];gt.registerBitmapFont(b,x),this._data=x,this.complete(this._data)}else if("pkm"==e){var C=Tt.create(t,this._url),M=new ut(C);M.url=this._url,this.complete(M)}else this.complete(t)},e.parsePLFData=function(t){var e,i,n;for(e in t)switch(n=t[e],e){case"json":case"text":for(i in n)S.preLoadedMap[R.formatURL(i)]=n[i];break;default:for(i in n)S.preLoadedMap[R.formatURL(i)]=n[i]}},e.complete=function(t){this._data=t,this._customParse?this.event("loaded",t instanceof Array?[t]:t):(S._loaders.push(this),S._isWorking||S.checkNext())},e.endLoad=function(t){t&&(this._data=t),this._cache&&S.cacheRes(this._url,this._data),this.event("progress",1),this.event("complete",this.data instanceof Array?[this.data]:this.data)},u(0,e,"url",function(){return this._url}),u(0,e,"data",function(){return this._data}),u(0,e,"cache",function(){return this._cache}),u(0,e,"type",function(){return this._type}),S.checkNext=function(){S._isWorking=!0;for(var t=B.now();S._startIndex<S._loaders.length;)if(B.now(),S._loaders[S._startIndex].endLoad(),S._startIndex++,B.now()-t>S.maxTimeOut)return console.warn("loader callback cost a long time:"+(B.now()-t)+" url="+S._loaders[S._startIndex-1].url),void b.timer.frameOnce(1,null,S.checkNext);S._loaders.length=0,S._startIndex=0,S._isWorking=!1},S.clearRes=function(t,e){void 0===e&&(e=!1),t=R.formatURL(t);var i=S.getAtlas(t);if(i){for(var n=0,s=i.length;n<s;n++){var r=i[n],o=S.getRes(r);delete S.loadedMap[r],o&&o.destroy(e)}i.length=0,delete S.atlasMap[t],delete S.loadedMap[t]}else{var a=S.loadedMap[t];a&&(delete S.loadedMap[t],a instanceof laya.resource.Texture&&a.bitmap&&a.destroy(e))}},S.clearTextureRes=function(t){t=R.formatURL(t);var e=laya.net.Loader.getAtlas(t),i=e&&0<e.length?laya.net.Loader.getRes(e[0]):laya.net.Loader.getRes(t);i&&i.bitmap&&(D.isConchApp&&!D.isConchWebGL?i.bitmap.source.releaseTexture&&i.bitmap.source.releaseTexture():null==i.bitmap._atlaser&&i.bitmap.releaseResource(!0))},S.getRes=function(t){return S.loadedMap[R.formatURL(t)]},S.getAtlas=function(t){return S.atlasMap[R.formatURL(t)]},S.cacheRes=function(t,e){t=R.formatURL(t),null!=S.loadedMap[t]?console.warn("Resources already exist,is repeated loading:",t):S.loadedMap[t]=e},S.setGroup=function(t,e){S.groupMap[e]||(S.groupMap[e]=[]),S.groupMap[e].push(t)},S.clearResByGroup=function(t){if(S.groupMap[t]){var e=S.groupMap[t],i=0,n=e.length;for(i=0;i<n;i++)S.clearRes(e[i]);e.length=0}},S.TEXT="text",S.JSON="json",S.XML="xml",S.BUFFER="arraybuffer",S.IMAGE="image",S.SOUND="sound",S.ATLAS="atlas",S.FONT="font",S.TTF="ttf",S.PLF="plf",S.PKM="pkm",S.typeMap={png:"image",jpg:"image",jpeg:"image",txt:"text",json:"json",xml:"xml",als:"atlas",atlas:"atlas",mp3:"sound",ogg:"sound",wav:"sound",part:"json",fnt:"font",pkm:"pkm",ttf:"ttf",plf:"plf",ani:"json",sk:"arraybuffer"},S.parserMap={},S.groupMap={},S.maxTimeOut=100,S.loadedMap={},S.preLoadedMap={},S.atlasMap={},S._loaders=[],S._isWorking=!1,S._startIndex=0,S.imgCache={},S}(),ht=function(t){var _;function d(){this.retryNum=1,this.retryDelay=0,this.maxLoader=5,this._loaders=[],this._loaderCount=0,this._resInfos=[],this._infoPool=[],this._maxPriority=5,this._failRes={},d.__super.call(this);for(var t=0;t<this._maxPriority;t++)this._resInfos[t]=[]}p(d,"laya.net.LoaderManager",l);var e=d.prototype;return e.create=function(t,i,e,n,s,r,o,a){if(void 0===r&&(r=1),void 0===o&&(o=!0),t instanceof Array){var h=t,l=h.length,u=0;if(e)var c=v.create(e.caller,e.method,e.args,!1);for(var _=0;_<l;_++){var d=h[_];"string"==typeof d&&(d=h[_]={url:d}),d.progress=0}for(_=0;_<l;_++){d=h[_];var f=e?v.create(null,m,[d],!1):null,p=e||i?v.create(null,g,[d]):null;this._create(d.url,p,f,d.clas||n,d.params||s,d.priority||r,o,d.group||a)}function g(t,e){u++,t.progress=1,u===l&&i&&i.run()}function m(t,e){t.progress=e;for(var i=0,n=0;n<l;n++){i+=h[n].progress}var s=i/l;c.runWith(s)}return!0}return this._create(t,i,e,n,s,r,o,a)},e._create=function(e,i,t,n,s,r,o,a){void 0===r&&(r=1),void 0===o&&(o=!0);var h=R.formatURL(e),l=this.getRes(h);if(l)!l.hasOwnProperty("loaded")||l.loaded?(t&&t.runWith(1),i&&i.run()):i&&b.loader._createListener(e,i.caller,i.method,i.args,!0,!1);else{var u=q.getFileExtension(e),c=d.createMap[u];if(!c)throw new Error("LoaderManager:unknown file("+e+") extension with: "+u+".");n||(n=c[0]);var _=c[1];if("atlas"==u)this.load(e,i,t,_,r,o);else{n===ut&&(_="htmlimage"),(l=n?new n:null).hasOwnProperty("_loaded")&&(l._loaded=!1),l._setUrl(e),a&&l._setGroup(a),this._createLoad(l,e,v.create(null,function(t){l&&!l.destroyed&&t&&l.onAsynLoaded.call(l,e,t,s),i&&i.run();b.loader.event(e)}),t,_,r,!1,a,!0),o&&this.cacheRes(h,l)}}return l},e.load=function(t,e,i,n,s,r,o,a){var h=this;if(void 0===s&&(s=1),void 0===r&&(r=!0),void 0===a&&(a=!1),t instanceof Array)return this._loadAssets(t,e,i,n,s,r,o);var l=at.getRes(t);if(null!=l)b.timer.frameOnce(1,null,function(){i&&i.runWith(1),e&&e.runWith(l),h._loaderCount||h.event("complete")});else{var u=d._resMap[t];u?(e&&u._createListener("complete",e.caller,e.method,e.args,!1,!1),i&&u._createListener("progress",i.caller,i.method,i.args,!1,!1)):((u=this._infoPool.length?this._infoPool.pop():new _).url=t,u.type=n,u.cache=r,u.group=o,u.ignoreCache=a,e&&u.on("complete",e.caller,e.method,e.args),i&&u.on("progress",i.caller,i.method,i.args),d._resMap[t]=u,s=s<this._maxPriority?s:this._maxPriority-1,this._resInfos[s].push(u),this._next())}return this},e._createLoad=function(t,e,i,n,s,r,o,a,h){var l=this;if(void 0===r&&(r=1),void 0===o&&(o=!0),void 0===h&&(h=!1),e instanceof Array)return this._loadAssets(e,i,n,s,r,o,a);var u=at.getRes(e);if(null!=u)b.timer.frameOnce(1,null,function(){n&&n.runWith(1),i&&i.runWith(u),l._loaderCount||l.event("complete")});else{var c=d._resMap[e];c?(i&&c._createListener("complete",i.caller,i.method,i.args,!1,!1),n&&c._createListener("progress",n.caller,n.method,n.args,!1,!1)):((c=this._infoPool.length?this._infoPool.pop():new _).url=e,c.clas=t,c.type=s,c.cache=o,c.group=a,c.ignoreCache=h,i&&c.on("complete",i.caller,i.method,i.args),n&&c.on("progress",n.caller,n.method,n.args),d._resMap[e]=c,r=r<this._maxPriority?r:this._maxPriority-1,this._resInfos[r].push(c),this._next())}return this},e._next=function(){if(!(this._loaderCount>=this.maxLoader)){for(var t=0;t<this._maxPriority;t++)for(var e=this._resInfos[t];0<e.length;){var i=e.shift();if(i)return this._doLoad(i)}this._loaderCount||this.event("complete")}},e._doLoad=function(e){this._loaderCount++;var i=this._loaders.length?this._loaders.pop():new at;i.on("complete",null,s),i.on("progress",null,function(t){e.event("progress",t)}),i.on("error",null,function(t){s(null)});var n=this;function s(t){i.offAll(),i._data=null,i._customParse=!1,n._loaders.push(i),n._endLoad(e,t instanceof Array?[t]:t),n._loaderCount--,n._next()}i._class=e.clas,i.load(e.url,e.type,e.cache,e.group,e.ignoreCache)},e._endLoad=function(t,e){var i=t.url;if(null==e){var n=this._failRes[i]||0;if(n<this.retryNum)return console.warn("[warn]Retry to load:",i),this._failRes[i]=n+1,void b.timer.once(this.retryDelay,this,this._addReTry,[t],!1);console.warn("[error]Failed to load:",i),this.event("error",i)}this._failRes[i]&&(this._failRes[i]=0),delete d._resMap[i],t.event("complete",e),t.offAll(),this._infoPool.push(t)},e._addReTry=function(t){this._resInfos[this._maxPriority-1].push(t),this._next()},e.clearRes=function(t,e){void 0===e&&(e=!1),at.clearRes(t,e)},e.getRes=function(t){return at.getRes(t)},e.cacheRes=function(t,e){at.cacheRes(t,e)},e.clearTextureRes=function(t){at.clearTextureRes(t)},e.setGroup=function(t,e){at.setGroup(t,e)},e.clearResByGroup=function(t){at.clearResByGroup(t)},e.clearUnLoaded=function(){for(var t=0;t<this._maxPriority;t++){for(var e=this._resInfos[t],i=e.length-1;-1<i;i--){var n=e[i];n&&(n.offAll(),this._infoPool.push(n))}e.length=0}this._loaderCount=0,d._resMap={}},e.cancelLoadByUrls=function(t){if(t)for(var e=0,i=t.length;e<i;e++)this.cancelLoadByUrl(t[e])},e.cancelLoadByUrl=function(t){for(var e=0;e<this._maxPriority;e++)for(var i=this._resInfos[e],n=i.length-1;-1<n;n--){var s=i[n];s&&s.url===t&&(i[n]=null,s.offAll(),this._infoPool.push(s))}d._resMap[t]&&delete d._resMap[t]},e._loadAssets=function(t,i,o,e,n,s,r){void 0===n&&(n=1),void 0===s&&(s=!0);for(var a=t.length,h=0,l=0,u=[],c=!0,_=0;_<a;_++){var d=t[_];"string"==typeof d&&(d={url:d,type:e,size:1,priority:n}),d.size||(d.size=1),d.progress=0,l+=d.size,u.push(d);var f=o?v.create(null,m,[d],!1):null,p=i||o?v.create(null,g,[d]):null;this.load(d.url,p,f,d.type,d.priority||1,s,d.group||r)}function g(t,e){h++,t.progress=1,e||(c=!1),h===a&&i&&i.runWith(c)}function m(t,e){if(null!=o){t.progress=e;for(var i=0,n=0;n<u.length;n++){var s=u[n];i+=s.size*s.progress}var r=i/l;o.runWith(r)}}return this},d.cacheRes=function(t,e){at.cacheRes(t,e)},d._resMap={},h(d,["createMap",function(){return this.createMap={atlas:[null,"atlas"]}}]),d.__init$=function(){_=function(t){function e(){this.url=null,this.type=null,this.cache=!1,this.group=null,this.ignoreCache=!1,this.clas=null,e.__super.call(this)}return p(e,"",l),e}()},d}(),lt=(function(t){function s(t){s.__super.call(this),t||(t=[.3,.59,.11,0,0,.3,.59,.11,0,0,.3,.59,.11,0,0,0,0,0,1,0]),this._mat=new Float32Array(16),this._alpha=new Float32Array(4);for(var e=0,i=0,n=0;n<20;n++)n%5!=4?this._mat[e++]=t[n]:this._alpha[i++]=t[n];this._action=A.createFilterAction(32),this._action.data=this}p(s,"laya.filters.ColorFilter",m);var e=s.prototype;b.imps(e,{"laya.filters.IFilter":!0}),e.callNative=function(t){t._$P.cf=this;t.conchModel&&t.conchModel.setFilterMatrix&&t.conchModel.setFilterMatrix(this._mat,this._alpha)},u(0,e,"type",function(){return 32}),u(0,e,"action",function(){return this._action})}(),function(t){function n(t,e,i){this._endian=null,this._stamp=NaN,this._socket=null,this._connected=!1,this._addInputPosition=0,this._input=null,this._output=null,this.timeout=0,this.objectEncoding=0,this.disableInput=!1,this._byteClass=null,this.protocols=[],void 0===e&&(e=0),n.__super.call(this),this._byteClass=i||W,this.endian="bigEndian",this.timeout=2e4,this._addInputPosition=0,t&&0<e&&e<65535&&this.connect(t,e)}p(n,"laya.net.Socket",l);var e=n.prototype;e.connect=function(t,e){var i="ws://"+t+":"+e;i="https:"==B.window.location.protocol?"wss://"+t+":"+e:"ws://"+t+":"+e,this.connectByUrl(i)},e.connectByUrl=function(t){var e=this;null!=this._socket&&this.close(),this._socket&&this.cleanSocket(),this.protocols&&0!=this.protocols.length?this._socket=new B.window.WebSocket(t,this.protocols):this._socket=new B.window.WebSocket(t),this._socket.binaryType="arraybuffer",this._output=new this._byteClass,this._output.endian=this.endian,this._input=new this._byteClass,this._input.endian=this.endian,this._addInputPosition=0,this._socket.onopen=function(t){e._onOpen(t)},this._socket.onmessage=function(t){e._onMessage(t)},this._socket.onclose=function(t){e._onClose(t)},this._socket.onerror=function(t){e._onError(t)}},e.cleanSocket=function(){try{this._socket.close()}catch(t){}this._connected=!1,this._socket.onopen=null,this._socket.onmessage=null,this._socket.onclose=null,this._socket.onerror=null,this._socket=null},e.close=function(){if(null!=this._socket)try{this._socket.close()}catch(t){}},e._onOpen=function(t){this._connected=!0,this.event("open",t)},e._onMessage=function(t){if(t&&t.data){var e=t.data;if(this.disableInput&&e)this.event("message",e);else{0<this._input.length&&this._input.bytesAvailable<1&&(this._input.clear(),this._addInputPosition=0);var i=this._input.pos;!this._addInputPosition&&(this._addInputPosition=0),this._input.pos=this._addInputPosition,e&&("string"==typeof e?this._input.writeUTFBytes(e):this._input.writeArrayBuffer(e),this._addInputPosition=this._input.pos,this._input.pos=i),this.event("message",e)}}},e._onClose=function(t){this._connected=!1,this.event("close",t)},e._onError=function(t){this.event("error",t)},e.send=function(t){this._socket.send(t)},e.flush=function(){if(this._output&&0<this._output.length){var e;try{this._socket&&this._socket.send(this._output.__getBuffer().slice(0,this._output.length))}catch(t){e=t}this._output.endian=this.endian,this._output.clear(),e&&this.event("error",e)}},u(0,e,"input",function(){return this._input}),u(0,e,"output",function(){return this._output}),u(0,e,"connected",function(){return this._connected}),u(0,e,"endian",function(){return this._endian},function(t){this._endian=t,null!=this._input&&(this._input.endian=t),null!=this._output&&(this._output.endian=t)}),n.LITTLE_ENDIAN="littleEndian",n.BIG_ENDIAN="bigEndian"}(),function(t){function s(){this.worker=null,s.__super.call(this);var e=this;this.worker=new B.window.Worker(s.workerPath),this.worker.onmessage=function(t){e.workerMessage(t.data)}}p(s,"laya.net.WorkerLoader",l);var e=s.prototype;e.workerMessage=function(t){if(t)switch(t.type){case"Image":this.imageLoaded(t);break;case"Msg":this.event("image_msg",t.msg)}},e.imageLoaded=function(t){if(t&&t.buffer&&t.buffer.length<10)return s._enable=!1,this._myTrace("buffer lost when postmessage ,disable workerloader"),this.event(t.url,null),void this.event("image_err",t.url+"\n"+t.msg);if(!t.dataType)return this.event(t.url,null),void this.event("image_err",t.url+"\n"+t.msg);var e,i,n;switch(t.dataType){case"buffer":(n=(i=(e=new yt("2D")).source.getContext("2d")).createImageData(t.width,t.height)).data.set(t.buffer),e.size(n.width,n.height),i.putImageData(n,0,0),e.memorySize=0;break;case"imagedata":i=(e=new yt("2D")).source.getContext("2d"),n=t.imagedata,e.size(n.width,n.height),i.putImageData(n,0,0),n=t.imagedata,e.memorySize=0;break;case"imageBitmap":n=t.imageBitmap,D.isWebGL?e=n:(i=(e=new yt("2D")).source.getContext("2d"),e.size(n.width,n.height),i.drawImage(n,0,0),e.src=t.url)}D.isWebGL&&(e=new laya.webgl.resource.WebGLImage(e,t.url)),this.event(t.url,e)},e._myTrace=function(t){var e=arguments,i=[],n=0,s=e.length;for(n=0;n<s;n++)i.push(e[n]);this.event("image_msg",i.join(" "))},e.loadImage=function(t){var e;(e={type:"load"}).url=t,this.worker.postMessage(e)},e._loadImage=function(e){var i=this;if(!s._enable||e.toLowerCase().indexOf(".png")<0)s._preLoadFun.call(i,e);else{e=R.formatURL(e);var n=function(t){laya.net.WorkerLoader.I.off(e,i,n),t?i.onLoaded(t):s._preLoadFun.call(i,e)};laya.net.WorkerLoader.I.on(e,i,n),laya.net.WorkerLoader.I.loadImage(e)}},u(1,s,"enable",function(){return s._enable},function(t){s.disableJSDecode&&!B.window.createImageBitmap||(s._enable=t)&&null==s._preLoadFun&&(s._enable=s.__init__())}),s.__init__=function(){return null==s._preLoadFun&&(!!B.window.Worker&&(s._preLoadFun=at.prototype._loadImage,at.prototype._loadImage=s.prototype._loadImage,s.I||(s.I=new s),!0))},s.workerSupported=function(){return!!B.window.Worker},s.IMAGE_LOADED="image_loaded",s.IMAGE_ERR="image_err",s.IMAGE_MSG="image_msg",s.I=null,s._preLoadFun=null,s._enable=!1,s.workerPath="libs/worker.js",s.disableJSDecode=!0}(),function(t){function a(){a.__super.call(this),this._$1__id=++a._uniqueIDCounter,this.__loaded=!0,this._destroyed=!1,this._referenceCount=0,(a._idResourcesMap[this.id]=this)._released=!0,this.lock=!1,this._memorySize=0,this._lastUseFrameCount=-1,N.currentResourceManager&&N.currentResourceManager.addResource(this)}p(a,"laya.resource.Resource",l);var e=a.prototype;return b.imps(e,{"laya.resource.ICreateResource":!0,"laya.resource.IDispose":!0}),e._setUrl=function(t){var e;this._url!==t&&(this._url&&((e=a._urlResourcesMap[this._url]).splice(e.indexOf(this),1),0===e.length&&delete a._urlResourcesMap[this._url]),t&&((e=a._urlResourcesMap[t])||(a._urlResourcesMap[t]=e=[]),e.push(this)),this._url=t)},e._getGroup=function(){return this._group},e._setGroup=function(t){var e;this._group!==t&&(this._group&&((e=a._groupResourcesMap[this._group]).splice(e.indexOf(this),1),0===e.length&&delete a._groupResourcesMap[this._group]),t&&((e=a._groupResourcesMap[t])||(a._groupResourcesMap[t]=e=[]),e.push(this)),this._group=t)},e._addReference=function(){this._referenceCount++},e._removeReference=function(){this._referenceCount--},e._clearReference=function(){this._referenceCount=0},e._endLoaded=function(){this.__loaded=!0,this.event("loaded",this)},e.recreateResource=function(){this.completeCreate()},e.disposeResource=function(){},e.activeResource=function(t){void 0===t&&(t=!1),this._lastUseFrameCount=V.loopCount,!this._destroyed&&this.__loaded&&(this._released||t)&&this.recreateResource()},e.releaseResource=function(t){return void 0===t&&(t=!1),!(!t&&this.lock)&&(!(this._released&&!t)&&(this.disposeResource(),this._released=!0,this._lastUseFrameCount=-1,this.event("released",this),!0))},e.onAsynLoaded=function(t,e,i){throw new Error("Resource: must override this function!")},e.destroy=function(){var t;this._destroyed||(null!==this._resourceManager&&this._resourceManager.removeResource(this),this._destroyed=!0,this.lock=!1,this.releaseResource(),delete a._idResourcesMap[this.id],this._url&&((t=a._urlResourcesMap[this._url])&&(t.splice(t.indexOf(this),1),0===t.length&&delete a._urlResourcesMap[this.url]),at.clearRes(this._url),this.__loaded||A.cancelLoadByUrl(this._url)),this._group&&((t=a._groupResourcesMap[this._group]).splice(t.indexOf(this),1),0===t.length&&delete a._groupResourcesMap[this.url]))},e.completeCreate=function(){this._released=!1,this.event("recovered",this)},e.dispose=function(){this.destroy()},u(0,e,"memorySize",function(){return this._memorySize},function(t){var e=t-this._memorySize;this._memorySize=t,this.resourceManager&&this.resourceManager.addSize(e)}),u(0,e,"_loaded",null,function(t){this.__loaded=t}),u(0,e,"loaded",function(){return this.__loaded}),u(0,e,"id",function(){return this._$1__id}),u(0,e,"destroyed",function(){return this._destroyed}),u(0,e,"group",function(){return this._getGroup()},function(t){this._setGroup(t)}),u(0,e,"resourceManager",function(){return this._resourceManager}),u(0,e,"url",function(){return this._url}),u(0,e,"released",function(){return this._released}),u(0,e,"referenceCount",function(){return this._referenceCount}),a.getResourceByID=function(t){return a._idResourcesMap[t]},a.getResourceByURL=function(t,e){return void 0===e&&(e=0),a._urlResourcesMap[t][e]},a.getResourceCountByURL=function(t){return a._urlResourcesMap[t].length},a.destroyUnusedResources=function(t){var e;if(t){var i=a._groupResourcesMap[t];if(i)for(var n=i.slice(),s=0,r=n.length;s<r;s++)(e=n[s]).lock||0!==e._referenceCount||e.destroy()}else for(var o in a._idResourcesMap)(e=a._idResourcesMap[o]).lock||0!==e._referenceCount||e.destroy()},a._uniqueIDCounter=0,a._idResourcesMap={},a._urlResourcesMap={},a._groupResourcesMap={},a}()),ut=function(t){function S(t,e){this.offsetX=0,this.offsetY=0,this.sourceWidth=0,this.sourceHeight=0,this._w=0,this._h=0,this._uvID=0,this._atlasID=-1,this.scaleRate=1,S.__super.call(this),t&&null!=t._addReference&&t._addReference(),this.setTo(t,e)}p(S,"laya.resource.Texture",l);var e=S.prototype;return e._setUrl=function(t){this.url=t},e.setTo=function(t,e){if(t instanceof o.HTMLElement){var i=yt.create("2D",t);this.bitmap=i}else this.bitmap=t;if(this.uv=e||S.DEF_UV,t){this._w=t.width,this._h=t.height,this.sourceWidth=this.sourceWidth||this._w,this.sourceHeight=this.sourceHeight||this._h,this._loaded=0<this._w;var n=this;if(this._loaded)A.addToAtlas&&A.addToAtlas(n);else{var s=t;s instanceof laya.resource.HTMLImage&&s.image&&s.image.addEventListener("load",function(t){A.addToAtlas&&A.addToAtlas(n)},!1)}}},e.active=function(){this.bitmap&&this.bitmap.activeResource()},e.destroy=function(t){if(void 0===t&&(t=!1),this.bitmap&&0<this.bitmap.referenceCount){var e=this.bitmap;t?(D.isConchApp&&e.source&&e.source.conchDestroy&&this.bitmap.source.conchDestroy(),this.bitmap=null,e.dispose(),e._clearReference()):(e._removeReference(),0==e.referenceCount&&(D.isConchApp&&e.source&&e.source.conchDestroy&&this.bitmap.source.conchDestroy(),this.bitmap=null,e.dispose())),this.url&&this===b.loader.getRes(this.url)&&b.loader.clearRes(this.url,t),this._loaded=!1}},e.load=function(t){var e=this;this._loaded=!1,t=R.customFormat(t);var i=this.bitmap||(this.bitmap=Tt.create(t));i&&i._addReference();var n=this;i.onload=function(){i.onload=null,n._loaded=!0,e.sourceWidth=e._w=i.width,e.sourceHeight=e._h=i.height,n.event("loaded",this),A.addToAtlas&&A.addToAtlas(n)}},e.addTextureToAtlas=function(t){A.addTextureToAtlas(this)},e.getPixels=function(t,e,i,n){if(D.isConchApp){var s=this.bitmap;if(s.source&&s.source.getImageData){var r=s.source.getImageData(t,e,i,n),o=new Uint8Array(r);return Array.from(o)}return null}return D.isWebGL?A.getTexturePixels(this,t,e,i,n):(B.canvas.size(i,n),B.canvas.clear(),B.context.drawTexture(this,-t,-e,this.width,this.height,0,0),B.context.getImageData(0,0,i,n).data)},e.onAsynLoaded=function(t,e){e&&e._addReference(),this.setTo(e,this.uv)},u(0,e,"source",function(){return this.bitmap?(this.bitmap.activeResource(),this.bitmap.source):null}),u(0,e,"loaded",function(){return this._loaded}),u(0,e,"released",function(){return!this.bitmap||this.bitmap.released}),u(0,e,"width",function(){return this._w?this._w:this.uv&&this.uv!==S.DEF_UV?(this.uv[2]-this.uv[0])*this.bitmap.width:this.bitmap.width},function(t){this._w=t,this.sourceWidth||(this.sourceWidth=t)}),u(0,e,"repeat",function(){return!D.isWebGL||!this.bitmap||this.bitmap.repeat},function(t){t&&D.isWebGL&&this.bitmap&&(this.bitmap.repeat=t)&&(this.bitmap.enableMerageInAtlas=!1)}),u(0,e,"height",function(){return this._h?this._h:this.uv&&this.uv!==S.DEF_UV?(this.uv[5]-this.uv[1])*this.bitmap.height:this.bitmap.height},function(t){this._h=t,this.sourceHeight||(this.sourceHeight=t)}),u(0,e,"isLinearSampling",function(){return!D.isWebGL||9728!=this.bitmap.minFifter},function(t){!t&&D.isWebGL&&(t||-1!=this.bitmap.minFifter||-1!=this.bitmap.magFifter||(this.bitmap.minFifter=9728,this.bitmap.magFifter=9728,this.bitmap.enableMerageInAtlas=!1))}),S.moveUV=function(t,e,i){for(var n=0;n<8;n+=2)i[n]+=t,i[n+1]+=e;return i},S.create=function(t,e,i,n,s,r,o,a,h){void 0===r&&(r=0),void 0===o&&(o=0),void 0===a&&(a=0),void 0===h&&(h=0);var l=t instanceof laya.resource.Texture,u=l?t.uv:S.DEF_UV,c=l?t.bitmap:t,_=A.isAtlas(c);if(_){var d=c._atlaser,f=t._atlasID;if(-1==f)throw new Error("create texture error");c=d._inAtlasTextureBitmapValue[f],u=d._inAtlasTextureOriUVValue[f]}var p=new S(c,null);c.width&&e+n>c.width&&(n=c.width-e),c.height&&i+s>c.height&&(s=c.height-i),p.width=n,p.height=s,p.offsetX=r,p.offsetY=o,p.sourceWidth=a||n,p.sourceHeight=h||s;var g=1/c.width,m=1/c.height;e*=g,i*=m,n*=g,s*=m;var v=p.uv[0],y=p.uv[1],w=p.uv[4],x=p.uv[5],T=w-v,b=x-y,C=S.moveUV(u[0],u[1],[e,i,e+n,i,e+n,i+s,e,i+s]);p.uv=[v+C[0]*T,y+C[1]*b,w-(1-C[2])*T,y+C[3]*b,w-(1-C[4])*T,x-(1-C[5])*b,v+C[6]*T,x-(1-C[7])*b],_&&p.addTextureToAtlas();var M=c.scaleRate;return M&&1!=M?(p.sourceWidth/=M,p.sourceHeight/=M,p.width/=M,p.height/=M,p.scaleRate=M,p.offsetX/=M,p.offsetY/=M):p.scaleRate=1,p},S.createFromTexture=function(t,e,i,n,s){var r=t.scaleRate;1!=r&&(e*=r,i*=r,n*=r,s*=r);var o=M.TEMP.setTo(e-t.offsetX,i-t.offsetY,n,s),a=o.intersection(S._rect1.setTo(0,0,t.width,t.height),S._rect2);if(!a)return null;var h=S.create(t,a.x,a.y,a.width,a.height,a.x-o.x,a.y-o.y,n,s);return h.bitmap._removeReference(),h},S.DEF_UV=[0,0,1,0,1,1,0,1],S.INV_UV=[0,1,1,1,1,0,0,0],S._rect1=new M,S._rect2=new M,S}(),t=function(t){var a;function r(){this._labelDic=null,this._tweenDic={},this._tweenDataList=[],this._endTweenDataList=null,this._currTime=0,this._lastTime=0,this._startTime=0,this._index=0,this._gidIndex=0,this._firstTweenDic={},this._startTimeSort=!1,this._endTimeSort=!1,this._loopKey=!1,this.scale=1,this._frameRate=60,this._frameIndex=0,this._total=0,r.__super.call(this)}p(r,"laya.utils.TimeLine",l);var e=r.prototype;return e.to=function(t,e,i,n,s){return void 0===s&&(s=0),this._create(t,e,i,n,s,!0)},e.from=function(t,e,i,n,s){return void 0===s&&(s=0),this._create(t,e,i,n,s,!1)},e._create=function(t,e,i,n,s,r){var o=$.getItemByClass("tweenData",a);return o.isTo=r,o.type=0,o.target=t,o.duration=i,o.data=e,o.startTime=this._startTime+s,o.endTime=o.startTime+o.duration,o.ease=n,this._startTime=Math.max(o.endTime,this._startTime),this._tweenDataList.push(o),this._startTimeSort=!0,this._endTimeSort=!0,this},e.addLabel=function(t,e){var i=$.getItemByClass("tweenData",a);return i.type=1,i.data=t,i.endTime=i.startTime=this._startTime+e,this._labelDic||(this._labelDic={}),this._labelDic[t]=i,this._tweenDataList.push(i),this},e.removeLabel=function(t){if(this._labelDic&&this._labelDic[t]){var e=this._labelDic[t];if(e){var i=this._tweenDataList.indexOf(e);-1<i&&this._tweenDataList.splice(i,1)}delete this._labelDic[t]}},e.gotoTime=function(t){if(null!=this._tweenDataList&&0!=this._tweenDataList.length){var e,i,n,s;for(var r in this._firstTweenDic)if(i=this._firstTweenDic[r])for(var o in i)i.diyTarget.hasOwnProperty(o)&&(i.diyTarget[o]=i[o]);for(r in this._tweenDic)(e=this._tweenDic[r]).clear(),delete this._tweenDic[r];if(this._index=0,this._gidIndex=0,this._currTime=t,this._lastTime=B.now(),null==this._endTweenDataList||this._endTimeSort){this._endTimeSort=!1,this._endTweenDataList=n=this._tweenDataList.concat(),n.sort(function(t,e){return t.endTime>e.endTime?1:t.endTime<e.endTime?-1:0})}else n=this._endTweenDataList;for(var a=0,h=n.length;a<h;a++)if(0==(s=n[a]).type){if(!(t>=s.endTime))break;this._index=Math.max(this._index,a+1);var l=s.data;if(s.isTo)for(var u in l)s.target[u]=l[u]}for(a=0,h=this._tweenDataList.length;a<h;a++)0==(s=this._tweenDataList[a]).type&&t>=s.startTime&&t<s.endTime&&(this._index=Math.max(this._index,a+1),this._gidIndex++,(e=$.getItemByClass("tween",K))._create(s.target,s.data,s.duration,s.ease,v.create(this,this._animComplete,[this._gidIndex]),0,!1,s.isTo,!0,!1),e.setStartTime(this._currTime-(t-s.startTime)),e._updateEase(this._currTime),e.gid=this._gidIndex,this._tweenDic[this._gidIndex]=e)}},e.gotoLabel=function(t){if(null!=this._labelDic){var e=this._labelDic[t];e&&this.gotoTime(e.startTime)}},e.pause=function(){b.timer.clear(this,this._update)},e.resume=function(){this.play(this._currTime,this._loopKey)},e.play=function(t,e){if(void 0===t&&(t=0),void 0===e&&(e=!1),this._tweenDataList){if(this._startTimeSort){this._startTimeSort=!1,this._tweenDataList.sort(function(t,e){return t.startTime>e.startTime?1:t.startTime<e.startTime?-1:0});for(var i=0,n=this._tweenDataList.length;i<n;i++){var s=this._tweenDataList[i];if(null!=s&&0==s.type){var r=s.target,o=r.$_GID||(r.$_GID=q.getGID()),a=null;for(var h in null==this._firstTweenDic[o]?((a={}).diyTarget=r,this._firstTweenDic[o]=a):a=this._firstTweenDic[o],s.data)null==a[h]&&(a[h]=r[h])}}}"string"==typeof t?this.gotoLabel(t):this.gotoTime(t),this._loopKey=e,this._lastTime=B.now(),b.timer.frameLoop(1,this,this._update)}},e._update=function(){if(this._currTime>=this._startTime){if(!this._loopKey){for(var t in this._tweenDic)(e=this._tweenDic[t]).complete();return this._complete(),void this.pause()}if(this._complete(),!this._tweenDataList)return;this.gotoTime(0)}var e,i=B.now(),n=i-this._lastTime,s=this._currTime+=n*this.scale;for(t in this._lastTime=i,this._tweenDic)(e=this._tweenDic[t])._updateEase(s);if(0!=this._tweenDataList.length&&this._index<this._tweenDataList.length){var r=this._tweenDataList[this._index];s>=r.startTime&&(this._index++,0==r.type?(this._gidIndex++,(e=$.getItemByClass("tween",K))._create(r.target,r.data,r.duration,r.ease,v.create(this,this._animComplete,[this._gidIndex]),0,!1,r.isTo,!0,!1),e.setStartTime(s),e.gid=this._gidIndex,(this._tweenDic[this._gidIndex]=e)._updateEase(s)):this.event("label",r.data))}},e._animComplete=function(t){this._tweenDic[t]&&delete this._tweenDic[t]},e._complete=function(){this.event("complete")},e.reset=function(){var t;if(this._labelDic)for(t in this._labelDic)delete this._labelDic[t];for(t in this._tweenDic)this._tweenDic[t].clear(),delete this._tweenDic[t];for(t in this._firstTweenDic)delete this._firstTweenDic[t];if(this._endTweenDataList=null,this._tweenDataList&&this._tweenDataList.length){var e,i=0;for(e=this._tweenDataList.length,i=0;i<e;i++)this._tweenDataList[i]&&this._tweenDataList[i].destroy()}this._tweenDataList.length=0,this._currTime=0,this._lastTime=0,this._startTime=0,this._index=0,this._gidIndex=0,this.scale=1,b.timer.clear(this,this._update)},e.destroy=function(){this.reset(),this._labelDic=null,this._tweenDic=null,this._tweenDataList=null,this._firstTweenDic=null},u(0,e,"index",function(){return this._frameIndex},function(t){this._frameIndex=t,this.gotoTime(this._frameIndex/this._frameRate*1e3)}),u(0,e,"total",function(){return this._total=Math.floor(this._startTime/1e3*this._frameRate),this._total}),r.to=function(t,e,i,n,s){return void 0===s&&(s=0),(new r).to(t,e,i,n,s)},r.from=function(t,e,i,n,s){return void 0===s&&(s=0),(new r).from(t,e,i,n,s)},r.__init$=function(){a=function(){function t(){this.type=0,this.isTo=!0,this.startTime=NaN,this.endTime=NaN,this.target=null,this.duration=NaN,this.ease=null,this.data=null}return p(t,""),t.prototype.destroy=function(){this.target=null,this.ease=null,this.data=null,this.isTo=!0,this.type=0,$.recover("tweenData",this)},t}()},r}(),ct=function(s){function i(){this._transform=null,this._tfChanged=!1,this._x=0,this._y=0,this._width=0,this._height=0,this._repaint=1,this._mouseEnableState=0,this._zOrder=0,this._graphics=null,this._renderType=0,this._optimizeScrollRect=!1,this._texture=null,this.mouseThrough=!1,this.autoSize=!1,this.hitTestPrior=!1,this.viewport=null,i.__super.call(this),this._style=a.EMPTY}p(i,"laya.display.Sprite",s);var t=i.prototype;return b.imps(t,{"laya.display.ILayout":!0}),t.createConchModel=function(){return new ConchNode},t.destroy=function(t){void 0===t&&(t=!0),this._releaseMem(),s.prototype.destroy.call(this,t),this._style&&this._style.destroy(),this._transform&&this._transform.destroy(),this._transform=null,this._style=null,this._graphics=null},t.updateZOrder=function(){q.updateOrder(this._childs)&&this.repaint()},t.reCache=function(){this._$P.cacheCanvas&&(this._$P.cacheCanvas.reCache=!0),this._repaint=1},t.setBounds=function(t){this._set$P("uBounds",t)},t.getBounds=function(){return this._$P.mBounds||this._set$P("mBounds",new M),M._getWrapRec(this._boundPointsToParent(),this._$P.mBounds)},t.getSelfBounds=function(){return this._$P.uBounds?this._$P.uBounds:(this._$P.mBounds||this._set$P("mBounds",new M),M._getWrapRec(this._getBoundPointsM(!1),this._$P.mBounds))},t._boundPointsToParent=function(t){void 0===t&&(t=!1);var e=0,i=0;this._style&&(e=this._style._tf.translateX,i=this._style._tf.translateY,t=t||0!==this._style._tf.rotate,this._style.scrollRect&&(e+=this._style.scrollRect.x,i+=this._style.scrollRect.y));var n=this._getBoundPointsM(t);if(!n||n.length<1)return n;if(8!=n.length&&(n=t?x.scanPList(n):M._getWrapRec(n,M.TEMP)._getBoundPoints()),!this.transform)return q.transPointList(n,this._x-e,this._y-i),n;var s=C.TEMP,r=0,o=n.length;for(r=0;r<o;r+=2)s.x=n[r],s.y=n[r+1],this.toParentPoint(s),n[r]=s.x,n[r+1]=s.y;return n},t.getGraphicBounds=function(t){return void 0===t&&(t=!1),this._graphics?this._graphics.getBounds(t):M.TEMP.setTo(0,0,0,0)},t._getBoundPointsM=function(t){if(void 0===t&&(t=!1),this._$P.uBounds)return this._$P.uBounds._getBoundPoints();if(this._$P.temBM||this._set$P("temBM",[]),this.scrollRect){var e=q.clearArray(this._$P.temBM),i=M.TEMP;return i.copyFrom(this.scrollRect),q.concatArray(e,i._getBoundPoints()),e}for(var n,s,r,o=this._graphics?this._graphics.getBoundPoints():q.clearArray(this._$P.temBM),a=0,h=(r=this._childs).length;a<h;a++)(n=r[a])instanceof laya.display.Sprite&&1==n.visible&&(s=n._boundPointsToParent(t))&&(o=o?q.concatArray(o,s):s);return o},t.getStyle=function(){return this._style===a.EMPTY&&(this._style=new a),this._style},t.setStyle=function(t){this._style=t},t._adjustTransform=function(){this._tfChanged=!1;var t,e=this._style._tf,i=e.scaleX,n=e.scaleY;if(e.rotate||1!==i||1!==n||e.skewX||e.skewY){(t=this._transform||(this._transform=I.create())).bTransform=!0;var s=.0174532922222222*(e.rotate-e.skewX),r=.0174532922222222*(e.rotate+e.skewY),o=Math.cos(r),a=Math.sin(r),h=Math.sin(s),l=Math.cos(s);return t.a=i*o,t.b=i*a,t.c=-n*h,t.d=n*l,t.tx=t.ty=0,t}return this._transform&&this._transform.destroy(),this._transform=null,this._renderType&=-5,t},t.pos=function(t,e,i){if(void 0===i&&(i=!1),this._x!==t||this._y!==e){if(this.destroyed)return this;if(i){this._x=t,this._y=e,this.conchModel&&this.conchModel.pos(this._x,this._y);var n=this._parent;n&&0===n._repaint&&(n._repaint=1,n.parentRepaint()),this._$P.maskParent&&0===this._$P.maskParent._repaint&&(this._$P.maskParent._repaint=1,this._$P.maskParent.parentRepaint())}else this.x=t,this.y=e}return this},t.pivot=function(t,e){return this.pivotX=t,this.pivotY=e,this},t.size=function(t,e){return this.width=t,this.height=e,this},t.scale=function(t,e,i){void 0===i&&(i=!1);var n=this.getStyle(),s=n._tf;if(s.scaleX!=t||s.scaleY!=e){if(this.destroyed)return this;if(i){n.setScale(t,e),this._tfChanged=!0,this.conchModel&&this.conchModel.scale(t,e),this._renderType|=4;var r=this._parent;r&&0===r._repaint&&(r._repaint=1,r.parentRepaint())}else this.scaleX=t,this.scaleY=e}return this},t.skew=function(t,e){return this.skewX=t,this.skewY=e,this},t.render=function(t,e,i){V.spriteCount++,k.renders[this._renderType]._fun(this,t,e+this._x,i+this._y),this._repaint=0},t.drawToCanvas=function(t,e,i,n){if(D.isConchNode){var s=yt.create("2D");return new F(t,e,s).ctx.setCanvasType(1),this.conchModel.drawToCanvas(s.source,i,n),s}return A.drawToCanvas(this,this._renderType,t,e,i,n)},t.customRender=function(t,e,i){this._renderType|=1024},t._applyFilters=function(){var t;if(!D.isWebGL&&((t=this._$P.filters)&&!(t.length<1)))for(var e=0,i=t.length;e<i;e++)t[e].action.apply(this._$P.cacheCanvas)},t._isHaveGlowFilter=function(){var t,e=0;if(this.filters)for(e=0;e<this.filters.length;e++)if(8==this.filters[e].type)return!0;for(e=0,t=this._childs.length;e<t;e++)if(this._childs[e]._isHaveGlowFilter())return!0;return!1},t.localToGlobal=function(t,e){void 0===e&&(e=!1),!0===e&&(t=new C(t.x,t.y));for(var i=this;i&&i!=b.stage;)t=i.toParentPoint(t),i=i.parent;return t},t.globalToLocal=function(t,e){void 0===e&&(e=!1),e&&(t=new C(t.x,t.y));for(var i=this,n=[];i&&i!=b.stage;)n.push(i),i=i.parent;for(var s=n.length-1;0<=s;)t=(i=n[s]).fromParentPoint(t),s--;return t},t.toParentPoint=function(t){if(!t)return t;t.x-=this.pivotX,t.y-=this.pivotY,this.transform&&this._transform.transformPoint(t),t.x+=this._x,t.y+=this._y;var e=this._style.scrollRect;return e&&(t.x-=e.x,t.y-=e.y),t},t.fromParentPoint=function(t){if(!t)return t;t.x-=this._x,t.y-=this._y;var e=this._style.scrollRect;return e&&(t.x+=e.x,t.y+=e.y),this.transform&&this._transform.invertTransformPoint(t),t.x+=this.pivotX,t.y+=this.pivotY,t},t.on=function(t,e,i,n){return 1!==this._mouseEnableState&&this.isMouseEvent(t)?(this.mouseEnabled=!0,this._setBit(2,!0),this._parent&&this._$2__onDisplay(),this._createListener(t,e,i,n,!1)):s.prototype.on.call(this,t,e,i,n)},t.once=function(t,e,i,n){return 1!==this._mouseEnableState&&this.isMouseEvent(t)?(this.mouseEnabled=!0,this._setBit(2,!0),this._parent&&this._$2__onDisplay(),this._createListener(t,e,i,n,!0)):s.prototype.once.call(this,t,e,i,n)},t._$2__onDisplay=function(){if(1!==this._mouseEnableState){var t=this;for(t=t.parent;t&&1!==t._mouseEnableState&&!t._getBit(2);)t.mouseEnabled=!0,t._setBit(2,!0),t=t.parent}},t.loadImage=function(t,e,i,n,s,r){var o=this;return void 0===e&&(e=0),void 0===i&&(i=0),void 0===n&&(n=0),void 0===s&&(s=0),this.graphics.loadImage(t,e,i,n,s,function(t){o.destroyed||(o.size(e+(n||t.width),i+(s||t.height)),o.repaint(),r&&r.runWith(t))}),this},t.repaint=function(){this.conchModel&&this.conchModel.repaint&&this.conchModel.repaint(),0===this._repaint&&(this._repaint=1,this.parentRepaint()),this._$P&&this._$P.maskParent&&this._$P.maskParent.repaint()},t._needRepaint=function(){return 0!==this._repaint&&this._$P.cacheCanvas&&this._$P.cacheCanvas.reCache},t._childChanged=function(t){this._childs.length?this._renderType|=2048:this._renderType&=-2049,t&&this._get$P("hasZorder")&&b.timer.callLater(this,this.updateZOrder),this.repaint()},t.parentRepaint=function(){var t=this._parent;t&&0===t._repaint&&(t._repaint=1,t.parentRepaint())},t.startDrag=function(t,e,i,n,s,r,o){void 0===e&&(e=!1),void 0===i&&(i=0),void 0===n&&(n=300),void 0===r&&(r=!1),void 0===o&&(o=.92),this._$P.dragging||this._set$P("dragging",new H),this._$P.dragging.start(this,t,e,i,n,s,r,o)},t.stopDrag=function(){this._$P.dragging&&this._$P.dragging.stop()},t._releaseMem=function(){if(this._$P){var t=this._$P.cacheCanvas;t&&t.ctx&&($.recover("RenderContext",t.ctx),t.ctx.canvas.size(0,0),t.ctx=null);var e=this._$P._filterCache;e&&(e.destroy(),e.recycle(),this._set$P("_filterCache",null)),this._$P._isHaveGlowFilter&&this._set$P("_isHaveGlowFilter",!1),this._$P._isHaveGlowFilter=null}},t._setDisplay=function(t){t||this._releaseMem(),s.prototype._setDisplay.call(this,t)},t.hitTestPoint=function(t,e){var i=this.globalToLocal(C.TEMP.setTo(t,e));return t=i.x,e=i.y,(this._$P.hitArea?this._$P.hitArea:0<this._width&&0<this._height?M.TEMP.setTo(0,0,this._width,this._height):this.getSelfBounds()).contains(t,e)},t.getMousePoint=function(){return this.globalToLocal(C.TEMP.setTo(b.stage.mouseX,b.stage.mouseY))},t._getWords=function(){return null},t._addChildsToLayout=function(n){var t=this._getWords();if(null==t&&0==this._childs.length)return!1;if(t)for(var e=0,i=t.length;e<i;e++)n.push(t[e]);return this._childs.forEach(function(t,e,i){t._style._enableLayout()&&t._addToLayout(n)}),!0},t._addToLayout=function(t){this._style.absolute||(this._style.block?t.push(this):this._addChildsToLayout(t)&&(this.x=this.y=0))},t._isChar=function(){return!1},t._getCSSStyle=function(){return this._style.getCSSStyle()},t._setAttributes=function(t,e){switch(t){case"x":this.x=parseFloat(e);break;case"y":this.y=parseFloat(e);break;case"width":this.width=parseFloat(e);break;case"height":this.height=parseFloat(e);break;default:this[t]=e}},t._layoutLater=function(){this.parent&&this.parent._layoutLater()},u(0,t,"optimizeScrollRect",function(){return this._optimizeScrollRect},function(t){this._optimizeScrollRect!=t&&(this._optimizeScrollRect=t,this.conchModel&&this.conchModel.optimizeScrollRect(t))}),u(0,t,"customRenderEnable",null,function(t){if(t&&(this._renderType|=1024,D.isConchNode)){i.CustomList.push(this);var e=new yt("2d");e._setContext(new CanvasRenderingContext2D),this.customContext=new F(0,0,e),e.context.setCanvasType&&e.context.setCanvasType(2),this.conchModel.custom(e.context)}}),u(0,t,"cacheAsBitmap",function(){return"none"!==this.cacheAs},function(t){this.cacheAs=t?this._$P.hasFilter?"none":"normal":"none"}),u(0,t,"cacheAs",function(){return null==this._$P.cacheCanvas?"none":this._$P.cacheCanvas.type},function(t){var e=this._$P.cacheCanvas;if(t!==(e?e.type:"none")){if("none"!==t)this._getBit(1)||this._setUpNoticeType(1),e||(e=this._set$P("cacheCanvas",$.getItemByClass("cacheCanvas",Object))),e.type=t,e.reCache=!0,this._renderType|=16,"bitmap"==t&&this.conchModel&&this.conchModel.cacheAs(1),this._set$P("cacheForFilters",!1);else if(this._$P._mask);else if(this._$P.hasFilter)this._set$P("cacheForFilters",!0);else{if(e){var i=e;i&&i.ctx&&($.recover("RenderContext",i.ctx),i.ctx.canvas.size(0,0),i.ctx=null),$.recover("cacheCanvas",e)}this._$P.cacheCanvas=null,this._renderType&=-17,this.conchModel&&this.conchModel.cacheAs(0)}this.repaint()}}),u(0,t,"zOrder",function(){return this._zOrder},function(t){this._zOrder!=t&&(this._zOrder=t,this.conchModel&&this.conchModel.setZOrder&&this.conchModel.setZOrder(t),this._parent&&(t&&this._parent._set$P("hasZorder",!0),b.timer.callLater(this._parent,this.updateZOrder)))}),u(0,t,"rotation",function(){return this._style._tf.rotate},function(t){var e=this.getStyle();if(e._tf.rotate!==t){e.setRotate(t),this._tfChanged=!0,this.conchModel&&this.conchModel.rotate(t),this._renderType|=4;var i=this._parent;i&&0===i._repaint&&(i._repaint=1,i.parentRepaint())}}),u(0,t,"width",function(){return this.autoSize?this.getSelfBounds().width:this._width},function(t){this._width!==t&&(this._width=t,this.conchModel&&this.conchModel.size(t,this._height),this.repaint())}),u(0,t,"x",function(){return this._x},function(t){if(this._x!==t){if(this.destroyed)return;this._x=t,this.conchModel&&this.conchModel.pos(t,this._y);var e=this._parent;e&&0===e._repaint&&(e._repaint=1,e.parentRepaint()),this._$P.maskParent&&0===this._$P.maskParent._repaint&&(this._$P.maskParent._repaint=1,this._$P.maskParent.parentRepaint())}}),u(0,t,"globalScaleY",function(){for(var t=1,e=this;e&&e!==b.stage;)t*=e.scaleY,e=e.parent;return t}),u(0,t,"hitArea",function(){return this._$P.hitArea},function(t){this._set$P("hitArea",t)}),u(0,t,"staticCache",function(){return this._$P.staticCache},function(t){this._set$P("staticCache",t),t||this.reCache()}),u(0,t,"texture",function(){return this._texture},function(t){this._texture!=t&&(this._texture=t,this.graphics.cleanByTexture(t,0,0))}),u(0,t,"y",function(){return this._y},function(t){if(this._y!==t){if(this.destroyed)return;this._y=t,this.conchModel&&this.conchModel.pos(this._x,t);var e=this._parent;e&&0===e._repaint&&(e._repaint=1,e.parentRepaint()),this._$P.maskParent&&0===this._$P.maskParent._repaint&&(this._$P.maskParent._repaint=1,this._$P.maskParent.parentRepaint())}}),u(0,t,"height",function(){return this.autoSize?this.getSelfBounds().height:this._height},function(t){this._height!==t&&(this._height=t,this.conchModel&&this.conchModel.size(this._width,t),this.repaint())}),u(0,t,"blendMode",function(){return this._style.blendMode},function(t){this.getStyle().blendMode=t,this.conchModel&&this.conchModel.blendMode(t),t&&"source-over"!=t?this._renderType|=8:this._renderType&=-9,this.parentRepaint()}),u(0,t,"scaleX",function(){return this._style._tf.scaleX},function(t){var e=this.getStyle();if(e._tf.scaleX!==t){e.setScaleX(t),this._tfChanged=!0,this.conchModel&&this.conchModel.scale(t,e._tf.scaleY),this._renderType|=4;var i=this._parent;i&&0===i._repaint&&(i._repaint=1,i.parentRepaint())}}),u(0,t,"scaleY",function(){return this._style._tf.scaleY},function(t){var e=this.getStyle();if(e._tf.scaleY!==t){e.setScaleY(t),this._tfChanged=!0,this.conchModel&&this.conchModel.scale(e._tf.scaleX,t),this._renderType|=4;var i=this._parent;i&&0===i._repaint&&(i._repaint=1,i.parentRepaint())}}),u(0,t,"stage",function(){return b.stage}),u(0,t,"skewX",function(){return this._style._tf.skewX},function(t){var e=this.getStyle();if(e._tf.skewX!==t){e.setSkewX(t),this._tfChanged=!0,this.conchModel&&this.conchModel.skew(t,e._tf.skewY),this._renderType|=4;var i=this._parent;i&&0===i._repaint&&(i._repaint=1,i.parentRepaint())}}),u(0,t,"scrollRect",function(){return this._style.scrollRect},function(t){this.getStyle().scrollRect=t,this.repaint(),t?(this._renderType|=128,this.conchModel&&this.conchModel.scrollRect(t.x,t.y,t.width,t.height)):(this._renderType&=-129,this.conchModel&&(i.RUNTIMEVERION<"0.9.1"?this.conchModel.removeType(64):this.conchModel.removeType(128)))}),u(0,t,"skewY",function(){return this._style._tf.skewY},function(t){var e=this.getStyle();if(e._tf.skewY!==t){e.setSkewY(t),this._tfChanged=!0,this.conchModel&&this.conchModel.skew(e._tf.skewX,t),this._renderType|=4;var i=this._parent;i&&0===i._repaint&&(i._repaint=1,i.parentRepaint())}}),u(0,t,"transform",function(){return this._tfChanged?this._adjustTransform():this._transform},function(t){this._tfChanged=!1,(this._transform=t)&&(this._x=t.tx,this._y=t.ty,t.tx=t.ty=0,this.conchModel&&this.conchModel.transform(t.a,t.b,t.c,t.d,this._x,this._y)),t?this._renderType|=4:(this._renderType&=-5,this.conchModel&&this.conchModel.removeType(4)),this.parentRepaint()}),u(0,t,"pivotX",function(){return this._style._tf.translateX},function(t){this.getStyle().setTranslateX(t),this.conchModel&&this.conchModel.pivot(t,this._style._tf.translateY),this.repaint()}),u(0,t,"pivotY",function(){return this._style._tf.translateY},function(t){this.getStyle().setTranslateY(t),this.conchModel&&this.conchModel.pivot(this._style._tf.translateX,t),this.repaint()}),u(0,t,"alpha",function(){return this._style.alpha},function(t){this._style&&this._style.alpha!==t&&(t=t<0?0:1<t?1:t,this.getStyle().alpha=t,this.conchModel&&this.conchModel.alpha(t),1!==t?this._renderType|=2:this._renderType&=-3,this.parentRepaint())}),u(0,t,"visible",function(){return this._style.visible},function(t){this._style&&this._style.visible!==t&&(this.getStyle().visible=t,this.conchModel&&this.conchModel.visible(t),this.parentRepaint())}),u(0,t,"graphics",function(){return this._graphics||(this.graphics=A.createGraphics())},function(t){this._graphics&&(this._graphics._sp=null),(this._graphics=t)?(this._renderType&=-2,this._renderType|=512,(t._sp=this).conchModel&&this.conchModel.graphics(this._graphics)):(this._renderType&=-513,this._renderType&=-2,this.conchModel&&(i.RUNTIMEVERION<"0.9.1"?this.conchModel.removeType(256):this.conchModel.removeType(512))),this.repaint()}),u(0,t,"filters",function(){return this._$P.filters},function(t){t&&0===t.length&&(t=null),this._$P.filters!=t&&(this._set$P("filters",t?t.slice():null),D.isConchApp&&(this.conchModel&&(i.RUNTIMEVERION<"0.9.1"?this.conchModel.removeType(16):this.conchModel.removeType(32)),this._$P.filters&&1==this._$P.filters.length&&this._$P.filters[0].callNative(this)),D.isWebGL&&(t&&t.length?this._renderType|=32:this._renderType&=-33),t&&0<t.length?(this._getBit(1)||this._setUpNoticeType(1),D.isWebGL&&1==t.length&&t[0]instanceof laya.filters.ColorFilter||("bitmap"!=this.cacheAs&&(D.isConchNode||(this.cacheAs="bitmap"),this._set$P("cacheForFilters",!0)),this._set$P("hasFilter",!0))):(this._set$P("hasFilter",!1),this._$P.cacheForFilters&&"bitmap"==this.cacheAs&&(this.cacheAs="none")),this.repaint())}),u(0,t,"parent",s.prototype._$get_parent,function(t){b.superSet(tt,this,"parent",t),t&&this._getBit(2)&&this._$2__onDisplay()}),u(0,t,"mask",function(){return this._$P._mask},function(t){t&&this.mask&&this.mask._$P.maskParent||(t?(this.cacheAs="bitmap",this._set$P("_mask",t),t._set$P("maskParent",this)):(this.mask&&this.mask._set$P("maskParent",null),this._set$P("_mask",t),this.cacheAs="none"),this.conchModel&&this.conchModel.mask(t?t.conchModel:null),this._renderType|=64,this.parentRepaint())}),u(0,t,"mouseEnabled",function(){return 1<this._mouseEnableState},function(t){this._mouseEnableState=t?2:1}),u(0,t,"globalScaleX",function(){for(var t=1,e=this;e&&e!==b.stage;)t*=e.scaleX,e=e.parent;return t}),u(0,t,"mouseX",function(){return this.getMousePoint().x}),u(0,t,"mouseY",function(){return this.getMousePoint().y}),i.fromImage=function(t){return(new i).loadImage(t)},i.CustomList=[],h(i,["RUNTIMEVERION",function(){return this.RUNTIMEVERION=o.conch?conchConfig.getRuntimeVersion().substr(conchConfig.getRuntimeVersion().lastIndexOf("-")+1):""}]),i}(tt),_t=function(t){function e(t){this._audio=null,this._onEnd=null,this._resumePlay=null,e.__super.call(this),this._onEnd=q.bind(this.__onEnd,this),this._resumePlay=q.bind(this.__resumePlay,this),t.addEventListener("ended",this._onEnd),this._audio=t}p(e,"laya.media.h5audio.AudioSoundChannel",nt);var i=e.prototype;return i.__onEnd=function(){if(1==this.loops)return this.completeHandler&&(b.timer.once(10,this,this.__runComplete,[this.completeHandler],!1),this.completeHandler=null),this.stop(),void this.event("complete");0<this.loops&&this.loops--,this.startTime=0,this.play()},i.__resumePlay=function(){if(this._audio&&this._audio.removeEventListener("canplay",this._resumePlay),!this.isStopped)try{this._audio.currentTime=this.startTime,B.container.appendChild(this._audio),this._audio.play()}catch(t){this.event("error")}},i.play=function(){if(this.isStopped=!1,this._audio){try{this._audio.playbackRate=E.playbackRate,this._audio.currentTime=this.startTime}catch(t){return void this._audio.addEventListener("canplay",this._resumePlay)}E.addChannel(this),B.container.appendChild(this._audio),"play"in this._audio&&this._audio.play()}},i.stop=function(){this.isStopped=!0,E.removeChannel(this),this.completeHandler=null,this._audio&&("pause"in this._audio&&D.isConchApp&&this._audio.stop(),this._audio.pause(),this._audio.removeEventListener("ended",this._onEnd),this._audio.removeEventListener("canplay",this._resumePlay),B.onIE||this._audio!=it._musicAudio&&$.recover("audio:"+this.url,this._audio),B.removeElement(this._audio),this._audio=null)},i.pause=function(){this.isStopped=!0,E.removeChannel(this),"pause"in this._audio&&this._audio.pause()},i.resume=function(){this._audio&&(this.isStopped=!1,E.addChannel(this),"play"in this._audio&&this._audio.play())},u(0,i,"position",function(){return this._audio?this._audio.currentTime:0}),u(0,i,"duration",function(){return this._audio?this._audio.duration:0}),u(0,i,"volume",function(){return this._audio?this._audio.volume:1},function(t){this._audio&&(this._audio.volume=t)}),e}(),dt=function(t){function e(){this.audioBuffer=null,this.gain=null,this.bufferSource=null,this._currentTime=0,this._volume=1,this._startTime=0,this._pauseTime=0,this._onPlayEnd=null,this.context=rt.ctx,e.__super.call(this),this._onPlayEnd=q.bind(this.__onPlayEnd,this),this.context.createGain?this.gain=this.context.createGain():this.gain=this.context.createGainNode()}p(e,"laya.media.webaudio.WebAudioSoundChannel",nt);var i=e.prototype;return i.play=function(){if(E.addChannel(this),this.isStopped=!1,this._clearBufferSource(),this.audioBuffer){var t=this.context,e=this.gain,i=t.createBufferSource();(this.bufferSource=i).buffer=this.audioBuffer,i.connect(e),e&&e.disconnect(),e.connect(t.destination),i.onended=this._onPlayEnd,this.startTime>=this.duration&&(this.startTime=0),this._startTime=B.now(),this.gain.gain.setTargetAtTime?this.gain.gain.setTargetAtTime(this._volume,this.context.currentTime,.001):this.gain.gain.value=this._volume,0==this.loops&&(i.loop=!0),i.playbackRate.setTargetAtTime?i.playbackRate.setTargetAtTime(E.playbackRate,this.context.currentTime,.001):i.playbackRate.value=E.playbackRate,i.start(0,this.startTime),this._currentTime=0}},i.__onPlayEnd=function(){if(1==this.loops)return this.completeHandler&&(b.timer.once(10,this,this.__runComplete,[this.completeHandler],!1),this.completeHandler=null),this.stop(),void this.event("complete");0<this.loops&&this.loops--,this.startTime=0,this.play()},i._clearBufferSource=function(){if(this.bufferSource){var t=this.bufferSource;t.stop?t.stop(0):t.noteOff(0),t.disconnect(0),t.onended=null,e._tryCleanFailed||this._tryClearBuffer(t),this.bufferSource=null}},i._tryClearBuffer=function(t){if(B.onMac)try{t.buffer=rt._miniBuffer}catch(t){e._tryCleanFailed=!0}else try{t.buffer=null}catch(t){e._tryCleanFailed=!0}},i.stop=function(){this._clearBufferSource(),this.audioBuffer=null,this.gain&&this.gain.disconnect(),this.isStopped=!0,E.removeChannel(this),this.completeHandler=null,E.autoReleaseSound&&b.timer.once(5e3,null,E.disposeSoundIfNotUsed,[this.url],!1)},i.pause=function(){this.isStopped||(this._pauseTime=this.position),this._clearBufferSource(),this.gain&&this.gain.disconnect(),this.isStopped=!0,E.removeChannel(this),E.autoReleaseSound&&b.timer.once(5e3,null,E.disposeSoundIfNotUsed,[this.url],!1)},i.resume=function(){this.startTime=this._pauseTime,this.play()},u(0,i,"position",function(){return this.bufferSource?(B.now()-this._startTime)/1e3+this.startTime:0}),u(0,i,"duration",function(){return this.audioBuffer?this.audioBuffer.duration:0}),u(0,i,"volume",function(){return this._volume},function(t){this.isStopped||(this._volume=t,this.gain.gain.setTargetAtTime?this.gain.gain.setTargetAtTime(t,this.context.currentTime,.001):this.gain.gain.value=t)}),e._tryCleanFailed=!1,e.SetTargetDelay=.001,e}(),ft=function(t){function e(){e.__super.call(this),this._w=0,this._h=0}p(e,"laya.resource.Bitmap",lt);var i=e.prototype;return u(0,i,"width",function(){return this._w}),u(0,i,"height",function(){return this._h}),u(0,i,"source",function(){return this._source}),e}(),pt=function(e){function t(){this.loop=!1,this.wrapMode=0,this._index=0,this._count=0,this._isPlaying=!1,this._labels=null,this._isReverse=!1,this._frameRateChanged=!1,this._controlNode=null,this._actionName=null,t.__super.call(this),this._interval=n.animationInterval,this._setUpNoticeType(1)}p(t,"laya.display.AnimationPlayerBase",e);var i=t.prototype;return i.play=function(t,e,i,n){void 0===t&&(t=0),void 0===e&&(e=!0),void 0===i&&(i=""),void 0===n&&(n=!0),this._isPlaying=!0,this.index="string"==typeof t?this._getFrameByLabel(t):t,this.loop=e,this._actionName=i,this._isReverse=1==this.wrapMode,0<this.interval&&this.timerLoop(this.interval,this,this._frameLoop,null,!0,!0)},i._getFrameByLabel=function(t){var e=0;for(e=0;e<this._count;e++)if(this._labels[e]&&0<=this._labels[e].indexOf(t))return e;return 0},i._frameLoop=function(){if(this._isReverse){if(this._index--,this._index<0){if(!this.loop)return this._index=0,this.stop(),void this.event("complete");2==this.wrapMode?(this._index=0<this._count?1:0,this._isReverse=!1):this._index=this._count-1,this.event("complete")}}else if(this._index++,this._index>=this._count){if(!this.loop)return this._index--,this.stop(),void this.event("complete");2==this.wrapMode?(this._index=0<=this._count-2?this._count-2:0,this._isReverse=!0):this._index=0,this.event("complete")}this.index=this._index},i._setControlNode=function(t){this._controlNode&&(this._controlNode.off("display",this,this._checkResumePlaying),this._controlNode.off("undisplay",this,this._checkResumePlaying)),(this._controlNode=t)&&t!=this&&(t.on("display",this,this._checkResumePlaying),t.on("undisplay",this,this._checkResumePlaying))},i._setDisplay=function(t){e.prototype._setDisplay.call(this,t),this._checkResumePlaying()},i._checkResumePlaying=function(){this._isPlaying&&(this._controlNode.displayedInStage?this.play(this._index,this.loop,this._actionName):this.clearTimer(this,this._frameLoop))},i.stop=function(){this._isPlaying=!1,this.clearTimer(this,this._frameLoop)},i.addLabel=function(t,e){this._labels||(this._labels={}),this._labels[e]||(this._labels[e]=[]),this._labels[e].push(t)},i.removeLabel=function(t){if(t){if(this._labels)for(var e in this._labels)this._removeLabelFromLabelList(this._labels[e],t)}else this._labels=null},i._removeLabelFromLabelList=function(t,e){if(t)for(var i=t.length-1;0<=i;i--)t[i]==e&&t.splice(i,1)},i.gotoAndStop=function(t){this.index="string"==typeof t?this._getFrameByLabel(t):t,this.stop()},i._displayToIndex=function(t){},i.clear=function(){this.stop(),this._labels=null},u(0,i,"interval",function(){return this._interval},function(t){this._interval!=t&&(this._frameRateChanged=!0,this._interval=t,this._isPlaying&&0<t&&this.timerLoop(t,this,this._frameLoop,null,!0,!0))}),u(0,i,"isPlaying",function(){return this._isPlaying}),u(0,i,"index",function(){return this._index},function(t){if(this._index=t,this._displayToIndex(t),this._labels&&this._labels[t])for(var e=this._labels[t],i=0,n=e.length;i<n;i++)this.event("label",e[i])}),u(0,i,"count",function(){return this._count}),t.WRAP_POSITIVE=0,t.WRAP_REVERSE=1,t.WRAP_PINGPONG=2,t}(ct),gt=function(e){function d(){this._clipPoint=null,this._currBitmapFont=null,this._text=null,this._isChanged=!1,this._textWidth=0,this._textHeight=0,this._lines=[],this._lineWidths=[],this._startX=NaN,this._startY=NaN,this._lastVisibleLineIndex=-1,this._words=null,this._charSize={},this.underline=!1,this._underlineColor=null,d.__super.call(this),this.overflow=d.VISIBLE,this._style=new et(this),this._style.wordWrap=!1}p(d,"laya.display.Text",e);var t=d.prototype;return t.destroy=function(t){void 0===t&&(t=!0),e.prototype.destroy.call(this,t),this._lines=null,this._words&&(this._words.length=0,this._words=null)},t._getBoundPointsM=function(t){void 0===t&&(t=!1);var e=M.TEMP;return e.setTo(0,0,this.width,this.height),e._getBoundPoints()},t.getGraphicBounds=function(t){void 0===t&&(t=!1);var e=M.TEMP;return e.setTo(0,0,this.width,this.height),e},t._getCSSStyle=function(){return this._style},t.lang=function(t,e,i,n,s,r,o,a,h,l,u){if(t=d.langPacks&&d.langPacks[t]?d.langPacks[t]:t,arguments.length<2)this._text=t;else{for(var c=0,_=arguments.length;c<_;c++)t=t.replace("{"+c+"}",arguments[c+1]);this._text=t}},t._isPassWordMode=function(){var t=this._style.password;return"prompt"in this&&this.prompt==this._text&&(t=!1),t},t._getPassWordTxt=function(t){var e;e="";for(var i=t.length;0<i;i--)e+="●";return e},t.renderText=function(t,e){var i=this.graphics;i.clear(!0);var n=(this.italic?"italic ":"")+(this.bold?"bold ":"")+this.fontSize+"px "+(B.onIPhone&&laya.display.Text._fontFamilyMap[this.font]||this.font);B.context.font=n;var s=this.padding,r=s[3],o="left",a=this._lines,h=this.leading+this._charSize.height,l=this._currBitmapFont;l&&(h=this.leading+l.getMaxHeight());var u=s[0];if(!l&&0<this._width&&this._textWidth<=this._width&&("right"==this.align?(o="right",r=this._width-s[1]):"center"==this.align&&(o="center",r=.5*this._width+s[3]-s[1])),0<this._height){var c=this._textHeight>this._height?"top":this.valign;"middle"===c?u=.5*(this._height-e*h)+s[0]-s[2]:"bottom"===c&&(u=this._height-e*h-s[2])}var _=this._style;if(l&&l.autoScaleSize)var d=l.fontSize/this.fontSize;if(this._clipPoint)if(i.save(),l&&l.autoScaleSize){var f=0,p=0;f=this._width?this._width-s[3]-s[1]:this._textWidth,p=this._height?this._height-s[0]-s[2]:this._textHeight,f*=d,p*=d,i.clipRect(s[3],s[0],f,p)}else i.clipRect(s[3],s[0],this._width?this._width-s[3]-s[1]:this._textWidth,this._height?this._height-s[0]-s[2]:this._textHeight);var g=_.password;"prompt"in this&&this.prompt==this._text&&(g=!1);for(var m=0,v=0,y=Math.min(this._lines.length,e+t)||1,w=t;w<y;w++){var x,T=a[w];if(g){var b=T.length;T="";for(var C=b;0<C;C--)T+="●"}if(void 0===T&&(T=""),m=r-(this._clipPoint?this._clipPoint.x:0),v=u+h*w-(this._clipPoint?this._clipPoint.y:0),this.underline&&this.drawUnderline(o,m,v,w),l){var M=this.width;l.autoScaleSize&&(M=this.width*d),l.drawText(T,this,m,v,this.align,M)}else D.isWebGL?(this._words||(this._words=[]),(x=this._words.length>w-t?this._words[w-t]:new Z).setText(T)):x=T,_.stroke?i.fillBorderText(x,m,v,n,this.color,_.strokeColor,_.stroke,o):i.fillText(x,m,v,n,this.color,o)}if(l&&l.autoScaleSize){var S=1/d;this.scale(S,S)}this._clipPoint&&i.restore(),this._startX=r,this._startY=u},t.drawUnderline=function(t,e,i,n){var s=this._lineWidths[n];switch(t){case"center":e-=s/2;break;case"right":e-=s}i+=this._charSize.height,this._graphics.drawLine(e,i,e+s,i,this.underlineColor||this.color,1)},t.typeset=function(){if(this._isChanged=!1,!this._text)return this._clipPoint=null,this._textWidth=this._textHeight=0,void this.graphics.clear(!0);B.context.font=this._getCSSStyle().font,this._lines.length=0,this._lineWidths.length=0,this._isPassWordMode()?this.parseLines(this._getPassWordTxt(this._text)):this.parseLines(this._text),this.evalTextSize(),this.checkEnabledViewportOrNot()?this._clipPoint||(this._clipPoint=new C(0,0)):this._clipPoint=null;var t=this._lines.length;if(this.overflow!=d.VISIBLE){var e=this.overflow==d.HIDDEN?Math.floor:Math.ceil;t=Math.min(t,e((this.height-this.padding[0]-this.padding[2])/(this.leading+this._charSize.height)))}var i=this.scrollY/(this._charSize.height+this.leading)|0;this.renderText(i,t),this.repaint()},t.evalTextSize=function(){var t,e=NaN;t=Math.max.apply(this,this._lineWidths),e=this._currBitmapFont?this._lines.length*(this._currBitmapFont.getMaxHeight()+this.leading)+this.padding[0]+this.padding[2]:this._lines.length*(this._charSize.height+this.leading)+this.padding[0]+this.padding[2],t==this._textWidth&&e==this._textHeight||(this._textWidth=t,this._textHeight=e,this._width&&this._height||this.conchModel&&this.conchModel.size(this._width||this._textWidth,this._height||this._textHeight))},t.checkEnabledViewportOrNot=function(){return this.overflow==d.SCROLL&&(0<this._width&&this._textWidth>this._width||0<this._height&&this._textHeight>this._height)},t.changeText=function(t){this._text!==t&&(this.lang(t+""),this._graphics&&this._graphics.replaceText(this._text)||this.typeset())},t.parseLines=function(t){var e=this.wordWrap||this.overflow==d.HIDDEN;if(e)var i=this.getWordWrapWidth();if(this._currBitmapFont)this._charSize.width=this._currBitmapFont.getMaxWidth(),this._charSize.height=this._currBitmapFont.getMaxHeight();else{var n=B.context.measureText(d._testWord);D.isConchApp&&0===n.width&&0===n.height&&(n=B.context.measureText("W")),this._charSize.width=n.width,this._charSize.height=n.height||this.fontSize}for(var s=t.replace(/\r\n/g,"\n").split("\n"),r=0,o=s.length;r<o;r++){var a=s[r];e?this.parseLine(a,i):(this._lineWidths.push(this.getTextWidth(a)),this._lines.push(a))}},t.parseLine=function(t,e){B.context;var i,n=this._lines,s=0,r=NaN,o=NaN,a=0;if((r=this.getTextWidth(t))<=e)return n.push(t),void this._lineWidths.push(r);r=this._charSize.width,0==(s=Math.floor(e/r))&&(s=1),o=r=this.getTextWidth(t.substring(0,s));for(var h=s,l=t.length;h<l;h++)if(e<(o+=r=this.getTextWidth(t.charAt(h))))if(this.wordWrap){var u=t.substring(a,h);if(u.charCodeAt(u.length-1)<255?(i=/(?:\w|-)+$/.exec(u))&&(h=i.index+a,0==i.index?h+=u.length:u=t.substring(a,h)):d.RightToLeft&&(i=/([\u0600-\u06FF])+$/.exec(u))&&(h=i.index+a,0==i.index?h+=u.length:u=t.substring(a,h)),n.push(u),this._lineWidths.push(o-r),!((a=h)+s<l)){n.push(t.substring(a,l)),this._lineWidths.push(this.getTextWidth(n[n.length-1])),a=-1;break}h+=s,o=r=this.getTextWidth(t.substring(a,h)),h--}else if(this.overflow==d.HIDDEN)return n.push(t.substring(0,h)),void this._lineWidths.push(this.getTextWidth(n[n.length-1]));this.wordWrap&&-1!=a&&(n.push(t.substring(a,l)),this._lineWidths.push(this.getTextWidth(n[n.length-1])))},t.getTextWidth=function(t){return this._currBitmapFont?this._currBitmapFont.getTextWidth(t):B.context.measureText(t).width},t.getWordWrapWidth=function(){var t=this.padding,e=NaN;return(e=this._currBitmapFont&&this._currBitmapFont.autoScaleSize?this._width*(this._currBitmapFont.fontSize/this.fontSize):this._width)<=0&&(e=this.wordWrap?100:B.width),e<=0&&(e=100),e-t[3]-t[1]},t.getCharPoint=function(t,e){this._isChanged&&b.timer.runCallLater(this,this.typeset);for(var i=0,n=this._lines,s=0,r=0,o=n.length;r<o;r++){if(t<(i+=n[r].length)){var a=r;break}s=i}var h=(this.italic?"italic ":"")+(this.bold?"bold ":"")+this.fontSize+"px "+this.font;B.context.font=h;var l=this.getTextWidth(this._text.substring(s,t));return(e||new C).setTo(this._startX+l-(this._clipPoint?this._clipPoint.x:0),this._startY+a*(this._charSize.height+this.leading)-(this._clipPoint?this._clipPoint.y:0))},u(0,t,"width",function(){return this._width?this._width:this.textWidth+this.padding[1]+this.padding[3]},function(t){t!=this._width&&(b.superSet(ct,this,"width",t),this.isChanged=!0)}),u(0,t,"textWidth",function(){return this._isChanged&&b.timer.runCallLater(this,this.typeset),this._textWidth}),u(0,t,"height",function(){return this._height?this._height:this.textHeight},function(t){t!=this._height&&(b.superSet(ct,this,"height",t),this.isChanged=!0)}),u(0,t,"textHeight",function(){return this._isChanged&&b.timer.runCallLater(this,this.typeset),this._textHeight}),u(0,t,"padding",function(){return this._getCSSStyle().padding},function(t){this._getCSSStyle().padding=t,this.isChanged=!0}),u(0,t,"bold",function(){return this._getCSSStyle().bold},function(t){this._getCSSStyle().bold=t,this.isChanged=!0}),u(0,t,"text",function(){return this._text||""},function(t){this._text!==t&&(this.lang(t+""),this.isChanged=!0,this.event("change"))}),u(0,t,"color",function(){return this._getCSSStyle().color},function(t){this._getCSSStyle().color!=t&&(this._getCSSStyle().color=t,!this._isChanged&&this._graphics?this._graphics.replaceTextColor(this.color):this.isChanged=!0)}),u(0,t,"font",function(){return this._getCSSStyle().fontFamily},function(t){this._currBitmapFont&&(this._currBitmapFont=null,this.scale(1,1)),d._bitmapFonts&&d._bitmapFonts[t]&&(this._currBitmapFont=d._bitmapFonts[t]),this._getCSSStyle().fontFamily=t,this.isChanged=!0}),u(0,t,"fontSize",function(){return this._getCSSStyle().fontSize},function(t){this._getCSSStyle().fontSize=t,this.isChanged=!0}),u(0,t,"italic",function(){return this._getCSSStyle().italic},function(t){this._getCSSStyle().italic=t,this.isChanged=!0}),u(0,t,"align",function(){return this._getCSSStyle().align},function(t){this._getCSSStyle().align=t,this.isChanged=!0}),u(0,t,"valign",function(){return this._getCSSStyle().valign},function(t){this._getCSSStyle().valign=t,this.isChanged=!0}),u(0,t,"wordWrap",function(){return this._getCSSStyle().wordWrap},function(t){this._getCSSStyle().wordWrap=t,this.isChanged=!0}),u(0,t,"leading",function(){return this._getCSSStyle().leading},function(t){this._getCSSStyle().leading=t,this.isChanged=!0}),u(0,t,"bgColor",function(){return this._getCSSStyle().backgroundColor},function(t){this._getCSSStyle().backgroundColor=t,this.isChanged=!0}),u(0,t,"borderColor",function(){return this._getCSSStyle().borderColor},function(t){this._getCSSStyle().borderColor=t,this.isChanged=!0}),u(0,t,"stroke",function(){return this._getCSSStyle().stroke},function(t){this._getCSSStyle().stroke=t,this.isChanged=!0}),u(0,t,"strokeColor",function(){return this._getCSSStyle().strokeColor},function(t){this._getCSSStyle().strokeColor=t,this.isChanged=!0}),u(0,t,"isChanged",null,function(t){this._isChanged!==t&&(this._isChanged=t)&&b.timer.callLater(this,this.typeset)}),u(0,t,"scrollX",function(){return this._clipPoint?this._clipPoint.x:0},function(t){if(!(this.overflow!=d.SCROLL||this.textWidth<this._width)&&this._clipPoint){t=t<this.padding[3]?this.padding[3]:t;var e=this._textWidth-this._width;t=e<t?e:t;var i=this._height/(this._charSize.height+this.leading)|1;this._clipPoint.x=t,this.renderText(this._lastVisibleLineIndex,i)}}),u(0,t,"scrollY",function(){return this._clipPoint?this._clipPoint.y:0},function(t){if(!(this.overflow!=d.SCROLL||this.textHeight<this._height)&&this._clipPoint){t=t<this.padding[0]?this.padding[0]:t;var e=this._textHeight-this._height,i=(t=e<t?e:t)/(this._charSize.height+this.leading)|0;this._lastVisibleLineIndex=i;var n=1+(this._height/(this._charSize.height+this.leading)|0);this._clipPoint.y=t,this.renderText(i,n)}}),u(0,t,"maxScrollX",function(){return this.textWidth<this._width?0:this._textWidth-this._width}),u(0,t,"maxScrollY",function(){return this.textHeight<this._height?0:this._textHeight-this._height}),u(0,t,"lines",function(){return this._isChanged&&this.typeset(),this._lines}),u(0,t,"underlineColor",function(){return this._underlineColor},function(t){this._underlineColor=t,this._isChanged=!0,this.typeset()}),d.registerBitmapFont=function(t,e){d._bitmapFonts||(d._bitmapFonts={}),d._bitmapFonts[t]=e},d.unregisterBitmapFont=function(t,e){if(void 0===e&&(e=!0),d._bitmapFonts&&d._bitmapFonts[t]){var i=d._bitmapFonts[t];e&&i.destroy(),delete d._bitmapFonts[t]}},d.setTextRightToLeft=function(){var t;(t=B.canvas.source.style).display="none",t.position="absolute",t.direction="rtl",D._mainCanvas.source.style.direction="rtl",laya.display.Text.RightToLeft=!0,B.document.body.appendChild(B.canvas.source)},d.supportFont=function(t){B.context.font="10px sans-serif";var e=B.context.measureText("abcji").width;B.context.font="10px "+t;var i=B.context.measureText("abcji").width;return console.log(e,i),e!==i},d._testWord="游",d.langPacks=null,d.VISIBLE="visible",d.SCROLL="scroll",d.HIDDEN="hidden",d.CharacterCache=!0,d.RightToLeft=!1,d._bitmapFonts=null,h(d,["_fontFamilyMap",function(){return this._fontFamilyMap={"报隶":"报隶-简","黑体":"黑体-简","楷体":"楷体-简","兰亭黑":"兰亭黑-简","隶变":"隶变-简","凌慧体":"凌慧体-简","翩翩体":"翩翩体-简","苹方":"苹方-简","手札体":"手札体-简","宋体":"宋体-简","娃娃体":"娃娃体-简","魏碑":"魏碑-简","行楷":"行楷-简","雅痞":"雅痞-简","圆体":"圆体-简"}}]),d}(ct),mt=function(c){function o(){this.focus=null,this.designWidth=0,this.designHeight=0,this.canvasRotation=!1,this.canvasDegree=0,this.renderingEnabled=!0,this.screenAdaptationEnabled=!0,this._screenMode="none",this._scaleMode="noscale",this._alignV="top",this._alignH="left",this._bgColor="black",this._mouseMoveTime=0,this._renderCount=0,this._frameStartTime=NaN,this._isFocused=!1,this._isVisibility=!1,this._scenes=null,this._frameRate="fast",o.__super.call(this),this.offset=new C,this._canvasTransform=new I,this._previousOrientation=B.window.orientation;var e=this;this.transform=I.create(),this._scenes=[],this.mouseEnabled=!0,this.hitTestPrior=!0,this.autoSize=!1,this._displayedInStage=!0,this._isFocused=!0,this._isVisibility=!0;var t=B.window,i=this;t.addEventListener("focus",function(){e._isFocused=!0,i.event("focus"),i.event("focuschange")}),t.addEventListener("blur",function(){e._isFocused=!1,i.event("blur"),i.event("focuschange"),i._isInputting()&&(xt.inputElement.target.focus=!1)});var n="visibilityState",s="visibilitychange",r=t.document;void 0!==r.hidden?(s="visibilitychange",n="visibilityState"):void 0!==r.mozHidden?(s="mozvisibilitychange",n="mozVisibilityState"):void 0!==r.msHidden?(s="msvisibilitychange",n="msVisibilityState"):void 0!==r.webkitHidden&&(s="webkitvisibilitychange",n="webkitVisibilityState"),t.document.addEventListener(s,function(){"hidden"==B.document[n]?i._setStageVisible(!1):i._setStageVisible(!0)}),t.document.addEventListener("qbrowserVisibilityChange",function(t){i._setStageVisible(!t.hidden)}),t.addEventListener("resize",function(){var t=B.window.orientation;null!=t&&t!=e._previousOrientation&&i._isInputting()&&(xt.inputElement.target.focus=!1),e._previousOrientation=t,i._isInputting()||i._resetCanvas()}),t.addEventListener("orientationchange",function(t){i._resetCanvas()}),this.on("mousemove",this,this._onmouseMove),B.onMobile&&this.on("mousedown",this,this._onmouseMove)}p(o,"laya.display.Stage",c);var t=o.prototype;return t._setStageVisible=function(t){this._isVisibility!=t&&(this._isVisibility=t,this._isVisibility||this._isInputting()&&(xt.inputElement.target.focus=!1),this.event("visibilitychange"))},t._isInputting=function(){return B.onMobile&&xt.isInputting},t._changeCanvasSize=function(){this.setScreenSize(B.clientWidth*B.pixelRatio,B.clientHeight*B.pixelRatio)},t._resetCanvas=function(){if(this.screenAdaptationEnabled){var t=D._mainCanvas;t.source.style;t.size(1,1),b.timer.once(100,this,this._changeCanvasSize)}},t.setScreenSize=function(t,e){var i=!1;if("none"!==this._screenMode&&(i=(t/e<1?"vertical":"horizontal")!==this._screenMode)){var n=e;e=t,t=n}this.canvasRotation=i;var s=D._mainCanvas,r=s.source.style,o=this._canvasTransform.identity(),a=this._scaleMode,h=t/this.designWidth,l=e/this.designHeight,u=this.designWidth,c=this.designHeight,_=t,d=e,f=B.pixelRatio;switch(this._width=this.designWidth,this._height=this.designHeight,a){case"noscale":h=l=1,_=this.designWidth,d=this.designHeight;break;case"showall":h=l=Math.min(h,l),u=_=Math.round(this.designWidth*h),c=d=Math.round(this.designHeight*l);break;case"noborder":h=l=Math.max(h,l),_=Math.round(this.designWidth*h),d=Math.round(this.designHeight*l);break;case"full":h=l=1,this._width=u=t,this._height=c=e;break;case"fixedwidth":l=h,this._height=c=Math.round(e/h);break;case"fixedheight":h=l,this._width=u=Math.round(t/l);break;case"fixedauto":t/e<this.designWidth/this.designHeight?(l=h,this._height=c=Math.round(e/h)):(h=l,this._width=u=Math.round(t/l))}this.conchModel&&this.conchModel.size(this._width,this._height),h*=this.scaleX,l*=this.scaleY,1===h&&1===l?this.transform.identity():(this.transform.a=this._formatData(h/(_/u)),this.transform.d=this._formatData(l/(d/c)),this.conchModel&&this.conchModel.scale(this.transform.a,this.transform.d)),s.size(u,c),A.changeWebGLSize(u,c),o.scale(_/u/f,d/c/f),"left"===this._alignH?this.offset.x=0:"right"===this._alignH?this.offset.x=(t-_)/f:this.offset.x=.5*(t-_)/f,"top"===this._alignV?this.offset.y=0:"bottom"===this._alignV?this.offset.y=(e-d)/f:this.offset.y=.5*(e-d)/f,this.offset.x=Math.round(this.offset.x),this.offset.y=Math.round(this.offset.y),o.translate(this.offset.x,this.offset.y),this.canvasDegree=0,i&&("horizontal"===this._screenMode?(o.rotate(Math.PI/2),o.translate(e/f,0),this.canvasDegree=90):(o.rotate(-Math.PI/2),o.translate(0,t/f),this.canvasDegree=-90)),o.a=this._formatData(o.a),o.d=this._formatData(o.d),o.tx=this._formatData(o.tx),o.ty=this._formatData(o.ty),r.transformOrigin=r.webkitTransformOrigin=r.msTransformOrigin=r.mozTransformOrigin=r.oTransformOrigin="0px 0px 0px",r.transform=r.webkitTransform=r.msTransform=r.mozTransform=r.oTransform="matrix("+o.toString()+")",o.translate(parseInt(r.left)||0,parseInt(r.top)||0),this.visible=!0,this._repaint=1,this.event("resize")},t._formatData=function(t){return Math.abs(t)<1e-6?0:Math.abs(1-t)<.001?0<t?1:-1:t},t.getMousePoint=function(){return C.TEMP.setTo(this.mouseX,this.mouseY)},t.repaint=function(){this._repaint=1},t.parentRepaint=function(){},t._loop=function(){return this.render(D.context,0,0),!0},t._onmouseMove=function(t){this._mouseMoveTime=B.now()},t.getTimeFromFrameStart=function(){return B.now()-this._frameStartTime},t.render=function(t,e,i){if("sleep"===this._frameRate&&!D.isConchApp){var n=B.now();if(!(1e3<=n-this._frameStartTime))return;this._frameStartTime=n}if(this._renderCount++,D.isFlash&&this.repaint(),this._style.visible){this._frameStartTime=B.now();var s="slow"!==("mouse"===this._frameRate?this._frameStartTime-this._mouseMoveTime<2e3?"fast":"slow":this._frameRate),r=this._renderCount%2==0;if(V.renderSlow=!s,s||r||D.isConchApp){var o;V.loopCount++,f.instance.runEvent(),b.timer._update(),A.update3DLoop();var a=0,h=0;if(D.isConchNode)for(a=0,h=this._scenes.length;a<h;a++)(o=this._scenes[a])&&o._updateSceneConch();else for(a=0,h=this._scenes.length;a<h;a++)(o=this._scenes[a])&&o._updateScene();if(D.isConchNode){var l=ct.CustomList;for(a=0,h=l.length;a<h;a++){var u=l[a];u.customRender(u.customContext,0,0)}return}}D.isConchNode||this.renderingEnabled&&(s||!r||D.isConchWebGL)&&(D.isWebGL?(t.clear(),c.prototype.render.call(this,t,e,i),V._show&&V._sp&&V._sp.render(t,e,i),A.clear(this._bgColor),A.beginFlush(),t.flush(),A.endFinish(),Q.instance&&Q.getInstance().endDispose()):(A.clear(this._bgColor),c.prototype.render.call(this,t,e,i),V._show&&V._sp&&V._sp.render(t,e,i)))}else this._renderCount%5==0&&(V.loopCount++,f.instance.runEvent(),b.timer._update())},t._requestFullscreen=function(){var t=B.document.documentElement;t.requestFullscreen?t.requestFullscreen():t.mozRequestFullScreen?t.mozRequestFullScreen():t.webkitRequestFullscreen?t.webkitRequestFullscreen():t.msRequestFullscreen&&t.msRequestFullscreen()},t._fullScreenChanged=function(){b.stage.event("fullscreenchange")},t.exitFullscreen=function(){var t=B.document;t.exitFullscreen?t.exitFullscreen():t.mozCancelFullScreen?t.mozCancelFullScreen():t.webkitExitFullscreen&&t.webkitExitFullscreen()},u(0,t,"clientScaleX",function(){return this._transform?this._transform.getScaleX():1}),u(0,t,"desginHeight",function(){return console.debug("desginHeight已经弃用，请使用designHeight代替"),this.designHeight}),u(0,t,"frameRate",function(){return this._frameRate},function(t){if(this._frameRate=t,D.isConchApp)switch(this._frameRate){case"slow":B.window.conch&&B.window.conchConfig.setSlowFrame&&B.window.conchConfig.setSlowFrame(!0);break;case"fast":B.window.conch&&B.window.conchConfig.setSlowFrame&&B.window.conchConfig.setSlowFrame(!1);break;case"mouse":B.window.conch&&B.window.conchConfig.setMouseFrame&&B.window.conchConfig.setMouseFrame(2e3);break;case"sleep":B.window.conch&&B.window.conchConfig.setLimitFPS&&B.window.conchConfig.setLimitFPS(1);break;default:throw new Error("Stage:frameRate invalid.")}}),u(0,t,"clientScaleY",function(){return this._transform?this._transform.getScaleY():1}),u(0,t,"width",c.prototype._$get_width,function(t){this.designWidth=t,b.superSet(ct,this,"width",t),b.timer.callLater(this,this._changeCanvasSize)}),u(0,t,"alignH",function(){return this._alignH},function(t){this._alignH=t,b.timer.callLater(this,this._changeCanvasSize)}),u(0,t,"isFocused",function(){return this._isFocused}),u(0,t,"height",c.prototype._$get_height,function(t){this.designHeight=t,b.superSet(ct,this,"height",t),b.timer.callLater(this,this._changeCanvasSize)}),u(0,t,"transform",function(){return this._tfChanged&&this._adjustTransform(),this._transform=this._transform||I.create()},c.prototype._$set_transform),u(0,t,"isVisibility",function(){return this._isVisibility}),u(0,t,"desginWidth",function(){return console.debug("desginWidth已经弃用，请使用designWidth代替"),this.designWidth}),u(0,t,"scaleMode",function(){return this._scaleMode},function(t){this._scaleMode=t,b.timer.callLater(this,this._changeCanvasSize)}),u(0,t,"alignV",function(){return this._alignV},function(t){this._alignV=t,b.timer.callLater(this,this._changeCanvasSize)}),u(0,t,"bgColor",function(){return this._bgColor},function(t){this._bgColor=t,this.conchModel&&this.conchModel.bgColor(t),D.isWebGL&&(t?o._wgColor=z.create(t)._color:B.onMiniGame||(o._wgColor=null)),B.onLimixiu?o._wgColor=z.create(t)._color:D.canvas.style.background=t||"none"}),u(0,t,"mouseX",function(){return Math.round(f.instance.mouseX/this.clientScaleX)}),u(0,t,"mouseY",function(){return Math.round(f.instance.mouseY/this.clientScaleY)}),u(0,t,"screenMode",function(){return this._screenMode},function(t){this._screenMode=t}),u(0,t,"visible",c.prototype._$get_visible,function(t){this.visible!==t&&(b.superSet(ct,this,"visible",t),D._mainCanvas.source.style.visibility=t?"visible":"hidden")}),u(0,t,"fullScreenEnabled",null,function(t){var e=B.document,i=D.canvas;t?(i.addEventListener("mousedown",this._requestFullscreen),i.addEventListener("touchstart",this._requestFullscreen),e.addEventListener("fullscreenchange",this._fullScreenChanged),e.addEventListener("mozfullscreenchange",this._fullScreenChanged),e.addEventListener("webkitfullscreenchange",this._fullScreenChanged),e.addEventListener("msfullscreenchange",this._fullScreenChanged)):(i.removeEventListener("mousedown",this._requestFullscreen),i.removeEventListener("touchstart",this._requestFullscreen),e.removeEventListener("fullscreenchange",this._fullScreenChanged),e.removeEventListener("mozfullscreenchange",this._fullScreenChanged),e.removeEventListener("webkitfullscreenchange",this._fullScreenChanged),e.removeEventListener("msfullscreenchange",this._fullScreenChanged))}),o.SCALE_NOSCALE="noscale",o.SCALE_EXACTFIT="exactfit",o.SCALE_SHOWALL="showall",o.SCALE_NOBORDER="noborder",o.SCALE_FULL="full",o.SCALE_FIXED_WIDTH="fixedwidth",o.SCALE_FIXED_HEIGHT="fixedheight",o.SCALE_FIXED_AUTO="fixedauto",o.ALIGN_LEFT="left",o.ALIGN_RIGHT="right",o.ALIGN_CENTER="center",o.ALIGN_TOP="top",o.ALIGN_MIDDLE="middle",o.ALIGN_BOTTOM="bottom",o.SCREEN_NONE="none",o.SCREEN_HORIZONTAL="horizontal",o.SCREEN_VERTICAL="vertical",o.FRAME_FAST="fast",o.FRAME_SLOW="slow",o.FRAME_MOUSE="mouse",o.FRAME_SLEEP="sleep",o.FRAME_MOUSE_THREDHOLD=2e3,h(o,["_wgColor",function(){return this._wgColor=[0,0,0,1]}]),o}(ct),vt=(function(t){function e(){this.url=null,this._channel=null,this._tar=null,this._playEvents=null,this._stopEvents=null,e.__super.call(this),this.visible=!1,this.on("added",this,this._onParentChange),this.on("removed",this,this._onParentChange)}p(e,"laya.media.SoundNode",ct);var i=e.prototype;i._onParentChange=function(){this.target=this.parent},i.play=function(t,e){void 0===t&&(t=1),isNaN(t)&&(t=1),this.url&&(this.stop(),this._channel=E.playSound(this.url,t,e))},i.stop=function(){this._channel&&!this._channel.isStopped&&this._channel.stop(),this._channel=null},i._setPlayAction=function(t,e,i,n){void 0===n&&(n=!0),this[i]&&t&&(n?t.on(e,this,this[i]):t.off(e,this,this[i]))},i._setPlayActions=function(t,e,i,n){if(void 0===n&&(n=!0),t&&e){var s,r=e.split(","),o=0;for(s=r.length,o=0;o<s;o++)this._setPlayAction(t,r[o],i,n)}},u(0,i,"playEvent",null,function(t){(this._playEvents=t)&&this._tar&&this._setPlayActions(this._tar,t,"play")}),u(0,i,"target",null,function(t){this._tar&&(this._setPlayActions(this._tar,this._playEvents,"play",!1),this._setPlayActions(this._tar,this._stopEvents,"stop",!1)),this._tar=t,this._tar&&(this._setPlayActions(this._tar,this._playEvents,"play",!0),this._setPlayActions(this._tar,this._stopEvents,"stop",!0))}),u(0,i,"stopEvent",null,function(t){(this._stopEvents=t)&&this._tar&&this._setPlayActions(this._tar,t,"stop")})}(),function(t){function e(){this._src=null,this._onload=null,this._onerror=null,e.__super.call(this)}p(e,"laya.resource.FileBitmap",ft);var i=e.prototype;return u(0,i,"src",function(){return this._src},function(t){this._src=t}),u(0,i,"onload",null,function(t){}),u(0,i,"onerror",null,function(t){}),e}()),yt=function(t){function i(t,e){this._is2D=!1,i.__super.call(this);var n=this;if(this._source=this,"2D"===t||"AUTO"===t&&!D.isWebGL){this._is2D=!0,this._source=e||B.createElement("canvas"),this._w=this._source.width,this._h=this._source.height;var s=this;s.getContext=function(t,e){if(n._ctx)return n._ctx;var i=n._ctx=n._source.getContext(t,e);return i&&(i._canvas=s,D.isFlash||B.onLimixiu||(i.size=function(t,e){})),i}}this.lock=!0}p(i,"laya.resource.HTMLCanvas",ft);var e=i.prototype;return e.clear=function(){this._ctx&&this._ctx.clear()},e.destroy=function(){this._ctx&&this._ctx.destroy(),this._ctx=null,laya.resource.Resource.prototype.destroy.call(this)},e.release=function(){},e._setContext=function(t){this._ctx=t},e.getContext=function(t,e){return this._ctx?this._ctx:this._ctx=i._createContext(this)},e.getMemSize=function(){return 0},e.size=function(t,e){(this._w!=t||this._h!=e||this._source&&(this._source.width!=t||this._source.height!=e))&&(this._w=t,this._h=e,this.memorySize=this._w*this._h*4,this._ctx&&this._ctx.size(t,e),this._source&&(this._source.height=e,this._source.width=t))},e.getCanvas=function(){return this._source},e.toBase64=function(t,e,i){if(this._source)if(D.isConchApp&&this._source.toBase64)this._source.toBase64(t,e,i);else{var n=this._source.toDataURL(t,e);i.call(this,n)}},u(0,e,"context",function(){return this._ctx}),u(0,e,"asBitmap",null,function(t){}),i.create=function(t,e){return new i(t,e)},i.TYPE2D="2D",i.TYPE3D="3D",i.TYPEAUTO="AUTO",i._createContext=null,i}(),wt=(function(t){function h(t,e,i,n,s,r,o,a){throw h.__super.call(this),new Error("不允许new！")}p(h,"laya.resource.HTMLSubImage",ft),h.create=function(t,e,i,n,s,r,o,a){return void 0===a&&(a=!1),new h(t,e,i,n,s,r,o,a)}}(),function(t){function c(){this._frames=null,this._url=null,c.__super.call(this),this._setControlNode(this)}p(c,"laya.display.Animation",t);var e=c.prototype;e.destroy=function(t){void 0===t&&(t=!0),this.stop(),laya.display.Sprite.prototype.destroy.call(this,t),this._frames=null,this._labels=null},e.play=function(t,e,i,n){void 0===t&&(t=0),void 0===e&&(e=!0),void 0===i&&(i=""),void 0===n&&(n=!0),i&&this._setFramesFromCache(i,n),this._isPlaying=!0,this.index="string"==typeof t?this._getFrameByLabel(t):t,this.loop=e,this._actionName=i,this._isReverse=1==this.wrapMode,this._frames&&0<this.interval&&this.timerLoop(this.interval,this,this._frameLoop,null,!0,!0)},e._setFramesFromCache=function(t,e){var i;return void 0===e&&(e=!1),this._url&&(t=this._url+"#"+t),t&&c.framesMap[t]?((i=c.framesMap[t])instanceof Array?(this._frames=c.framesMap[t],this._count=this._frames.length):(i.nodeRoot&&(c.framesMap[t]=this._parseGraphicAnimationByData(i),i=c.framesMap[t]),this._frames=i.frames,this._count=this._frames.length,this._frameRateChanged||(this._interval=i.interval),this._labels=this._copyLabels(i.labels)),!0):(e&&console.log("ani not found:",t),!1)},e._copyLabels=function(t){if(!t)return null;var e,i;for(i in e={},t)e[i]=q.copyArray([],t[i]);return e},e._frameLoop=function(){this._style.visible&&.01<this._style.alpha&&t.prototype._frameLoop.call(this)},e._displayToIndex=function(t){this._frames&&(this.graphics=this._frames[t])},e.clear=function(){this.stop(),this.graphics=null,this._frames=null,this._labels=null},e.loadImages=function(t,e){return void 0===e&&(e=""),this._url="",this._setFramesFromCache(e)||(this.frames=c.framesMap[e]?c.framesMap[e]:c.createFrames(t,e)),this},e.loadAtlas=function(e,i,n){void 0===n&&(n=""),this._url="";var s=this;function t(t){e===t&&(s.frames=c.framesMap[n]?c.framesMap[n]:c.createFrames(e,n),i&&i.run())}return s._setFramesFromCache(n)||(at.getAtlas(e)?t(e):b.loader.load(e,v.create(null,t,[e]),null,"atlas")),this},e.loadAnimation=function(t,e,i){this._url=t;return this._actionName||(this._actionName=""),this._setFramesFromCache(this._actionName)?(this._setFramesFromCache(this._actionName,!0),this.index=0,e&&e.run()):!i||at.getAtlas(i)?this._loadAnimationData(t,e,i):b.loader.load(i,v.create(this,this._loadAnimationData,[t,e,i]),null,"atlas"),this},e._loadAnimationData=function(a,h,t){var l=this;if(!t||at.getAtlas(t)){var u=this;at.getRes(a)?e(a):b.loader.load(a,v.create(null,e,[a]),null,"json"),at.clearRes(a)}else console.warn("atlas load fail:"+t);function e(t){if(at.getRes(t)&&a===t){var e;if(c.framesMap[a+"#"])u._setFramesFromCache(l._actionName,!0),l.index=0,l._checkResumePlaying();else{var i=u._parseGraphicAnimation(at.getRes(a));if(!i)return;var n,s=i.animationList,r=0,o=s.length;for(r=0;r<o;r++)e=s[r],c.framesMap[a+"#"+e.name]=e,n||(n=e);n&&(c.framesMap[a+"#"]=n,u._setFramesFromCache(l._actionName,!0),l.index=0),l._checkResumePlaying()}h&&h.run()}}},e._parseGraphicAnimation=function(t){return bt.parseAnimationData(t)},e._parseGraphicAnimationByData=function(t){return bt.parseAnimationByData(t)},u(0,e,"frames",function(){return this._frames},function(t){(this._frames=t)&&(this._count=t.length,this._isPlaying?this.play(this._index,this.loop,this._actionName):this.index=this._index)}),u(0,e,"autoPlay",null,function(t){t?this.play():this.stop()}),u(0,e,"source",null,function(t){-1<t.indexOf(".ani")?this.loadAnimation(t):-1<t.indexOf(".json")||-1<t.indexOf("als")||-1<t.indexOf("atlas")?this.loadAtlas(t):this.loadImages(t.split(","))}),u(0,e,"autoAnimation",null,function(t){this.play(0,!0,t,!1)}),c.createFrames=function(t,e){var i,n,s=0,r=0;if("string"==typeof t){var o=at.getAtlas(t);if(o&&o.length)for(i=[],s=0,r=o.length;s<r;s++)(n=new A.createGraphics).drawTexture(at.getRes(o[s]),0,0),i.push(n)}else if(t instanceof Array)for(i=[],s=0,r=t.length;s<r;s++)(n=new A.createGraphics).loadImage(t[s],0,0),i.push(n);return e&&(c.framesMap[e]=i),i},c.clearCache=function(t){var e,i=c.framesMap,n=t+"#";for(e in i)e!==t&&0!=e.indexOf(n)||delete c.framesMap[e]},c.framesMap={}}(pt),function(t){function r(){this._targetDic=null,this._animationData=null,this._animationNewFrames=null,r.__super.call(this),null==r._sortIndexFun&&(r._sortIndexFun=T.sortByKey("index",!1,!0))}p(r,"laya.display.FrameAnimation",t);var e=r.prototype;return e._setUp=function(t,e){this._labels=null,this._animationNewFrames=null,this._targetDic=t,this._animationData=e,this.interval=1e3/e.frameRate,e.parsed?(this._count=e.count,this._labels=e.labels,this._animationNewFrames=e.animationNewFrames):(this._animationNewFrames=[],this._calculateDatas()),e.parsed=!0,e.labels=this._labels,e.count=this._count,e.animationNewFrames=this._animationNewFrames},e.clear=function(){t.prototype.clear.call(this),this._targetDic=null,this._animationData=null},e._displayToIndex=function(t){if(this._animationData){t<0&&(t=0),t>this._count&&(t=this._count);var e=this._animationData.nodes,i=0,n=e.length;for(i=0;i<n;i++)this._displayNodeToFrame(e[i],t)}},e._displayNodeToFrame=function(t,e,i){i||(i=this._targetDic);var n=i[t.target];if(n){var s,r,o,a=t.frames,h=t.keys,l=0,u=h.length;for(l=0;l<u;l++)o=(r=a[s=h[l]]).length>e?r[e]:r[r.length-1],n[s]=o}},e._calculateDatas=function(){if(this._animationData){var t,e=this._animationData.nodes,i=0,n=e.length;for(i=this._count=0;i<n;i++)t=e[i],this._calculateNodeKeyFrames(t);this._count+=1}},e._calculateNodeKeyFrames=function(t){var e,i,n=t.keyframes,s=t.target;for(e in t.frames||(t.frames={}),t.keys?t.keys.length=0:t.keys=[],t.initValues||(t.initValues={}),n)i=n[e],t.frames[e]||(t.frames[e]=[]),this._targetDic&&this._targetDic[s]&&(t.initValues[e]=this._targetDic[s][e]),i.sort(r._sortIndexFun),t.keys.push(e),this._calculateNodePropFrames(i,t.frames[e],e,s)},e.resetToInitState=function(){if(this._targetDic&&this._animationData){var t,e,i=this._animationData.nodes,n=0,s=i.length;for(n=0;n<s;n++)if(e=(t=i[n]).initValues){var r,o=this._targetDic[t.target];if(o)for(r in e)o[r]=e[r]}}},e._calculateNodePropFrames=function(t,e,i,n){var s=0,r=t.length-1;for(e.length=t[r].index+1,s=0;s<r;s++)this._dealKeyFrame(t[s]),this._calculateFrameValues(t[s],t[s+1],e);0==r&&(e[t[0].index]=t[0].value,this._animationNewFrames&&(this._animationNewFrames[t[0].index]=!0)),this._dealKeyFrame(t[s])},e._dealKeyFrame=function(t){t.label&&""!=t.label&&this.addLabel(t.label,t.index)},e._calculateFrameValues=function(t,e,i){var n,s=0,r=t.index,o=e.index,a=t.value,h=e.value-t.value,l=o-r;if(o>this._count&&(this._count=o),t.tween)for(null==(n=Y[t.tweenMethod])&&(n=Y.linearNone),s=r;s<o;s++)i[s]=n(s-r,a,h,l),this._animationNewFrames&&(this._animationNewFrames[s]=!0);else for(s=r;s<o;s++)i[s]=a;this._animationNewFrames&&(this._animationNewFrames[t.index]=!0,this._animationNewFrames[e.index]=!0),i[e.index]=e.value},r._sortIndexFun=null,r}(pt)),xt=function(e){function s(){this._focus=!1,this._multiline=!1,this._editable=!0,this._restrictPattern=null,this._type="text",this._prompt="",this._promptColor="#A9A9A9",this._originColor="#000000",this._content="",s.__super.call(this),this._maxChars=1e5,this._width=100,this._height=20,this.multiline=!1,this.overflow=gt.SCROLL,this.on("mousedown",this,this._onMouseDown),this.on("undisplay",this,this._onUnDisplay)}p(s,"laya.display.Input",e);var t=s.prototype;return t.setSelection=function(t,e){this.focus=!0,laya.display.Input.inputElement.selectionStart=t,laya.display.Input.inputElement.selectionEnd=e},t._onUnDisplay=function(t){this.focus=!1},t._onMouseDown=function(t){this.focus=!0},t._syncInputTransform=function(){var t=this.nativeInput,e=q.getTransformRelativeToWindow(this,this.padding[3],this.padding[0]),i=this._width-this.padding[1]-this.padding[3],n=this._height-this.padding[0]-this.padding[2];D.isConchApp?(t.setScale(e.scaleX,e.scaleY),t.setSize(i,n),t.setPos(e.x,e.y)):(s.inputContainer.style.transform=s.inputContainer.style.webkitTransform="scale("+e.scaleX+","+e.scaleY+") rotate("+b.stage.canvasDegree+"deg)",t.style.width=i+"px",t.style.height=n+"px",s.inputContainer.style.left=e.x+"px",s.inputContainer.style.top=e.y+"px")},t.select=function(){this.nativeInput.select()},t._setInputMethod=function(){s.input.parentElement&&s.inputContainer.removeChild(s.input),s.area.parentElement&&s.inputContainer.removeChild(s.area),s.inputElement=this._multiline?s.area:s.input,s.inputContainer.appendChild(s.inputElement),gt.RightToLeft&&(s.inputElement.style.direction="rtl")},t._focusIn=function(){laya.display.Input.isInputting=!0;var t=this.nativeInput;this._focus=!0;var e=t.style;e.whiteSpace=this.wordWrap?"pre-wrap":"nowrap",this._setPromptColor(),t.readOnly=!this._editable,D.isConchApp&&(t.setType(this._type),t.setForbidEdit(!this._editable)),t.maxLength=this._maxChars;this.padding;if(t.type=this._type,t.value=this._content,t.placeholder=this._prompt,b.stage.off("keydown",this,this._onKeyDown),b.stage.on("keydown",this,this._onKeyDown),(b.stage.focus=this).event("focus"),B.onPC&&t.focus(),!B.onMiniGame){this._text;this._text=null}this.typeset(),t.setColor(this._originColor),t.setFontSize(this.fontSize),t.setFontFace(B.onIPhone&&gt._fontFamilyMap[this.font]||this.font),D.isConchApp&&t.setMultiAble&&t.setMultiAble(this._multiline),e.lineHeight=this.leading+this.fontSize+"px",e.fontStyle=this.italic?"italic":"normal",e.fontWeight=this.bold?"bold":"normal",e.textAlign=this.align,e.padding="0 0",this._syncInputTransform(),!D.isConchApp&&B.onPC&&b.timer.frameLoop(1,this,this._syncInputTransform)},t._setPromptColor=function(){(s.promptStyleDOM=B.getElementById("promptStyle"))||((s.promptStyleDOM=B.createElement("style")).setAttribute("id","promptStyle"),B.document.head.appendChild(s.promptStyleDOM)),s.promptStyleDOM.innerText="input::-webkit-input-placeholder, textarea::-webkit-input-placeholder {color:"+this._promptColor+"}input:-moz-placeholder, textarea:-moz-placeholder {color:"+this._promptColor+"}input::-moz-placeholder, textarea::-moz-placeholder {color:"+this._promptColor+"}input:-ms-input-placeholder, textarea:-ms-input-placeholder {color:"+this._promptColor+"}"},t._focusOut=function(){laya.display.Input.isInputting=!1,this._focus=!1,this._text=null,this._content=this.nativeInput.value,this._content?(b.superSet(gt,this,"text",this._content),b.superSet(gt,this,"color",this._originColor)):(b.superSet(gt,this,"text",this._prompt),b.superSet(gt,this,"color",this._promptColor)),b.stage.off("keydown",this,this._onKeyDown),b.stage.focus=null,this.event("blur"),D.isConchApp&&this.nativeInput.blur(),B.onPC&&b.timer.clear(this,this._syncInputTransform)},t._onKeyDown=function(t){13===t.keyCode&&(B.onMobile&&!this._multiline&&(this.focus=!1),this.event("enter"))},t.changeText=function(t){this._content=t,this._focus?(this.nativeInput.value=t||"",this.event("change")):e.prototype.changeText.call(this,t)},u(0,t,"color",e.prototype._$get_color,function(t){this._focus&&this.nativeInput.setColor(t),b.superSet(gt,this,"color",this._content?t:this._promptColor),this._originColor=t}),u(0,t,"inputElementYAdjuster",function(){return console.warn("deprecated: 由于即使设置了该值，在各平台和浏览器之间也不一定一致，inputElementYAdjuster已弃用。"),0},function(t){console.warn("deprecated: 由于即使设置了该值，在各平台和浏览器之间也不一定一致，inputElementYAdjuster已弃用。")}),u(0,t,"multiline",function(){return this._multiline},function(t){this._multiline=t,this.valign=t?"top":"middle"}),u(0,t,"maxChars",function(){return this._maxChars},function(t){t<=0&&(t=1e5),this._maxChars=t}),u(0,t,"text",function(){return this._focus?this.nativeInput.value:this._content||""},function(t){b.superSet(gt,this,"color",this._originColor),t+="",this._focus?(this.nativeInput.value=t||"",this.event("change")):(this._multiline||(t=t.replace(/\r?\n/g,"")),(this._content=t)?b.superSet(gt,this,"text",t):(b.superSet(gt,this,"text",this._prompt),b.superSet(gt,this,"color",this.promptColor)))}),u(0,t,"nativeInput",function(){return this._multiline?s.area:s.input}),u(0,t,"prompt",function(){return this._prompt},function(t){!this._text&&t&&b.superSet(gt,this,"color",this._promptColor),this.promptColor=this._promptColor,this._text?b.superSet(gt,this,"text",this._text==this._prompt?t:this._text):b.superSet(gt,this,"text",t),this._prompt=gt.langPacks&&gt.langPacks[t]?gt.langPacks[t]:t}),u(0,t,"focus",function(){return this._focus},function(t){var e=this.nativeInput;this._focus!==t&&(t?(e.target?e.target._focusOut():this._setInputMethod(),(e.target=this)._focusIn()):(e.target=null,this._focusOut(),B.document.body.scrollTop=0,e.blur(),D.isConchApp?e.setPos(-1e4,-1e4):s.inputContainer.contains(e)&&s.inputContainer.removeChild(e)))}),u(0,t,"restrict",function(){return this._restrictPattern?this._restrictPattern.source:""},function(t){this._restrictPattern=t?(-1<(t="[^"+t+"]").indexOf("^^")&&(t=t.replace("^^","")),new RegExp(t,"g")):null}),u(0,t,"editable",function(){return this._editable},function(t){this._editable=t,D.isConchApp&&s.input.setForbidEdit(!t)}),u(0,t,"promptColor",function(){return this._promptColor},function(t){this._promptColor=t,this._content||b.superSet(gt,this,"color",t)}),u(0,t,"type",function(){return this._type},function(t){this._getCSSStyle().password="password"==t,this._type=t,D.isConchApp&&this.nativeInput.setType(t)}),u(0,t,"inputElementXAdjuster",function(){return console.warn("deprecated: 由于即使设置了该值，在各平台和浏览器之间也不一定一致，inputElementXAdjuster已弃用。"),0},function(t){console.warn("deprecated: 由于即使设置了该值，在各平台和浏览器之间也不一定一致，inputElementXAdjuster已弃用。")}),u(0,t,"asPassword",function(){return this._getCSSStyle().password},function(t){this._getCSSStyle().password=t,this._type="password",console.warn('deprecated: 使用type="password"替代设置asPassword, asPassword将在下次重大更新时删去'),this.isChanged=!0}),s.__init__=function(){s._createInputElement(),B.onMobile&&D.canvas.addEventListener(s.IOS_IFRAME?B.onMiniGame?"touchend":"click":"touchend",s._popupInputMethod)},s._popupInputMethod=function(t){laya.display.Input.isInputting&&laya.display.Input.inputElement.focus()},s._createInputElement=function(){s._initInput(s.area=B.createElement("textarea")),s._initInput(s.input=B.createElement("input")),(s.inputContainer=B.createElement("div")).style.position="absolute",s.inputContainer.style.zIndex=1e5,B.container.appendChild(s.inputContainer),s.inputContainer.setPos=function(t,e){s.inputContainer.style.left=t+"px",s.inputContainer.style.top=e+"px"}},s._initInput=function(e){var t=e.style;t.cssText="position:absolute;overflow:hidden;resize:none;transform-origin:0 0;-webkit-transform-origin:0 0;-moz-transform-origin:0 0;-o-transform-origin:0 0;",t.resize="none",t.backgroundColor="transparent",t.border="none",t.outline="none",t.zIndex=1,e.addEventListener("input",s._processInputting),e.addEventListener("mousemove",s._stopEvent),e.addEventListener("mousedown",s._stopEvent),e.addEventListener("touchmove",s._stopEvent),e.setFontFace=function(t){e.style.fontFamily=t},D.isConchApp||(e.setColor=function(t){e.style.color=t},e.setFontSize=function(t){e.style.fontSize=t+"px"})},s._processInputting=function(t){var e=laya.display.Input.inputElement.target;if(e){var i=laya.display.Input.inputElement.value;e._restrictPattern&&(i=i.replace(/\u2006|\x27/g,""),e._restrictPattern.test(i)&&(i=i.replace(e._restrictPattern,""),laya.display.Input.inputElement.value=i)),e._text=i,e.event("input")}},s._stopEvent=function(t){"touchmove"==t.type&&t.preventDefault(),t.stopPropagation&&t.stopPropagation()},s.TYPE_TEXT="text",s.TYPE_PASSWORD="password",s.TYPE_EMAIL="email",s.TYPE_URL="url",s.TYPE_NUMBER="number",s.TYPE_RANGE="range",s.TYPE_DATE="date",s.TYPE_MONTH="month",s.TYPE_WEEK="week",s.TYPE_TIME="time",s.TYPE_DATE_TIME="datetime",s.TYPE_DATE_TIME_LOCAL="datetime-local",s.TYPE_SEARCH="search",s.input=null,s.area=null,s.inputElement=null,s.inputContainer=null,s.confirmButton=null,s.promptStyleDOM=null,s.inputHeight=45,s.isInputting=!1,s.stageMatrix=null,h(s,["IOS_IFRAME",function(){return this.IOS_IFRAME=B.onIOS&&B.window.top!=B.window.self}]),s}(gt),Tt=function(t){function i(t,e){this._recreateLock=!1,this._needReleaseAgain=!1,this._enableMerageInAtlas=!0,i.__super.call(this),this._init_(t,e)}p(i,"laya.resource.HTMLImage",vt);var e=i.prototype;return e._init_=function(t,e){this._src=t,this._source=new B.window.Image,e&&(e.onload&&(this.onload=e.onload),e.onerror&&(this.onerror=e.onerror),e.onCreate&&e.onCreate(this)),0!=t.indexOf("data:image")&&(this._source.crossOrigin=""),t&&(this._source.src=t)},e.recreateResource=function(){var t=this;if(""===this._src)throw new Error("src no null！");if(this._needReleaseAgain=!1,this._source){if(this._recreateLock)return;this.memorySize=this._w*this._h*4,this._recreateLock=!1,this.completeCreate()}else{this._recreateLock=!0;var e=this;this._source=new B.window.Image,this._source.crossOrigin="",this._source.onload=function(){if(e._needReleaseAgain)return e._needReleaseAgain=!1,e._source.onload=null,void(e._source=null);e._source.onload=null,e.memorySize=t._w*t._h*4,e._recreateLock=!1,e.completeCreate()},this._source.src=this._src}},e.disposeResource=function(){this._recreateLock&&(this._needReleaseAgain=!0),this._source&&(this._source=null,this.memorySize=0)},e.onresize=function(){this._w=this._source.width,this._h=this._source.height},u(0,e,"onload",null,function(t){var e=this;this._onload=t,this._source&&(this._source.onload=null!=this._onload?function(){e.onresize(),e._onload()}:null)}),u(0,e,"onerror",null,function(t){var e=this;this._onerror=t,this._source&&(this._source.onerror=null!=this._onerror?function(){e._onerror()}:null)}),u(0,e,"enableMerageInAtlas",function(){return this._enableMerageInAtlas},function(t){this._enableMerageInAtlas=t,D.isConchApp&&this._source&&(this._source.enableMerageInAtlas=t)}),i.create=function(t,e){return new i(t,e)},i}(),bt=(function(r){function t(){this._target=null,this._playEvents=null,this._initData={},this._aniKeys=null,this._effectClass=null,t.__super.call(this)}p(t,"laya.display.EffectAnimation",r);var e=t.prototype;e._onOtherBegin=function(t){t!=this&&this.stop()},e.addEvent=function(){this._target&&this._playEvents&&(this._setControlNode(this._target),this._target.on(this._playEvents,this,this._onPlayAction))},e._onPlayAction=function(){this.play(0,!1)},e.play=function(t,e,i,n){void 0===t&&(t=0),void 0===e&&(e=!0),void 0===i&&(i=""),void 0===n&&(n=!0),this._target&&(this._target.event("effectanimationbegin",[this]),this._recordInitData(),laya.display.AnimationPlayerBase.prototype.play.call(this,t,e,i,n))},e._recordInitData=function(){if(this._aniKeys){var t,e,i=0;for(t=this._aniKeys.length,i=0;i<t;i++)e=this._aniKeys[i],this._initData[e]=this._target[e]}},e._displayToIndex=function(t){if(this._animationData){t<0&&(t=0),t>this._count&&(t=this._count);var e=this._animationData.nodes,i=0,n=e.length;for(n=1<n?1:n,i=0;i<n;i++)this._displayNodeToFrame(e[i],t)}},e._displayNodeToFrame=function(t,e,i){if(this._target){var n;n=this._target;var s,r,o,a,h=t.frames,l=t.keys,u=0,c=l.length;a=t.secondFrames;var _,d,f,p,g=0;for(u=0;u<c;u++)r=h[s=l[u]],o=-1==(g=a[s])?this._initData[s]:e<g?(f=(d=t.keyframes[s])[0]).tween?(null==(_=Y[f.tweenMethod])&&(_=Y.linearNone),p=d[1],_(e,this._initData[s],p.value-this._initData[s],p.index)):this._initData[s]:r.length>e?r[e]:r[r.length-1],n[s]=o}},e._calculateNodeKeyFrames=function(t){r.prototype._calculateNodeKeyFrames.call(this,t);var e,i,n,s=t.keyframes;t.target;for(e in n={},t.secondFrames=n,s)(i=s[e]).length<=1?n[e]=-1:n[e]=i[1].index},u(0,e,"target",function(){return this._target},function(t){this._target&&this._target.off("effectanimationbegin",this,this._onOtherBegin),this._target=t,this._target&&this._target.on("effectanimationbegin",this,this._onOtherBegin),this.addEvent()}),u(0,e,"playEvent",null,function(t){(this._playEvents=t)&&this.addEvent()}),u(0,e,"effectData",null,function(t){var e;t&&((e=t.animations)&&e[0]&&(this._setUp({},e[0]),e[0].nodes&&e[0].nodes[0]&&(this._aniKeys=e[0].nodes[0].keys)))}),u(0,e,"effectClass",null,function(t){var e,i;(this._effectClass=U.getClass(t),this._effectClass)&&((e=this._effectClass.uiView)&&(i=e.animations)&&i[0]&&(this._setUp({},i[0]),i[0].nodes&&i[0].nodes[0]&&(this._aniKeys=i[0].nodes[0].keys)))}),t.EffectAnimationBegin="effectanimationbegin"}(wt),function(e){var P;function E(){this.animationList=null,this.animationDic=null,this._nodeList=null,this._nodeDefaultProps=null,this._gList=null,this._nodeIDAniDic={},this._rootNode=null,this._nodeGDic=null,E.__super.call(this)}p(E,"laya.utils.GraphicAnimation",e);var t=E.prototype;return t._parseNodeList=function(t){this._nodeList||(this._nodeList=[]),this._nodeDefaultProps[t.compId]=t.props,t.compId&&this._nodeList.push(t.compId);var e=t.child;if(e){var i=0,n=e.length;for(i=0;i<n;i++)this._parseNodeList(e[i])}},t._calGraphicData=function(t){var e;if(this._setUp(null,t),this._createGraphicData(),this._nodeIDAniDic)for(e in this._nodeIDAniDic)this._nodeIDAniDic[e]=null},t._createGraphicData=function(){var t,e=[],i=0,n=this.count,s=this._animationNewFrames;for(s||(s=[]),i=0;i<n;i++)!s[i]&&t||(t=this._createFrameGraphic(i)),e.push(t);this._gList=e},t._createFrameGraphic=function(t){var e=A.createGraphics();return E._rootMatrix||(E._rootMatrix=new I),this._updateNodeGraphic(this._rootNode,t,E._rootMatrix,e),e},t._updateNodeGraphic=function(t,e,i,n,s){var r;void 0===s&&(s=1);var o,a,h,l=(r=this._nodeGDic[t.compId]=this._getNodeGraphicData(t.compId,e,this._nodeGDic[t.compId])).alpha*s;if(!(l<.01)&&(r.resultTransform||(r.resultTransform=I.create()),o=r.resultTransform,I.mul(r.transform,i,o),r.skin&&(a=this._getTextureByUrl(r.skin))&&(o._checkTransform()?(n.drawTexture(a,0,0,r.width,r.height,o,l),r.resultTransform=null):n.drawTexture(a,o.tx,o.ty,r.width,r.height,null,l)),h=t.child)){var u,c=0;for(u=h.length,c=0;c<u;c++)this._updateNodeGraphic(h[c],e,o,n,l)}},t._updateNoChilds=function(t,e){if(t.skin){var i=this._getTextureByUrl(t.skin);if(i){var n=t.transform;n._checkTransform();!n.bTransform?e.drawTexture(i,n.tx,n.ty,t.width,t.height,null,t.alpha):e.drawTexture(i,0,0,t.width,t.height,n.clone(),t.alpha)}}},t._updateNodeGraphic2=function(t,e,i){var n;if(n=this._nodeGDic[t.compId]=this._getNodeGraphicData(t.compId,e,this._nodeGDic[t.compId]),t.child){var s=n.transform;s._checkTransform();var r,o;o=(r=!s.bTransform)&&(0!=s.tx||0!=s.ty);var a,h,l;if((a=s.bTransform||1!=n.alpha)&&i.save(),1!=n.alpha&&i.alpha(n.alpha),r?o&&i.translate(s.tx,s.ty):i.transform(s.clone()),h=t.child,n.skin&&(l=this._getTextureByUrl(n.skin))&&i.drawTexture(l,0,0,n.width,n.height),h){var u,c=0;for(u=h.length,c=0;c<u;c++)this._updateNodeGraphic2(h[c],e,i)}a?i.restore():r?o&&i.translate(-s.tx,-s.ty):i.transform(s.clone().invert())}else this._updateNoChilds(n,i)},t._calculateNodeKeyFrames=function(t){e.prototype._calculateNodeKeyFrames.call(this,t),this._nodeIDAniDic[t.target]=t},t.getNodeDataByID=function(t){return this._nodeIDAniDic[t]},t._getParams=function(t,e,i,n){var s=E._temParam;s.length=e.length;var r=0,o=e.length;for(r=0;r<o;r++)s[r]=this._getObjVar(t,e[r][0],i,e[r][1],n);return s},t._getObjVar=function(t,e,i,n,s){if(t.hasOwnProperty(e)){var r=t[e];if(i>=r.length&&(i=r.length-1),null!=t[e][i])return t[e][i]}return s.hasOwnProperty(e)?s[e]:n},t._getNodeGraphicData=function(t,e,i){i||(i=P.create()),i.transform?i.transform.identity():i.transform=I.create();var n=this.getNodeDataByID(t);if(!n)return i;var s,r,o=n.frames,a=this._getParams(o,E._drawTextureCmd,e,this._nodeDefaultProps[t]),h=a[0],l=NaN,u=NaN,c=a[5],_=a[6],d=a[13],f=a[14],p=a[7],g=a[8],m=a[9],v=a[11],y=a[12];l=a[3],u=a[4],0!=l&&0!=u||(h=null),-1==l&&(l=0),-1==u&&(u=0),i.skin=h,i.width=l,i.height=u,h&&((s=this._getTextureByUrl(h))?(l||(l=s.sourceWidth),u||(u=s.sourceHeight)):console.warn("lost skin:",h,",you may load pics first")),i.alpha=a[10],r=i.transform,0!=d&&(c=d*l),0!=f&&(_=f*u),0==c&&0==_||r.translate(-c,-_);var w=null;if(m||1!==p||1!==g||v||y){(w=E._tempMt).identity(),w.bTransform=!0;var x=.0174532922222222*(m-v),T=.0174532922222222*(m+y),b=Math.cos(T),C=Math.sin(T),M=Math.sin(x),S=Math.cos(x);w.a=p*b,w.b=p*C,w.c=-g*M,w.d=g*S,w.tx=w.ty=0}return w&&(r=I.mul(r,w,r)),r.translate(a[1],a[2]),i},t._getTextureByUrl=function(t){return at.getRes(t)},t.setAniData=function(t,e){if(t.animations){this._nodeDefaultProps={},this._nodeGDic={},this._nodeList&&(this._nodeList.length=0),this._rootNode=t,this._parseNodeList(t);var i,n={},s=[],r=t.animations,o=0,a=r.length;for(o=0;o<a;o++)if(i=r[o],this._labels=null,(!e||e==i.name)&&i){try{this._calGraphicData(i)}catch(t){console.warn("parse animation fail:"+i.name+",empty animation created"),this._gList=[]}var h={};h.interval=1e3/i.frameRate,h.frames=this._gList,h.labels=this._labels,h.name=i.name,s.push(h),n[i.name]=h}this.animationList=s,this.animationDic=n}E._temParam.length=0},t.parseByData=function(t){var e,i;e=t.nodeRoot,i=t.aniO,delete t.nodeRoot,delete t.aniO,this._nodeDefaultProps={},this._nodeGDic={},this._nodeList&&(this._nodeList.length=0),this._rootNode=e,this._parseNodeList(e),this._labels=null;try{this._calGraphicData(i)}catch(t){console.warn("parse animation fail:"+i.name+",empty animation created"),this._gList=[]}var n=t;return n.interval=1e3/i.frameRate,n.frames=this._gList,n.labels=this._labels,n.name=i.name,n},t.setUpAniData=function(t){if(t.animations){var e,i={},n=[],s=t.animations,r=0,o=s.length;for(r=0;r<o;r++)if(e=s[r]){var a={};a.name=e.name,a.aniO=e,a.nodeRoot=t,n.push(a),i[e.name]=a}this.animationList=n,this.animationDic=i}},t._clear=function(){var t,e;if(this.animationList=null,this.animationDic=null,this._gList=null,this._nodeGDic)for(t in this._nodeGDic)(e=this._nodeGDic[t])&&e.recover();this._nodeGDic=null},E.parseAnimationByData=function(t){var e;return E._I||(E._I=new E),e=E._I.parseByData(t),E._I._clear(),e},E.parseAnimationData=function(t){var e;return E._I||(E._I=new E),E._I.setUpAniData(t),(e={}).animationList=E._I.animationList,e.animationDic=E._I.animationDic,E._I._clear(),e},E._drawTextureCmd=[["skin",null],["x",0],["y",0],["width",-1],["height",-1],["pivotX",0],["pivotY",0],["scaleX",1],["scaleY",1],["rotation",0],["alpha",1],["skewX",0],["skewY",0],["anchorX",0],["anchorY",0]],E._temParam=[],E._I=null,E._rootMatrix=null,h(E,["_tempMt",function(){return this._tempMt=new I}]),E.__init$=function(){P=function(){function t(){this.skin=null,this.transform=null,this.resultTransform=null,this.width=NaN,this.height=NaN,this.alpha=1}return p(t,""),t.prototype.recover=function(){this.skin=null,this.width=0,this.height=0,this.alpha=1,this.transform&&(this.transform.destroy(),this.transform=null),this.resultTransform&&(this.resultTransform.destroy(),this.resultTransform=null),$.recover("GraphicNode",this)},t.create=function(){return $.getItemByClass("GraphicNode",t)},t}()},E}(wt));b.__init([l,ht,bt,D,B,j,S,t])}(window,document,Laya),function(t,e,i){i.un,i.uns,i.static;var n=i.class;i.getset,i.__newvec;new(function(){function t(){}return n(t,"LayaMain"),t}())}(window,document,Laya),"function"==typeof define&&define.amd&&define("laya.core",["require","exports"],function(t,e){"use strict";for(var i in Object.defineProperty(e,"__esModule",{value:!0}),Laya){var n=Laya[i];n&&n.__isclass&&(e[i]=n)}});
!function(a,i,o){o.un,o.uns;var e=o.static,n=o.class,r=o.getset,d=(o.__newvec,laya.utils.Browser),t=(laya.events.Event,laya.events.EventDispatcher),f=laya.resource.HTMLImage,g=laya.utils.Handler,l=laya.display.Input,y=laya.net.Loader,s=laya.net.LocalStorage,u=(laya.maths.Matrix,laya.renders.Render),c=laya.utils.RunDriver,h=laya.media.SoundChannel,v=laya.media.SoundManager,w=laya.net.URL,_=laya.utils.Utils,x=function(){function u(){}return n(u,"laya.wx.mini.MiniAdpter"),u.getJson=function(i){return JSON.parse(i)},u.init=function(i,e){if(void 0===i&&(i=!1),void 0===e&&(e=!1),!(u._inited||(u._inited=!0,(u.window=a).navigator.userAgent.indexOf("MiniGame")<0))){u.isZiYu=e,u.isPosMsgYu=i,u.EnvConfig={};try{laya.webgl.resource.WebGLCanvas.premulAlpha=!0}catch(i){}if(u.isZiYu||(C.setNativeFileDir("/layaairGame"),C.existDir(C.fileNativeDir,g.create(u,u.onMkdirCallBack))),"ios 10.1.1"===(u.systemInfo=wx.getSystemInfoSync()).system.toLowerCase())try{laya.webgl.resource.WebGLCharImage.canUseCanvas=!1}catch(i){}u.window.focus=function(){},o._getUrlPath=function(){},u.window.logtime=function(i){},u.window.alertTimeLog=function(i){},u.window.resetShareInfo=function(){},u.window.CanvasRenderingContext2D=function(){},u.window.CanvasRenderingContext2D.prototype=u.window.wx.createCanvas().getContext("2d").__proto__,u.window.document.body.appendChild=function(){},u.EnvConfig.pixelRatioInt=0,c.getPixelRatio=u.pixelRatio,u._preCreateElement=d.createElement,d.createElement=u.createElement,c.createShaderCondition=u.createShaderCondition,_.parseXMLFromString=u.parseXMLFromString,l._createInputElement=m._createInputElement,u.EnvConfig.load=y.prototype.load,y.prototype.load=L.prototype.load,y.prototype._loadImage=p.prototype._loadImage,(s._baseClass=F).__init__(),u.onReciveData()}},u.onReciveData=function(){laya.wx.mini.MiniAdpter.isZiYu&&wx.onMessage(function(i){"opendatacontext"==i.isLoad?i.url&&(C.ziyuFileData[i.url]=i.atlasdata,C.ziyuFileTextureData[i.imgReadyUrl]=i.imgNativeUrl):"openJsondatacontext"==i.isLoad?i.url&&(C.ziyuFileData[i.url]=i.atlasdata):"openJsondatacontextPic"==i.isLoad&&(C.ziyuFileTextureData[i.imgReadyUrl]=i.imgNativeUrl)})},u.measureText=function(i){var e=u._measureText(i);return e||(e={width:16},console.warn("-------微信获取文字宽度失败----等待修复---------")),e},u.getUrlEncode=function(i,e){return"arraybuffer"==e?"":"utf8"},u.downLoadFile=function(i,e,t,n){void 0===e&&(e=""),void 0===n&&(n="ascii"),C.getFileInfo(i)?null!=t&&t.runWith([0]):C.downLoadFile(i,e,t,n)},u.remove=function(i,e){C.deleteFile("",i,e,"",0)},u.removeAll=function(){C.deleteAll()},u.hasNativeFile=function(i){return C.isLocalNativeFile(i)},u.getFileInfo=function(i){return C.getFileInfo(i)},u.getFileList=function(){return C.filesListObj},u.exitMiniProgram=function(){u.window.wx.exitMiniProgram()},u.onMkdirCallBack=function(i,e){i||(C.filesListObj=JSON.parse(e.data))},u.pixelRatio=function(){if(!u.EnvConfig.pixelRatioInt)try{return u.EnvConfig.pixelRatioInt=u.systemInfo.pixelRatio,u.systemInfo.pixelRatio}catch(i){}return u.EnvConfig.pixelRatioInt},u.createElement=function(i){var e;if("canvas"==i)return 1==u.idx?u.isZiYu?(e=sharedCanvas).style={}:e=a.canvas:e=a.wx.createCanvas(),u.idx++,e;if("textarea"==i||"input"==i)return u.onCreateInput(i);if("div"!=i)return u._preCreateElement(i);var t=u._preCreateElement(i);return t.contains=function(i){return null},t.removeChild=function(i){},t},u.onCreateInput=function(i){var e=u._preCreateElement(i);return e.focus=m.wxinputFocus,e.blur=m.wxinputblur,e.style={},e.value=0,e.parentElement={},e.placeholder={},e.type={},e.setColor=function(i){},e.setType=function(i){},e.setFontFace=function(i){},e.addEventListener=function(i){},e.contains=function(i){return null},e.removeChild=function(i){},e},u.createShaderCondition=function(i){var e=this;return function(){return e[i.replace("this.","")]}},u.sendAtlasToOpenDataContext=function(i){if(!laya.wx.mini.MiniAdpter.isZiYu){var e=y.getRes(w.formatURL(i));if(!e)throw"传递的url没有获取到对应的图集数据信息，请确保图集已经过！";e.meta.image.split(",");if(e.meta&&e.meta.image)for(var t=e.meta.image.split(","),n=0<=i.indexOf("/")?"/":"\\",a=i.lastIndexOf(n),o=0<=a?i.substr(0,a+1):"",r=0,l=t.length;r<l;r++)t[r]=o+t[r];else t=[i.replace(".json",".png")];for(r=0;r<t.length;r++){var s=t[r];u.postInfoToContext(i,s,e)}}},u.postInfoToContext=function(i,e,t){var n={frames:t.frames,meta:t.meta},a=e,o=C.getFileInfo(w.formatURL(e));if(o)var r=o.md5,l=C.getFileNativePath(r);else l=a;if(!l)throw"获取图集的磁盘url路径不存在！";wx.postMessage({url:i,atlasdata:n,imgNativeUrl:l,imgReadyUrl:a,isLoad:"opendatacontext"})},u.sendSinglePicToOpenDataContext=function(i){var e=w.formatURL(i),t=C.getFileInfo(e);if(t){var n=t.md5,a=C.getFileNativePath(n);i=e}else a=i;if(!a)throw"获取图集的磁盘url路径不存在！";wx.postMessage({url:i,imgNativeUrl:a,imgReadyUrl:i,isLoad:"openJsondatacontextPic"})},u.sendJsonDataToDataContext=function(i){if(!laya.wx.mini.MiniAdpter.isZiYu){var e=y.getRes(i);if(!e)throw"传递的url没有获取到对应的图集数据信息，请确保图集已经过！";wx.postMessage({url:i,atlasdata:e,isLoad:"openJsondatacontext"})}},u.EnvConfig=null,u.window=null,u._preCreateElement=null,u._inited=!1,u.systemInfo=null,u.isZiYu=!1,u.isPosMsgYu=!1,u.autoCacheFile=!0,u.minClearSize=5242880,u.subNativeFiles=null,u.subNativeheads=[],u.subMaps=[],u.AutoCacheDownFile=!1,u._measureText=null,u.parseXMLFromString=function(i){var e;i=i.replace(/>\s+</g,"><");try{e=(new a.Parser.DOMParser).parseFromString(i,"text/xml")}catch(i){throw"需要引入xml解析库文件"}return e},u.idx=1,e(u,["nativefiles",function(){return this.nativefiles=["layaNativeDir","wxlocal"]}]),u}(),C=function(){function c(){}return n(c,"laya.wx.mini.MiniFileMgr"),c.isLocalNativeFile=function(i){for(var e=0,t=x.nativefiles.length;e<t;e++)if(-1!=i.indexOf(x.nativefiles[e]))return!0;return!1},c.getFileInfo=function(i){var e=c.filesListObj[i];return null==e?null:e},c.read=function(i,e,t,n,a,o){var r;void 0===e&&(e="ascill"),void 0===n&&(n=""),void 0===a&&(a=!1),void 0===o&&(o=""),r=""==n||-1==n.indexOf("http://")&&-1==n.indexOf("https://")?i:c.getFileNativePath(i),c.fs.readFile({filePath:r,encoding:e,success:function(i){null!=t&&t.runWith([0,i])},fail:function(i){i&&""!=n?c.downFiles(n,e,t,n,a,o):null!=t&&t.runWith([1])}})},c.downFiles=function(e,t,n,a,o,r,l){void 0===t&&(t="ascii"),void 0===a&&(a=""),void 0===o&&(o=!1),void 0===r&&(r=""),void 0===l&&(l=!0),c.wxdown({url:e,success:function(i){200===i.statusCode?c.readFile(i.tempFilePath,t,n,a,o,r,l):403===i.statusCode?null!=n&&n.runWith([0,e]):null!=n&&n.runWith([1,i])},fail:function(i){null!=n&&n.runWith([1,i])}}).onProgressUpdate(function(i){null!=n&&n.runWith([2,i.progress])})},c.readFile=function(e,t,n,a,o,i,r){void 0===t&&(t="ascill"),void 0===a&&(a=""),void 0===o&&(o=!1),void 0===i&&(i=""),void 0===r&&(r=!0),c.fs.readFile({filePath:e,encoding:t,success:function(i){-1!=e.indexOf("http://")||-1!=e.indexOf("https://")?(x.autoCacheFile||o)&&c.copyFile(e,a,n,t,r):null!=n&&n.runWith([0,i])},fail:function(i){i&&null!=n&&n.runWith([1,i])}})},c.downOtherFiles=function(i,e,t,n,a){void 0===t&&(t=""),void 0===n&&(n=!1),void 0===a&&(a=!0),c.wxdown({url:i,success:function(i){200===i.statusCode?(x.autoCacheFile||n)&&-1==t.indexOf("wx.qlogo.cn")&&-1==t.indexOf(".php")?c.copyFile(i.tempFilePath,t,e,"",a):null!=e&&e.runWith([0,i.tempFilePath]):null!=e&&e.runWith([1,i])},fail:function(i){null!=e&&e.runWith([1,i])}})},c.downLoadFile=function(i,e,t,n){void 0===e&&(e=""),void 0===n&&(n="ascii"),a.navigator.userAgent.indexOf("MiniGame")<0?o.loader.load(i,t):"image"==e||"sound"==e?c.downOtherFiles(i,t,i,!0,!1):c.downFiles(i,n,t,i,!0,e,!1)},c.copyFile=function(i,t,n,a,o){void 0===a&&(a=""),void 0===o&&(o=!0);var e=i.split("/"),r=e[e.length-1],l=c.getFileInfo(t),s=c.getFileNativePath(r),u=c.getCacheUseSize();l?l.readyUrl!=t?c.fs.getFileInfo({filePath:i,success:function(i){o&&52428800<=u+4194304+i.size&&(i.size>x.minClearSize&&(x.minClearSize=i.size),c.onClearCacheRes()),c.deleteFile(r,t,n,a,i.size)},fail:function(i){null!=n&&n.runWith([1,i])}}):null!=n&&n.runWith([0]):c.fs.getFileInfo({filePath:i,success:function(e){o&&52428800<=u+4194304+e.size&&(e.size>x.minClearSize&&(x.minClearSize=e.size),c.onClearCacheRes()),c.fs.copyFile({srcPath:i,destPath:s,success:function(i){c.onSaveFile(t,r,!0,a,n,e.size)},fail:function(i){null!=n&&n.runWith([1,i])}})},fail:function(i){null!=n&&n.runWith([1,i])}})},c.onClearCacheRes=function(){var i=x.minClearSize,e=[];for(var t in c.filesListObj)e.push(c.filesListObj[t]);c.sortOn(e,"times",16);for(var n=0,a=1,o=e.length;a<o;a++){var r=e[a];if(i<=n)break;n+=r.size,c.deleteFile("",r.readyUrl)}},c.sortOn=function(i,t,e){return void 0===e&&(e=0),16==e?i.sort(function(i,e){return i[t]-e[t]}):18==e?i.sort(function(i,e){return e[t]-i[t]}):i.sort(function(i,e){return i[t]-e[t]})},c.getFileNativePath=function(i){return laya.wx.mini.MiniFileMgr.fileNativeDir+"/"+i},c.deleteFile=function(n,a,o,r,l){void 0===a&&(a=""),void 0===r&&(r=""),void 0===l&&(l=0);var i=c.getFileInfo(a),e=c.getFileNativePath(i.md5);c.fs.unlink({filePath:e,success:function(i){var e=""!=n;if(""!=n){var t=c.getFileNativePath(n);c.fs.copyFile({srcPath:n,destPath:t,success:function(i){c.onSaveFile(a,n,e,r,o,i.size)},fail:function(i){null!=o&&o.runWith([1,i])}})}else c.onSaveFile(a,n,e,r,o,l)},fail:function(i){}})},c.deleteAll=function(){var i=[];for(var e in c.filesListObj)i.push(c.filesListObj[e]);for(var t=1,n=i.length;t<n;t++){var a=i[t];c.deleteFile("",a.readyUrl)}laya.wx.mini.MiniFileMgr.filesListObj&&laya.wx.mini.MiniFileMgr.filesListObj.fileUsedSize&&(laya.wx.mini.MiniFileMgr.filesListObj.fileUsedSize=0),laya.wx.mini.MiniFileMgr.writeFilesList("",JSON.stringify({}),!1)},c.onSaveFile=function(i,e,t,n,a,o){void 0===t&&(t=!0),void 0===n&&(n=""),void 0===o&&(o=0);var r=i;if(null==c.filesListObj.fileUsedSize&&(c.filesListObj.fileUsedSize=0),t){c.getFileNativePath(e);c.filesListObj[r]={md5:e,readyUrl:i,size:o,times:d.now(),encoding:n},c.filesListObj.fileUsedSize=parseInt(c.filesListObj.fileUsedSize)+o,c.writeFilesList(r,JSON.stringify(c.filesListObj),!0),null!=a&&a.runWith([0])}else if(c.filesListObj[r]){var l=parseInt(c.filesListObj[r].size);c.filesListObj.fileUsedSize=parseInt(c.filesListObj.fileUsedSize)-l,delete c.filesListObj[r],c.writeFilesList(r,JSON.stringify(c.filesListObj),!1),null!=a&&a.runWith([0])}},c.writeFilesList=function(i,e,t){var n=c.fileNativeDir+"/"+c.fileListName;c.fs.writeFile({filePath:n,encoding:"utf8",data:e,success:function(i){},fail:function(i){}}),!x.isZiYu&&x.isPosMsgYu&&wx.postMessage({url:i,data:c.filesListObj[i],isLoad:"filenative",isAdd:t})},c.getCacheUseSize=function(){return c.filesListObj&&c.filesListObj.fileUsedSize?c.filesListObj.fileUsedSize:0},c.existDir=function(i,e){c.fs.mkdir({dirPath:i,success:function(i){null!=e&&e.runWith([0,{data:JSON.stringify({})}])},fail:function(i){-1!=i.errMsg.indexOf("file already exists")?c.readSync(c.fileListName,"utf8",e):null!=e&&e.runWith([1,i])}})},c.readSync=function(i,e,t,n){void 0===e&&(e="ascill"),void 0===n&&(n="");var a,o=c.getFileNativePath(i);try{a=c.fs.readFileSync(o,e),null!=t&&t.runWith([0,{data:a}])}catch(i){null!=t&&t.runWith([1])}},c.setNativeFileDir=function(i){c.fileNativeDir=wx.env.USER_DATA_PATH+i},c.filesListObj={},c.fileNativeDir=null,c.fileListName="layaairfiles.txt",c.ziyuFileData={},c.ziyuFileTextureData={},c.loadPath="",c.DESCENDING=2,c.NUMERIC=16,e(c,["fs",function(){return this.fs=wx.getFileSystemManager()},"wxdown",function(){return this.wxdown=wx.downloadFile}]),c}(),p=function(){function c(){}return n(c,"laya.wx.mini.MiniImage"),c.prototype._loadImage=function(i){var e=this;if(x.isZiYu)c.onCreateImage(i,e,!0);else{var t=!1;if(C.isLocalNativeFile(i)){if(-1!=i.indexOf("http://")||-1!=i.indexOf("https://"))if(""!=C.loadPath)i=i.split(C.loadPath)[1];else{var n=""!=w.rootPath?w.rootPath:w.basePath,a=i;""!=n&&(i=i.split(n)[1]),i||(i=a)}if(x.subNativeFiles&&0==x.subNativeheads.length)for(var o in x.subNativeFiles){var r=x.subNativeFiles[o];x.subNativeheads=x.subNativeheads.concat(r);for(var l=0;l<r.length;l++)x.subMaps[r[l]]=o+"/"+r[l]}if(x.subNativeFiles&&-1!=i.indexOf("/")){var s=i.split("/")[0]+"/";if(s&&-1!=x.subNativeheads.indexOf(s)){var u=x.subMaps[s];i=i.replace(s,u)}}}else t=!0,i=w.formatURL(i);C.getFileInfo(i)?c.onCreateImage(i,e,!t):-1!=i.indexOf("http://")||-1!=i.indexOf("https://")?x.isZiYu?c.onCreateImage(i,e,!0):C.downOtherFiles(i,new g(c,c.onDownImgCallBack,[i,e]),i):c.onCreateImage(i,e,!0)}},c.onDownImgCallBack=function(i,e,t,n){void 0===n&&(n=""),t?e.onError(null):c.onCreateImage(i,e,!1,n)},c.onCreateImage=function(e,t,i,n){var a,o;if(void 0===i&&(i=!1),void 0===n&&(n=""),x.autoCacheFile)if(i)if(x.isZiYu){var r=w.formatURL(e);a=C.ziyuFileTextureData[r]?C.ziyuFileTextureData[r]:e}else a=e;else if(""!=n)a=n;else{var l=C.getFileInfo(e).md5;a=C.getFileNativePath(l)}else a=i?e:n;function s(){o.onload=null,o.onerror=null,delete t.imgCache[e]}null==t.imgCache&&(t.imgCache={});var u=function(){s(),t._url=w.formatURL(t._url),t.onLoaded(o)},c=function(){s(),t.event("error","Load image failed")};"nativeimage"==t._type?((o=new d.window.Image).crossOrigin="",o.onload=u,o.onerror=c,o.src=a,t.imgCache[e]=o):new f.create(a,{onload:u,onerror:c,onCreate:function(i){o=i,t.imgCache[e]=i}})},c}(),m=function(){function t(){}return n(t,"laya.wx.mini.MiniInput"),t._createInputElement=function(){l._initInput(l.area=d.createElement("textarea")),l._initInput(l.input=d.createElement("input")),l.inputContainer=d.createElement("div"),l.inputContainer.style.position="absolute",l.inputContainer.style.zIndex=1e5,d.container.appendChild(l.inputContainer),l.inputContainer.setPos=function(i,e){l.inputContainer.style.left=i+"px",l.inputContainer.style.top=e+"px"},o.stage.on("resize",null,t._onStageResize),wx.onWindowResize&&wx.onWindowResize(function(i){a.dispatchEvent&&a.dispatchEvent("resize")}),v._soundClass=b,v._musicClass=b;var i=x.systemInfo.model,e=x.systemInfo.system;-1!=i.indexOf("iPhone")&&(d.onIPhone=!0,d.onIOS=!0,d.onIPad=!0,d.onAndroid=!1),-1==e.indexOf("Android")&&-1==e.indexOf("Adr")||(d.onAndroid=!0,d.onIPhone=!1,d.onIOS=!1,d.onIPad=!1)},t._onStageResize=function(){o.stage._canvasTransform.identity().scale(d.width/u.canvas.width/c.getPixelRatio(),d.height/u.canvas.height/c.getPixelRatio())},t.wxinputFocus=function(i){var t=l.inputElement.target;t&&!t.editable||(x.window.wx.offKeyboardConfirm(),x.window.wx.offKeyboardInput(),x.window.wx.showKeyboard({defaultValue:t.text,maxLength:t.maxChars,multiple:t.multiline,confirmHold:!0,confirmType:"done",success:function(i){},fail:function(i){}}),x.window.wx.onKeyboardConfirm(function(i){var e=i?i.value:"";t.text=e,t.event("input"),laya.wx.mini.MiniInput.inputEnter()}),x.window.wx.onKeyboardInput(function(i){var e=i?i.value:"";t.multiline||-1==e.indexOf("\n")?(t.text=e,t.event("input")):laya.wx.mini.MiniInput.inputEnter()}))},t.inputEnter=function(){l.inputElement.target.focus=!1},t.wxinputblur=function(){t.hideKeyboard()},t.hideKeyboard=function(){x.window.wx.offKeyboardConfirm(),x.window.wx.offKeyboardInput(),x.window.wx.hideKeyboard({success:function(i){console.log("隐藏键盘")},fail:function(i){console.log("隐藏键盘出错:"+(i?i.errMsg:""))}})},t}(),F=function(){function t(){}return n(t,"laya.wx.mini.MiniLocalStorage"),t.__init__=function(){t.items=t},t.setItem=function(e,t){try{wx.setStorageSync(e,t)}catch(i){wx.setStorage({key:e,data:t})}},t.getItem=function(i){return wx.getStorageSync(i)},t.setJSON=function(i,e){t.setItem(i,e)},t.getJSON=function(i){return t.getItem(i)},t.removeItem=function(i){wx.removeStorageSync(i)},t.clear=function(){wx.clearStorageSync()},t.getStorageInfoSync=function(){try{var i=wx.getStorageInfoSync();return console.log(i.keys),console.log(i.currentSize),console.log(i.limitSize),i}catch(i){}return null},t.support=!0,t.items=null,t}(),L=(function(){function a(){}n(a,"laya.wx.mini.MiniLocation"),a.__init__=function(){x.window.navigator.geolocation.getCurrentPosition=a.getCurrentPosition,x.window.navigator.geolocation.watchPosition=a.watchPosition,x.window.navigator.geolocation.clearWatch=a.clearWatch},a.getCurrentPosition=function(e,i,t){var n;(n={success:function(i){null!=e&&e(i)}}).fail=i,x.window.wx.getLocation(n)},a.watchPosition=function(i,e,t){var n;return a._curID++,(n={}).success=i,n.error=e,a._watchDic[a._curID]=n,o.timer.loop(1e3,null,a._myLoop),a._curID},a.clearWatch=function(i){delete a._watchDic[i],a._hasWatch()||o.timer.clear(null,a._myLoop)},a._hasWatch=function(){var i;for(i in a._watchDic)if(a._watchDic[i])return!0;return!1},a._myLoop=function(){a.getCurrentPosition(a._mySuccess,a._myError)},a._mySuccess=function(i){var e,t={};for(e in t.coords=i,t.timestamp=d.now(),a._watchDic)a._watchDic[e].success&&a._watchDic[e].success(t)},a._myError=function(i){var e;for(e in a._watchDic)a._watchDic[e].error&&a._watchDic[e].error(i)},a._watchDic={},a._curID=0}(),function(a){function o(){o.__super.call(this)}n(o,"laya.wx.mini.MiniAccelerator",a);var i=o.prototype;i.on=function(i,e,t,n){return a.prototype.on.call(this,i,e,t,n),o.startListen(this.onDeviceOrientationChange),this},i.off=function(i,e,t,n){return void 0===n&&(n=!1),this.hasListener(i)||o.stopListen(),a.prototype.off.call(this,i,e,t,n)},o.__init__=function(){try{var i;if(!(i=laya.device.motion.Accelerator))return;i.prototype.on=o.prototype.on,i.prototype.off=o.prototype.off}catch(i){}},o.startListen=function(i){if(o._callBack=i,!o._isListening){o._isListening=!0;try{wx.onAccelerometerChange(o.onAccelerometerChange)}catch(i){}}},o.stopListen=function(){o._isListening=!1;try{wx.stopAccelerometer({})}catch(i){}},o.onAccelerometerChange=function(i){var e;(e={}).acceleration=i,e.accelerationIncludingGravity=i,e.rotationRate={},null!=o._callBack&&o._callBack(e)},o._isListening=!1,o._callBack=null}(t),function(i){function m(){m.__super.call(this)}return n(m,"laya.wx.mini.MiniLoader",t),m.prototype.load=function(i,e,t,n,a){void 0===t&&(t=!0),void 0===a&&(a=!1);var o=this;if(0===(o._url=i).indexOf("data:image")?o._type=e="image":o._type=e||(e=o.getTypeFromUrl(i)),o._cache=t,o._data=null,!a&&y.loadedMap[w.formatURL(i)])return o._data=y.loadedMap[w.formatURL(i)],this.event("progress",1),void this.event("complete",o._data);if(null!=y.parserMap[e])return o._customParse=!0,void(y.parserMap[e]instanceof laya.utils.Handler?y.parserMap[e].runWith(this):y.parserMap[e].call(null,this));var r=x.getUrlEncode(i,e),l=_.getFileExtension(i);if(-1!=m._fileTypeArr.indexOf(l))x.EnvConfig.load.call(this,i,e,t,n,a);else{if(x.isZiYu&&!C.ziyuFileData[i]&&(i=w.formatURL(i)),x.isZiYu&&C.ziyuFileData[i]){var s=C.ziyuFileData[i];return void o.onLoaded(s)}if(C.getFileInfo(i)){var u=C.getFileInfo(i);u.encoding=null==u.encoding?"ascii":u.encoding,C.readFile(i,u.encoding,new g(m,m.onReadNativeCallBack,[r,i,e,t,n,a,o]),i)}else{if(C.isLocalNativeFile(i)){if(x.subNativeFiles&&0==x.subNativeheads.length)for(var c in x.subNativeFiles){var d=x.subNativeFiles[c];x.subNativeheads=x.subNativeheads.concat(d);for(var f=0;f<d.length;f++)x.subMaps[d[f]]=c+"/"+d[f]}if(x.subNativeFiles&&-1!=i.indexOf("/")){var h=i.split("/")[0]+"/";if(h&&-1!=x.subNativeheads.indexOf(h)){var v=x.subMaps[h];i=i.replace(h,v)}}return void C.read(i,r,new g(m,m.onReadNativeCallBack,[r,i,e,t,n,a,o]))}var p=i;-1!=(i=w.formatURL(i)).indexOf("http://")||-1!=i.indexOf("https://")?x.EnvConfig.load.call(o,p,e,t,n,a):C.readFile(i,r,new g(m,m.onReadNativeCallBack,[r,i,e,t,n,a,o]),i)}}},m.onReadNativeCallBack=function(i,e,t,n,a,o,r,l,s){var u;(void 0===n&&(n=!0),void 0===o&&(o=!1),void 0===l&&(l=0),l)?1==l&&(console.log("-----------本地加载失败，尝试外网加载----"),x.EnvConfig.load.call(r,e,t,n,a,o)):(u="json"==t||"atlas"==t?x.getJson(s.data):"xml"==t?_.parseXMLFromString(s.data):s.data,!x.isZiYu&&x.isPosMsgYu&&"arraybuffer"!=t&&wx.postMessage({url:e,data:u,isLoad:"filedata"}),r.onLoaded(u))},e(m,["_fileTypeArr",function(){return this._fileTypeArr=["png","jpg","bmp","jpeg","gif"]}]),m}()),b=function(i){function s(){this._sound=null,this.url=null,this.loaded=!1,this.readyUrl=null,s.__super.call(this)}n(s,"laya.wx.mini.MiniSound",t);var e=s.prototype;return e.load=function(i){if(C.isLocalNativeFile(i)){if(-1!=i.indexOf("http://")||-1!=i.indexOf("https://"))if(""!=C.loadPath)i=i.split(C.loadPath)[1];else{var e=""!=w.rootPath?w.rootPath:w.basePath;""!=e&&(i=i.split(e)[1])}}else i=w.formatURL(i);if(this.url=i,this.readyUrl=i,s._audioCache[this.readyUrl])this.event("complete");else if(x.autoCacheFile&&C.getFileInfo(i))this.onDownLoadCallBack(i,0);else if(x.autoCacheFile)if(C.isLocalNativeFile(i)){var t=i;if(""!=(e=""!=w.rootPath?w.rootPath:w.basePath)&&(i=i.split(e)[1]),i||(i=t),x.subNativeFiles&&0==x.subNativeheads.length)for(var n in x.subNativeFiles){var a=x.subNativeFiles[n];x.subNativeheads=x.subNativeheads.concat(a);for(var o=0;o<a.length;o++)x.subMaps[a[o]]=n+"/"+a[o]}if(x.subNativeFiles&&-1!=i.indexOf("/")){var r=i.split("/")[0]+"/";if(r&&-1!=x.subNativeheads.indexOf(r)){var l=x.subMaps[r];i=i.replace(r,l)}}this.onDownLoadCallBack(i,0)}else C.downOtherFiles(i,g.create(this,this.onDownLoadCallBack,[i]),i);else this.onDownLoadCallBack(i,0)},e.onDownLoadCallBack=function(i,e){if(e)this.event("error");else{var t;if(x.autoCacheFile){var n=C.getFileInfo(i);if(n&&n.md5){var a=n.md5;t=C.getFileNativePath(a)}else t=i;this._sound=s._createSound(),this._sound.src=this.url=t}else this._sound=s._createSound(),this._sound.src=i;this._sound.onCanplay(s.bindToThis(this.onCanPlay,this)),this._sound.onError(s.bindToThis(this.onError,this))}},e.onError=function(i){try{console.log("-----1---------------minisound-----id:"+s._id),console.log(i)}catch(i){console.log("-----2---------------minisound-----id:"+s._id),console.log(i)}this.event("error"),this._sound.offError(null)},e.onCanPlay=function(){this.loaded=!0,this.event("complete"),this._sound.offCanplay(null)},e.play=function(i,e){var t;if(void 0===i&&(i=0),void 0===e&&(e=0),t=this.url==v._tMusic?(s._musicAudio||(s._musicAudio=s._createSound()),s._musicAudio):s._audioCache[this.readyUrl]?s._audioCache[this.readyUrl]._sound:s._createSound(),x.autoCacheFile&&C.getFileInfo(this.url)){var n=C.getFileInfo(this.url).md5;t.src=this.url=C.getFileNativePath(n)}else t.src=this.url;var a=new I(t,this);return a.url=this.url,a.loops=e,a.loop=0===e,a.startTime=i,a.play(),v.addChannel(a),a},e.dispose=function(){var i=s._audioCache[this.readyUrl];i&&(i.src="",i._sound&&(i._sound.destroy(),i._sound=null,i=null),delete s._audioCache[this.readyUrl])},r(0,e,"duration",function(){return this._sound.duration}),s._createSound=function(){return s._id++,x.window.wx.createInnerAudioContext()},s.bindToThis=function(i,e){return i.bind(e)},s._musicAudio=null,s._id=0,s._audioCache={},s}(),I=function(i){function t(i,e){this._audio=null,this._onEnd=null,this._miniSound=null,t.__super.call(this),this._audio=i,this._miniSound=e,this._onEnd=t.bindToThis(this.__onEnd,this),i.onEnded(this._onEnd)}n(t,"laya.wx.mini.MiniSoundChannel",h);var e=t.prototype;return e.__onEnd=function(){if(1==this.loops)return this.completeHandler&&(o.timer.once(10,this,this.__runComplete,[this.completeHandler],!1),this.completeHandler=null),this.stop(),void this.event("complete");0<this.loops&&this.loops--,this.startTime=0,this.play()},e.play=function(){this.isStopped=!1,v.addChannel(this),this._audio.play()},e.stop=function(){this.isStopped=!0,v.removeChannel(this),this.completeHandler=null,this._audio&&(this._audio.pause(),this._audio.offEnded(null),this._audio=null,this._miniSound=null,this._onEnd=null)},e.pause=function(){this.isStopped=!0,this._audio.pause()},e.resume=function(){this._audio&&(this.isStopped=!1,v.addChannel(this),this._audio.play())},r(0,e,"startTime",null,function(i){this._audio&&(this._audio.startTime=i)}),r(0,e,"autoplay",function(){return this._audio.autoplay},function(i){this._audio.autoplay=i}),r(0,e,"position",function(){return this._audio?this._audio.currentTime:0}),r(0,e,"duration",function(){return this._audio?this._audio.duration:0}),r(0,e,"loop",function(){return this._audio.loop},function(i){this._audio.loop=i}),r(0,e,"volume",function(){return this._audio?this._audio.volume:1},function(i){this._audio&&(this._audio.volume=i)}),t.bindToThis=function(i,e){return i.bind(e)},t}()}(window,document,Laya),"function"==typeof define&&define.amd&&define("laya.core",["require","exports"],function(i,e){"use strict";for(var t in Object.defineProperty(e,"__esModule",{value:!0}),Laya){var n=Laya[t];n&&n.__isclass&&(e[t]=n)}});
!function(t,e,T){T.un,T.uns;var n=T.static,c=T.class,r=T.getset,a=T.__newvec,l=laya.maths.Arith,u=laya.maths.Bezier,i=laya.resource.Bitmap,f=laya.utils.Browser,h=laya.utils.Byte,d=laya.utils.Color,A=(laya.filters.ColorFilter,T.Config),s=laya.resource.Context,E=(laya.events.Event,laya.filters.Filter),o=laya.display.Graphics,_=laya.resource.HTMLCanvas,m=(laya.utils.HTMLChar,laya.resource.HTMLImage),p=laya.resource.HTMLSubImage,S=(laya.utils.Handler,laya.net.Loader,laya.maths.Matrix),w=laya.maths.Point,R=laya.maths.Rectangle,g=laya.renders.Render,v=(laya.renders.RenderContext,laya.renders.RenderSprite),x=laya.resource.Resource,b=laya.resource.ResourceManager,y=laya.utils.RunDriver,I=laya.display.Sprite,M=laya.display.Stage,C=laya.utils.Stat,L=laya.utils.StringKey,P=(laya.display.css.Style,laya.system.System),D=laya.display.Text,F=laya.resource.Texture,B=(laya.display.css.TransformInfo,laya.net.URL,laya.utils.Utils),N=laya.utils.VectorGraphManager;laya.utils.WordText;T.interface("laya.webgl.shapes.IShape"),T.interface("laya.webgl.submit.ISubmit"),T.interface("laya.webgl.text.ICharSegment"),T.interface("laya.webgl.canvas.save.ISaveData"),T.interface("laya.webgl.resource.IMergeAtlasBitmap"),T.interface("laya.filters.IFilterActionGL","laya.filters.IFilterAction");var O=function(){function t(){}c(t,"laya.filters.webgl.FilterActionGL");var e=t.prototype;return T.imps(e,{"laya.filters.IFilterActionGL":!0}),e.setValue=function(t){},e.setValueMix=function(t){},e.apply3d=function(t,e,i,r,s){return null},e.apply=function(t){return null},r(0,e,"typeMix",function(){return 0}),t}(),V=function(){function t(){}return c(t,"laya.webgl.shader.ShaderValue"),t}(),U=function(){var r,s;function t(t,e,i){this._atlasID=0,this._width=0,this._height=0,this._texCount=0,this._rowInfo=null,this._cells=null,this._failSize=new s,void 0===t&&(t=0),void 0===e&&(e=0),void 0===i&&(i=0),this._cells=null,this._rowInfo=null,this._init(t,e),this._atlasID=i}c(t,"laya.webgl.atlas.AtlasGrid");var e=t.prototype;return e.getAltasID=function(){return this._atlasID},e.setAltasID=function(t){0<=t&&(this._atlasID=t)},e.addTex=function(t,e,i){var r=this._get(e,i);return 0==r.ret||(this._fill(r.x,r.y,e,i,t),this._texCount++),r},e._release=function(){null!=this._cells&&(this._cells.length=0,this._cells=null),this._rowInfo&&(this._rowInfo.length=0,this._rowInfo=null)},e._init=function(t,e){if(this._width=t,this._height=e,this._release(),0==this._width)return!1;this._cells=new Uint8Array(this._width*this._height*3),this._rowInfo=a(this._height);for(var i=0;i<this._height;i++)this._rowInfo[i]=new r;return this._clear(),!0},e._get=function(t,e){var i=new H;if(t>=this._failSize.width&&e>=this._failSize.height)return i;for(var r=-1,s=-1,a=this._width,n=this._height,h=this._cells,l=0;l<n;l++)if(!(this._rowInfo[l].spaceCount<t))for(var o=0;o<a;){var u=3*(l*a+o);if(0!=h[u]||h[u+1]<t||h[u+2]<e)o+=h[u+1];else{r=o,s=l;for(var _=0;_<t;_++)if(h[3*_+u+2]<e){r=-1;break}if(!(r<0))return i.ret=!0,i.x=r,i.y=s,i;o+=h[u+1]}}return i},e._fill=function(t,e,i,r,s){var a=this._width,n=this._height;this._check(t+i<=a&&e+r<=n);for(var h=e;h<r+e;++h){this._check(this._rowInfo[h].spaceCount>=i),this._rowInfo[h].spaceCount-=i;for(var l=0;l<i;l++){var o=3*(t+h*a+l);this._check(0==this._cells[o]),this._cells[o]=s,this._cells[o+1]=i,this._cells[o+2]=r}}if(0<t)for(h=0;h<r;++h){var u=0;for(l=t-1;0<=l&&0==this._cells[3*((e+h)*a+l)];--l,++u);for(l=u;0<l;--l)this._cells[3*((e+h)*a+t-l)+1]=l,this._check(0<l)}if(0<e)for(l=t;l<t+i;++l){for(u=0,h=e-1;0<=h&&0==this._cells[3*(l+h*a)];--h,u++);for(h=u;0<h;--h)this._cells[3*(l+(e-h)*a)+2]=h,this._check(0<h)}},e._check=function(t){0==t&&console.log("xtexMerger 错误啦")},e._clear=function(){for(var t=this._texCount=0;t<this._height;t++)this._rowInfo[t].spaceCount=this._width;for(var e=0;e<this._height;e++)for(var i=0;i<this._width;i++){var r=3*(e*this._width+i);this._cells[r]=0,this._cells[r+1]=this._width-i,this._cells[r+2]=this._width-e}this._failSize.width=this._width+1,this._failSize.height=this._height+1},t.__init$=function(){r=function(){function t(){this.spaceCount=0}return c(t,""),t}(),s=function(){function t(){this.width=0,this.height=0}return c(t,""),t}()},t}(),k=function(){function g(t,e,i,r){this._currentAtlasCount=0,this._maxAtlaserCount=0,this._width=0,this._height=0,this._gridSize=0,this._gridNumX=0,this._gridNumY=0,this._init=!1,this._curAtlasIndex=0,this._setAtlasParam=!1,this._atlaserArray=null,this._needGC=!1,this._setAtlasParam=!0,this._width=t,this._height=e,this._gridSize=i,this._maxAtlaserCount=r,this._gridNumX=t/i,this._gridNumY=e/i,this._curAtlasIndex=0,this._atlaserArray=[]}c(g,"laya.webgl.atlas.AtlasResourceManager");var t=g.prototype;return t.setAtlasParam=function(t,e,i,r){if(1==this._setAtlasParam)return g._sid_=0,this._width=t,this._height=e,this._gridSize=i,this._maxAtlaserCount=r,this._gridNumX=t/i,this._gridNumY=e/i,this._curAtlasIndex=0,this.freeAll(),!0;throw console.log("设置大图合集参数错误，只能在开始页面设置各种参数"),-1},t.pushData=function(t){var e,i=t.bitmap,r=-1,s=null,a=0,n=0;for(a=0,e=this._atlaserArray.length;a<e&&(n=(this._curAtlasIndex+a)%e,-1==(r=(s=this._atlaserArray[n]).findBitmapIsExist(i)));a++);if(-1!=r){var h=s.InAtlasWebGLImagesOffsetValue[r];return d=h[0],m=h[1],s.addToAtlas(t,d,m),!0}this._setAtlasParam=!1;for(var l=Math.ceil((t.bitmap.width+2)/this._gridSize),o=Math.ceil((t.bitmap.height+2)/this._gridSize),u=!1,_=0;_<2;_++){var c=this._maxAtlaserCount;for(a=0;a<c;a++){n=(this._curAtlasIndex+a)%c,this._atlaserArray.length-1>=n||this._atlaserArray.push(new Rt(this._gridNumX,this._gridNumY,this._width,this._height,g._sid_++));var f=this._atlaserArray[n],d=0,m=0,p=f.addTex(1,l,o);if(p.ret){d=p.x*this._gridSize+1,m=p.y*this._gridSize+1,i.lock=!0,f.addToAtlasTexture(i,d,m),f.addToAtlas(t,d,m),u=!0,this._curAtlasIndex=n;break}}if(u)break;this._atlaserArray.push(new Rt(this._gridNumX,this._gridNumY,this._width,this._height,g._sid_++)),this._needGC=!0,this.garbageCollection(),this._curAtlasIndex=this._atlaserArray.length-1}return u||console.log(">>>AtlasManager pushData error"),u},t.addToAtlas=function(t){laya.webgl.atlas.AtlasResourceManager.instance.pushData(t)},t.garbageCollection=function(){if(!0===this._needGC){for(var t=this._atlaserArray.length-this._maxAtlaserCount,e=0;e<t;e++)this._atlaserArray[e].dispose(),console.log("AtlasResourceManager:Dispose the inner Atlas。");console.log(">>>>altas garbageCollection ="+t),this._atlaserArray.splice(0,t),this._needGC=!1}return!0},t.freeAll=function(){for(var t=0,e=this._atlaserArray.length;t<e;t++)this._atlaserArray[t].dispose();this._atlaserArray.length=0,this._curAtlasIndex=0},t.getAtlaserCount=function(){return this._atlaserArray.length},t.getAtlaserByIndex=function(t){return this._atlaserArray[t]},r(1,g,"instance",function(){return g._Instance||(g._Instance=new g(laya.webgl.atlas.AtlasResourceManager.atlasTextureWidth,laya.webgl.atlas.AtlasResourceManager.atlasTextureHeight,16,laya.webgl.atlas.AtlasResourceManager.maxTextureCount)),g._Instance}),r(1,g,"enabled",function(){return A.atlasEnable}),r(1,g,"atlasLimitWidth",function(){return g._atlasLimitWidth},function(t){g._atlasLimitWidth=t}),r(1,g,"atlasLimitHeight",function(){return g._atlasLimitHeight},function(t){g._atlasLimitHeight=t}),g._enable=function(){A.atlasEnable=!0},g._disable=function(){A.atlasEnable=!1},g.__init__=function(){g.atlasTextureWidth=2048,g.atlasTextureHeight=2048,g.maxTextureCount=6,g.atlasLimitWidth=512,g.atlasLimitHeight=512},g._atlasLimitWidth=0,g._atlasLimitHeight=0,g.gridSize=16,g.atlasTextureWidth=0,g.atlasTextureHeight=0,g.maxTextureCount=0,g._atlasRestore=0,g.BOARDER_TYPE_NO=0,g.BOARDER_TYPE_RIGHT=1,g.BOARDER_TYPE_LEFT=2,g.BOARDER_TYPE_BOTTOM=4,g.BOARDER_TYPE_TOP=8,g.BOARDER_TYPE_ALL=15,g._sid_=0,g._Instance=null,g}(),H=function(){function t(){this.x=0,this.y=0,this.ret=!1,this.ret=!1,this.x=0,this.y=0}return c(t,"laya.webgl.atlas.MergeFillInfo"),t}(),G=function(){function e(){}return c(e,"laya.webgl.canvas.BlendMode"),e._init_=function(t){e.fns=[e.BlendNormal,e.BlendAdd,e.BlendMultiply,e.BlendScreen,e.BlendOverlay,e.BlendLight,e.BlendMask,e.BlendDestinationOut],e.targetFns=[e.BlendNormalTarget,e.BlendAddTarget,e.BlendMultiplyTarget,e.BlendScreenTarget,e.BlendOverlayTarget,e.BlendLightTarget,e.BlendMask,e.BlendDestinationOut]},e.BlendNormal=function(t){t.blendFunc(1,771)},e.BlendAdd=function(t){t.blendFunc(1,772)},e.BlendMultiply=function(t){t.blendFunc(774,771)},e.BlendScreen=function(t){t.blendFunc(1,1)},e.BlendOverlay=function(t){t.blendFunc(1,769)},e.BlendLight=function(t){t.blendFunc(1,1)},e.BlendNormalTarget=function(t){t.blendFunc(1,771)},e.BlendAddTarget=function(t){t.blendFunc(1,772)},e.BlendMultiplyTarget=function(t){t.blendFunc(774,771)},e.BlendScreenTarget=function(t){t.blendFunc(1,1)},e.BlendOverlayTarget=function(t){t.blendFunc(1,769)},e.BlendLightTarget=function(t){t.blendFunc(1,1)},e.BlendMask=function(t){t.blendFunc(0,770)},e.BlendDestinationOut=function(t){t.blendFunc(0,0)},e.activeBlendFunction=null,e.NAMES=["normal","add","multiply","screen","overlay","light","mask","destination-out"],e.TOINT={normal:0,add:1,multiply:2,screen:3,lighter:1,overlay:4,light:5,mask:6,"destination-out":7},e.NORMAL="normal",e.ADD="add",e.MULTIPLY="multiply",e.SCREEN="screen",e.LIGHT="light",e.OVERLAY="overlay",e.DESTINATIONOUT="destination-out",e.fns=[],e.targetFns=[],e}(),z=function(){function i(t){this._color=d.create("black"),this.setValue(t)}c(i,"laya.webgl.canvas.DrawStyle");var t=i.prototype;return t.setValue=function(t){if(t){if("string"==typeof t)return void(this._color=d.create(t));if(t instanceof laya.utils.Color)return void(this._color=t)}},t.reset=function(){this._color=d.create("black")},t.equal=function(t){return"string"==typeof t?this._color.strColor===t:t instanceof laya.utils.Color&&this._color.numColor===t.numColor},t.toColorStr=function(){return this._color.strColor},i.create=function(t){var e;if(t&&("string"==typeof t?e=d.create(t):t instanceof laya.utils.Color&&(e=t),e))return e._drawStyle||(e._drawStyle=new i(t));return laya.webgl.canvas.DrawStyle.DEFAULT},n(i,["DEFAULT",function(){return this.DEFAULT=new i("#000000")}]),i}(),W=function(){function t(){this._x=0,this._y=0,this.dirty=!1,this.offset=0,this.count=0,this.geoStart=0,this.tempArray=[],this.closePath=!1,this.geomatrys=[];bt.mainContext;this.ib=$t.create(35048),this.vb=Jt.create(5)}c(t,"laya.webgl.canvas.Path");var e=t.prototype;return e.addPoint=function(t,e){this.tempArray.push(t,e)},e.getEndPointX=function(){return this.tempArray[this.tempArray.length-2]},e.getEndPointY=function(){return this.tempArray[this.tempArray.length-1]},e.polygon=function(t,e,i,r,s,a){var n;return this.geomatrys.push(this._curGeomatry=n=new Lt(t,e,i,r,s,a)),r||(n.fill=!1),null==a&&(n.borderWidth=0),n},e.setGeomtry=function(t){this.geomatrys.push(this._curGeomatry=t)},e.drawLine=function(t,e,i,r,s){var a;return this.closePath?this.geomatrys.push(this._curGeomatry=a=new Ct(t,e,i,r,s)):this.geomatrys.push(this._curGeomatry=a=new Mt(t,e,i,r,s)),a.fill=!1,a},e.update=function(){var t=this.ib._byteLength,e=this.geomatrys.length;this.offset=t;for(var i=this.geoStart;i<e;i++)this.geomatrys[i].getData(this.ib,this.vb,this.vb._byteLength/20);this.geoStart=e,this.count=(this.ib._byteLength-t)/mt.BYTES_PIDX},e.reset=function(){this.vb.clear(),this.ib.clear(),this.offset=this.count=this.geoStart=0,this.geomatrys.length=0},e.recover=function(){this._curGeomatry=null,this.vb.destory(),this.vb=null,this.ib.destory(),this.ib=null},t}(),Y=function(){function h(){}c(h,"laya.webgl.canvas.save.SaveBase");var t=h.prototype;return T.imps(t,{"laya.webgl.canvas.save.ISaveData":!0}),t.isSaveMark=function(){return!1},t.restore=function(t){this._dataObj[this._valueName]=this._value,(h._cache[h._cache._length++]=this)._newSubmit&&(t._curSubmit=at.RENDERBASE,t._renderKey=0)},h._createArray=function(){var t=[];return t._length=0,t},h._init=function(){var t=h._namemap={};return t[1]="ALPHA",t[2]="fillStyle",t[8]="font",t[256]="lineWidth",t[512]="strokeStyle",t[8192]="_mergeID",t[1024]=t[2048]=t[4096]=[],t[16384]="textBaseline",t[32768]="textAlign",t[65536]="_nBlendType",t[1048576]="shader",t[2097152]="filters",t},h.save=function(t,e,i,r){if((t._saveMark._saveuse&e)!==e){t._saveMark._saveuse|=e;var s=h._cache,a=0<s._length?s[--s._length]:new h;a._value=i[a._valueName=h._namemap[e]],a._dataObj=i,a._newSubmit=r;var n=t._save;n[n._length++]=a}},h._cache=laya.webgl.canvas.save.SaveBase._createArray(),h._namemap=h._init(),h}(),X=function(){function a(){this._clipRect=new R}c(a,"laya.webgl.canvas.save.SaveClipRect");var t=a.prototype;return T.imps(t,{"laya.webgl.canvas.save.ISaveData":!0}),t.isSaveMark=function(){return!1},t.restore=function(t){t._clipRect=this._clipSaveRect,(a._cache[a._cache._length++]=this)._submitScissor.submitLength=t._submits._length-this._submitScissor.submitIndex,t._curSubmit=at.RENDERBASE,t._renderKey=0},a.save=function(t,e){if(131072!=(131072&t._saveMark._saveuse)){t._saveMark._saveuse|=131072;var i=a._cache,r=0<i._length?i[--i._length]:new a;r._clipSaveRect=t._clipRect,t._clipRect=r._clipRect.copyFrom(t._clipRect),r._submitScissor=e;var s=t._save;s[s._length++]=r}},n(a,["_cache",function(){return this._cache=Y._createArray()}]),a}(),K=function(){function f(){this._contextX=0,this._contextY=0,this._clipRect=new R,this._rect=new R,this._matrix=new S}c(f,"laya.webgl.canvas.save.SaveClipRectStencil");var t=f.prototype;return T.imps(t,{"laya.webgl.canvas.save.ISaveData":!0}),t.isSaveMark=function(){return!1},t.restore=function(t){ut.restore(t,this._rect,this._saveMatrix,this._contextX,this._contextY),t._clipRect=this._clipSaveRect,t._curMat=this._saveMatrix,t._x=this._contextX,t._y=this._contextY,f._cache[f._cache._length++]=this,t._curSubmit=at.RENDERBASE},f.save=function(t,e,i,r,s,a,n,h,l,o){if(262144!=(262144&t._saveMark._saveuse)){t._saveMark._saveuse|=262144;var u=f._cache,_=0<u._length?u[--u._length]:new f;_._clipSaveRect=t._clipRect,_._clipRect.setTo(n,h,l,o),t._clipRect=_._clipRect,_._rect.x=i,_._rect.y=r,_._rect.width=s,_._rect.height=a,_._contextX=t._x,_._contextY=t._y,_._saveMatrix=t._curMat,t._curMat.copyTo(_._matrix),t._curMat=_._matrix,_._submitStencil=e;var c=t._save;c[c._length++]=_}},n(f,["_cache",function(){return this._cache=Y._createArray()}]),f}(),Q=function(){function r(){this._saveuse=0}c(r,"laya.webgl.canvas.save.SaveMark");var t=r.prototype;return T.imps(t,{"laya.webgl.canvas.save.ISaveData":!0}),t.isSaveMark=function(){return!0},t.restore=function(t){t._saveMark=this._preSaveMark,r._no[r._no._length++]=this},r.Create=function(t){var e=r._no,i=0<e._length?e[--e._length]:new r;return i._saveuse=0,i._preSaveMark=t._saveMark,t._saveMark=i},n(r,["_no",function(){return this._no=Y._createArray()}]),r}(),Z=function(){function a(){this._matrix=new S}c(a,"laya.webgl.canvas.save.SaveTransform");var t=a.prototype;return T.imps(t,{"laya.webgl.canvas.save.ISaveData":!0}),t.isSaveMark=function(){return!1},t.restore=function(t){t._curMat=this._savematrix,a._no[a._no._length++]=this},a.save=function(t){var e=t._saveMark;if(2048!=(2048&e._saveuse)){e._saveuse|=2048;var i=a._no,r=0<i._length?i[--i._length]:new a;r._savematrix=t._curMat,t._curMat=t._curMat.copyTo(r._matrix);var s=t._save;s[s._length++]=r}},n(a,["_no",function(){return this._no=Y._createArray()}]),a}(),q=function(){function s(){}c(s,"laya.webgl.canvas.save.SaveTranslate");var t=s.prototype;return T.imps(t,{"laya.webgl.canvas.save.ISaveData":!0}),t.isSaveMark=function(){return!1},t.restore=function(t){t._curMat;t._x=this._x,t._y=this._y,s._no[s._no._length++]=this},s.save=function(t){var e=s._no,i=0<e._length?e[--e._length]:new s;i._x=t._x,i._y=t._y;var r=t._save;r[r._length++]=i},n(s,["_no",function(){return this._no=Y._createArray()}]),s}(),j=function(){function t(){this.target=null,this.repaint=!1,this._width=NaN,this._height=NaN,this._sp=null,this._clipRect=new R}c(t,"laya.webgl.resource.RenderTargetMAX");var e=t.prototype;return e.setSP=function(t){this._sp=t},e.size=function(t,e){var i=this;this._width!==t||this._height!==e?(this.repaint=!0,this._width=t,this._height=e,this.target?this.target.size(t,e):this.target=Nt.create(t,e),this.target.hasListener("recovered")||this.target.on("recovered",this,function(t){T.timer.callLater(i._sp,i._sp.repaint)})):this.target.size(t,e)},e._flushToTarget=function(t,e){if(!e._destroy){var i=vt.worldScissorTest,r=vt.worldClipRect;vt.worldClipRect=this._clipRect,this._clipRect.x=this._clipRect.y=0,this._clipRect.width=this._width,this._clipRect.height=this._height,vt.worldScissorTest=!1,bt.mainContext.disable(3089);var s=vt.worldAlpha,a=vt.worldMatrix4,n=vt.worldMatrix,h=vt.worldFilters,l=vt.worldShaderDefines;if(vt.worldMatrix=S.EMPTY,vt.restoreTempArray(),vt.worldMatrix4=vt.TEMPMAT4_ARRAY,vt.worldAlpha=1,vt.worldFilters=null,vt.worldShaderDefines=null,Bt.activeShader=null,e.start(),A.showCanvasMark?e.clear(0,1,0,.3):e.clear(0,0,0,0),t.flush(),e.end(),Bt.activeShader=null,vt.worldAlpha=s,vt.worldMatrix4=a,vt.worldMatrix=n,vt.worldFilters=h,vt.worldShaderDefines=l,vt.worldScissorTest=i){var o=vt.height-r.y-r.height;bt.mainContext.scissor(r.x,o,r.width,r.height),bt.mainContext.enable(3089)}vt.worldClipRect=r}},e.flush=function(t){this.repaint&&(this._flushToTarget(t,this.target),this.repaint=!1)},e.drawTo=function(t,e,i,r,s){t.drawTexture(this.target.getTexture(),e,i,r,s,0,0)},e.destroy=function(){this.target&&(this.target.destroy(),this.target=null,this._sp=null)},t}(),$=function(){function t(){this.ALPHA=1,this.shaderType=0,this.defines=new It}return c(t,"laya.webgl.shader.d2.Shader2D"),t.prototype.destroy=function(){this.defines=null,this.filters=null,this.glTexture=null,this.strokeStyle=null,this.fillStyle=null},t.__init__=function(){var t,e;Qt.addInclude("parts/ColorFilter_ps_uniform.glsl","uniform vec4 colorAlpha;\nuniform mat4 colorMat;"),Qt.addInclude("parts/ColorFilter_ps_logic.glsl","mat4 alphaMat =colorMat;\n\nalphaMat[0][3] *= gl_FragColor.a;\nalphaMat[1][3] *= gl_FragColor.a;\nalphaMat[2][3] *= gl_FragColor.a;\n\ngl_FragColor = gl_FragColor * alphaMat;\ngl_FragColor += colorAlpha/255.0*gl_FragColor.a;\n"),Qt.addInclude("parts/GlowFilter_ps_uniform.glsl","uniform vec4 u_color;\nuniform float u_strength;\nuniform float u_blurX;\nuniform float u_blurY;\nuniform float u_offsetX;\nuniform float u_offsetY;\nuniform float u_textW;\nuniform float u_textH;"),Qt.addInclude("parts/GlowFilter_ps_logic.glsl","const float c_IterationTime = 10.0;\nfloat floatIterationTotalTime = c_IterationTime * c_IterationTime;\nvec4 vec4Color = vec4(0.0,0.0,0.0,0.0);\nvec2 vec2FilterDir = vec2(-(u_offsetX)/u_textW,-(u_offsetY)/u_textH);\nvec2 vec2FilterOff = vec2(u_blurX/u_textW/c_IterationTime * 2.0,u_blurY/u_textH/c_IterationTime * 2.0);\nfloat maxNum = u_blurX * u_blurY;\nvec2 vec2Off = vec2(0.0,0.0);\nfloat floatOff = c_IterationTime/2.0;\nfor(float i = 0.0;i<=c_IterationTime; ++i){\n\tfor(float j = 0.0;j<=c_IterationTime; ++j){\n\t\tvec2Off = vec2(vec2FilterOff.x * (i - floatOff),vec2FilterOff.y * (j - floatOff));\n\t\tvec4Color += texture2D(texture, v_texcoord + vec2FilterDir + vec2Off)/floatIterationTotalTime;\n\t}\n}\ngl_FragColor = vec4(u_color.rgb,vec4Color.a * u_strength);\ngl_FragColor.rgb *= gl_FragColor.a;"),Qt.addInclude("parts/BlurFilter_ps_logic.glsl","gl_FragColor =   blur();\ngl_FragColor.w*=alpha;"),Qt.addInclude("parts/BlurFilter_ps_uniform.glsl","uniform vec4 strength_sig2_2sig2_gauss1;\nuniform vec2 blurInfo;\n\n#define PI 3.141593\n\n//float sigma=strength/3.0;//3σ以外影响很小。即当σ=1的时候，半径为3\n//float sig2 = sigma*sigma;\n//float _2sig2 = 2.0*sig2;\n//return 1.0/(2*PI*sig2)*exp(-(x*x+y*y)/_2sig2)\n//float gauss1 = 1.0/(2.0*PI*sig2);\n\nfloat getGaussian(float x, float y){\n    return strength_sig2_2sig2_gauss1.w*exp(-(x*x+y*y)/strength_sig2_2sig2_gauss1.z);\n}\n\nvec4 blur(){\n    const float blurw = 9.0;\n    vec4 vec4Color = vec4(0.0,0.0,0.0,0.0);\n    vec2 halfsz=vec2(blurw,blurw)/2.0/blurInfo;    \n    vec2 startpos=v_texcoord-halfsz;\n    vec2 ctexcoord = startpos;\n    vec2 step = 1.0/blurInfo;  //每个像素      \n    \n    for(float y = 0.0;y<=blurw; ++y){\n        ctexcoord.x=startpos.x;\n        for(float x = 0.0;x<=blurw; ++x){\n            //TODO 纹理坐标的固定偏移应该在vs中处理\n            vec4Color += texture2D(texture, ctexcoord)*getGaussian(x-blurw/2.0,y-blurw/2.0);\n            ctexcoord.x+=step.x;\n        }\n        ctexcoord.y+=step.y;\n    }\n    return vec4Color;\n}"),Qt.addInclude("parts/ColorAdd_ps_uniform.glsl","uniform vec4 colorAdd;\n"),Qt.addInclude("parts/ColorAdd_ps_logic.glsl","gl_FragColor = vec4(colorAdd.rgb,colorAdd.a*gl_FragColor.a);\ngl_FragColor.xyz *= colorAdd.a;"),t="attribute vec4 position;\nattribute vec2 texcoord;\nuniform vec2 size;\n\n#ifdef WORLDMAT\nuniform mat4 mmat;\n#endif\nvarying vec2 v_texcoord;\nvoid main() {\n  #ifdef WORLDMAT\n  vec4 pos=mmat*position;\n  gl_Position =vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0);\n  #else\n  gl_Position =vec4((position.x/size.x-0.5)*2.0,(0.5-position.y/size.y)*2.0,position.z,1.0);\n  #endif\n  \n  v_texcoord = texcoord;\n}",e='precision mediump float;\n//precision highp float;\nvarying vec2 v_texcoord;\nuniform sampler2D texture;\nuniform float alpha;\n#include?BLUR_FILTER  "parts/BlurFilter_ps_uniform.glsl";\n#include?COLOR_FILTER "parts/ColorFilter_ps_uniform.glsl";\n#include?GLOW_FILTER "parts/GlowFilter_ps_uniform.glsl";\n#include?COLOR_ADD "parts/ColorAdd_ps_uniform.glsl";\n\nvoid main() {\n   vec4 color= texture2D(texture, v_texcoord);\n   color.a*=alpha;\n   color.rgb*=alpha;\n   gl_FragColor=color;\n   #include?COLOR_ADD "parts/ColorAdd_ps_logic.glsl";   \n   #include?BLUR_FILTER  "parts/BlurFilter_ps_logic.glsl";\n   #include?COLOR_FILTER "parts/ColorFilter_ps_logic.glsl";\n   #include?GLOW_FILTER "parts/GlowFilter_ps_logic.glsl";\n}',Qt.preCompile2D(0,1,t,e,null),t="attribute vec4 position;\nuniform vec2 size;\nuniform mat4 mmat;\nvoid main() {\n  vec4 pos=mmat*position;\n  gl_Position =vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0);\n}",e='precision mediump float;\nuniform vec4 color;\nuniform float alpha;\n#include?COLOR_FILTER "parts/ColorFilter_ps_uniform.glsl";\nvoid main() {\n\tvec4 a = vec4(color.r, color.g, color.b, color.a);\n\ta.w = alpha;\n\ta.xyz *= alpha;\n\tgl_FragColor = a;\n\t#include?COLOR_FILTER "parts/ColorFilter_ps_logic.glsl";\n}',Qt.preCompile2D(0,2,t,e,null),t="attribute vec4 position;\nattribute vec3 a_color;\nuniform mat4 mmat;\nuniform mat4 u_mmat2;\nuniform vec2 u_pos;\nuniform vec2 size;\nvarying vec3 color;\nvoid main(){\n  vec4 tPos = vec4(position.x + u_pos.x,position.y + u_pos.y,position.z,position.w);\n  vec4 pos=mmat*u_mmat2*tPos;\n  gl_Position =vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0);\n  color=a_color;\n}",e="precision mediump float;\n//precision mediump float;\nvarying vec3 color;\nuniform float alpha;\nvoid main(){\n\t//vec4 a=vec4(color.r, color.g, color.b, 1);\n\t//a.a*=alpha;\n    gl_FragColor=vec4(color.r, color.g, color.b, alpha);\n\tgl_FragColor.rgb*=alpha;\n}",Qt.preCompile2D(0,4,t,e,null),t="attribute vec4 position;\nattribute vec2 texcoord;\nuniform vec2 size;\n\n#ifdef WORLDMAT\nuniform mat4 mmat;\n#endif\nvarying vec2 v_texcoord;\nvoid main() {\n  #ifdef WORLDMAT\n  vec4 pos=mmat*position;\n  gl_Position =vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0);\n  #else\n  gl_Position =vec4((position.x/size.x-0.5)*2.0,(0.5-position.y/size.y)*2.0,position.z,1.0);\n  #endif\n  \n  v_texcoord = texcoord;\n}",e='#ifdef FSHIGHPRECISION\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n//precision highp float;\nvarying vec2 v_texcoord;\nuniform sampler2D texture;\nuniform float alpha;\nuniform vec4 u_TexRange;\nuniform vec2 u_offset;\n#include?BLUR_FILTER  "parts/BlurFilter_ps_uniform.glsl";\n#include?COLOR_FILTER "parts/ColorFilter_ps_uniform.glsl";\n#include?GLOW_FILTER "parts/GlowFilter_ps_uniform.glsl";\n#include?COLOR_ADD "parts/ColorAdd_ps_uniform.glsl";\n\nvoid main() {\n   vec2 newTexCoord;\n   newTexCoord.x = mod(u_offset.x + v_texcoord.x,u_TexRange.y) + u_TexRange.x;\n   newTexCoord.y = mod(u_offset.y + v_texcoord.y,u_TexRange.w) + u_TexRange.z;\n   vec4 color= texture2D(texture, newTexCoord);\n   color.a*=alpha;\n   gl_FragColor=color;\n   #include?COLOR_ADD "parts/ColorAdd_ps_logic.glsl";   \n   #include?BLUR_FILTER  "parts/BlurFilter_ps_logic.glsl";\n   #include?COLOR_FILTER "parts/ColorFilter_ps_logic.glsl";\n   #include?GLOW_FILTER "parts/GlowFilter_ps_logic.glsl";\n}',Qt.preCompile2D(0,256,t,e,null),t="attribute vec2 position;\nattribute vec2 texcoord;\nattribute vec4 color;\nuniform vec2 size;\nuniform float offsetX;\nuniform float offsetY;\nuniform mat4 mmat;\nuniform mat4 u_mmat2;\nvarying vec2 v_texcoord;\nvarying vec4 v_color;\nvoid main() {\n  vec4 pos=mmat*u_mmat2*vec4(offsetX+position.x,offsetY+position.y,0,1 );\n  gl_Position = vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0);\n  v_color = color;\n  v_color.rgb *= v_color.a;\n  v_texcoord = texcoord;  \n}",e="precision mediump float;\nvarying vec2 v_texcoord;\nvarying vec4 v_color;\nuniform sampler2D texture;\nuniform float alpha;\nvoid main() {\n\tvec4 t_color = texture2D(texture, v_texcoord);\n\tgl_FragColor = t_color.rgba * v_color;\n\tgl_FragColor *= alpha;\n}",Qt.preCompile2D(0,512,t,e,null)},t}(),J=function(){function e(t,e,i){this._value=0,this._name2int=t,this._int2name=e,this._int2nameMap=i}c(e,"laya.webgl.shader.ShaderDefines");var t=e.prototype;return t.add=function(t){return"string"==typeof t&&(t=this._name2int[t]),this._value|=t,this._value},t.addInt=function(t){return this._value|=t,this._value},t.remove=function(t){return"string"==typeof t&&(t=this._name2int[t]),this._value&=~t,this._value},t.isDefine=function(t){return(this._value&t)===t},t.getValue=function(){return this._value},t.setValue=function(t){this._value=t},t.toNameDic=function(){var t=this._int2nameMap[this._value];return t||e._toText(this._value,this._int2name,this._int2nameMap)},e._reg=function(t,e,i,r){r[i[t]=e]=t},e._toText=function(t,e,i){var r=i[t];if(r)return r;for(var s={},a=1,n=0;n<32&&!(t<(a=1<<n));n++)if(t&a){var h=e[a];h&&(s[h]="")}return i[t]=s},e._toInt=function(t,e){for(var i=t.split("."),r=0,s=0,a=i.length;s<a;s++){var n=e[i[s]];if(!n)throw new Error("Defines to int err:"+t+"/"+i[s]);r|=n}return r},e}(),tt=function(){function n(){this.mVBBuffer=null,this.mIBBuffer=null,this.mVBData=null,this.mIBData=null,this.mEleNum=0,this.mTexture=null,this.transform=null,this._vs=null,this._ps=null,this._indexStart=-1,this._verticles=null,this._uvs=null,this._tempMatrix=new S}c(n,"laya.webgl.shader.d2.skinAnishader.SkinMesh");var t=n.prototype;return t.init=function(t,e,i){if(e)this._vs=e;else{this._vs=[];var r=t.width,s=t.height;this._vs.push(0,0,0,0,1,1,1,1),this._vs.push(r,0,1,0,1,1,1,1),this._vs.push(r,s,1,1,1,1,1,1),this._vs.push(0,s,0,1,1,1,1,1)}this._ps=i||(n._defaultPS||(n._defaultPS=[]).push(0,1,3,3,1,2),n._defaultPS),this.mVBData=new Float32Array(this._vs),this.mIBData=new Uint16Array(this._ps.length),this.mIBData.start=-1,this.mEleNum=this._ps.length,this.mTexture=t},t.init2=function(t,e,i,r,s){this.transform&&(this.transform=null),i?this._ps=i:(this._ps=[],this._ps.push(0,1,3,3,1,2)),this._verticles=r,this._uvs=s,this.mEleNum=this._ps.length,this.mTexture=t,(g.isConchNode||g.isConchApp)&&(this._initMyData(),this.mVBData=new Float32Array(this._vs))},t._initMyData=function(){var t=0,e=0,i=4*this._verticles.length;this._vs=n._tempVS;var r=!1;if(g.isConchNode||g.isConchApp?(this._vs.length=i,r=!0):this._vs.length<i&&(this._vs.length=i,r=!0),n._tVSLen=i,r)for(;t<i;)this._vs[t]=this._verticles[e],this._vs[t+1]=this._verticles[e+1],this._vs[t+2]=this._uvs[e],this._vs[t+3]=this._uvs[e+1],this._vs[t+4]=1,this._vs[t+5]=1,this._vs[t+6]=1,this._vs[t+7]=1,t+=8,e+=2;else for(;t<i;)this._vs[t]=this._verticles[e],this._vs[t+1]=this._verticles[e+1],this._vs[t+2]=this._uvs[e],this._vs[t+3]=this._uvs[e+1],t+=8,e+=2},t.getData2=function(t,e,i){var r;this.mVBBuffer=t,this.mIBBuffer=e,this._initMyData(),t.appendEx2(this._vs,Float32Array,n._tVSLen,4),this._indexStart=e._byteLength,(r=n._tempIB).length<this._ps.length&&(r.length=this._ps.length);for(var s=0,a=this._ps.length;s<a;s++)r[s]=this._ps[s]+i;e.appendEx2(r,Uint16Array,this._ps.length,2)},t.getData=function(t,e,i){if(this.mVBBuffer=t,this.mIBBuffer=e,t.append(this.mVBData),this._indexStart=e._byteLength,this.mIBData.start!=i){for(var r=0,s=this._ps.length;r<s;r++)this.mIBData[r]=this._ps[r]+i;this.mIBData.start=i}e.append(this.mIBData)},t.render=function(t,e,i){if(g.isWebGL&&this.mTexture){t._renderKey=0,t._shader2D.glTexture=null,et.getInstance().addSkinMesh(this);var r=at.createShape(t,this.mIBBuffer,this.mVBBuffer,this.mEleNum,this._indexStart,Et.create(512,0));this.transform||(this.transform=S.EMPTY),this.transform.translate(e,i),S.mul(this.transform,t._curMat,this._tempMatrix),this.transform.translate(-e,-i);var s=r.shaderValue,a=s.u_mmat2||vt.getMatrArray();vt.mat2MatArray(this._tempMatrix,a),s.textureHost=this.mTexture,s.offsetX=0,s.offsetY=0,s.u_mmat2=a,s.ALPHA=t._shader2D.ALPHA,t._submits[t._submits._length++]=r}else g.isConchApp&&this.mTexture&&(this.transform||(this.transform=S.EMPTY),t.setSkinMesh&&t.setSkinMesh(e,i,this._ps,this.mVBData,this.mEleNum,0,this.mTexture,this.transform))},n._tempVS=[],n._tempIB=[],n._defaultPS=null,n._tVSLen=0,n}(),et=function(){function t(){this.ib=null,this.vb=null;bt.mainContext;this.ib=$t.create(35048),this.vb=Jt.create(8)}c(t,"laya.webgl.shader.d2.skinAnishader.SkinMeshBuffer");var e=t.prototype;return e.addSkinMesh=function(t){t.getData2(this.vb,this.ib,this.vb._byteLength/32)},e.reset=function(){this.vb.clear(),this.ib.clear()},t.getInstance=function(){return t.instance=t.instance||new t},t.instance=null,t}(),it=function(){function t(t,e,i,r,s,a,n,h,l){this.r0=0,this.fill=!0,this.r1=Math.PI/2,void 0===l&&(l=0),this.x=t,this.y=e,this.width=i,this.height=r,this.edges=s,this.color=a,this.borderWidth=n,this.borderColor=h}c(t,"laya.webgl.shapes.BasePoly");var e=t.prototype;return T.imps(e,{"laya.webgl.shapes.IShape":!0}),e.getData=function(t,e,i){},e.rebuild=function(t){},e.setMatrix=function(t){},e.needUpdate=function(t){return!0},e.sector=function(t,e,i){var r=this.x,s=this.y,a=this.edges,n=(this.r1-this.r0)/a,h=this.width,l=this.height,o=this.color,u=(o>>16&255)/255,_=(o>>8&255)/255,c=(255&o)/255;t.push(r,s,u,_,c);for(var f=0;f<a+1;f++)t.push(r+Math.sin(n*f+this.r0)*h,s+Math.cos(n*f+this.r0)*l),t.push(u,_,c);for(f=0;f<a;f++)e.push(i,i+f+1,i+f+2)},e.createLine2=function(t,e,i,r,s,a){var n,h,l,o,u,_,c,f,d,m,p,g,v,x,b,y,T,A,E,S,w=t.concat(),R=s,I=this.borderColor,M=(I>>16&255)/255,C=(I>>8&255)/255,L=(255&I)/255,P=w.length/2,D=r,F=i/2;l=w[0],o=w[1],m=l-(u=w[2]),d=(d=-(o-(_=w[3])))/(S=Math.sqrt(d*d+m*m))*F,m=m/S*F,R.push(l-d+this.x,o-m+this.y,M,C,L,l+d+this.x,o+m+this.y,M,C,L);for(var B=1;B<P-1;B++)l=w[2*(B-1)],o=w[2*(B-1)+1],u=w[2*B],_=w[2*B+1],c=w[2*(B+1)],f=w[2*(B+1)+1],m=l-u,g=u-c,b=(-(d=(d=-(o-_))/(S=Math.sqrt(d*d+m*m))*F)+l)*(-(m=m/S*F)+_)-(-d+u)*(-m+o),A=(-(p=(p=-(_-f))/(S=Math.sqrt(p*p+g*g))*F)+c)*(-(g=g/S*F)+_)-(-p+u)*(-g+f),E=(v=-m+o-(-m+_))*(T=-p+u-(-p+c))-(y=-g+f-(-g+_))*(x=-d+u-(-d+l)),Math.abs(E)<.1?(E+=10.1,R.push(u-d+this.x,_-m+this.y,M,C,L,u+d+this.x,_+m+this.y,M,C,L)):(((n=(x*A-T*b)/E)-u)*(n-u)+((h=(y*b-v*A)/E)-_)+(h-_),R.push(n+this.x,h+this.y,M,C,L,u-(n-u)+this.x,_-(h-_)+this.y,M,C,L));l=w[w.length-4],o=w[w.length-3],m=l-(u=w[w.length-2]),d=(d=-(o-(_=w[w.length-1])))/(S=Math.sqrt(d*d+m*m))*F,m=m/S*F,R.push(u-d+this.x,_-m+this.y,M,C,L,u+d+this.x,_+m+this.y,M,C,L);var N=a;for(B=1;B<N;B++)e.push(D+2*(B-1),D+2*(B-1)+1,D+2*B+1,D+2*B+1,D+2*B,D+2*(B-1));return R},e.createLine=function(t,e,i,r){var s=t.concat(),a=t,n=this.borderColor,h=(n>>16&255)/255,l=(n>>8&255)/255,o=(255&n)/255;s.splice(0,5);var u,_,c,f,d,m,p,g,v,x,b,y,T,A,E,S,w,R,I,M,C=s.length/5,L=r,P=i/2;c=s[0],f=s[1],x=c-(d=s[5]),v=(v=-(f-(m=s[6])))/(M=Math.sqrt(v*v+x*x))*P,x=x/M*P,a.push(c-v,f-x,h,l,o,c+v,f+x,h,l,o);for(var D=1;D<C-1;D++)c=s[5*(D-1)],f=s[5*(D-1)+1],d=s[5*D],m=s[5*D+1],p=s[5*(D+1)],g=s[5*(D+1)+1],x=c-d,y=d-p,E=(-(v=(v=-(f-m))/(M=Math.sqrt(v*v+x*x))*P)+c)*(-(x=x/M*P)+m)-(-v+d)*(-x+f),R=(-(b=(b=-(m-g))/(M=Math.sqrt(b*b+y*y))*P)+p)*(-(y=y/M*P)+m)-(-b+d)*(-y+g),I=(T=-x+f-(-x+m))*(w=-b+d-(-b+p))-(S=-y+g-(-y+m))*(A=-v+d-(-v+c)),Math.abs(I)<.1?(I+=10.1,a.push(d-v,m-x,h,l,o,d+v,m+x,h,l,o)):(((u=(A*R-w*E)/I)-d)*(u-d)+((_=(S*E-T*R)/I)-m)+(_-m),a.push(u,_,h,l,o,d-(u-d),m-(_-m),h,l,o));c=s[s.length-10],f=s[s.length-9],x=c-(d=s[s.length-5]),v=(v=-(f-(m=s[s.length-4])))/(M=Math.sqrt(v*v+x*x))*P,x=x/M*P,a.push(d-v,m-x,h,l,o,d+v,m+x,h,l,o);var F=this.edges+1;for(D=1;D<F;D++)e.push(L+2*(D-1),L+2*(D-1)+1,L+2*D+1,L+2*D+1,L+2*D,L+2*(D-1));return a},e.createLoopLine=function(t,e,i,r,s,a){var n=t.concat(),h=s||t,l=this.borderColor,o=(l>>16&255)/255,u=(l>>8&255)/255,_=(255&l)/255;n.splice(0,5);var c=[n[0],n[1]],f=[n[n.length-5],n[n.length-4]],d=f[0]+.5*(c[0]-f[0]),m=f[1]+.5*(c[1]-f[1]);n.unshift(d,m,0,0,0),n.push(d,m,0,0,0);var p,g,v,x,b,y,T,A,E,S,w,R,I,M,C,L,P,D,F,B,N=n.length/5,O=r,V=i/2;v=n[0],x=n[1],S=v-(b=n[5]),E=(E=-(x-(y=n[6])))/(B=Math.sqrt(E*E+S*S))*V,S=S/B*V,h.push(v-E,x-S,o,u,_,v+E,x+S,o,u,_);for(var U=1;U<N-1;U++)v=n[5*(U-1)],x=n[5*(U-1)+1],b=n[5*U],y=n[5*U+1],T=n[5*(U+1)],A=n[5*(U+1)+1],S=v-b,R=b-T,C=(-(E=(E=-(x-y))/(B=Math.sqrt(E*E+S*S))*V)+v)*(-(S=S/B*V)+y)-(-E+b)*(-S+x),D=(-(w=(w=-(y-A))/(B=Math.sqrt(w*w+R*R))*V)+T)*(-(R=R/B*V)+y)-(-w+b)*(-R+A),F=(I=-S+x-(-S+y))*(P=-w+b-(-w+T))-(L=-R+A-(-R+y))*(M=-E+b-(-E+v)),Math.abs(F)<.1?(F+=10.1,h.push(b-E,y-S,o,u,_,b+E,y+S,o,u,_)):(((p=(M*D-P*C)/F)-b)*(p-b)+((g=(L*C-I*D)/F)-y)+(g-y),h.push(p,g,o,u,_,b-(p-b),y-(g-y),o,u,_));a&&(e=a);var k=this.edges+1;for(U=1;U<k;U++)e.push(O+2*(U-1),O+2*(U-1)+1,O+2*U+1,O+2*U+1,O+2*U,O+2*(U-1));return e.push(O+2*(U-1),O+2*(U-1)+1,O+1,O+1,O,O+2*(U-1)),h},t}(),rt=function(){function m(){}return c(m,"laya.webgl.shapes.Earcut"),m.earcut=function(t,e,i){i=i||2;var r,s,a,n,h,l,o,u=e&&e.length,_=u?e[0]*i:t.length,c=m.linkedList(t,0,_,i,!0),f=[];if(!c)return f;if(u&&(c=m.eliminateHoles(t,e,c,i)),t.length>80*i){r=a=t[0],s=n=t[1];for(var d=i;d<_;d+=i)(h=t[d])<r&&(r=h),(l=t[d+1])<s&&(s=l),a<h&&(a=h),n<l&&(n=l);o=0!==(o=Math.max(a-r,n-s))?1/o:0}return m.earcutLinked(c,f,i,r,s,o),f},m.linkedList=function(t,e,i,r,s){var a,n;if(s===0<m.signedArea(t,e,i,r))for(a=e;a<i;a+=r)n=m.insertNode(a,t[a],t[a+1],n);else for(a=i-r;e<=a;a-=r)n=m.insertNode(a,t[a],t[a+1],n);return n&&m.equals(n,n.next)&&(m.removeNode(n),n=n.next),n},m.filterPoints=function(t,e){if(!t)return t;e||(e=t);var i,r=t;do{if(i=!1,r.steiner||!m.equals(r,r.next)&&0!==m.area(r.prev,r,r.next))r=r.next;else{if(m.removeNode(r),(r=e=r.prev)===r.next)break;i=!0}}while(i||r!==e);return e},m.earcutLinked=function(t,e,i,r,s,a,n){if(t){!n&&a&&m.indexCurve(t,r,s,a);for(var h,l,o=t;t.prev!==t.next;)if(h=t.prev,l=t.next,a?m.isEarHashed(t,r,s,a):m.isEar(t))e.push(h.i/i),e.push(t.i/i),e.push(l.i/i),m.removeNode(t),t=l.next,o=l.next;else if((t=l)===o){n?1===n?(t=m.cureLocalIntersections(t,e,i),m.earcutLinked(t,e,i,r,s,a,2)):2===n&&m.splitEarcut(t,e,i,r,s,a):m.earcutLinked(m.filterPoints(t,null),e,i,r,s,a,1);break}}},m.isEar=function(t){var e=t.prev,i=t,r=t.next;if(0<=m.area(e,i,r))return!1;for(var s=t.next.next;s!==t.prev;){if(m.pointInTriangle(e.x,e.y,i.x,i.y,r.x,r.y,s.x,s.y)&&0<=m.area(s.prev,s,s.next))return!1;s=s.next}return!0},m.isEarHashed=function(t,e,i,r){var s=t.prev,a=t,n=t.next;if(0<=m.area(s,a,n))return!1;for(var h=s.x<a.x?s.x<n.x?s.x:n.x:a.x<n.x?a.x:n.x,l=s.y<a.y?s.y<n.y?s.y:n.y:a.y<n.y?a.y:n.y,o=s.x>a.x?s.x>n.x?s.x:n.x:a.x>n.x?a.x:n.x,u=s.y>a.y?s.y>n.y?s.y:n.y:a.y>n.y?a.y:n.y,_=m.zOrder(h,l,e,i,r),c=m.zOrder(o,u,e,i,r),f=t.nextZ;f&&f.z<=c;){if(f!==t.prev&&f!==t.next&&m.pointInTriangle(s.x,s.y,a.x,a.y,n.x,n.y,f.x,f.y)&&0<=m.area(f.prev,f,f.next))return!1;f=f.nextZ}for(f=t.prevZ;f&&f.z>=_;){if(f!==t.prev&&f!==t.next&&m.pointInTriangle(s.x,s.y,a.x,a.y,n.x,n.y,f.x,f.y)&&0<=m.area(f.prev,f,f.next))return!1;f=f.prevZ}return!0},m.cureLocalIntersections=function(t,e,i){var r=t;do{var s=r.prev,a=r.next.next;!m.equals(s,a)&&m.intersects(s,r,r.next,a)&&m.locallyInside(s,a)&&m.locallyInside(a,s)&&(e.push(s.i/i),e.push(r.i/i),e.push(a.i/i),m.removeNode(r),m.removeNode(r.next),r=t=a),r=r.next}while(r!==t);return r},m.splitEarcut=function(t,e,i,r,s,a){var n=t;do{for(var h=n.next.next;h!==n.prev;){if(n.i!==h.i&&m.isValidDiagonal(n,h)){var l=m.splitPolygon(n,h);return n=m.filterPoints(n,n.next),l=m.filterPoints(l,l.next),m.earcutLinked(n,e,i,r,s,a),void m.earcutLinked(l,e,i,r,s,a)}h=h.next}n=n.next}while(n!==t)},m.eliminateHoles=function(t,e,i,r){var s,a,n,h,l,o=[];for(s=0,a=e.length;s<a;s++)n=e[s]*r,h=s<a-1?e[s+1]*r:t.length,(l=m.linkedList(t,n,h,r,!1))===l.next&&(l.steiner=!0),o.push(m.getLeftmost(l));for(o.sort(m.compareX),s=0;s<o.length;s++)m.eliminateHole(o[s],i),i=m.filterPoints(i,i.next);return i},m.compareX=function(t,e){return t.x-e.x},m.eliminateHole=function(t,e){if(e=m.findHoleBridge(t,e)){var i=m.splitPolygon(e,t);m.filterPoints(i,i.next)}},m.findHoleBridge=function(t,e){var i,r=e,s=t.x,a=t.y,n=-1/0;do{if(a<=r.y&&a>=r.next.y&&r.next.y!==r.y){var h=r.x+(a-r.y)*(r.next.x-r.x)/(r.next.y-r.y);if(h<=s&&n<h){if((n=h)===s){if(a===r.y)return r;if(a===r.next.y)return r.next}i=r.x<r.next.x?r:r.next}}r=r.next}while(r!==e);if(!i)return null;if(s===n)return i.prev;var l,o=i,u=i.x,_=i.y,c=1/0;for(r=i.next;r!==o;)s>=r.x&&r.x>=u&&s!==r.x&&m.pointInTriangle(a<_?s:n,a,u,_,a<_?n:s,a,r.x,r.y)&&((l=Math.abs(a-r.y)/(s-r.x))<c||l===c&&r.x>i.x)&&m.locallyInside(r,t)&&(i=r,c=l),r=r.next;return i},m.indexCurve=function(t,e,i,r){for(var s=t;null===s.z&&(s.z=m.zOrder(s.x,s.y,e,i,r)),s.prevZ=s.prev,s.nextZ=s.next,(s=s.next)!==t;);s.prevZ.nextZ=null,s.prevZ=null,m.sortLinked(s)},m.sortLinked=function(t){var e,i,r,s,a,n,h,l,o=1;do{for(i=t,a=t=null,n=0;i;){for(n++,r=i,e=h=0;e<o&&(h++,r=r.nextZ);e++);for(l=o;0<h||0<l&&r;)0!==h&&(0===l||!r||i.z<=r.z)?(i=(s=i).nextZ,h--):(r=(s=r).nextZ,l--),a?a.nextZ=s:t=s,s.prevZ=a,a=s;i=r}a.nextZ=null,o*=2}while(1<n);return t},m.zOrder=function(t,e,i,r,s){return(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-i)*s)|t<<8))|t<<4))|t<<2))|t<<1))|(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-r)*s)|e<<8))|e<<4))|e<<2))|e<<1))<<1},m.getLeftmost=function(t){for(var e=t,i=t;e.x<i.x&&(i=e),(e=e.next)!==t;);return i},m.pointInTriangle=function(t,e,i,r,s,a,n,h){return 0<=(s-n)*(e-h)-(t-n)*(a-h)&&0<=(t-n)*(r-h)-(i-n)*(e-h)&&0<=(i-n)*(a-h)-(s-n)*(r-h)},m.isValidDiagonal=function(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!m.intersectsPolygon(t,e)&&m.locallyInside(t,e)&&m.locallyInside(e,t)&&m.middleInside(t,e)},m.area=function(t,e,i){return(e.y-t.y)*(i.x-e.x)-(e.x-t.x)*(i.y-e.y)},m.equals=function(t,e){return t.x===e.x&&t.y===e.y},m.intersects=function(t,e,i,r){return!!(m.equals(t,e)&&m.equals(i,r)||m.equals(t,r)&&m.equals(i,e))||0<m.area(t,e,i)!=0<m.area(t,e,r)&&0<m.area(i,r,t)!=0<m.area(i,r,e)},m.intersectsPolygon=function(t,e){var i=t;do{if(i.i!==t.i&&i.next.i!==t.i&&i.i!==e.i&&i.next.i!==e.i&&m.intersects(i,i.next,t,e))return!0;i=i.next}while(i!==t);return!1},m.locallyInside=function(t,e){return m.area(t.prev,t,t.next)<0?0<=m.area(t,e,t.next)&&0<=m.area(t,t.prev,e):m.area(t,e,t.prev)<0||m.area(t,t.next,e)<0},m.middleInside=function(t,e){for(var i=t,r=!1,s=(t.x+e.x)/2,a=(t.y+e.y)/2;i.y>a!=i.next.y>a&&i.next.y!==i.y&&s<(i.next.x-i.x)*(a-i.y)/(i.next.y-i.y)+i.x&&(r=!r),(i=i.next)!==t;);return r},m.splitPolygon=function(t,e){var i=new st(t.i,t.x,t.y),r=new st(e.i,e.x,e.y),s=t.next,a=e.prev;return(t.next=e).prev=t,(i.next=s).prev=i,(r.next=i).prev=r,(a.next=r).prev=a,r},m.insertNode=function(t,e,i,r){var s=new st(t,e,i);return r?(s.next=r.next,(s.prev=r).next.prev=s,r.next=s):(s.prev=s).next=s,s},m.removeNode=function(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)},m.signedArea=function(t,e,i,r){for(var s=0,a=e,n=i-r;a<i;a+=r)s+=(t[n]-t[a])*(t[a+1]+t[n+1]),n=a;return s},m}(),st=function(){function t(t,e,i){this.i=null,this.x=null,this.y=null,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=null,this.i=t,this.x=e,this.y=i,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}return c(t,"laya.webgl.shapes.EarcutNode"),t}(),at=(function(){function t(t,e,i,r,s,a,n){this.lineWidth=t,this.lineColor=e,this.lineAlpha=i,this.fillColor=r,this.fillAlpha=s,this.shape=n,this.fill=a}c(t,"laya.webgl.shapes.GeometryData");var e=t.prototype;e.clone=function(){return new t(this.lineWidth,this.lineColor,this.lineAlpha,this.fillColor,this.fillAlpha,this.fill,this.shape)},e.getIndexData=function(){return null},e.getVertexData=function(){return null},e.destroy=function(){this.shape=null}}(),function(){function t(t){if(t instanceof Float32Array)this.points=t;else if(t instanceof Array){t.length;this.points=new Float32Array(t)}}c(t,"laya.webgl.shapes.Vertex");var e=t.prototype;T.imps(e,{"laya.webgl.shapes.IShape":!0}),e.getData=function(t,e,i){},e.needUpdate=function(t){return!1},e.rebuild=function(t){},e.setMatrix=function(t){}}(),function(){function l(t){void 0===t&&(t=1e4),this._renderType=t}c(l,"laya.webgl.submit.Submit");var t=l.prototype;return T.imps(t,{"laya.webgl.submit.ISubmit":!0}),t.releaseRender=function(){var t=l._cache;(t[t._length++]=this).shaderValue.release(),this._vb=null},t.getRenderType=function(){return this._renderType},t.renderSubmit=function(){if(0===this._numEle)return 1;var t=this.shaderValue.textureHost;if(t){var e=t.source;if(!t.bitmap||!e)return 1;this.shaderValue.texture=e}this._vb.bind_upload(this._ib);var i=bt.mainContext;return this.shaderValue.upload(),G.activeBlendFunction!==this._blendFn&&(i.enable(3042),this._blendFn(i),G.activeBlendFunction=this._blendFn),C.drawCall++,C.trianglesFaces+=this._numEle/3,i.drawElements(4,this._numEle,5123,this._startIdx),1},l.__init__=function(){var t=l.RENDERBASE=new l(-1);t.shaderValue=new Et(0,0),t.shaderValue.ALPHA=-1234},l.createSubmit=function(t,e,i,r,s){var a=l._cache._length?l._cache[--l._cache._length]:new l;null==i&&((i=a._selfVb||(a._selfVb=Jt.create(-1))).clear(),r=0),a._ib=e,a._vb=i,a._startIdx=r*mt.BYTES_PIDX,a._numEle=0;var n=t._nBlendType;a._blendFn=t._targets?G.targetFns[n]:G.fns[n],a.shaderValue=s,a.shaderValue.setValue(t._shader2D);var h=t._shader2D.filters;return h&&a.shaderValue.setFilters(h),a},l.createShape=function(t,e,i,r,s,a){var n=l._cache._length?l._cache[--l._cache._length]:new l;n._ib=e,n._vb=i,n._numEle=r,n._startIdx=s,n.shaderValue=a,n.shaderValue.setValue(t._shader2D);var h=t._nBlendType;return n._blendFn=t._targets?G.targetFns[h]:G.fns[h],n},l.TYPE_2D=1e4,l.TYPE_CANVAS=10003,l.TYPE_CMDSETRT=10004,l.TYPE_CUSTOM=10005,l.TYPE_BLURRT=10006,l.TYPE_CMDDESTORYPRERT=10007,l.TYPE_DISABLESTENCIL=10008,l.TYPE_OTHERIBVB=10009,l.TYPE_PRIMITIVE=10010,l.TYPE_RT=10011,l.TYPE_BLUR_RT=10012,l.TYPE_TARGET=10013,l.TYPE_CHANGE_VALUE=10014,l.TYPE_SHAPE=10015,l.TYPE_TEXTURE=10016,l.TYPE_FILLTEXTURE=10017,l.RENDERBASE=null,l._cache=((l._cache=[])._length=0,l._cache),l}()),nt=function(){function r(){this.fun=null,this.args=null}c(r,"laya.webgl.submit.SubmitCMD");var t=r.prototype;return T.imps(t,{"laya.webgl.submit.ISubmit":!0}),t.renderSubmit=function(){return this.fun.apply(null,this.args),1},t.getRenderType=function(){return 0},t.releaseRender=function(){var t=r._cache;t[t._length++]=this},r.create=function(t,e){var i=r._cache._length?r._cache[--r._cache._length]:new r;return i.fun=e,i.args=t,i},r._cache=((r._cache=[])._length=0,r._cache),r}(),ht=function(){function e(){this.variables={}}c(e,"laya.webgl.submit.SubmitCMDScope");var t=e.prototype;return t.getValue=function(t){return this.variables[t]},t.addValue=function(t,e){return this.variables[t]=e},t.setValue=function(t,e){return this.variables.hasOwnProperty(t)?this.variables[t]=e:null},t.clear=function(){for(var t in this.variables)delete this.variables[t]},t.recycle=function(){this.clear(),e.POOL.push(this)},e.create=function(){var t=e.POOL.pop();return t||(t=new e),t},e.POOL=[],e}(),lt=function(){function _(){this.offset=0,this.startIndex=0,this._mat=S.create()}c(_,"laya.webgl.submit.SubmitOtherIBVB");var t=_.prototype;return T.imps(t,{"laya.webgl.submit.ISubmit":!0}),t.releaseRender=function(){var t=_._cache;t[t._length++]=this},t.getRenderType=function(){return 10009},t.renderSubmit=function(){var t=this._shaderValue.textureHost;if(t){var e=t.source;if(!t.bitmap||!e)return 1;this._shaderValue.texture=e}this._vb.bind_upload(this._ib);var i=vt.worldMatrix4,r=S.TEMP;S.mulPre(this._mat,i[0],i[1],i[4],i[5],i[12],i[13],r);var s=vt.worldMatrix4=_.tempMatrix4;s[0]=r.a,s[1]=r.b,s[4]=r.c,s[5]=r.d,s[12]=r.tx,s[13]=r.ty,this._shader._offset=this.offset,this._shaderValue.refresh(),this._shader.upload(this._shaderValue),this._shader._offset=0;var a=bt.mainContext;return G.activeBlendFunction!==this._blendFn&&(a.enable(3042),this._blendFn(a),G.activeBlendFunction=this._blendFn),C.drawCall++,C.trianglesFaces+=this._numEle/3,a.drawElements(4,this._numEle,5123,this.startIndex),vt.worldMatrix4=i,Bt.activeShader=null,1},_.create=function(t,e,i,r,s,a,n,h,l){void 0===l&&(l=0);var o=_._cache._length?_._cache[--_._cache._length]:new _;o._ib=i,o._vb=e,o._numEle=r,o._shader=s,o._shaderValue=a;var u=t._nBlendType;switch(o._blendFn=t._targets?G.targetFns[u]:G.fns[u],l){case 0:o.offset=0,o.startIndex=h/(mt.BYTES_PE*e.vertexStride)*1.5,o.startIndex*=mt.BYTES_PIDX;break;case 1:o.startIndex=n,o.offset=h}return o},_._cache=((_._cache=[])._length=0,_._cache),_.tempMatrix4=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],_}(),ot=function(){function i(){this.submitIndex=0,this.submitLength=0,this.context=null,this.clipRect=new R,this.screenRect=new R}c(i,"laya.webgl.submit.SubmitScissor");var t=i.prototype;return T.imps(t,{"laya.webgl.submit.ISubmit":!0}),t._scissor=function(t,e,i,r){var s=vt.worldMatrix4,a=s[0],n=s[5],h=s[12],l=s[13];if(r*=n,(i*=a)<1||r<1)return!1;var o=(t=t*a+h)+i,u=(e=e*n+l)+r;t<0&&(i=o-(t=0)),e<0&&(r=u-(e=0));var _=vt.worldClipRect;if(t=Math.max(t,_.x),e=Math.max(e,_.y),i=Math.min(o,_.right)-t,r=Math.min(u,_.bottom)-e,i<1||r<1)return!1;var c=vt.worldScissorTest;return this.screenRect.copyFrom(_),_.x=t,_.y=e,_.width=i,_.height=r,vt.worldScissorTest=!0,e=vt.height-e-r,bt.mainContext.scissor(t,e,i,r),bt.mainContext.enable(3089),this.context.submitElement(this.submitIndex,this.submitIndex+this.submitLength),c?(e=vt.height-this.screenRect.y-this.screenRect.height,bt.mainContext.scissor(this.screenRect.x,e,this.screenRect.width,this.screenRect.height),bt.mainContext.enable(3089)):(bt.mainContext.disable(3089),vt.worldScissorTest=!1),_.copyFrom(this.screenRect),!0},t._scissorWithTagart=function(t,e,i,r){if(i<1||r<1)return!1;var s=t+i,a=e+r;t<0&&(i=s-(t=0)),e<0&&(r=a-(e=0));var n=vt.worldClipRect;if(t=Math.max(t,n.x),e=Math.max(e,n.y),i=Math.min(s,n.right)-t,r=Math.min(a,n.bottom)-e,i<1||r<1)return!1;var h=vt.worldScissorTest;return this.screenRect.copyFrom(n),vt.worldScissorTest=!0,n.x=t,n.y=e,n.width=i,n.height=r,e=vt.height-e-r,bt.mainContext.scissor(t,e,i,r),bt.mainContext.enable(3089),this.context.submitElement(this.submitIndex,this.submitIndex+this.submitLength),h?(e=vt.height-this.screenRect.y-this.screenRect.height,bt.mainContext.scissor(this.screenRect.x,e,this.screenRect.width,this.screenRect.height),bt.mainContext.enable(3089)):(bt.mainContext.disable(3089),vt.worldScissorTest=!1),n.copyFrom(this.screenRect),!0},t.renderSubmit=function(){return this.submitLength=Math.min(this.context._submits._length-1,this.submitLength),this.submitLength<1||this.clipRect.width<1||this.clipRect.height<1||(this.context._targets?this._scissorWithTagart(this.clipRect.x,this.clipRect.y,this.clipRect.width,this.clipRect.height):this._scissor(this.clipRect.x,this.clipRect.y,this.clipRect.width,this.clipRect.height)),this.submitLength+1},t.getRenderType=function(){return 0},t.releaseRender=function(){var t=i._cache;(t[t._length++]=this).context=null},i.create=function(t){var e=i._cache._length?i._cache[--i._cache._length]:new i;return e.context=t,e},i._cache=((i._cache=[])._length=0,i._cache),i}(),ut=function(){function l(){this.step=0,this.blendMode=null,this.level=0}c(l,"laya.webgl.submit.SubmitStencil");var t=l.prototype;return T.imps(t,{"laya.webgl.submit.ISubmit":!0}),t.renderSubmit=function(){switch(this.step){case 1:this.do1();break;case 2:this.do2();break;case 3:this.do3();break;case 4:this.do4();break;case 5:this.do5();break;case 6:this.do6();break;case 7:this.do7();break;case 8:this.do8()}return 1},t.getRenderType=function(){return 0},t.releaseRender=function(){var t=l._cache;t[t._length++]=this},t.do1=function(){var t=bt.mainContext;t.enable(2960),t.clear(1024),t.colorMask(!1,!1,!1,!1),t.stencilFunc(514,this.level,255),t.stencilOp(7680,7680,7682)},t.do2=function(){var t=bt.mainContext;t.stencilFunc(514,this.level+1,255),t.colorMask(!0,!0,!0,!0),t.stencilOp(7680,7680,7680)},t.do3=function(){var t=bt.mainContext;t.colorMask(!0,!0,!0,!0),t.stencilOp(7680,7680,7680),t.clear(1024),t.disable(2960)},t.do4=function(){var t=bt.mainContext;0==this.level&&(t.enable(2960),t.clear(1024)),t.colorMask(!1,!1,!1,!1),t.stencilFunc(519,0,255),t.stencilOp(7680,7680,7682)},t.do5=function(){var t=bt.mainContext;t.stencilFunc(514,this.level,255),t.colorMask(!0,!0,!0,!0),t.stencilOp(7680,7680,7680)},t.do6=function(){var t=bt.mainContext;G.targetFns[G.TOINT[this.blendMode]](t)},t.do7=function(){var t=bt.mainContext;t.colorMask(!1,!1,!1,!1),t.stencilOp(7680,7680,7683)},t.do8=function(){var t=bt.mainContext;t.colorMask(!0,!0,!0,!0),t.stencilFunc(514,this.level,255),t.stencilOp(7680,7680,7680)},l.restore=function(t,e,i,r,s){var a;if((t._renderKey=0)<l._mask&&l._mask--,0==l._mask)a=laya.webgl.submit.SubmitStencil.create(3),t.addRenderObject(a),t._curSubmit=at.RENDERBASE;else{a=laya.webgl.submit.SubmitStencil.create(7),t.addRenderObject(a);var n=t._vb;n._byteLength;if(pt.fillRectImgVb(n,null,e.x,e.y,e.width,e.height,F.DEF_UV,i,r,s,0,0)){t._shader2D.glTexture=null;var h=t._curSubmit=at.createSubmit(t,t._ib,n,(n._byteLength-64)/32*3,Et.create(2,0));h.shaderValue.ALPHA=1,t._submits[t._submits._length++]=h,t._curSubmit._numEle+=6,t._curSubmit=at.RENDERBASE}else alert("clipRect calc stencil rect error");a=laya.webgl.submit.SubmitStencil.create(8),t.addRenderObject(a)}},l.restore2=function(t,e){var i;(t._renderKey=0)<l._mask&&l._mask--,0==l._mask?(i=laya.webgl.submit.SubmitStencil.create(3),t.addRenderObject(i),t._curSubmit=at.RENDERBASE):(i=laya.webgl.submit.SubmitStencil.create(7),t.addRenderObject(i),t._submits[t._submits._length++]=e,i=laya.webgl.submit.SubmitStencil.create(8),t.addRenderObject(i))},l.create=function(t){var e=l._cache._length?l._cache[--l._cache._length]:new l;return 5==(e.step=t)&&++l._mask,e.level=l._mask,e},l._cache=((l._cache=[])._length=0,l._cache),l._mask=0,l}(),_t=function(){function h(){this._renderType=0,this._vb=null,this._ib=null,this._startIdx=0,this._numEle=0,this.shaderValue=null,this.blendType=0,this.proName=null,this.scope=null}c(h,"laya.webgl.submit.SubmitTarget");var t=h.prototype;return T.imps(t,{"laya.webgl.submit.ISubmit":!0}),t.renderSubmit=function(){this._vb.bind_upload(this._ib);var t=this.scope.getValue(this.proName);return t&&(this.shaderValue.texture=t.source,this.shaderValue.strength&&!this.shaderValue.blurInfo&&(this.shaderValue.blurInfo=[t.width,t.height]),this.shaderValue.upload(),this.blend(),C.drawCall++,C.trianglesFaces+=this._numEle/3,bt.mainContext.drawElements(4,this._numEle,5123,this._startIdx)),1},t.blend=function(){if(G.activeBlendFunction!==G.fns[this.blendType]){var t=bt.mainContext;t.enable(3042),G.fns[this.blendType](t),G.activeBlendFunction=G.fns[this.blendType]}},t.getRenderType=function(){return 0},t.releaseRender=function(){var t=h._cache;t[t._length++]=this},h.create=function(t,e,i,r,s,a){var n=h._cache._length?h._cache[--h._cache._length]:new h;return n._ib=e,n._vb=i,n.proName=a,n._startIdx=r*mt.BYTES_PIDX,n._numEle=0,n.blendType=t._nBlendType,n.shaderValue=s,n.shaderValue.setValue(t._shader2D),n},h._cache=((h._cache=[])._length=0,h._cache),h}(),ct=function(){function t(){this._sourceStr=null}c(t,"laya.webgl.text.CharSegment");var e=t.prototype;return T.imps(e,{"laya.webgl.text.ICharSegment":!0}),e.textToSpit=function(t){this._sourceStr=t},e.getChar=function(t){return this._sourceStr.charAt(t)},e.getCharCode=function(t){return this._sourceStr.charCodeAt(t)},e.length=function(){return this._sourceStr.length},t}(),ft=function(){var t;function C(){}return c(C,"laya.webgl.text.DrawText"),C.__init__=function(){C._charsTemp=new Array,C._drawValue=new t,C._charSeg=new ct},C.customCharSeg=function(t){C._charSeg=t},C.getChar=function(t,e,i){var r=Yt.createOneChar(t,i);return-1!=e&&(C._charsCache[e]=r),r},C._drawSlow=function(t,e,i,r,s,a,n,h,l,o,u,_,c,f,d){var m,p,g=C._drawValue.value(a,h,l,o,c,f,d),v=0,x=0,b=C._charsTemp,y=0,T=NaN;if(r)for(b.length=r.length,v=0,x=r.length;v<x;v++)T=(p=r[v]).charNum+g.txtID,b[v]=m=C._charsCache[T]||C.getChar(p.char,T,g),m.active();else{var A=i instanceof laya.utils.WordText?i.toString():i;if(D.CharacterCache){C._charSeg.textToSpit(A);var E=C._charSeg.length();for(v=0,x=b.length=E;v<x;v++)T=C._charSeg.getCharCode(v)+g.txtID,b[v]=m=C._charsCache[T]||C.getChar(C._charSeg.getChar(v),T,g),m.active(),y+=m.cw}else b.length=0,(m=C.getChar(A,-1,g)).active(),y+=m.cw,b[0]=m}var S=0;null!==n&&"left"!==n&&(S=-("center"==n?y/2:y));var w,R,I=NaN,M=0;if(r)for(v=0,x=b.length;v<x;v++)(m=b[v]).isSpace||(p=r[v],I=m.borderSize,w=m.texture,e._drawText(w,u+S+p.x*c-I,_+p.y*f-I,w.width,w.height,s,0,0,0,0));else{for(v=0,x=b.length;v<x;v++)(m=b[v]).isSpace||(I=m.borderSize,w=m.texture,e._drawText(w,u+S-I,_-I,w.width,w.height,s,0,0,0,0),t&&((R=t[M++])||(R=t[M-1]=[]),R[0]=w,R[1]=S-I,R[2]=-I)),S+=m.cw;t&&(t.length=M)}},C._drawFast=function(t,e,i,r,s){for(var a,n,h=0,l=t.length;h<l;h++)(a=(n=t[h])[0]).active(),e._drawText(a,r+n[1],s+n[2],a.width,a.height,i,0,0,0,0)},C.drawText=function(t,e,i,r,s,a,n,h,l,o,u,_){if(void 0===_&&(_=0),!(e&&0===e.length||i&&0===i.length)){var c=r.a,f=r.d;(0!==r.b||0!==r.c)&&(c=f=1);var d=1!==c||1!==f;if(d&&T.stage.transform){var m=T.stage.transform;d=m.a===c&&m.d===f}else d=!1;if(d){var p=(r=r.copyTo(At._tmpMatrix)).tx,g=r.ty;r.scale(1/c,1/f),r._checkTransform(),o*=c,u*=f,o+=p-r.tx,u+=g-r.ty}else c=f=1;if(i)C._drawSlow(null,t,e,i,r,s,a,n,h,l,o,u,c,f,_);else{if(null===e.toUpperCase){var v=c+1e5*f,x=e;return void(x.changed||x.id!==v?(x.id=v,x.changed=!1,C._drawSlow(x.save,t,e,i,r,s,a,n,h,l,o,u,c,f,_)):C._drawFast(x.save,t,r,o,u))}var b=e+s.toString()+n+h+l+c+f+a,y=C._textsCache[b];D.CharacterCache?y?C._drawFast(y,t,r,o,u):(C._textsCache.__length||(C._textsCache.__length=0),C._textsCache.__length>A.WebGLTextCacheCount&&((C._textsCache={}).__length=0,C._curPoolIndex=0),C._textCachesPool[C._curPoolIndex]?(y=C._textsCache[b]=C._textCachesPool[C._curPoolIndex]).length=0:C._textCachesPool[C._curPoolIndex]=y=C._textsCache[b]=[],C._textsCache.__length++,C._curPoolIndex++,C._drawSlow(y,t,e,i,r,s,a,n,h,l,o,u,c,f,_)):C._drawSlow(y,t,e,i,r,s,a,n,h,l,o,u,c,f,_)}}},C._charsTemp=null,C._textCachesPool=[],C._curPoolIndex=0,C._charsCache={},C._textsCache={},C._drawValue=null,C.d=[],C._charSeg=null,C.__init$=function(){t=function(){function l(){}return c(l,""),l.prototype.value=function(t,e,i,r,s,a,n){this.font=t,this.fillColor=e,this.borderColor=i,this.lineWidth=r,this.scaleX=s,this.scaleY=a,this.underLine=n;var h=t.toString()+s+a+r+e+i+n;return this.txtID=l._keymap[h],this.txtID||(this.txtID=1e-7*++l._keymapCount,l._keymap[h]=this.txtID),this},l.clear=function(){l._keymap={},l._keymapCount=1},l._keymap={},l._keymapCount=1,l}()},C}(),dt=function(){function s(t){this._index=0,this._size=14,this._italic=-2,s._cache2=s._cache2||[],this.setFont(t||"14px Arial")}c(s,"laya.webgl.text.FontInContext");var t=s.prototype;return t.setFont=function(t){var e=s._cache2[t];if(e)this._words=e[0],this._size=e[1];else{this._words=t.split(" ");for(var i=0,r=this._words.length;i<r;i++)if(0<this._words[i].indexOf("px")){this._index=i;break}this._size=parseInt(this._words[this._index]),s._cache2[t]=[this._words,this._size]}this._text=null,this._italic=-2},t.getItalic=function(){return-2===this._italic&&(this._italic=this.hasType("italic")),this._italic},t.hasType=function(t){for(var e=0,i=this._words.length;e<i;e++)if(this._words[e]===t)return e;return-1},t.removeType=function(t){for(var e=0,i=this._words.length;e<i;e++)if(this._words[e]===t){this._words.splice(e,1),this._index>e&&this._index--;break}this._text=null,this._italic=-2},t.copyTo=function(t){return t._text=this._text,t._size=this._size,t._index=this._index,t._words=this._words.slice(),t._italic=-2,t},t.toString=function(){return this._text?this._text:this._text=this._words.join(" ")},r(0,t,"size",function(){return this._size},function(t){this._size=t,this._words[this._index]=t+"px",this._text=null}),s.create=function(t){var e=s._cache[t];return e||(e=s._cache[t]=new s(t))},s.EMPTY=new s,s._cache={},s._cache2=null,s}(),mt=function(){function t(){}return c(t,"laya.webgl.utils.CONST3D2D"),t.defaultMatrix4=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],t.defaultMinusYMatrix4=[1,0,0,0,0,-1,0,0,0,0,1,0,0,0,0,1],t.uniformMatrix3=[1,0,0,0,0,1,0,0,0,0,1,0],t._TMPARRAY=[],t._OFFSETX=0,t._OFFSETY=0,n(t,["BYTES_PE",function(){return this.BYTES_PE=Float32Array.BYTES_PER_ELEMENT},"BYTES_PIDX",function(){return this.BYTES_PIDX=Uint16Array.BYTES_PER_ELEMENT}]),t}(),pt=function(){function d(){}return c(d,"laya.webgl.utils.GlUtils"),d.make2DProjection=function(t,e,i){return[2/t,0,0,0,0,-2/e,0,0,0,0,2/i,0,-1,1,0,1]},d.fillIBQuadrangle=function(t,e){if(65535/4<e)throw Error("IBQuadrangle count:"+e+" must<:"+Math.floor(65535/4));e=Math.floor(e),t._resizeBuffer(6*(e+1)*2,!1),t.byteLength=t.bufferLength;for(var i=t.getUint16Array(),r=0,s=0;s<e;s++)i[r++]=4*s,i[r++]=4*s+2,i[r++]=4*s+1,i[r++]=4*s,i[r++]=4*s+3,i[r++]=4*s+2;return t.setNeedUpload(),!0},d.expandIBQuadrangle=function(t,e){t.bufferLength>=6*e*2||d.fillIBQuadrangle(t,e)},d.mathCeilPowerOfTwo=function(t){return t--,t|=t>>1,t|=t>>2,t|=t>>4,t|=t>>8,t|=t>>16,++t},d.fillQuadrangleImgVb=function(t,e,i,r,s,a,n,h){var l=16+(t._byteLength>>2);t.byteLength=l<<2;var o=t.getFloat32Array();o[(l-=16)+2]=s[0],o[l+3]=s[1],o[l+6]=s[2],o[l+7]=s[3],o[l+10]=s[4],o[l+11]=s[5],o[l+14]=s[6],o[l+15]=s[7];var u=a.a,_=a.b,c=a.c,f=a.d;if(1!==u||0!==_||0!==c||1!==f){a.bTransform=!0;var d=a.tx+n,m=a.ty+h;o[l]=(r[0]+e)*u+(r[1]+i)*c+d,o[l+1]=(r[0]+e)*_+(r[1]+i)*f+m,o[l+4]=(r[2]+e)*u+(r[3]+i)*c+d,o[l+5]=(r[2]+e)*_+(r[3]+i)*f+m,o[l+8]=(r[4]+e)*u+(r[5]+i)*c+d,o[l+9]=(r[4]+e)*_+(r[5]+i)*f+m,o[l+12]=(r[6]+e)*u+(r[7]+i)*c+d,o[l+13]=(r[6]+e)*_+(r[7]+i)*f+m}else a.bTransform=!1,e+=a.tx+n,i+=a.ty+h,o[l]=e+r[0],o[l+1]=i+r[1],o[l+4]=e+r[2],o[l+5]=i+r[3],o[l+8]=e+r[4],o[l+9]=i+r[5],o[l+12]=e+r[6],o[l+13]=i+r[7];return t._upload=!0},d.fillTranglesVB=function(t,e,i,r,s,a,n){var h=(t._byteLength>>2)+r.length;t.byteLength=h<<2;var l=t.getFloat32Array();h-=r.length;for(var o=r.length,u=s.a,_=s.b,c=s.c,f=s.d,d=0;d<o;d+=4)if(l[h+d+2]=r[d+2],l[h+d+3]=r[d+3],1!==u||0!==_||0!==c||1!==f){s.bTransform=!0;var m=s.tx+a,p=s.ty+n;l[h+d]=(r[d]+e)*u+(r[d+1]+i)*c+m,l[h+d+1]=(r[d]+e)*_+(r[d+1]+i)*f+p}else s.bTransform=!1,e+=s.tx+a,i+=s.ty+n,l[h+d]=e+r[d],l[h+d+1]=i+r[d+1];return t._upload=!0},d.copyPreImgVb=function(t,e,i){var r=t._byteLength>>2;t.byteLength=r+16<<2;for(var s=t.getFloat32Array(),a=0,n=r-16;a<4;a++)s[r]=s[n]+e,++n,s[++r]=s[n]+i,++n,s[++r]=s[n],++n,s[++r]=s[n],++r,++n;t._upload=!0},d.fillRectImgVb=function(t,e,i,r,s,a,n,h,l,o,u,_,c){void 0===c&&(c=!1);var f,d,m,p,g,v,x,b,y,T,A,E,S,w,R,I,M=1,C=h.a,L=h.b,P=h.c,D=h.d,F=e&&e.width<99999999;if(1!==C||0!==L||0!==P||1!==D?(h.bTransform=!0,0===L&&0===P&&(M=23,y=s+i,T=a+r,f=C*i+(A=h.tx+l),m=C*y+A,d=D*r+(E=h.ty+o),p=D*T+E)):(M=23,h.bTransform=!1,m=(f=i+h.tx+l)+s,p=(d=r+h.ty+o)+a),F&&(g=e.x,v=e.y,x=e.width+g,b=e.height+v),1!==M){if(Math.min(f,m)>=x)return!1;if(Math.min(d,p)>=b)return!1;if(Math.max(m,f)<=g)return!1;if(Math.max(p,d)<=v)return!1}var B=t._byteLength>>2;t.byteLength=B+16<<2;var N=t.getFloat32Array();switch(N[B+2]=n[0],N[B+3]=n[1],N[B+6]=n[2],N[B+7]=n[3],N[B+10]=n[4],N[B+11]=n[5],N[B+14]=n[6],N[B+15]=n[7],M){case 1:A=h.tx+l,E=h.ty+o;var O=C*i,V=P*r,U=D*r,k=L*i,H=C*(y=s+i),G=P*(T=a+r),z=D*T,W=L*y;N[B+13]=c?(S=O+V+A,R=Math.round(S)-S,w=U+k+E,I=Math.round(w)-w,N[B]=S+R,N[B+1]=w+I,N[B+4]=H+V+A+R,N[B+5]=U+W+E+I,N[B+8]=H+G+A+R,N[B+9]=z+W+E+I,N[B+12]=O+G+A+R,z+k+E+I):(N[B]=O+V+A,N[B+1]=U+k+E,N[B+4]=H+V+A,N[B+5]=U+W+E,N[B+8]=H+G+A,N[B+9]=z+W+E,N[B+12]=O+G+A,z+k+E);break;case 23:N[B+13]=c?(S=f+u,R=Math.round(S)-S,w=d,I=Math.round(w)-w,N[B]=S+R,N[B+1]=w+I,N[B+4]=m+u+R,N[B+5]=d+I,N[B+8]=m+R,N[B+9]=p+I,N[B+12]=f+R,p+I):(N[B]=f+u,N[B+1]=d,N[B+4]=m+u,N[B+5]=d,N[B+8]=m,N[B+9]=p,N[B+12]=f,p)}return t._upload=!0},d.fillLineVb=function(t,e,i,r,s,a,n,h){var l=.5*n,o=d._fillLineArray,u=-(r-a),_=i-s,c=Math.sqrt(u*u+_*_);u/=c,_/=c,u*=l,_*=l,o[0]=i-u,o[1]=r-_,o[4]=i+u,o[5]=r+_,o[8]=s+u,o[9]=a+_,o[12]=s-u,o[13]=a-_,h&&h.transformPointArray(o,o);var f=16+(t._byteLength>>2);return t.byteLength=f<<2,t.insertData(o,f-16),!0},d._fillLineArray=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],d}(),gt=(function(){function l(){}c(l,"laya.webgl.utils.MatirxArray"),l.ArrayMul=function(t,e,i){if(t)if(e)for(var r=NaN,s=NaN,a=NaN,n=NaN,h=0;h<4;h++)r=t[h],s=t[h+4],a=t[h+8],n=t[h+12],i[h]=r*e[0]+s*e[1]+a*e[2]+n*e[3],i[h+4]=r*e[4]+s*e[5]+a*e[6]+n*e[7],i[h+8]=r*e[8]+s*e[9]+a*e[10]+n*e[11],i[h+12]=r*e[12]+s*e[13]+a*e[14]+n*e[15];else l.copyArray(t,i);else l.copyArray(e,i)},l.copyArray=function(t,e){if(t&&e)for(var i=0;i<t.length;i++)e[i]=t[i]}}(),function(){function e(t,e,i){this._stride=0,this.vertNum=0,this.indexNum=0,this._applied=!1,this._vb=null,this._ib=null,this._vao=null,this._attribInfo=null,this._quadNum=0,this.canReuse=!1,this._stride=t,this._vb=new Jt(t,35048),e&&this._vb._resizeBuffer(e,!1),this._ib=new $t,i&&this._ib._resizeBuffer(i,!1)}c(e,"laya.webgl.utils.Mesh2D");var t=e.prototype;return t.cloneWithNewVB=function(){var t=new e(this._stride,0,0);return t._ib=this._ib,t._quadNum=this._quadNum,t._attribInfo=this._attribInfo,t},t.cloneWithNewVBIB=function(){var t=new e(this._stride,0,0);return t._attribInfo=this._attribInfo,t},t.getVBW=function(){return this._vb.setNeedUpload(),this._vb},t.getVBR=function(){return this._vb},t.getIBR=function(){return this._ib},t.getIBW=function(){return this._ib.setNeedUpload(),this._ib},t.createQuadIB=function(t){this._quadNum=t,this._ib._resizeBuffer(6*t*2,!1),this._ib.byteLength=this._ib.bufferLength;for(var e=this._ib.getUint16Array(),i=0,r=0,s=0;s<t;s++)e[i++]=r,e[i++]=r+2,e[i++]=r+1,e[i++]=r,e[i++]=r+3,e[i++]=r+2,r+=4;this._ib.setNeedUpload()},t.setAttributes=function(t){if(this._attribInfo=t,this._attribInfo.length%3!=0)throw"Mesh2D setAttributes error!"},t.getEleNum=function(){return this._ib.getBuffer().byteLength/2},t.releaseMesh=function(){},t.destroy=function(){},t.clearVB=function(){this._vb.clear()},e._gvaoid=0,e}()),vt=function(){function s(){}return c(s,"laya.webgl.utils.RenderState2D"),s.getMatrArray=function(){return[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]},s.mat2MatArray=function(t,e){var i=t,r=e;return r[0]=i.a,r[1]=i.b,r[2]=s.EMPTYMAT4_ARRAY[2],r[3]=s.EMPTYMAT4_ARRAY[3],r[4]=i.c,r[5]=i.d,r[6]=s.EMPTYMAT4_ARRAY[6],r[7]=s.EMPTYMAT4_ARRAY[7],r[8]=s.EMPTYMAT4_ARRAY[8],r[9]=s.EMPTYMAT4_ARRAY[9],r[10]=s.EMPTYMAT4_ARRAY[10],r[11]=s.EMPTYMAT4_ARRAY[11],r[12]=i.tx,r[13]=i.ty,r[14]=s.EMPTYMAT4_ARRAY[14],r[15]=s.EMPTYMAT4_ARRAY[15],e},s.restoreTempArray=function(){s.TEMPMAT4_ARRAY[0]=1,s.TEMPMAT4_ARRAY[1]=0,s.TEMPMAT4_ARRAY[4]=0,s.TEMPMAT4_ARRAY[5]=1,s.TEMPMAT4_ARRAY[12]=0,s.TEMPMAT4_ARRAY[13]=0},s.clear=function(){s.worldScissorTest=!1,s.worldShaderDefines=null,s.worldFilters=null,s.worldAlpha=1,s.worldClipRect.x=s.worldClipRect.y=0,s.worldClipRect.width=s.width,s.worldClipRect.height=s.height,s.curRenderTarget=null},s._MAXSIZE=99999999,s.EMPTYMAT4_ARRAY=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],s.worldMatrix4=s.TEMPMAT4_ARRAY=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],s.worldAlpha=1,s.worldScissorTest=!1,s.worldFilters=null,s.worldShaderDefines=null,s.curRenderTarget=null,s.width=0,s.height=0,n(s,["worldMatrix",function(){return this.worldMatrix=new S},"worldClipRect",function(){return this.worldClipRect=new R(0,0,99999999,99999999)}]),s}(),xt=function(){var v,i;function x(t,e,i,r,s){var a=this;function n(t){var e=[],i=new v(e);return a._compileToTree(i,t.split("\n"),0,e,s),i}var h=f.now();this._VS=n(e),this._PS=n(i),this._nameMap=r,2<f.now()-h&&console.log("ShaderCompile use time:"+(f.now()-h)+"  size:"+e.length+"/"+i.length)}c(x,"laya.webgl.utils.ShaderCompile");var t=x.prototype;return t._compileToTree=function(t,e,i,r,s){var a,n,h,l,o,u,_,c=0,f=0,d=0,m=0;for(f=i;f<e.length;f++)if(!((h=e[f]).length<1)&&0!==(c=h.indexOf("//"))){if(0<=c&&(h=h.substr(0,c)),a=_||new v(r),_=null,a.text=h,a.noCompile=!0,0<=(c=h.indexOf("#"))){for(l="#",m=c+1,d=h.length;m<d;m++){var p=h.charAt(m);if(" "===p||"\t"===p||"?"===p)break;l+=p}switch(a.name=l){case"#ifdef":case"#ifndef":if(a.src=h,a.noCompile=null!=h.match(/[!&|()=<>]/),a.noCompile?console.log("function():Boolean{return "+h.substr(c+a.name.length)+"}"):(u=h.replace(/^\s*/,"").split(/\s+/),a.setCondition(u[1],"#ifdef"===l?1:2),a.text="//"+a.text),a.setParent(t),t=a,s)for(u=h.substr(m).split(x._splitToWordExps3),m=0;m<u.length;m++)(h=u[m]).length&&(s[h]=!0);continue;case"#if":if(a.src=h,a.noCompile=!0,a.setParent(t),t=a,s)for(u=h.substr(m).split(x._splitToWordExps3),m=0;m<u.length;m++)(h=u[m]).length&&"defined"!=h&&(s[h]=!0);continue;case"#else":a.src=h,n=(t=t.parent).childs[t.childs.length-1],a.noCompile=n.noCompile,a.noCompile||(a.condition=n.condition,a.conditionType=1==n.conditionType?2:1,a.text="//"+a.text+" "+n.text+" "+a.conditionType),a.setParent(t),t=a;continue;case"#endif":n=(t=t.parent).childs[t.childs.length-1],a.noCompile=n.noCompile,a.noCompile||(a.text="//"+a.text),a.setParent(t);continue;case"#include":u=x.splitToWords(h,null);var g=x.includes[u[1]];if(!g)throw"ShaderCompile error no this include file:"+u[1];if((c=u[0].indexOf("?"))<0){a.setParent(t),h=g.getWith("with"==u[2]?u[3]:null),this._compileToTree(a,h.split("\n"),0,r,s),a.text="";continue}a.setCondition(u[0].substr(c+1),1),a.text=g.getWith("with"==u[2]?u[3]:null);break;case"#import":o=(u=x.splitToWords(h,null))[1],r.push({node:a,file:x.includes[o],ofs:a.text.length});continue}}else{if((n=t.childs[t.childs.length-1])&&!n.name){0<r.length&&x.splitToWords(h,n),_=a,n.text+="\n"+h;continue}0<r.length&&x.splitToWords(h,a)}a.setParent(t)}},t.createShader=function(t,e,i){var r={},s="";if(t)for(var a in t)s+="#define "+a+"\n",r[a]=!0;var n=this._VS.toscript(r,[]),h=this._PS.toscript(r,[]);return(i||Qt.create)(s+n.join("\n"),s+h.join("\n"),e,this._nameMap)},x._parseOne=function(t,e,i,r,s,a){var n={type:x.shaderParamsMap[i[r+1]],name:i[r+2],size:isNaN(parseInt(i[r+3]))?1:parseInt(i[r+3])};return a&&("attribute"==s?t.push(n):e.push(n)),":"==i[r+3]&&(n.type=i[r+4],r+=2),r+=2},x.addInclude=function(t,e){if(!e||0===e.length)throw new Error("add shader include file err:"+t);if(x.includes[t])throw new Error("add shader include file err, has add:"+t);x.includes[t]=new i(e)},x.preGetParams=function(t,e){var i=[t,e],r={},s=[],a=[],n={},h=[];r.attributes=s,r.uniforms=a,r.defines=n;for(var l=0,o=0,u=0;u<2;u++){i[u]=i[u].replace(x._removeAnnotation,"");var _,c=i[u].match(x._reg);for(l=0,o=c.length;l<o;l++){var f=c[l];if("attribute"==f||"uniform"==f)l=x._parseOne(s,a,c,l,f,!0);else{if("#define"==f){h[f=c[++l]]=1;continue}if("#ifdef"==f){n[_=c[++l]]=n[_]||[];for(l++;l<o;l++)if("attribute"==(f=c[l])||"uniform"==f)l=x._parseOne(s,a,c,l,f,h[_]);else if("#else"==f)for(l++;l<o;l++)if("attribute"==(f=c[l])||"uniform"==f)l=x._parseOne(s,a,c,l,f,!h[_]);else if("#endif"==f)break}}}}return r},x.splitToWords=function(t,e){for(var i,r,s=[],a=-1,n=0,h=t.length;n<h;n++)if(i=t.charAt(n),0<=" \t=+-*/&%!<>()'\",;".indexOf(i)){if(0<=a&&1<n-a&&(r=t.substr(a,n-a),s.push(r)),'"'==i||"'"==i){var l=t.indexOf(i,n+1);if(l<0)throw"Sharder err:"+t;s.push(t.substr(n+1,l-n-1)),n=l,a=-1;continue}"("==i&&e&&0<s.length&&(r=s[s.length-1]+";","vec4;main;".indexOf(r)<0&&(e.useFuns+=r)),a=-1}else a<0&&(a=n);return a<h&&1<h-a&&(r=t.substr(a,h-a),s.push(r)),s},x.IFDEF_NO=0,x.IFDEF_YES=1,x.IFDEF_ELSE=2,x.IFDEF_PARENT=3,x._removeAnnotation=new RegExp("(/\\*([^*]|[\\r\\\n]|(\\*+([^*/]|[\\r\\n])))*\\*+/)|(//.*)","g"),x._reg=new RegExp("(\".*\")|('.*')|([#\\w\\*-\\.+/()=<>{}\\\\]+)|([,;:\\\\])","g"),x._splitToWordExps=new RegExp("[(\".*\")]+|[('.*')]+|([ \\t=\\+\\-*/&%!<>!%(),;])","g"),x.includes={},n(x,["shaderParamsMap",function(){return this.shaderParamsMap={float:5126,int:5124,bool:35670,vec2:35664,vec3:35665,vec4:35666,ivec2:35667,ivec3:35668,ivec4:35669,bvec2:35671,bvec3:35672,bvec4:35673,mat2:35674,mat3:35675,mat4:35676,sampler2D:35678,samplerCube:35680}},"_splitToWordExps3",function(){return this._splitToWordExps3=new RegExp("[ \\t=\\+\\-*/&%!<>!%(),;\\|]","g")}]),x.__init$=function(){v=function(){function i(t){this.childs=[],this.text="",this.parent=null,this.name=null,this.noCompile=!1,this.includefiles=null,this.condition=null,this.conditionType=0,this.useFuns="",this.z=0,this.src=null,this.includefiles=t}c(i,"");var t=i.prototype;return t.setParent=function(t){t.childs.push(this),this.z=t.z+1,this.parent=t},t.setCondition=function(t,e){t&&(this.conditionType=e,t=t.replace(/(\s*$)/g,""),this.condition=function(){return this[t]},this.condition.__condition=t)},t.toscript=function(t,e){return this._toscript(t,e,++i.__id)},t._toscript=function(r,s,a){if(this.childs.length<1&&!this.text)return s;s.length;if(this.condition){var t=!!this.condition.call(r);if(2===this.conditionType&&(t=!t),!t)return s}if(this.text&&s.push(this.text),0<this.childs.length&&this.childs.forEach(function(t,e,i){t._toscript(r,s,a)}),0<this.includefiles.length&&0<this.useFuns.length)for(var e,i=0,n=this.includefiles.length;i<n;i++)this.includefiles[i].curUseID!=a&&0<(e=this.includefiles[i].file.getFunsScript(this.useFuns)).length&&(this.includefiles[i].curUseID=a,s[0]=e+s[0]);return s},i.__id=1,i}(),i=function(){function t(t){this.script=null,this.codes={},this.funs={},this.curUseID=-1,this.funnames="",this.script=t;for(var e=0,i=0,r=0;!((e=t.indexOf("#begin",e))<0);){for(r=e+5;!((r=t.indexOf("#end",r))<0)&&"i"===t.charAt(r+4);)r+=5;if(r<0)throw"add include err,no #end:"+t;i=t.indexOf("\n",e);var s=x.splitToWords(t.substr(e,i-e),null);"code"==s[1]?this.codes[s[2]]=t.substr(i+1,r-i-1):"function"==s[1]&&(i=t.indexOf("function",e),i+="function".length,this.funs[s[3]]=t.substr(i+1,r-i-1),this.funnames+=s[3]+";"),e=r+1}}c(t,"");var e=t.prototype;return e.getWith=function(t){var e=t?this.codes[t]:this.script;if(!e)throw"get with error:"+t;return e},e.getFunsScript=function(t){var e="";for(var i in this.funs)0<=t.indexOf(i+";")&&(e+=this.funs[i]);return e},t}()},x}(),bt=function(){function n(){}return c(n,"laya.webgl.WebGL"),n._uint8ArraySlice=function(){for(var t=this.length,e=new Uint8Array(this.length),i=0;i<t;i++)e[i]=this[i];return e},n._float32ArraySlice=function(){for(var t=this.length,e=new Float32Array(this.length),i=0;i<t;i++)e[i]=this[i];return e},n._uint16ArraySlice=function(t){var e,i=arguments,r=0,s=0;if(0===i.length)for(r=this.length,e=new Uint16Array(r),s=0;s<r;s++)e[s]=this[s];else if(2===i.length){var a=i[0],n=i[1];if(a<n)for(r=n-a,e=new Uint16Array(r),s=a;s<n;s++)e[s-a]=this[s];else e=new Uint16Array(0)}return e},n.expandContext=function(){var t=s.prototype,e=CanvasRenderingContext2D.prototype;e.fillTrangles=t.fillTrangles,Zt.__int__(null),e.setIBVB=function(t,e,i,r,s,a,n,h,l,o){void 0===l&&(l=0),void 0===o&&(o=0),null===i&&(this._ib=this._ib||$t.QuadrangleIB,i=this._ib,pt.expandIBQuadrangle(i,r._byteLength/64+8)),this._setIBVB(t,e,i,r,s,a,n,h,l,o)},e.fillTrangles=function(t,e,i,r,s){this._curMat=this._curMat||S.create(),this._vb=this._vb||Jt.create(),this._ib||(this._ib=$t.create(),pt.fillIBQuadrangle(this._ib,n/4));var a=this._vb,n=r.length>>4;pt.fillTranglesVB(a,e,i,r,s||this._curMat,0,0),pt.expandIBQuadrangle(this._ib,a._byteLength/64+8);var h=new Et(1,0);h.textureHost=t;var l=new jt("attribute vec2 position; attribute vec2 texcoord; uniform vec2 size; uniform mat4 mmat; varying vec2 v_texcoord; void main() { vec4 p=vec4(position.xy,0.0,1.0);vec4 pos=mmat*p; gl_Position =vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0); v_texcoord = texcoord; }","precision mediump float; varying vec2 v_texcoord; uniform sampler2D texture; void main() {vec4 color= texture2D(texture, v_texcoord); color.a*=1.0; gl_FragColor= color;}");a._vertType=3,this._setIBVB(e,i,this._ib,a,6*n,s,l,h,0,0)}},n.enable=function(){if(f.__init__(),g.isConchApp&&!g.isConchWebGL)return y.skinAniSprite=function(){return new tt},n.expandContext(),!1;if(y.getWebGLContext=function(t){for(var e,i=["webgl","experimental-webgl","webkit-3d","moz-webgl"],r=0;r<i.length;r++){try{e=t.getContext(i[r],{stencil:A.isStencil,alpha:A.isAlpha,antialias:A.isAntialias,premultipliedAlpha:A.premultipliedAlpha,preserveDrawingBuffer:A.preserveDrawingBuffer})}catch(t){}if(e)return e}return null},null==(n.mainContext=y.getWebGLContext(g._mainCanvas)))return!1;if(g.isWebGL)return!0;m.create=function(t,e){return new te(t,e)},p.create=function(t,e,i,r,s,a,n){return new Kt(t,e,i,r,s,a,n)},g.WebGL=n,g.isWebGL=!0,ft.__init__(),y.createRenderSprite=function(t,e){return new St(t,e)},y.createWebGLContext2D=function(t){return new At(t)},y.changeWebGLSize=function(t,e){laya.webgl.WebGL.onStageResize(t,e)},y.createGraphics=function(){return new Tt};var t=y.createFilterAction;return y.createFilterAction=t||function(t){return new wt},y.clear=function(t){vt.worldScissorTest&&laya.webgl.WebGL.mainContext.disable(3089);var e=g.context.ctx,i=0==e._submits._length||A.preserveDrawingBuffer?d.create(t)._color:M._wgColor;i&&e.clearBG(i[0],i[1],i[2],i[3]),vt.clear()},y.addToAtlas=function(t,e){void 0===e&&(e=!1);var i=t.bitmap;g.optimizeTextureMemory(t.url,t)?T.__typeof(i,"laya.webgl.resource.IMergeAtlasBitmap")&&i.allowMerageInAtlas&&i.on("recovered",t,t.addTextureToAtlas):i.enableMerageInAtlas=!1},y.isAtlas=function(t){return t instanceof laya.webgl.atlas.AtlasWebGLCanvas},k._enable(),y.beginFlush=function(){for(var t=k.instance,e=t.getAtlaserCount(),i=0;i<e;i++){var r=t.getAtlaserByIndex(i).texture;r._flashCacheImageNeedFlush&&y.flashFlushImage(r)}},y.drawToCanvas=function(t,e,i,r,s,a){(i<=0||r<=0)&&console.log("[error] canvasWidth and canvasHeight should greater than zero"),i|=0,r|=0,s|=0,a|=0;var n=Nt.create(i,r,6408,5121,0,!1);n.start(),n.clear(0,0,0,0),g.context.clear(),v.renders[e]._fun(t,g.context,s,vt.height-r+a),g.context.flush(),n.end();var h=n.getData(0,0,i,r);if(n.recycle(),h.byteLength==i*r*4){var l=new Wt;l._canvas=f.createElement("canvas"),l.size(i,r);var o=l._canvas.getContext("2d");f.canvas.size(i,r);var u=f.context,_=u.createImageData(i,r);return _.data.set(new Uint8ClampedArray(h.buffer)),l._imgData=_,u.putImageData(_,0,0),o.save(),o.translate(0,r),o.scale(1,-1),o.drawImage(f.canvas.source,0,0),o.restore(),l}console.log("drawToCanvas error: w:"+i+",h:"+r+",datalen:"+h.byteLength)},y.createFilterAction=function(t){var e;switch(t){case 32:e=new wt}return e},y.addTextureToAtlas=function(t){t._uvID++,k._atlasRestore++,t.bitmap.enableMerageInAtlas&&k.instance.addToAtlas(t)},y.getTexturePixels=function(t,e,i,r,s){g.context.ctx.clear();var a=new I;a.graphics.drawTexture(t,-e,-i);var n=Nt.create(r,s);n.start(),n.clear(0,0,0,0),a.render(g.context,0,0),g.context.ctx.flush(),n.end();for(var h=n.getData(0,0,r,s),l=[],o=0,u=s-1;0<=u;u--)for(var _=0;_<r;_++)o=4*(u*r+_),l.push(h[o]),l.push(h[o+1]),l.push(h[o+2]),l.push(h[o+3]);return l},y.skinAniSprite=function(){return new tt},_.create=function(t,e){var i=new Wt;return i._imgData=e,i.flipY=!1,i},E._filterStart=function(t,e,i,r,s){var a=t.getValue("bounds"),n=Nt.create(a.width,a.height);if(n.start(),n.clear(0,0,0,0),t.addValue("src",n),t.addValue("ScissorTest",vt.worldScissorTest),vt.worldScissorTest){var h=new R;h.copyFrom(i.ctx._clipRect),t.addValue("clipRect",h),vt.worldScissorTest=!1,laya.webgl.WebGL.mainContext.disable(3089)}},E._filterEnd=function(t,e,i,r,s){var a=t.getValue("bounds");t.getValue("src").end();var n=Nt.create(a.width,a.height);n.start(),n.clear(0,0,0,0),t.addValue("out",n),e._set$P("_filterCache",n),e._set$P("_isHaveGlowFilter",t.getValue("_isHaveGlowFilter"))},E._EndTarget=function(t,e){if(t.getValue("src").recycle(),t.getValue("out").end(),t.getValue("ScissorTest")){vt.worldScissorTest=!0,laya.webgl.WebGL.mainContext.enable(3089),e.ctx.save();var i=t.getValue("clipRect");e.ctx.clipRect(i.x,i.y,i.width,i.height)}},E._useSrc=function(t){var e=t.getValue("out");e.end(),(e=t.getValue("src")).start(),e.clear(0,0,0,0)},E._endSrc=function(t){t.getValue("src").end()},E._useOut=function(t){var e=t.getValue("src");e.end(),(e=t.getValue("out")).start(),e.clear(0,0,0,0)},E._endOut=function(t){t.getValue("out").end()},E._recycleScope=function(t){t.recycle()},E._filter=function(t,e,i,r){var s=this._next;if(s){var a,n,h=t.filters,l=h.length;if(1==l&&32==h[0].type)return e.ctx.save(),e.ctx.setFilters([h[0]]),s._fun.call(s,t,e,i,r),void e.ctx.restore();var o=ht.create(),u=w.TEMP,_=e.ctx._getTransformMatrix(),c=S.create();_.copyTo(c);var f=0,d=0,m=!1,p=t._$P._filterCache?t._$P._filterCache:null;if(!p||t._repaint){m=t._isHaveGlowFilter(),o.addValue("_isHaveGlowFilter",m),m&&(f=50,d=25),(n=new R).copyFrom(t.getSelfBounds()),n.x+=t.x,n.y+=t.y,n.x-=t.pivotX+4,n.y-=t.pivotY+4;var g=n.x,v=n.y;if(n.width+=f+8,n.height+=f+8,u.x=n.x*c.a+n.y*c.c,u.y=n.y*c.d+n.x*c.b,n.x=u.x,n.y=u.y,u.x=n.width*c.a+n.height*c.c,u.y=n.height*c.d+n.width*c.b,n.width=u.x,n.height=u.y,n.width<=0||n.height<=0)return;p&&p.recycle(),o.addValue("bounds",n);var x=nt.create([o,t,e,0,0],E._filterStart);e.addRenderObject(x),e.ctx._renderKey=0,e.ctx._shader2D.glTexture=null;var b=t.x-g+d,y=t.y-v+d;s._fun.call(s,t,e,b,y),x=nt.create([o,t,e,0,0],E._filterEnd),e.addRenderObject(x);for(var T=0;T<l;T++){0!=T&&(x=nt.create([o],E._useSrc),e.addRenderObject(x),a=Et.create(1,0),S.TEMP.identity(),e.ctx.drawTarget(o,0,0,n.width,n.height,S.TEMP,"out",a,null,G.TOINT.overlay),x=nt.create([o],E._useOut),e.addRenderObject(x)),h[T].action.apply3d(o,t,e,0,0)}x=nt.create([o,e],E._EndTarget),e.addRenderObject(x)}else{if((m=!!t._$P._isHaveGlowFilter&&t._$P._isHaveGlowFilter)&&(f=50,d=25),(n=t.getBounds()).width<=0||n.height<=0)return;n.width+=f,n.height+=f,u.x=n.x*c.a+n.y*c.c,u.y=n.y*c.d+n.x*c.b,n.x=u.x,n.y=u.y,u.x=n.width*c.a+n.height*c.c,u.y=n.height*c.d+n.width*c.b,n.width=u.x,n.height=u.y,o.addValue("out",p)}i=i-d-t.x,r=r-d-t.y,u.setTo(i,r),c.transformPoint(u),i=u.x+n.x,r=u.y+n.y,a=Et.create(1,0),S.TEMP.identity(),e.ctx.drawTarget(o,i,r,n.width,n.height,S.TEMP,"out",a,null,G.TOINT.overlay),x=nt.create([o],E._recycleScope),e.addRenderObject(x),c.destroy()}},Float32Array.prototype.slice||(Float32Array.prototype.slice=n._float32ArraySlice),Uint16Array.prototype.slice||(Uint16Array.prototype.slice=n._uint16ArraySlice),Uint8Array.prototype.slice||(Uint8Array.prototype.slice=n._uint8ArraySlice),!0},n.onStageResize=function(t,e){null!=n.mainContext&&(n.mainContext.viewport(0,0,t,e),vt.width=t,vt.height=e)},n.onInvalidGLRes=function(){k.instance.freeAll(),b.releaseContentManagers(!0),n.doNodeRepaint(T.stage),n.mainContext.viewport(0,0,vt.width,vt.height),T.stage.event("devicelost")},n.doNodeRepaint=function(t){0==t.numChildren&&t.repaint();for(var e=0;e<t.numChildren;e++)n.doNodeRepaint(t.getChildAt(e))},n.init=function(t,e,i){n.mainCanvas=t,_._createContext=function(t){return new At(t)},Wt._createContext=function(t){return new At(t)};var r=laya.webgl.WebGL.mainContext;if(null!=r.getShaderPrecisionFormat){var s=r.getShaderPrecisionFormat(35633,36338),a=r.getShaderPrecisionFormat(35632,36338);n.shaderHighPrecision=!(!s.precision||!a.precision)}else n.shaderHighPrecision=!1;if(n.compressAstc=r.getExtension("WEBGL_compressed_texture_astc"),n.compressAtc=r.getExtension("WEBGL_compressed_texture_atc"),n.compressEtc=r.getExtension("WEBGL_compressed_texture_etc"),n.compressEtc1=r.getExtension("WEBGL_compressed_texture_etc1"),n.compressPvrtc=r.getExtension("WEBGL_compressed_texture_pvrtc"),n.compressS3tc=r.getExtension("WEBGL_compressed_texture_s3tc"),n.compressS3tc_srgb=r.getExtension("WEBGL_compressed_texture_s3tc_srgb"),r.deleteTexture1=r.deleteTexture,r.deleteTexture=function(t){t==yt.curBindTexValue&&(yt.curBindTexValue=null),r.deleteTexture1(t)},n.onStageResize(e,i),null==n.mainContext)throw new Error("webGL getContext err!");P.__init__(),k.__init__(),It.__init__(),at.__init__(),At.__init__(),Et.__init__(),$.__init__(),Zt.__int__(r),G._init_(r),g.isConchApp&&conch.setOnInvalidGLRes(n.onInvalidGLRes)},n.compressAstc=null,n.compressAtc=null,n.compressEtc=null,n.compressEtc1=null,n.compressPvrtc=null,n.compressS3tc=null,n.compressS3tc_srgb=null,n.mainCanvas=null,n.mainContext=null,n.antialias=!0,n.shaderHighPrecision=!1,n._bg_null=[0,0,0,0],n}(),yt=function(){function r(){}return c(r,"laya.webgl.WebGLContext"),r.UseProgram=function(t){return r._useProgram!==t&&(bt.mainContext.useProgram(t),r._useProgram=t,!0)},r.setDepthTest=function(t,e){e!==r._depthTest&&((r._depthTest=e)?t.enable(2929):t.disable(2929))},r.setDepthMask=function(t,e){e!==r._depthMask&&(r._depthMask=e,t.depthMask(e))},r.setDepthFunc=function(t,e){e!==r._depthFunc&&(r._depthFunc=e,t.depthFunc(e))},r.setBlend=function(t,e){e!==r._blend&&((r._blend=e)?t.enable(3042):t.disable(3042))},r.setBlendFunc=function(t,e,i){(e!==r._sFactor||i!==r._dFactor)&&(r._sFactor=e,r._dFactor=i,t.blendFunc(e,i))},r.setCullFace=function(t,e){e!==r._cullFace&&((r._cullFace=e)?t.enable(2884):t.disable(2884))},r.setFrontFace=function(t,e){e!==r._frontFace&&(r._frontFace=e,t.frontFace(e))},r.bindTexture=function(t,e,i){t.bindTexture(e,i),r.curBindTexTarget=e,r.curBindTexValue=i},r.DEPTH_BUFFER_BIT=256,r.STENCIL_BUFFER_BIT=1024,r.COLOR_BUFFER_BIT=16384,r.POINTS=0,r.LINES=1,r.LINE_LOOP=2,r.LINE_STRIP=3,r.TRIANGLES=4,r.TRIANGLE_STRIP=5,r.TRIANGLE_FAN=6,r.ZERO=0,r.ONE=1,r.SRC_COLOR=768,r.ONE_MINUS_SRC_COLOR=769,r.SRC_ALPHA=770,r.ONE_MINUS_SRC_ALPHA=771,r.DST_ALPHA=772,r.ONE_MINUS_DST_ALPHA=773,r.DST_COLOR=774,r.ONE_MINUS_DST_COLOR=775,r.SRC_ALPHA_SATURATE=776,r.FUNC_ADD=32774,r.BLEND_EQUATION=32777,r.BLEND_EQUATION_RGB=32777,r.BLEND_EQUATION_ALPHA=34877,r.FUNC_SUBTRACT=32778,r.FUNC_REVERSE_SUBTRACT=32779,r.BLEND_DST_RGB=32968,r.BLEND_SRC_RGB=32969,r.BLEND_DST_ALPHA=32970,r.BLEND_SRC_ALPHA=32971,r.CONSTANT_COLOR=32769,r.ONE_MINUS_CONSTANT_COLOR=32770,r.CONSTANT_ALPHA=32771,r.ONE_MINUS_CONSTANT_ALPHA=32772,r.BLEND_COLOR=32773,r.ARRAY_BUFFER=34962,r.ELEMENT_ARRAY_BUFFER=34963,r.ARRAY_BUFFER_BINDING=34964,r.ELEMENT_ARRAY_BUFFER_BINDING=34965,r.STREAM_DRAW=35040,r.STATIC_DRAW=35044,r.DYNAMIC_DRAW=35048,r.BUFFER_SIZE=34660,r.BUFFER_USAGE=34661,r.CURRENT_VERTEX_ATTRIB=34342,r.FRONT=1028,r.BACK=1029,r.CULL_FACE=2884,r.FRONT_AND_BACK=1032,r.BLEND=3042,r.DITHER=3024,r.STENCIL_TEST=2960,r.DEPTH_TEST=2929,r.SCISSOR_TEST=3089,r.POLYGON_OFFSET_FILL=32823,r.SAMPLE_ALPHA_TO_COVERAGE=32926,r.SAMPLE_COVERAGE=32928,r.NO_ERROR=0,r.INVALID_ENUM=1280,r.INVALID_VALUE=1281,r.INVALID_OPERATION=1282,r.OUT_OF_MEMORY=1285,r.CW=2304,r.CCW=2305,r.LINE_WIDTH=2849,r.ALIASED_POINT_SIZE_RANGE=33901,r.ALIASED_LINE_WIDTH_RANGE=33902,r.CULL_FACE_MODE=2885,r.FRONT_FACE=2886,r.DEPTH_RANGE=2928,r.DEPTH_WRITEMASK=2930,r.DEPTH_CLEAR_VALUE=2931,r.DEPTH_FUNC=2932,r.STENCIL_CLEAR_VALUE=2961,r.STENCIL_FUNC=2962,r.STENCIL_FAIL=2964,r.STENCIL_PASS_DEPTH_FAIL=2965,r.STENCIL_PASS_DEPTH_PASS=2966,r.STENCIL_REF=2967,r.STENCIL_VALUE_MASK=2963,r.STENCIL_WRITEMASK=2968,r.STENCIL_BACK_FUNC=34816,r.STENCIL_BACK_FAIL=34817,r.STENCIL_BACK_PASS_DEPTH_FAIL=34818,r.STENCIL_BACK_PASS_DEPTH_PASS=34819,r.STENCIL_BACK_REF=36003,r.STENCIL_BACK_VALUE_MASK=36004,r.STENCIL_BACK_WRITEMASK=36005,r.VIEWPORT=2978,r.SCISSOR_BOX=3088,r.COLOR_CLEAR_VALUE=3106,r.COLOR_WRITEMASK=3107,r.UNPACK_ALIGNMENT=3317,r.PACK_ALIGNMENT=3333,r.MAX_TEXTURE_SIZE=3379,r.MAX_VIEWPORT_DIMS=3386,r.SUBPIXEL_BITS=3408,r.RED_BITS=3410,r.GREEN_BITS=3411,r.BLUE_BITS=3412,r.ALPHA_BITS=3413,r.DEPTH_BITS=3414,r.STENCIL_BITS=3415,r.POLYGON_OFFSET_UNITS=10752,r.POLYGON_OFFSET_FACTOR=32824,r.TEXTURE_BINDING_2D=32873,r.SAMPLE_BUFFERS=32936,r.SAMPLES=32937,r.SAMPLE_COVERAGE_VALUE=32938,r.SAMPLE_COVERAGE_INVERT=32939,r.NUM_COMPRESSED_TEXTURE_FORMATS=34466,r.COMPRESSED_TEXTURE_FORMATS=34467,r.DONT_CARE=4352,r.FASTEST=4353,r.NICEST=4354,r.GENERATE_MIPMAP_HINT=33170,r.BYTE=5120,r.UNSIGNED_BYTE=5121,r.SHORT=5122,r.UNSIGNED_SHORT=5123,r.INT=5124,r.UNSIGNED_INT=5125,r.FLOAT=5126,r.DEPTH_COMPONENT=6402,r.ALPHA=6406,r.RGB=6407,r.RGBA=6408,r.LUMINANCE=6409,r.LUMINANCE_ALPHA=6410,r.UNSIGNED_SHORT_4_4_4_4=32819,r.UNSIGNED_SHORT_5_5_5_1=32820,r.UNSIGNED_SHORT_5_6_5=33635,r.FRAGMENT_SHADER=35632,r.VERTEX_SHADER=35633,r.MAX_VERTEX_ATTRIBS=34921,r.MAX_VERTEX_UNIFORM_VECTORS=36347,r.MAX_VARYING_VECTORS=36348,r.MAX_COMBINED_TEXTURE_IMAGE_UNITS=35661,r.MAX_VERTEX_TEXTURE_IMAGE_UNITS=35660,r.MAX_TEXTURE_IMAGE_UNITS=34930,r.MAX_FRAGMENT_UNIFORM_VECTORS=36349,r.SHADER_TYPE=35663,r.DELETE_STATUS=35712,r.LINK_STATUS=35714,r.VALIDATE_STATUS=35715,r.ATTACHED_SHADERS=35717,r.ACTIVE_UNIFORMS=35718,r.ACTIVE_ATTRIBUTES=35721,r.SHADING_LANGUAGE_VERSION=35724,r.CURRENT_PROGRAM=35725,r.NEVER=512,r.LESS=513,r.EQUAL=514,r.LEQUAL=515,r.GREATER=516,r.NOTEQUAL=517,r.GEQUAL=518,r.ALWAYS=519,r.KEEP=7680,r.REPLACE=7681,r.INCR=7682,r.DECR=7683,r.INVERT=5386,r.INCR_WRAP=34055,r.DECR_WRAP=34056,r.VENDOR=7936,r.RENDERER=7937,r.VERSION=7938,r.NEAREST=9728,r.LINEAR=9729,r.NEAREST_MIPMAP_NEAREST=9984,r.LINEAR_MIPMAP_NEAREST=9985,r.NEAREST_MIPMAP_LINEAR=9986,r.LINEAR_MIPMAP_LINEAR=9987,r.TEXTURE_MAG_FILTER=10240,r.TEXTURE_MIN_FILTER=10241,r.TEXTURE_WRAP_S=10242,r.TEXTURE_WRAP_T=10243,r.TEXTURE_2D=3553,r.TEXTURE=5890,r.TEXTURE_CUBE_MAP=34067,r.TEXTURE_BINDING_CUBE_MAP=34068,r.TEXTURE_CUBE_MAP_POSITIVE_X=34069,r.TEXTURE_CUBE_MAP_NEGATIVE_X=34070,r.TEXTURE_CUBE_MAP_POSITIVE_Y=34071,r.TEXTURE_CUBE_MAP_NEGATIVE_Y=34072,r.TEXTURE_CUBE_MAP_POSITIVE_Z=34073,r.TEXTURE_CUBE_MAP_NEGATIVE_Z=34074,r.MAX_CUBE_MAP_TEXTURE_SIZE=34076,r.TEXTURE0=33984,r.TEXTURE1=33985,r.TEXTURE2=33986,r.TEXTURE3=33987,r.TEXTURE4=33988,r.TEXTURE5=33989,r.TEXTURE6=33990,r.TEXTURE7=33991,r.TEXTURE8=33992,r.TEXTURE9=33993,r.TEXTURE10=33994,r.TEXTURE11=33995,r.TEXTURE12=33996,r.TEXTURE13=33997,r.TEXTURE14=33998,r.TEXTURE15=33999,r.TEXTURE16=34e3,r.TEXTURE17=34001,r.TEXTURE18=34002,r.TEXTURE19=34003,r.TEXTURE20=34004,r.TEXTURE21=34005,r.TEXTURE22=34006,r.TEXTURE23=34007,r.TEXTURE24=34008,r.TEXTURE25=34009,r.TEXTURE26=34010,r.TEXTURE27=34011,r.TEXTURE28=34012,r.TEXTURE29=34013,r.TEXTURE30=34014,r.TEXTURE31=34015,r.ACTIVE_TEXTURE=34016,r.REPEAT=10497,r.CLAMP_TO_EDGE=33071,r.MIRRORED_REPEAT=33648,r.FLOAT_VEC2=35664,r.FLOAT_VEC3=35665,r.FLOAT_VEC4=35666,r.INT_VEC2=35667,r.INT_VEC3=35668,r.INT_VEC4=35669,r.BOOL=35670,r.BOOL_VEC2=35671,r.BOOL_VEC3=35672,r.BOOL_VEC4=35673,r.FLOAT_MAT2=35674,r.FLOAT_MAT3=35675,r.FLOAT_MAT4=35676,r.SAMPLER_2D=35678,r.SAMPLER_CUBE=35680,r.VERTEX_ATTRIB_ARRAY_ENABLED=34338,r.VERTEX_ATTRIB_ARRAY_SIZE=34339,r.VERTEX_ATTRIB_ARRAY_STRIDE=34340,r.VERTEX_ATTRIB_ARRAY_TYPE=34341,r.VERTEX_ATTRIB_ARRAY_NORMALIZED=34922,r.VERTEX_ATTRIB_ARRAY_POINTER=34373,r.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING=34975,r.COMPILE_STATUS=35713,r.LOW_FLOAT=36336,r.MEDIUM_FLOAT=36337,r.HIGH_FLOAT=36338,r.LOW_INT=36339,r.MEDIUM_INT=36340,r.HIGH_INT=36341,r.FRAMEBUFFER=36160,r.RENDERBUFFER=36161,r.RGBA4=32854,r.RGB5_A1=32855,r.RGB565=36194,r.DEPTH_COMPONENT16=33189,r.STENCIL_INDEX=6401,r.STENCIL_INDEX8=36168,r.DEPTH_STENCIL=34041,r.RENDERBUFFER_WIDTH=36162,r.RENDERBUFFER_HEIGHT=36163,r.RENDERBUFFER_INTERNAL_FORMAT=36164,r.RENDERBUFFER_RED_SIZE=36176,r.RENDERBUFFER_GREEN_SIZE=36177,r.RENDERBUFFER_BLUE_SIZE=36178,r.RENDERBUFFER_ALPHA_SIZE=36179,r.RENDERBUFFER_DEPTH_SIZE=36180,r.RENDERBUFFER_STENCIL_SIZE=36181,r.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE=36048,r.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME=36049,r.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL=36050,r.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE=36051,r.COLOR_ATTACHMENT0=36064,r.DEPTH_ATTACHMENT=36096,r.STENCIL_ATTACHMENT=36128,r.DEPTH_STENCIL_ATTACHMENT=33306,r.NONE=0,r.FRAMEBUFFER_COMPLETE=36053,r.FRAMEBUFFER_INCOMPLETE_ATTACHMENT=36054,r.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT=36055,r.FRAMEBUFFER_INCOMPLETE_DIMENSIONS=36057,r.FRAMEBUFFER_UNSUPPORTED=36061,r.FRAMEBUFFER_BINDING=36006,r.RENDERBUFFER_BINDING=36007,r.MAX_RENDERBUFFER_SIZE=34024,r.INVALID_FRAMEBUFFER_OPERATION=1286,r.UNPACK_FLIP_Y_WEBGL=37440,r.UNPACK_PREMULTIPLY_ALPHA_WEBGL=37441,r.CONTEXT_LOST_WEBGL=37442,r.UNPACK_COLORSPACE_CONVERSION_WEBGL=37443,r.BROWSER_DEFAULT_WEBGL=37444,r._useProgram=null,r._depthTest=!0,r._depthMask=!0,r._blend=!1,r._cullFace=!1,r.curBindTexTarget=null,r.curBindTexValue=null,n(r,["_depthFunc",function(){return this._depthFunc=513},"_sFactor",function(){return this._sFactor=1},"_dFactor",function(){return this._dFactor=0},"_frontFace",function(){return this._frontFace=2305}]),r}(),Tt=function(t){function e(){e.__super.call(this)}c(e,"laya.webgl.display.GraphicsGL",o);var i=e.prototype;return i.setShader=function(t){this._saveToCmd(g.context._setShader,[t])},i.setIBVB=function(t,e,i,r,s,a){this._saveToCmd(g.context._setIBVB,[t,e,i,r,s,a])},i.drawParticle=function(t,e,i){var r=y.createParticleTemplate2D(i);r.x=t,r.y=e,this._saveToCmd(g.context._drawParticle,[r])},e}(),At=function(t){var i;function U(t){this._x=0,this._y=0,this._id=++U._COUNT,this._path=null,this._drawCount=1,this._maxNumEle=0,this._clear=!1,this._isMain=!1,this._atlasResourceChange=0,this._submits=null,this._curSubmit=null,this._ib=null,this._vb=null,this._nBlendType=0,this._saveMark=null,this._shader2D=null,this.meshlist=[],this.mId=-1,this.mHaveKey=!1,this.mHaveLineKey=!1,this.mX=0,this.mY=0,U.__super.call(this),this._width=99999999,this._height=99999999,this._clipRect=U.MAXCLIPRECT,this.mOutPoint,this._canvas=t,U._contextcount++,g.isFlash?(this._ib=$t.create(35044),pt.fillIBQuadrangle(this._ib,16)):this._ib=$t.QuadrangleIB,this.clear()}c(U,"laya.webgl.canvas.WebGLContext2D",s);var e=U.prototype;return e.setIsMainContext=function(){this._isMain=!0},e.clearBG=function(t,e,i,r){var s=bt.mainContext;s.clearColor(t,e,i,r),s.clear(16384)},e._getSubmits=function(){return this._submits},e._releaseMem=function(){if(this._submits){this._curMat.destroy(),this._curMat=null,this._shader2D.destroy(),this._shader2D=null;for(var t=0,e=this._submits._length;t<e;t++)this._submits[t].releaseRender();this._submits.length=0,this._submits._length=0,this._submits=null,this._curSubmit=null,this._path&&this._path.recover(),this._path=null,this._other&&(this._other.font=null),this._save=null,this._vb&&(this._vb.releaseResource(),this._vb.destroy(),this._vb.destory(),this._vb=null)}},e.destroy=function(){--U._contextcount,this.sprite=null,this._releaseMem(),this._targets&&this._targets.destroy(),this._targets=null,this._canvas=null,this._ib&&this._ib!=$t.QuadrangleIB&&this._ib.releaseResource()},e.clear=function(){this._submits||(this._other=i.DEFAULT,this._curMat=S.create(),this._vb=Jt.create(-1),this._submits=[],this._save=[Q.Create(this)],this._save.length=10,this._shader2D=new $,this._triangleMesh=Ft.getAMesh()),this._vb.clear(),this._targets&&(this._targets.repaint=!0),this._other=i.DEFAULT,this._clear=!0,this._repaint=!1,this._drawCount=1,this._renderKey=0,this._other.lineWidth=this._shader2D.ALPHA=1,this._nBlendType=0,this._clipRect=U.MAXCLIPRECT,this._curSubmit=at.RENDERBASE,this._shader2D.glTexture=null,this._shader2D.fillStyle=this._shader2D.strokeStyle=z.DEFAULT;for(var t=0,e=this._submits._length;t<e;t++)this._submits[t].releaseRender();this._submits._length=0,this._curMat.identity(),this._other.clear(),this._saveMark=this._save[0],this._save._length=1},e.size=function(t,e){if(this._width!=t||this._height!=e)if(0==t||0==e){0!=this._vb._byteLength&&(this._width=t,this._height=e,this._vb.clear(),this._vb.upload());for(var i=0,r=this._submits._length;i<r;i++)this._submits[i].releaseRender();this._submits.length=0,this._submits._length=0,this._curSubmit=null,this._path&&this._path.recover(),this._path=null,this.sprite=null,this._targets&&this._targets.destroy(),this._targets=null}else this._width=t,this._height=e,this._targets&&this._targets.size(t,e),this._canvas.memorySize-=this._canvas.memorySize;0===t&&0===e&&this._releaseMem()},e._getTransformMatrix=function(){return this._curMat},e.translate=function(t,e){0===t&&0===e||(q.save(this),this._curMat.bTransform&&(Z.save(this),this._curMat.transformPointN(w.TEMP.setTo(t,e)),t=w.TEMP.x,e=w.TEMP.y),this._x+=t,this._y+=e)},e.save=function(){this._save[this._save._length++]=Q.Create(this)},e.restore=function(){var t=this._save._length;if(!(t<1))for(var e=t-1;0<=e;e--){var i=this._save[e];if(i.restore(this),i.isSaveMark())return void(this._save._length=e)}},e._fillText=function(t,e,i,r,s,a,n,h,l,o){void 0===o&&(o=0);var u=this._shader2D,_=this._curSubmit.shaderValue,c=s?dt.create(s):this._other.font;if(k.enabled)u.ALPHA!==_.ALPHA&&(u.glTexture=null),ft.drawText(this,t,e,this._curMat,c,l||this._other.textAlign,a,n,h,i,r,o);else{this._shader2D.defines.getValue();var f=a?d.create(a)._color:u.colorAdd;u.ALPHA===_.ALPHA&&f===u.colorAdd&&_.colorAdd===u.colorAdd||(u.glTexture=null,u.colorAdd=f),ft.drawText(this,t,e,this._curMat,c,l||this._other.textAlign,a,n,h,i,r,o)}},e.fillWords=function(t,e,i,r,s,a){this._fillText(null,t,e,i,r,s,null,-1,null,a)},e.fillBorderWords=function(t,e,i,r,s,a,n){this._fillBorderText(null,t,e,i,r,s,a,n,null)},e.fillText=function(t,e,i,r,s,a){this._fillText(t,null,e,i,r,s,null,-1,a)},e.strokeText=function(t,e,i,r,s,a,n){this._fillText(t,null,e,i,r,null,s,a||1,n)},e.fillBorderText=function(t,e,i,r,s,a,n,h){this._fillBorderText(t,null,e,i,r,s,a,n,h)},e._fillBorderText=function(t,e,i,r,s,a,n,h,l){if(!k.enabled)return this._fillText(t,e,i,r,s,null,n,h||1,l),void this._fillText(t,e,i,r,s,a,null,-1,l);var o=this._shader2D,u=this._curSubmit.shaderValue;o.ALPHA!==u.ALPHA&&(o.glTexture=null);var _=s?(U._fontTemp.setFont(s),U._fontTemp):this._other.font;ft.drawText(this,t,e,this._curMat,_,l||this._other.textAlign,a,n,h||1,i,r,0)},e.fillRect=function(t,e,i,r,s){var a=this._vb;if(pt.fillRectImgVb(a,this._clipRect,t,e,i,r,F.DEF_UV,this._curMat,this._x,this._y,0,0)){this._renderKey=0;var n=this._shader2D.fillStyle;s&&(this._shader2D.fillStyle=z.create(s));var h=this._shader2D,l=this._curSubmit.shaderValue;if(h.fillStyle!==l.fillStyle||h.ALPHA!==l.ALPHA){h.glTexture=null;var o=this._curSubmit=at.createSubmit(this,this._ib,a,(a._byteLength-64)/32*3,Et.create(2,0));o.shaderValue.color=h.fillStyle._color._color,o.shaderValue.ALPHA=h.ALPHA,this._submits[this._submits._length++]=o}this._curSubmit._numEle+=6,this._shader2D.fillStyle=n}},e.fillTexture=function(t,e,i,r,s,a,n,h){if(t.loaded&&t.bitmap&&t.source){var l=this._vb,o=t.bitmap.width,u=t.bitmap.height,_=t.uv,c=n.x%t.width,f=n.y%t.height;if(o!=h.w||u!=h.h){if(!h.w&&!h.h)switch(h.oy=h.ox=0,a){case"repeat":h.width=r,h.height=s;break;case"repeat-x":h.width=r,f<0?t.height+f>s?h.height=s:h.height=t.height+f:(h.oy=f,t.height+f>s?h.height=s-f:h.height=t.height);break;case"repeat-y":c<0?t.width+c>r?h.width=r:h.width=t.width+c:(h.ox=c,t.width+c>r?h.width=r-c:h.width=t.width),h.height=s;break;case"no-repeat":c<0?t.width+c>r?h.width=r:h.width=t.width+c:(h.ox=c,t.width+c>r?h.width=r-c:h.width=t.width),f<0?t.height+f>s?h.height=s:h.height=t.height+f:(h.oy=f,t.height+f>s?h.height=s-f:h.height=t.height);break;default:h.width=r,h.height=s}h.w=o,h.h=u,h.uv=[0,0,h.width/o,0,h.width/o,h.height/u,0,h.height/u]}if(e+=h.ox,i+=h.oy,c-=h.ox,f-=h.oy,pt.fillRectImgVb(l,this._clipRect,e,i,h.width,h.height,h.uv,this._curMat,this._x,this._y,0,0)){this._renderKey=0;var d=Dt.create(this,this._ib,l,(l._byteLength-64)/32*3,Et.create(256,0)),m=(this._submits[this._submits._length++]=d).shaderValue;m.textureHost=t;var p=_[0]*o,g=_[1]*u,v=(_[2]-_[0])*o,x=(_[5]-_[3])*u,b=-c/o,y=-f/u;m.u_TexRange[0]=p/o,m.u_TexRange[1]=v/o,m.u_TexRange[2]=g/u,m.u_TexRange[3]=x/u,m.u_offset[0]=b,m.u_offset[1]=y,k.enabled&&!this._isMain&&d.addTexture(t,(l._byteLength>>2)-16),(this._curSubmit=d)._renderType=10017,d._numEle+=6}}else this.sprite&&T.timer.callLater(this,this._repaintSprite)},e.setShader=function(t){Y.save(this,1048576,this._shader2D,!0),this._shader2D.shader=t},e.setFilters=function(t){Y.save(this,2097152,this._shader2D,!0),this._shader2D.filters=t,this._curSubmit=at.RENDERBASE,this._renderKey=0,this._drawCount++},e.drawTexture=function(t,e,i,r,s,a,n){this._drawTextureM(t,e,i,r,s,a,n,null,1)},e.addTextureVb=function(t,e,i){var r=this._curSubmit._vb||this._vb,s=r._byteLength>>2;r.byteLength=s+16<<2;for(var a=r.getFloat32Array(),n=0;n<16;n+=4)a[s++]=t[n]+e,a[s++]=t[n+1]+i,a[s++]=t[n+2],a[s++]=t[n+3];this._curSubmit._numEle+=6,this._maxNumEle=Math.max(this._maxNumEle,this._curSubmit._numEle),r._upload=!0},e.willDrawTexture=function(t,e){if(!(t.loaded&&t.bitmap&&t.source))return this.sprite&&T.timer.callLater(this,this._repaintSprite),0;var i=t.bitmap,r=i.id+this._shader2D.ALPHA*e+10016;if(r==this._renderKey)return r;var s=this._shader2D,a=s.ALPHA,n=this._curSubmit.shaderValue;s.ALPHA*=e,this._renderKey=r,this._drawCount++,s.glTexture=i;var h=this._vb,l=null,o=h._byteLength/32*3;return l=Dt.create(this,this._ib,h,o,Et.create(1,0)),(this._submits[this._submits._length++]=l).shaderValue.textureHost=t,l._renderType=10016,l._preIsSameTextureShader=10016===this._curSubmit._renderType&&s.ALPHA===n.ALPHA,this._curSubmit=l,s.ALPHA=a,r},e.drawTextures=function(t,e,i,r){if(t.loaded&&t.bitmap&&t.source){var s=this._clipRect;if(this._clipRect=U.MAXCLIPRECT,this._drawTextureM(t,e[0],e[1],t.width,t.height,i,r,null,1)){if(this._clipRect=s,C.drawCall++,!(e.length<4)){for(var a=this._curSubmit._vb||this._vb,n=this._curMat.a,h=this._curMat.d,l=2,o=e.length;l<o;l+=2)pt.copyPreImgVb(a,(e[l]-e[l-2])*n,(e[l+1]-e[l-1])*h),this._curSubmit._numEle+=6;this._maxNumEle=Math.max(this._maxNumEle,this._curSubmit._numEle)}}else alert("drawTextures err")}else this.sprite&&T.timer.callLater(this,this._repaintSprite)},e._drawTextureM=function(t,e,i,r,s,a,n,h,l){if(!t.loaded||!t.source)return this.sprite&&T.timer.callLater(this,this._repaintSprite),!1;var o=this._curSubmit._vb||this._vb,u=t.bitmap;e+=a,i+=n,this._drawCount++;var _=u.id+this._shader2D.ALPHA*l+10016;if(_!=this._renderKey){this._renderKey=_;var c=this._curSubmit.shaderValue,f=this._shader2D,d=f.ALPHA;f.ALPHA*=l,f.glTexture=u;var m=this._vb,p=null,g=m._byteLength/32*3;p=Dt.create(this,this._ib,m,g,Et.create(1,0)),(this._submits[this._submits._length++]=p).shaderValue.textureHost=t,p._renderType=10016,p._preIsSameTextureShader=10016===this._curSubmit._renderType&&f.ALPHA===c.ALPHA,this._curSubmit=p,o=this._curSubmit._vb||this._vb,f.ALPHA=d}return!!pt.fillRectImgVb(o,this._clipRect,e,i,r||t.width,s||t.height,t.uv,h||this._curMat,this._x,this._y,0,0)&&(k.enabled&&!this._isMain&&this._curSubmit.addTexture(t,(o._byteLength>>2)-16),this._curSubmit._numEle+=6,this._maxNumEle=Math.max(this._maxNumEle,this._curSubmit._numEle),!0)},e._repaintSprite=function(){this.sprite&&this.sprite.repaint()},e._drawText=function(t,e,i,r,s,a,n,h,l,o){var u=t.bitmap;this._drawCount++;var _=u.id+this._shader2D.ALPHA+10016;if(_!=this._renderKey){this._renderKey=_;var c=this._curSubmit.shaderValue,f=this._shader2D;f.glTexture=u;var d=this._vb,m=null,p=d._byteLength/32*3;(m=k.enabled?Dt.create(this,this._ib,d,p,Et.create(1,0)):Dt.create(this,this._ib,d,p,qt.create()))._preIsSameTextureShader=10016===this._curSubmit._renderType&&f.ALPHA===c.ALPHA,(this._submits[this._submits._length++]=m).shaderValue.textureHost=t,m._renderType=10016,this._curSubmit=m}t.active();var g=this._curSubmit._vb||this._vb;pt.fillRectImgVb(g,this._clipRect,e+n,i+h,r||t.width,s||t.height,t.uv,a||this._curMat,this._x,this._y,l,o,!0)&&(k.enabled&&!this._isMain&&this._curSubmit.addTexture(t,(g._byteLength>>2)-16),this._curSubmit._numEle+=6,this._maxNumEle=Math.max(this._maxNumEle,this._curSubmit._numEle))},e.drawTextureWithTransform=function(t,e,i,r,s,a,n,h,l){if(a){var o=this._curMat,u=this._x,_=this._y;(0!==n||0!==h)&&(this._x=n*o.a+h*o.c,this._y=h*o.d+n*o.b),a&&o.bTransform?(S.mul(a,o,U._tmpMatrix),(a=U._tmpMatrix)._checkTransform()):(this._x+=o.tx,this._y+=o.ty),this._drawTextureM(t,e,i,r,s,0,0,a,l),this._x=u,this._y=_}else this._drawTextureM(t,e,i,r,s,n,h,null,l)},e.fillQuadrangle=function(t,e,i,r,s){var a=this._curSubmit,n=this._vb,h=this._shader2D,l=a.shaderValue;if(this._renderKey=0,t.bitmap){var o=t.bitmap;h.glTexture==o&&h.ALPHA===l.ALPHA||(h.glTexture=o,(a=this._curSubmit=at.createSubmit(this,this._ib,n,n._byteLength/32*3,Et.create(1,0))).shaderValue.glTexture=o,this._submits[this._submits._length++]=a),pt.fillQuadrangleImgVb(n,e,i,r,t.uv,s||this._curMat,this._x,this._y)}else a.shaderValue.fillStyle&&a.shaderValue.fillStyle.equal(t)&&h.ALPHA===l.ALPHA||(h.glTexture=null,(a=this._curSubmit=at.createSubmit(this,this._ib,n,n._byteLength/32*3,Et.create(2,0))).shaderValue.defines.add(2),a.shaderValue.fillStyle=z.create(t),this._submits[this._submits._length++]=a),pt.fillQuadrangleImgVb(n,e,i,r,F.DEF_UV,s||this._curMat,this._x,this._y);a._numEle+=6},e.drawTexture2=function(t,e,i,r,s,a,n,h){if(0!=a){var l=this._curMat;if(this._x=t*l.a+e*l.c,this._y=e*l.d+t*l.b,s&&(s=l.bTransform||s.bTransform?(S.mul(s,l,U._tmpMatrix),U._tmpMatrix):(this._x+=s.tx+l.tx,this._y+=s.ty+l.ty,S.EMPTY)),1!==a||n){var o=this._shader2D.ALPHA,u=this._nBlendType;this._shader2D.ALPHA=a,n&&(this._nBlendType=G.TOINT(n)),this._drawTextureM(h[0],h[1]-i,h[2]-r,h[3],h[4],0,0,s,1),this._shader2D.ALPHA=o,this._nBlendType=u}else this._drawTextureM(h[0],h[1]-i,h[2]-r,h[3],h[4],0,0,s,1);this._x=this._y=0}},e.drawCanvas=function(t,e,i,r,s){var a=t.context;if(this._renderKey=0,a._targets)this._submits[this._submits._length++]=Pt.create(a,0,null),this._curSubmit=at.RENDERBASE,a._targets.drawTo(this,e,i,r,s);else{var n=this._submits[this._submits._length++]=Pt.create(a,this._shader2D.ALPHA,this._shader2D.filters),h=r/t.width,l=s/t.height,o=n._matrix;this._curMat.copyTo(o),1!=h&&1!=l&&o.scale(h,l);var u=o.tx,_=o.ty;o.tx=o.ty=0,o.transformPoint(w.TEMP.setTo(e,i)),o.translate(w.TEMP.x+u,w.TEMP.y+_),this._curSubmit=at.RENDERBASE}A.showCanvasMark&&(this.save(),this.lineWidth=4,this.strokeStyle=a._targets?"yellow":"green",this.strokeRect(e-1,i-1,r+2,s+2,1),this.strokeRect(e,i,r,s,1),this.restore())},e.drawTarget=function(t,e,i,r,s,a,n,h,l,o){void 0===o&&(o=-1);var u=this._vb;if(pt.fillRectImgVb(u,this._clipRect,e,i,r,s,l||F.DEF_UV,a||this._curMat,this._x,this._y,0,0)){this._renderKey=0,this._shader2D.glTexture=null;this._curSubmit.shaderValue;var _=this._curSubmit=_t.create(this,this._ib,u,(u._byteLength-64)/32*3,h,n);_.blendType=-1==o?this._nBlendType:o,_.scope=t,this._submits[this._submits._length++]=_,this._curSubmit._numEle+=6}},e.mixRGBandAlpha=function(t){return this._mixRGBandAlpha(t,this._shader2D.ALPHA)},e._mixRGBandAlpha=function(t,e){var i=(4278190080&t)>>>24;return 0!=i?i*=e:i=255*e,16777215&t|i<<24},e.drawTriangles=function(t,e,i,r,s,a,n,h,l,o){if(!t.loaded||!t.source)return this.sprite&&T.timer.callLater(this,this._repaintSprite),!1;this._drawCount++;t.bitmap;var u=this._mixRGBandAlpha(4294967295,h),_=(r.length,a.length);this._renderKey=-1;var c=this._curSubmit=Dt.create(this,this._triangleMesh.getIBR(),this._triangleMesh.getVBR(),this._triangleMesh.indexNum,Et.create(1,0));return c.shaderValue.textureHost=t,c._renderType=10016,this._submits[this._submits._length++]=c,n?(U._tmpMatrix.a=n.a,U._tmpMatrix.b=n.b,U._tmpMatrix.c=n.c,U._tmpMatrix.d=n.d,U._tmpMatrix.tx=n.tx+e,U._tmpMatrix.ty=n.ty+i,S.mul(U._tmpMatrix,this._curMat,U._tmpMatrix)):(U._tmpMatrix.a=this._curMat.a,U._tmpMatrix.b=this._curMat.b,U._tmpMatrix.c=this._curMat.c,U._tmpMatrix.d=this._curMat.d,U._tmpMatrix.tx=this._curMat.tx+e,U._tmpMatrix.ty=this._curMat.ty+i),this._triangleMesh.addData(r,s,a,U._tmpMatrix,u,this),this._curSubmit._numEle+=_,this._maxNumEle=Math.max(this._maxNumEle,this._curSubmit._numEle),!0},e.transform=function(t,e,i,r,s,a){Z.save(this),S.mul(S.TEMP.setTo(t,e,i,r,s,a),this._curMat,this._curMat),this._curMat._checkTransform()},e.setTransformByMatrix=function(t){t.copyTo(this._curMat)},e.transformByMatrix=function(t){Z.save(this),S.mul(t,this._curMat,this._curMat),this._curMat._checkTransform()},e.rotate=function(t){Z.save(this),this._curMat.rotateEx(t)},e.scale=function(t,e){Z.save(this),this._curMat.scaleEx(t,e)},e.clipRect=function(t,e,i,r){if(0!=this._curMat.b||0!=this._curMat.c){this._renderKey=0;var s=ut.create(4);this.addRenderObject(s);var a=this._vb,n=a._byteLength>>2;if(pt.fillRectImgVb(a,null,t,e,i,r,F.DEF_UV,this._curMat,this._x,this._y,0,0)){this._shader2D.glTexture=null;var h=this._curSubmit=at.createSubmit(this,this._ib,a,(a._byteLength-64)/32*3,Et.create(2,0));h.shaderValue.ALPHA=1,this._submits[this._submits._length++]=h,this._curSubmit._numEle+=6}else alert("clipRect calc stencil rect error");var l=ut.create(5);this.addRenderObject(l);var o=a.getFloat32Array(),u=Math.min(Math.min(Math.min(o[n+0],o[n+4]),o[n+8]),o[n+12]),_=Math.max(Math.max(Math.max(o[n+0],o[n+4]),o[n+8]),o[n+12]),c=Math.min(Math.min(Math.min(o[n+1],o[n+5]),o[n+9]),o[n+13]),f=Math.max(Math.max(Math.max(o[n+1],o[n+5]),o[n+9]),o[n+13]);K.save(this,l,t,e,i,r,u,c,_-u,f-c),this._curSubmit=at.RENDERBASE}else{i*=this._curMat.a,r*=this._curMat.d;var d=w.TEMP;this._curMat.transformPoint(d.setTo(t,e)),i<0&&(d.x=d.x+i,i=-i),r<0&&(d.y=d.y+r,r=-r),this._renderKey=0;var m=this._curSubmit=ot.create(this);(this._submits[this._submits._length++]=m).submitIndex=this._submits._length,m.submitLength=9999999,X.save(this,m);var p=this._clipRect,g=p.x,v=p.y,x=d.x+i,b=d.y+r;g<d.x&&(p.x=d.x),v<d.y&&(p.y=d.y),p.width=Math.min(x,g+p.width)-p.x,p.height=Math.min(b,v+p.height)-p.y,this._shader2D.glTexture=null,m.clipRect.copyFrom(p),this._curSubmit=at.RENDERBASE}},e.setIBVB=function(t,e,i,r,s,a,n,h,l,o,u){if(void 0===l&&(l=0),void 0===o&&(o=0),void 0===u&&(u=0),null===i){if(g.isFlash){var _=r;_._selfIB||(_._selfIB=$t.create(35044)),_._selfIB.clear(),i=_._selfIB}else i=this._ib;pt.expandIBQuadrangle(i,r._byteLength/(4*r.vertexStride*4))}if(!h||!n)throw Error("setIBVB must input:shader shaderValues");var c=lt.create(this,r,i,s,n,h,l,o,u);a||(a=S.EMPTY),a.translate(t,e),S.mul(a,this._curMat,c._mat),a.translate(-t,-e),this._submits[this._submits._length++]=c,this._curSubmit=at.RENDERBASE,this._renderKey=0},e.addRenderObject=function(t){this._submits[this._submits._length++]=t},e.fillTrangles=function(t,e,i,r,s){var a=this._curSubmit,n=this._vb,h=this._shader2D,l=a.shaderValue,o=r.length>>4,u=t.bitmap;this._renderKey=0,h.glTexture==u&&h.ALPHA===l.ALPHA||((a=this._curSubmit=at.createSubmit(this,this._ib,n,n._byteLength/32*3,Et.create(1,0))).shaderValue.textureHost=t,this._submits[this._submits._length++]=a),pt.fillTranglesVB(n,e,i,r,s||this._curMat,this._x,this._y),a._numEle+=6*o},e.submitElement=function(t,e){var i=this._submits;for(e<0&&(e=i._length);t<e;)t+=i[t].renderSubmit()},e.finish=function(){bt.mainContext.finish()},e.flush=function(){var t=Math.max(this._vb._byteLength/64,this._maxNumEle/6)+8;if(t>this._ib.bufferLength/12&&pt.expandIBQuadrangle(this._ib,t),!this._isMain&&k.enabled&&k._atlasRestore>this._atlasResourceChange){this._atlasResourceChange=k._atlasRestore;for(var e=this._submits,i=0,r=e._length;i<r;i++){var s=e[i];10016===s.getRenderType()&&s.checkTexture()}}this.submitElement(0,this._submits._length),this._path&&this._path.reset(),et.instance&&et.getInstance().reset();var a;for(i=0,a=this.meshlist.length;i<a;i++){var n=this.meshlist[i];n.canReuse?n.releaseMesh():n.destroy()}return this.meshlist.length=0,this._curSubmit=at.RENDERBASE,this._renderKey=0,this._triangleMesh=Ft.getAMesh(),this.meshlist.push(this._triangleMesh),this._submits._length},e.setPathId=function(t){if(this.mId=t,-1!=this.mId){this.mHaveKey=!1;var e=N.getInstance();e.shapeDic[this.mId]&&(this.mHaveKey=!0),this.mHaveLineKey=!1,e.shapeLineDic[this.mId]&&(this.mHaveLineKey=!0)}},e.movePath=function(t,e){var i=t,r=e;t=this._curMat.a*i+this._curMat.c*r+this._curMat.tx,e=this._curMat.b*i+this._curMat.d*r+this._curMat.ty,this.mX+=t,this.mY+=e},e.beginPath=function(){var t=this._getPath();t.tempArray.length=0,t.closePath=!1,this.mX=0,this.mY=0},e.closePath=function(){this._path.closePath=!0},e.fill=function(t){void 0===t&&(t=!1);var e=this._getPath();this.drawPoly(0,0,e.tempArray,this.fillStyle._color.numColor,0,0,t)},e.stroke=function(){var t=this._getPath();if(0<this.lineWidth){if(-1==this.mId)t.drawLine(0,0,t.tempArray,this.lineWidth,this.strokeStyle._color.numColor);else if(this.mHaveLineKey){var e=N.getInstance().shapeLineDic[this.mId];e.rebuild(t.tempArray),t.setGeomtry(e)}else N.getInstance().addLine(this.mId,t.drawLine(0,0,t.tempArray,this.lineWidth,this.strokeStyle._color.numColor));t.update();var i=[this.mX,this.mY],r=at.createShape(this,t.ib,t.vb,t.count,t.offset,Et.create(4,0));r.shaderValue.ALPHA=this._shader2D.ALPHA,r.shaderValue.u_pos=i,r.shaderValue.u_mmat2=vt.TEMPMAT4_ARRAY,this._submits[this._submits._length++]=r,this._renderKey=-1}},e.line=function(t,e,i,r,s,a){var n=this._curSubmit,h=this._vb;if(pt.fillLineVb(h,this._clipRect,t,e,i,r,s,a)){this._renderKey=0;var l=this._shader2D,o=n.shaderValue;l.strokeStyle===o.strokeStyle&&l.ALPHA===o.ALPHA||(l.glTexture=null,(n=this._curSubmit=at.createSubmit(this,this._ib,h,(h._byteLength-64)/32*3,Et.create(2,0))).shaderValue.strokeStyle=l.strokeStyle,n.shaderValue.mainID=2,n.shaderValue.ALPHA=l.ALPHA,this._submits[this._submits._length++]=n),n._numEle+=6}},e.moveTo=function(t,e,i){void 0===i&&(i=!0);var r=this._getPath();if(i){var s=t,a=e;t=this._curMat.a*s+this._curMat.c*a,e=this._curMat.b*s+this._curMat.d*a}r.addPoint(t,e)},e.lineTo=function(t,e,i){void 0===i&&(i=!0);var r=this._getPath();if(i){var s=t,a=e;t=this._curMat.a*s+this._curMat.c*a,e=this._curMat.b*s+this._curMat.d*a}r.addPoint(t,e)},e.drawCurves=function(t,e,i){this.setPathId(-1),this.beginPath(),this.strokeStyle=i[3],this.lineWidth=i[4];var r=i[2];t+=i[0],e+=i[1],this.movePath(t,e),this.moveTo(r[0],r[1]);for(var s=2,a=r.length;s<a;)this.quadraticCurveTo(r[s++],r[s++],r[s++],r[s++]);this.stroke()},e.arcTo=function(t,e,i,r,s){if(-1==this.mId||!this.mHaveKey){var a=0,n=0,h=0,l=this._getPath();this._curMat.copyTo(U._tmpMatrix),U._tmpMatrix.tx=U._tmpMatrix.ty=0,U._tempPoint.setTo(l.getEndPointX(),l.getEndPointY()),U._tmpMatrix.invertTransformPoint(U._tempPoint);var o=U._tempPoint.x-t,u=U._tempPoint.y-e,_=Math.sqrt(o*o+u*u);if(!(_<=1e-6)){var c=o/_,f=u/_,d=i-t,m=r-e,p=d*d+m*m,g=Math.sqrt(p);if(!(g<=1e-6)){var v=d/g,x=m/g,b=c+v,y=f+x,T=Math.sqrt(b*b+y*y);if(!(T<=1e-6)){var A=b/T,E=y/T,S=Math.acos(A*c+E*f),w=Math.PI/2-S,R=(_=s/Math.tan(w))*c+t,I=_*f+e,M=Math.sqrt(_*_+s*s),C=t+A*M,L=e+E*M,P=0,D=0;if(0<=c*x-f*v){var F=2*w/U.SEGNUM;P=Math.sin(F),D=Math.cos(F)}else F=2*-w/U.SEGNUM,P=Math.sin(F),D=Math.cos(F);n=this._curMat.a*R+this._curMat.c*I,h=this._curMat.b*R+this._curMat.d*I,n==this._path.getEndPointX()&&h==this._path.getEndPointY()||l.addPoint(n,h);var B=R-C,N=I-L;for(a=0;a<U.SEGNUM;a++){var O=B*D+N*P,V=-B*P+N*D;n=O+C,h=V+L,t=this._curMat.a*n+this._curMat.c*h,h=e=this._curMat.b*n+this._curMat.d*h,(n=t)==this._path.getEndPointX()&&h==this._path.getEndPointY()||l.addPoint(n,h),B=O,N=V}}}}}},e.arc=function(t,e,i,r,s,a,n){if(void 0===a&&(a=!1),void 0===n&&(n=!0),-1!=this.mId){var h=N.getInstance().shapeDic[this.mId];if(h&&this.mHaveKey&&!h.needUpdate(this._curMat))return;e=t=0}var l,o=0,u=0,_=0,c=0,f=0,d=0,m=0;if(u=s-r,a)if(Math.abs(u)>=2*Math.PI)u=2*-Math.PI;else for(;0<u;)u-=2*Math.PI;else if(Math.abs(u)>=2*Math.PI)u=2*Math.PI;else for(;u<0;)u+=2*Math.PI;l=u/(m=i<101?Math.max(10,u*i/5):i<201?Math.max(10,u*i/20):Math.max(10,u*i/40))/2,_=Math.abs(4/3*(1-Math.cos(l))/Math.sin(l)),a&&(_=-_);var p=this._getPath(),g=NaN,v=NaN;for(d=0;d<=m;d++)o=r+u*(d/m),c=t+Math.cos(o)*i,f=e+Math.sin(o)*i,n&&(g=c,v=f,c=this._curMat.a*g+this._curMat.c*v,f=this._curMat.b*g+this._curMat.d*v),c==this._path.getEndPointX()&&f==this._path.getEndPointY()||p.addPoint(c,f);c=t+Math.cos(s)*i,f=e+Math.sin(s)*i,n&&(g=c,v=f,c=this._curMat.a*g+this._curMat.c*v,f=this._curMat.b*g+this._curMat.d*v),c==this._path.getEndPointX()&&f==this._path.getEndPointY()||p.addPoint(c,f)},e.quadraticCurveTo=function(t,e,i,r){var s=u.I,a=i,n=r;i=this._curMat.a*a+this._curMat.c*n,r=this._curMat.b*a+this._curMat.d*n,a=t,n=e,t=this._curMat.a*a+this._curMat.c*n,e=this._curMat.b*a+this._curMat.d*n;for(var h=s.getBezierPoints([this._path.getEndPointX(),this._path.getEndPointY(),t,e,i,r],30,2),l=0,o=h.length/2;l<o;l++)this.lineTo(h[2*l],h[2*l+1],!1);this.lineTo(i,r,!1)},e.rect=function(t,e,i,r){this._other=this._other.make(),this._other.path||(this._other.path=new W),this._other.path.rect(t,e,i,r)},e.strokeRect=function(t,e,i,r,s){var a=.5*s;this.line(t-a,e,t+i+a,e,s,this._curMat),this.line(t+i,e,t+i,e+r,s,this._curMat),this.line(t,e,t,e+r,s,this._curMat),this.line(t-a,e+r,t+i+a,e+r,s,this._curMat)},e.clip=function(){},e.drawPoly=function(t,e,i,r,s,a,n){void 0===n&&(n=!1),this._renderKey=0,this._shader2D.glTexture=null;var h=this._getPath();if(-1==this.mId)h.polygon(t,e,i,r,s||1,a);else if(this.mHaveKey){var l=N.getInstance().shapeDic[this.mId];l.setMatrix(this._curMat),l.rebuild(h.tempArray),h.setGeomtry(l)}else{var o=h.polygon(t,e,i,r,s||1,a);N.getInstance().addShape(this.mId,o),o.setMatrix(this._curMat)}h.update();var u,_=[this.mX,this.mY];if((u=at.createShape(this,h.ib,h.vb,h.count,h.offset,Et.create(4,0))).shaderValue.ALPHA=this._shader2D.ALPHA,u.shaderValue.u_pos=_,u.shaderValue.u_mmat2=vt.EMPTYMAT4_ARRAY,this._submits[this._submits._length++]=u,0<s){if(this.mHaveLineKey){var c=N.getInstance().shapeLineDic[this.mId];c.rebuild(h.tempArray),h.setGeomtry(c)}else N.getInstance().addShape(this.mId,h.drawLine(t,e,i,s,a));h.update(),(u=at.createShape(this,h.ib,h.vb,h.count,h.offset,Et.create(4,0))).shaderValue.ALPHA=this._shader2D.ALPHA,u.shaderValue.u_mmat2=vt.EMPTYMAT4_ARRAY,this._submits[this._submits._length++]=u}},e.drawParticle=function(t,e,i){i.x=t,i.y=e,this._submits[this._submits._length++]=i},e._getPath=function(){return this._path||(this._path=new W)},r(0,e,"globalCompositeOperation",function(){return G.NAMES[this._nBlendType]},function(t){var e=G.TOINT[t];null==e||this._nBlendType===e||(Y.save(this,65536,this,!0),this._curSubmit=at.RENDERBASE,this._renderKey=0,this._nBlendType=e)}),r(0,e,"strokeStyle",function(){return this._shader2D.strokeStyle},function(t){this._shader2D.strokeStyle.equal(t)||(Y.save(this,512,this._shader2D,!1),this._shader2D.strokeStyle=z.create(t))}),r(0,e,"globalAlpha",function(){return this._shader2D.ALPHA},function(t){(t=Math.floor(1e3*t)/1e3)!=this._shader2D.ALPHA&&(Y.save(this,1,this._shader2D,!0),this._shader2D.ALPHA=t)}),r(0,e,"asBitmap",null,function(t){if(t){if(this._targets||(this._targets=new j),this._targets.repaint=!0,!this._width||!this._height)throw Error("asBitmap no size!");this._targets.setSP(this.sprite),this._targets.size(this._width,this._height)}else this._targets=null}),r(0,e,"fillStyle",function(){return this._shader2D.fillStyle},function(t){this._shader2D.fillStyle.equal(t)||(Y.save(this,2,this._shader2D,!1),this._shader2D.fillStyle=z.create(t))}),r(0,e,"textAlign",function(){return this._other.textAlign},function(t){this._other.textAlign===t||(this._other=this._other.make(),Y.save(this,32768,this._other,!1),this._other.textAlign=t)}),r(0,e,"lineWidth",function(){return this._other.lineWidth},function(t){this._other.lineWidth===t||(this._other=this._other.make(),Y.save(this,256,this._other,!1),this._other.lineWidth=t)}),r(0,e,"textBaseline",function(){return this._other.textBaseline},function(t){this._other.textBaseline===t||(this._other=this._other.make(),Y.save(this,16384,this._other,!1),this._other.textBaseline=t)}),r(0,e,"font",null,function(t){t!=this._other.font.toString()&&(this._other=this._other.make(),Y.save(this,8,this._other,!1),this._other.font===dt.EMPTY?this._other.font=new dt(t):this._other.font.setFont(t))}),U.__init__=function(){i.DEFAULT=new i},U._tempPoint=new w,U._SUBMITVBSIZE=32e3,U._MAXSIZE=99999999,U._RECTVBSIZE=16,U.MAXCLIPRECT=new R(0,0,99999999,99999999),U._COUNT=0,U._tmpMatrix=new S,U.SEGNUM=32,U._contextcount=0,n(U,["_fontTemp",function(){return this._fontTemp=new dt},"_drawStyleTemp",function(){return this._drawStyleTemp=new z(null)}]),U.__init$=function(){i=function(){function t(){this.lineWidth=1,this.path=null,this.textAlign=null,this.textBaseline=null,this.font=dt.EMPTY}c(t,"");var e=t.prototype;return e.clear=function(){this.lineWidth=1,this.path&&this.path.clear(),this.textAlign=this.textBaseline=null,this.font=dt.EMPTY},e.make=function(){return this===t.DEFAULT?new t:this},t.DEFAULT=null,t}()},U}(),Et=function(t){function r(t,e){this.size=[0,0],this.alpha=1,this.ALPHA=1,this.subID=0,this._cacheID=0,r.__super.call(this),this.defines=new It,this.position=r._POSITION,this.mainID=t,this.subID=e,this.textureHost=null,this.texture=null,this.fillStyle=null,this.color=null,this.strokeStyle=null,this.colorAdd=null,this.glTexture=null,this.u_mmat2=null,this._cacheID=t|e,this._inClassCache=r._cache[this._cacheID],0<t&&!this._inClassCache&&(this._inClassCache=r._cache[this._cacheID]=[],this._inClassCache._length=0),this.clear()}c(r,"laya.webgl.shader.d2.value.Value2D",V);var e=r.prototype;return e.setValue=function(t){},e.refresh=function(){var t=this.size;return t[0]=vt.width,t[1]=vt.height,this.alpha=this.ALPHA*vt.worldAlpha,this.mmat=vt.worldMatrix4,this},e._ShaderWithCompile=function(){return Qt.withCompile2D(0,this.mainID,this.defines.toNameDic(),this.mainID|this.defines._value,jt.create)},e._withWorldShaderDefines=function(){var t=vt.worldShaderDefines,e=Qt.sharders[this.mainID|this.defines._value|t.getValue()];if(!e){var i,r={};for(i in this.defines.toNameDic())r[i]="";for(i in t.toNameDic())r[i]="";e=Qt.withCompile2D(0,this.mainID,r,this.mainID|this.defines._value|t.getValue(),jt.create)}var s=vt.worldFilters;if(!s)return e;for(var a,n=s.length,h=0;h<n;h++)(a=s[h])&&a.action.setValue(this);return e},e.upload=function(){var t=vt;this.alpha=this.ALPHA*t.worldAlpha,vt.worldMatrix4!==vt.TEMPMAT4_ARRAY&&this.defines.add(128),bt.shaderHighPrecision&&this.defines.add(1024);var e,i=t.worldShaderDefines?this._withWorldShaderDefines():Qt.sharders[this.mainID|this.defines._value]||this._ShaderWithCompile();this.size[0]=t.width,this.size[1]=t.height,this.mmat=t.worldMatrix4,Bt.activeShader!==i?i._shaderValueWidth!==t.width||i._shaderValueHeight!==t.height?(i._shaderValueWidth=t.width,i._shaderValueHeight=t.height):e=i._params2dQuick2||i._make2dQuick2():i._shaderValueWidth!==t.width||i._shaderValueHeight!==t.height?(i._shaderValueWidth=t.width,i._shaderValueHeight=t.height):e=i._params2dQuick1||i._make2dQuick1(),i.upload(this,e)},e.setFilters=function(t){if(this.filters=t)for(var e,i=t.length,r=0;r<i;r++)(e=t[r])&&(this.defines.add(e.type),e.action.setValue(this))},e.clear=function(){this.defines.setValue(this.subID)},e.release=function(){(this._inClassCache[this._inClassCache._length++]=this).fillStyle=null,this.strokeStyle=null,this.clear()},r._initone=function(t,e){r._typeClass[t]=e,r._cache[t]=[],r._cache[t]._length=0},r.__init__=function(){r._POSITION=[2,5126,!1,4*mt.BYTES_PE,0],r._TEXCOORD=[2,5126,!1,4*mt.BYTES_PE,2*mt.BYTES_PE],r._initone(2,Ut),r._initone(4,Gt),r._initone(256,kt),r._initone(512,Vt),r._initone(1,Ht),r._initone(65,qt),r._initone(9,Ht)},r.create=function(t,e){var i=r._cache[t|e];return i._length?i[--i._length]:new r._typeClass[t|e](e)},r._POSITION=null,r._TEXCOORD=null,r._cache=[],r._typeClass=[],r.TEMPMAT4_ARRAY=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],r}(),St=function(t){function p(t,e){p.__super.call(this,t,e)}c(p,"laya.webgl.utils.RenderSprite3D",v);var e=p.prototype;return e.onCreate=function(t){switch(t){case 8:return void(this._fun=this._blend);case 4:return void(this._fun=this._transform)}},e._mask=function(t,e,i,r){var s,a,n=this._next,h=t.mask;if(h){e.ctx.save();var l=e.ctx.globalCompositeOperation,o=new R;if(o.copyFrom(h.getBounds()),o.width=Math.round(o.width),o.height=Math.round(o.height),o.x=Math.round(o.x),o.y=Math.round(o.y),0<o.width&&0<o.height){var u=t._style._tf,_=ht.create();_.addValue("bounds",o),s=nt.create([_,e],laya.webgl.utils.RenderSprite3D.tmpTarget),e.addRenderObject(s),h.render(e,-o.x,-o.y),s=nt.create([_],laya.webgl.utils.RenderSprite3D.endTmpTarget),e.addRenderObject(s),e.ctx.save(),e.clipRect(i-u.translateX+o.x,r-u.translateY+o.y,o.width,o.height),n._fun.call(n,t,e,i,r),e.ctx.restore(),a=ut.create(6),l=e.ctx.globalCompositeOperation,a.blendMode="mask",e.addRenderObject(a),S.TEMP.identity();var c=Et.create(1,0),f=F.INV_UV,d=o.width,m=o.height;(o.width<32||o.height<32)&&((f=p.tempUV)[0]=0,f[1]=0,f[2]=32<=o.width?1:o.width/32,f[3]=0,f[4]=32<=o.width?1:o.width/32,f[5]=32<=o.height?1:o.height/32,f[6]=0,f[7]=32<=o.height?1:o.height/32,o.width=32<=o.width?o.width:32,o.height=32<=o.height?o.height:32,f[1]*=-1,f[3]*=-1,f[5]*=-1,f[7]*=-1,f[1]+=1,f[3]+=1,f[5]+=1,f[7]+=1),e.ctx.drawTarget(_,i+o.x-u.translateX,r+o.y-u.translateY,d,m,S.TEMP,"tmpTarget",c,f,6),s=nt.create([_],laya.webgl.utils.RenderSprite3D.recycleTarget),e.addRenderObject(s),(a=ut.create(6)).blendMode=l,e.addRenderObject(a)}e.ctx.restore()}else n._fun.call(n,t,e,i,r)},e._blend=function(t,e,i,r){var s=t._style,a=this._next;s.blendMode?(e.ctx.save(),e.ctx.globalCompositeOperation=s.blendMode,a._fun.call(a,t,e,i,r),e.ctx.restore()):a._fun.call(a,t,e,i,r)},e._transform=function(t,e,i,r){var s=t.transform,a=this._next;if(s&&a!=v.NORENDER){var n=e.ctx;t._style;s.tx=i,s.ty=r;var h=n._getTransformMatrix(),l=h.clone();S.mul(s,h,h),h._checkTransform(),s.tx=s.ty=0,a._fun.call(a,t,e,0,0),l.copyTo(h),l.destroy()}else a._fun.call(a,t,e,i,r)},p.tmpTarget=function(t,e){var i=t.getValue("bounds"),r=Nt.create(i.width,i.height);r.start(),r.clear(0,0,0,0),t.addValue("tmpTarget",r)},p.endTmpTarget=function(t){t.getValue("tmpTarget").end()},p.recycleTarget=function(t){t.getValue("tmpTarget").recycle(),t.recycle()},n(p,["tempUV",function(){return this.tempUV=new Array(8)}]),p}(),wt=function(t){function e(){this.data=null,e.__super.call(this)}c(e,"laya.filters.webgl.ColorFilterActionGL",O);var i=e.prototype;return T.imps(i,{"laya.filters.IFilterActionGL":!0}),i.setValue=function(t){t.colorMat=this.data._mat,t.colorAlpha=this.data._alpha},i.apply3d=function(t,e,i,r,s){var a=t.getValue("bounds"),n=Et.create(1,0);n.setFilters([this.data]);var h=S.TEMP;h.identity(),i.ctx.drawTarget(t,0,0,a.width,a.height,h,"src",n)},e}(),Rt=function(t){function a(t,e,i,r,s){this._atlasCanvas=null,this._inAtlasTextureKey=null,this._inAtlasTextureBitmapValue=null,this._inAtlasTextureOriUVValue=null,this._InAtlasWebGLImagesKey=null,this._InAtlasWebGLImagesOffsetValue=null,a.__super.call(this,t,e,s),this._inAtlasTextureKey=[],this._inAtlasTextureBitmapValue=[],this._inAtlasTextureOriUVValue=[],this._InAtlasWebGLImagesKey={},this._InAtlasWebGLImagesOffsetValue=[],this._atlasCanvas=new zt,(this._atlasCanvas._atlaser=this)._atlasCanvas.width=i,this._atlasCanvas.height=r,this._atlasCanvas.activeResource(),this._atlasCanvas.lock=!0}c(a,"laya.webgl.atlas.Atlaser",U);var e=a.prototype;return e.computeUVinAtlasTexture=function(t,e,i,r){var s=k.atlasTextureWidth,a=k.atlasTextureHeight,n=i/s,h=r/a,l=(i+t.bitmap.width)/s,o=(r+t.bitmap.height)/a,u=t.bitmap.width/s,_=t.bitmap.height/a;t.uv=[n+e[0]*u,h+e[1]*_,l-(1-e[2])*u,h+e[3]*_,l-(1-e[4])*u,o-(1-e[5])*_,n+e[6]*u,o-(1-e[7])*_]},e.findBitmapIsExist=function(t){if(t instanceof laya.webgl.resource.WebGLImage){var e=t,i=e.url,r=this._InAtlasWebGLImagesKey[i||e.id];if(r)return r.offsetInfoID}return-1},e.addToAtlasTexture=function(t,e,i){if(t instanceof laya.webgl.resource.WebGLImage){var r=t,s=r.url;this._InAtlasWebGLImagesKey[s||r.id]={bitmap:t,offsetInfoID:this._InAtlasWebGLImagesOffsetValue.length},this._InAtlasWebGLImagesOffsetValue.push([e,i])}this._atlasCanvas.texSubImage2D(e,i,t.atlasImgData||t.atlasSource),t.clearAtlasSource()},e.addToAtlas=function(t,e,i){t._atlasID=this._inAtlasTextureKey.length;var r=t.uv.slice(),s=t.bitmap;this._inAtlasTextureKey.push(t),this._inAtlasTextureOriUVValue.push(r),this._inAtlasTextureBitmapValue.push(s),this.computeUVinAtlasTexture(t,r,e,i),t.bitmap=this._atlasCanvas},e.clear=function(){for(var t=0,e=this._inAtlasTextureKey.length;t<e;t++)this._inAtlasTextureKey[t].bitmap=this._inAtlasTextureBitmapValue[t],this._inAtlasTextureKey[t].uv=this._inAtlasTextureOriUVValue[t],this._inAtlasTextureKey[t]._atlasID=-1,this._inAtlasTextureKey[t].bitmap.lock=!1,this._inAtlasTextureKey[t].bitmap.releaseResource();this._inAtlasTextureKey.length=0,this._inAtlasTextureBitmapValue.length=0,this._inAtlasTextureOriUVValue.length=0,this._InAtlasWebGLImagesKey=null,this._InAtlasWebGLImagesOffsetValue.length=0},e.dispose=function(){this.clear(),this._atlasCanvas.destroy()},r(0,e,"InAtlasWebGLImagesOffsetValue",function(){return this._InAtlasWebGLImagesOffsetValue}),r(0,e,"texture",function(){return this._atlasCanvas}),r(0,e,"inAtlasWebGLImagesKey",function(){return this._InAtlasWebGLImagesKey}),a}(),It=function(t){function i(){i.__super.call(this,i.__name2int,i.__int2name,i.__int2nameMap)}return c(i,"laya.webgl.shader.d2.ShaderDefines2D",J),i.__init__=function(){i.reg("TEXTURE2D",1),i.reg("COLOR2D",2),i.reg("PRIMITIVE",4),i.reg("GLOW_FILTER",8),i.reg("BLUR_FILTER",16),i.reg("COLOR_FILTER",32),i.reg("COLOR_ADD",64),i.reg("WORLDMAT",128),i.reg("FILLTEXTURE",256),i.reg("FSHIGHPRECISION",1024)},i.reg=function(t,e){J._reg(t,e,i.__name2int,i.__int2name)},i.toText=function(t,e,i){return J._toText(t,e,i)},i.toInt=function(t){return J._toInt(t,i.__name2int)},i.TEXTURE2D=1,i.COLOR2D=2,i.PRIMITIVE=4,i.FILTERGLOW=8,i.FILTERBLUR=16,i.FILTERCOLOR=32,i.COLORADD=64,i.WORLDMAT=128,i.FILLTEXTURE=256,i.SKINMESH=512,i.SHADERDEFINE_FSHIGHPRECISION=1024,i.__name2int={},i.__int2name=[],i.__int2nameMap=[],i}(),Mt=(function(t){function h(t,e,i,r,s,a,n){h.__super.call(this,t,e,i,r,40,s,a,n)}c(h,"laya.webgl.shapes.Ellipse",it)}(),function(t){function a(t,e,i,r,s){this._points=[],this.rebuild(i),a.__super.call(this,t,e,0,0,0,s,r,s,0)}c(a,"laya.webgl.shapes.Line",it);var e=a.prototype;return e.rebuild=function(t){var e=t.length;e!=this._points.length&&(this.mUint16Array=new Uint16Array(6*(e/2-1)),this.mFloat32Array=new Float32Array(5*e)),this._points.length=0;for(var i=NaN,r=NaN,s=-1,a=-1,n=t.length/2,h=0;h<n;h++)i=t[2*h],r=t[2*h+1],(.01<Math.abs(s-i)||.01<Math.abs(a-r))&&this._points.push(i,r),s=i,a=r},e.getData=function(t,e,i){var r=[],s=[];0<this.borderWidth&&this.createLine2(this._points,r,this.borderWidth,i,s,this._points.length/2),this.mUint16Array.set(r,0),this.mFloat32Array.set(s,0),t.append(this.mUint16Array),e.append(this.mFloat32Array)},a}()),Ct=function(t){function _(t,e,i,r,s){this._points=[];for(var a=NaN,n=NaN,h=-1,l=-1,o=i.length/2-1,u=0;u<o;u++)a=i[2*u],n=i[2*u+1],(.01<Math.abs(h-a)||.01<Math.abs(l-n))&&this._points.push(a,n),h=a,l=n;a=i[2*o],n=i[2*o+1],h=this._points[0],l=this._points[1],(.01<Math.abs(h-a)||.01<Math.abs(l-n))&&this._points.push(a,n),_.__super.call(this,t,e,0,0,this._points.length/2,0,r,s)}c(_,"laya.webgl.shapes.LoopLine",it);var e=_.prototype;return e.getData=function(t,e,i){if(0<this.borderWidth){for(var r=this.color,s=(r>>16&255)/255,a=(r>>8&255)/255,n=(255&r)/255,h=[],l=0,o=0,u=[],_=Math.floor(this._points.length/2),c=0;c<_;c++)l=this._points[2*c],o=this._points[2*c+1],h.push(this.x+l,this.y+o,s,a,n);this.createLoopLine(h,u,this.borderWidth,i+h.length/5),t.append(new Uint16Array(u)),e.append(new Float32Array(h))}},e.createLoopLine=function(t,e,i,r,s,a){t.length;var n=t.concat(),h=s||t,l=this.borderColor,o=(l>>16&255)/255,u=(l>>8&255)/255,_=(255&l)/255,c=[n[0],n[1]],f=[n[n.length-5],n[n.length-4]],d=f[0]+.5*(c[0]-f[0]),m=f[1]+.5*(c[1]-f[1]);n.unshift(d,m,0,0,0),n.push(d,m,0,0,0);var p,g,v,x,b,y,T,A,E,S,w,R,I,M,C,L,P,D,F,B,N=n.length/5,O=r,V=i/2;v=n[0],x=n[1],S=v-(b=n[5]),E=(E=-(x-(y=n[6])))/(B=Math.sqrt(E*E+S*S))*V,S=S/B*V,h.push(v-E,x-S,o,u,_,v+E,x+S,o,u,_);for(var U=1;U<N-1;U++)v=n[5*(U-1)],x=n[5*(U-1)+1],b=n[5*U],y=n[5*U+1],T=n[5*(U+1)],A=n[5*(U+1)+1],S=v-b,R=b-T,C=(-(E=(E=-(x-y))/(B=Math.sqrt(E*E+S*S))*V)+v)*(-(S=S/B*V)+y)-(-E+b)*(-S+x),D=(-(w=(w=-(y-A))/(B=Math.sqrt(w*w+R*R))*V)+T)*(-(R=R/B*V)+y)-(-w+b)*(-R+A),F=(I=-S+x-(-S+y))*(P=-w+b-(-w+T))-(L=-R+A-(-R+y))*(M=-E+b-(-E+v)),Math.abs(F)<.1?(F+=10.1,h.push(b-E,y-S,o,u,_,b+E,y+S,o,u,_)):(((p=(M*D-P*C)/F)-b)*(p-b)+((g=(L*C-I*D)/F)-y)+(g-y),h.push(p,g,o,u,_,b-(p-b),y-(g-y),o,u,_));a&&(e=a);var k=this.edges+1;for(U=1;U<k;U++)e.push(O+2*(U-1),O+2*(U-1)+1,O+2*U+1,O+2*U+1,O+2*U,O+2*(U-1));return e.push(O+2*(U-1),O+2*(U-1)+1,O+1,O+1,O,O+2*(U-1)),h},_}(),Lt=function(t){function n(t,e,i,r,s,a){this._points=null,this._start=-1,this._repaint=!1,this.earcutTriangles=null,this._mat=S.create(),this._points=i.slice(0,i.length),n.__super.call(this,t,e,0,0,this._points.length/2,r,s,a)}c(n,"laya.webgl.shapes.Polygon",it);var e=n.prototype;return e.rebuild=function(t){this._repaint||(this._points.length=0,this._points=this._points.concat(t))},e.setMatrix=function(t){t.copyTo(this._mat)},e.needUpdate=function(t){return this._repaint=this._mat.a==t.a&&this._mat.b==t.b&&this._mat.c==t.c&&this._mat.d==t.d&&this._mat.tx==t.tx&&this._mat.ty==t.ty,!this._repaint},e.getData=function(t,e,i){var r,s=0,a=this._points,n=0;if(this.mUint16Array&&this.mFloat32Array&&this._repaint){if(this._start!=i){for(this._start=i,r=[],n=this.earcutTriangles.length,s=0;s<n;s++)r.push(this.earcutTriangles[s]+i);this.mUint16Array=new Uint16Array(r)}}else{this._start=i,r=[];var h=[],l=[],o=this.color,u=(o>>16&255)/255,_=(o>>8&255)/255,c=(255&o)/255;for(n=Math.floor(a.length/2),s=0;s<n;s++)h.push(this.x+a[2*s],this.y+a[2*s+1],u,_,c),l.push(this.x+a[2*s],this.y+a[2*s+1]);for(this.earcutTriangles=rt.earcut(l,null,2),n=this.earcutTriangles.length,s=0;s<n;s++)r.push(this.earcutTriangles[s]+i);this.mUint16Array=new Uint16Array(r),this.mFloat32Array=new Float32Array(h)}t.append(this.mUint16Array),e.append(this.mFloat32Array)},n}(),Pt=function(t){function a(){this._matrix=new S,this._matrix4=mt.defaultMatrix4.concat(),a.__super.call(this,1e4),this.shaderValue=new Et(0,0)}c(a,"laya.webgl.submit.SubmitCanvas",at);var e=a.prototype;return e.renderSubmit=function(){if(this._ctx_src._targets)return this._ctx_src._targets.flush(this._ctx_src),1;var t=vt.worldAlpha,e=vt.worldMatrix4,i=vt.worldMatrix,r=vt.worldFilters,s=vt.worldShaderDefines,a=this.shaderValue,n=this._matrix,h=this._matrix4,l=S.TEMP;return S.mul(n,i,l),h[0]=l.a,h[1]=l.b,h[4]=l.c,h[5]=l.d,h[12]=l.tx,h[13]=l.ty,vt.worldMatrix=l.clone(),vt.worldMatrix4=h,vt.worldAlpha=vt.worldAlpha*a.alpha,a.filters&&a.filters.length&&(vt.worldFilters=a.filters,vt.worldShaderDefines=a.defines),this._ctx_src.flush(),vt.worldAlpha=t,vt.worldMatrix4=e,vt.worldMatrix.destroy(),vt.worldMatrix=i,vt.worldFilters=r,vt.worldShaderDefines=s,1},e.releaseRender=function(){var t=a._cache;this._ctx_src=null,t[t._length++]=this},e.getRenderType=function(){return 10003},a.create=function(t,e,i){var r=a._cache._length?a._cache[--a._cache._length]:new a;r._ctx_src=t;var s=r.shaderValue;return s.alpha=e,s.defines.setValue(0),i&&i.length&&s.setFilters(i),r},a._cache=((a._cache=[])._length=0,a._cache),a}(),Dt=function(t){function o(t){this._preIsSameTextureShader=!1,this._isSameTexture=!0,this._texs=new Array,this._texsID=new Array,this._vbPos=new Array,void 0===t&&(t=1e4),o.__super.call(this,t)}c(o,"laya.webgl.submit.SubmitTexture",at);var e=o.prototype;return e.releaseRender=function(){var t=o._cache;(t[t._length++]=this).shaderValue.release(),this._preIsSameTextureShader=!1,this._vb=null,this._texs.length=0,this._vbPos.length=0,this._isSameTexture=!0},e.addTexture=function(t,e){this._texsID[this._texs.length]=t._uvID,this._texs.push(t),this._vbPos.push(e)},e.checkTexture=function(){if(this._texs.length<1)this._isSameTexture=!0;else{var t=this.shaderValue.textureHost.bitmap;if(null!==t)for(var e=this._vb.getFloat32Array(),i=0,r=this._texs.length;i<r;i++){var s=this._texs[i];s.active();var a=s.uv;if(this._texsID[i]!==s._uvID){this._texsID[i]=s._uvID;var n=this._vbPos[i];e[n+2]=a[0],e[n+3]=a[1],e[n+6]=a[2],e[n+7]=a[3],e[n+10]=a[4],e[n+11]=a[5],e[n+14]=a[6],e[n+15]=a[7],this._vb.setNeedUpload()}s.bitmap!==t&&(this._isSameTexture=!1)}}},e.renderSubmit=function(){if(0===this._numEle)return o._shaderSet=!1,1;var t=this.shaderValue.textureHost;if(t){var e=t.source;if(!t.bitmap||!e)return o._shaderSet=!1,1;this.shaderValue.texture=e}this._vb.bind_upload(this._ib);var i=bt.mainContext;if(G.activeBlendFunction!==this._blendFn&&(i.enable(3042),this._blendFn(i),G.activeBlendFunction=this._blendFn),C.drawCall++,C.trianglesFaces+=this._numEle/3,this._preIsSameTextureShader&&Bt.activeShader&&o._shaderSet?Bt.activeShader.uploadTexture2D(this.shaderValue.texture):this.shaderValue.upload(),o._shaderSet=!0,1<this._texs.length&&!this._isSameTexture)for(var r=t.bitmap,s=0,a=Bt.activeShader,n=0,h=this._texs.length;n<h;n++){var l=this._texs[n];l.bitmap===r&&n+1!==h||(a.uploadTexture2D(l.source),i.drawElements(4,6*(n-s+1),5123,this._startIdx+6*s*mt.BYTES_PIDX),r=l.bitmap,s=n)}else i.drawElements(4,this._numEle,5123,this._startIdx);return 1},o.create=function(t,e,i,r,s){var a=o._cache._length?o._cache[--o._cache._length]:new o;null==i&&((i=a._selfVb||(a._selfVb=Jt.create(-1))).clear(),r=0),a._ib=e,a._vb=i,a._startIdx=r*mt.BYTES_PIDX,a._numEle=0;var n=t._nBlendType;a._blendFn=t._targets?G.targetFns[n]:G.fns[n],a.shaderValue=s,a.shaderValue.setValue(t._shader2D);var h=t._shader2D.filters;return h&&a.shaderValue.setFilters(h),a},o._cache=((o._cache=[])._length=0,o._cache),o._shaderSet=!0,o}(),Ft=function(t){function v(){v.__super.call(this,laya.webgl.utils.MeshTexture.const_stride,0,0),this.canReuse=!0,this.setAttributes(laya.webgl.utils.MeshTexture._fixattriInfo)}c(v,"laya.webgl.utils.MeshTexture",gt);var e=v.prototype;return e.addData=function(t,e,i,r,s,a){for(var n=t.length/2,h=this._vb.needSize(n*v.const_stride)>>2,l=this._vb.getFloat32Array(),o=0,u=0;u<n;u++){var _=t[o],c=t[o+1],f=_*r.a+c*r.c+r.tx,d=_*r.b+c*r.d+r.ty;l[h++]=f,l[h++]=d,l[h++]=e[o],l[h++]=e[o+1],o+=2}this._vb.setNeedUpload();var m=this.vertNum;if(0<m){var p=i.length;p>v.tmpIdx.length&&(v.tmpIdx=new Uint16Array(p));for(var g=0;g<p;g++)v.tmpIdx[g]=i[g]+m;this._ib.appendU16Array(v.tmpIdx,i.length)}else this._ib.append(i);this._ib.setNeedUpload(),this.vertNum+=n,this.indexNum+=i.length},e.releaseMesh=function(){this._vb._byteLength=0,this._ib._byteLength=0,this.vertNum=0,this.indexNum=0,laya.webgl.utils.MeshTexture._POOL.push(this)},e.destroy=function(){this._ib.destroy(),this._vb.destroy()},v.getAMesh=function(){return laya.webgl.utils.MeshTexture._POOL.length?laya.webgl.utils.MeshTexture._POOL.pop():new v},v.const_stride=16,v._POOL=[],n(v,["_fixattriInfo",function(){return this._fixattriInfo=[5126,2,0,5126,2,8]},"tmpIdx",function(){return this.tmpIdx=new Uint16Array(4)}]),v}(),Bt=function(t){function e(){e.__super.call(this),this.lock=!0}return c(e,"laya.webgl.shader.BaseShader",x),e.activeShader=null,e.bindShader=null,e}(),Nt=function(e){function u(t,e,i,r,s,a,n,h,l){this._type=0,this._svWidth=NaN,this._svHeight=NaN,this._preRenderTarget=null,this._alreadyResolved=!1,this._looked=!1,this._surfaceFormat=0,this._surfaceType=0,this._depthStencilFormat=0,this._mipMap=!1,this._repeat=!1,this._minFifter=0,this._magFifter=0,this._destroy=!1,void 0===i&&(i=6408),void 0===r&&(r=5121),void 0===s&&(s=34041),void 0===a&&(a=!1),void 0===n&&(n=!1),void 0===h&&(h=-1),void 0===l&&(l=-1),this._type=1,this._w=t,this._h=e,this._surfaceFormat=i,this._surfaceType=r,this._depthStencilFormat=s,g.isConchWebGL&&34041===this._depthStencilFormat&&(this._depthStencilFormat=33189),this._mipMap=a,this._repeat=n,this._minFifter=h,this._magFifter=l,this._createWebGLRenderTarget(),this.bitmap.lock=!0,u.__super.call(this,this.bitmap,F.INV_UV)}c(u,"laya.webgl.resource.RenderTarget2D",e);var t=u.prototype;return T.imps(t,{"laya.resource.IDispose":!0}),t.getType=function(){return this._type},t.getTexture=function(){return this},t.size=function(t,e){this._w==t&&this._h==e||(this._w=t,this._h=e,this.release(),0!=this._w&&0!=this._h&&this._createWebGLRenderTarget())},t.release=function(){this.destroy()},t.recycle=function(){u.POOL.push(this)},t.start=function(){var t=bt.mainContext;return this._preRenderTarget=vt.curRenderTarget,vt.curRenderTarget=this,t.bindFramebuffer(36160,this.bitmap.frameBuffer),this._alreadyResolved=!1,1==this._type&&(t.viewport(0,0,this._w,this._h),this._svWidth=vt.width,this._svHeight=vt.height,vt.width=this._w,vt.height=this._h,Bt.activeShader=null),this},t.clear=function(t,e,i,r){void 0===t&&(t=0),void 0===e&&(e=0),void 0===i&&(i=0),void 0===r&&(r=1);var s=bt.mainContext;s.clearColor(t,e,i,r);var a=16384;switch(this._depthStencilFormat){case 33189:a|=256;break;case 36168:a|=1024;break;case 34041:a|=256,a|=1024}s.clear(a)},t.end=function(){var t=bt.mainContext;t.bindFramebuffer(36160,this._preRenderTarget?this._preRenderTarget.bitmap.frameBuffer:null),this._alreadyResolved=!0,vt.curRenderTarget=this._preRenderTarget,1==this._type?(t.viewport(0,0,this._svWidth,this._svHeight),vt.width=this._svWidth,vt.height=this._svHeight,Bt.activeShader=null):t.viewport(0,0,T.stage.width,T.stage.height)},t.getData=function(t,e,i,r){var s=bt.mainContext;if(s.bindFramebuffer(36160,this.bitmap.frameBuffer),!(36053===s.checkFramebufferStatus(36160)))return s.bindFramebuffer(36160,null),null;var a=new Uint8Array(this._w*this._h*4);return s.readPixels(t,e,i,r,this._surfaceFormat,this._surfaceType,a),s.bindFramebuffer(36160,null),a},t.destroy=function(t){void 0===t&&(t=!1),this._destroy||(this._loaded=!1,this.bitmap.offAll(),this.bitmap.disposeResource(),this.bitmap.dispose(),this.offAll(),this.bitmap=null,this._alreadyResolved=!1,this._destroy=!0,e.prototype.destroy.call(this))},t.dispose=function(){},t._createWebGLRenderTarget=function(){this.bitmap=new Xt(this.width,this.height,this._surfaceFormat,this._surfaceType,this._depthStencilFormat,this._mipMap,this._repeat,this._minFifter,this._magFifter),this.bitmap.activeResource(),this._alreadyResolved=!0,this._destroy=!1,this._loaded=!0,this.bitmap.on("recovered",this,function(t){this.event("recovered")})},r(0,t,"surfaceFormat",function(){return this._surfaceFormat}),r(0,t,"magFifter",function(){return this._magFifter}),r(0,t,"surfaceType",function(){return this._surfaceType}),r(0,t,"mipMap",function(){return this._mipMap}),r(0,t,"depthStencilFormat",function(){return this._depthStencilFormat}),r(0,t,"minFifter",function(){return this._minFifter}),r(0,t,"source",function(){return this._alreadyResolved?T.superGet(F,this,"source"):null}),u.create=function(t,e,i,r,s,a,n,h,l){void 0===i&&(i=6408),void 0===r&&(r=5121),void 0===s&&(s=34041),void 0===a&&(a=!1),void 0===n&&(n=!1),void 0===h&&(h=-1),void 0===l&&(l=-1);var o=u.POOL.pop();return o||(o=new u(t,e)),o.bitmap&&o._w==t&&o._h==e&&o._surfaceFormat==i&&o._surfaceType==r&&o._depthStencilFormat==s&&o._mipMap==a&&o._repeat==n&&o._minFifter==h&&o._magFifter==l||(o._w=t,o._h=e,o._surfaceFormat=i,o._surfaceType=r,o._depthStencilFormat=s,g.isConchWebGL&&34041===o._depthStencilFormat&&(o._depthStencilFormat=33189),o._mipMap=a,o._repeat=n,o._minFifter=h,o._magFifter=l,o.release(),o._createWebGLRenderTarget()),o},u.TYPE2D=1,u.TYPE3D=2,u.POOL=[],u}(F),Ot=function(t){function e(){this._glBuffer=null,this._buffer=null,this._bufferType=0,this._bufferUsage=0,this._byteLength=0,e.__super.call(this),e._gl=bt.mainContext}c(e,"laya.webgl.utils.Buffer",x);var i=e.prototype;return i._bind=function(){this.activeResource(),e._bindActive[this._bufferType]!==this._glBuffer&&(34962===this._bufferType&&(e._bindVertexBuffer=this._glBuffer),e._gl.bindBuffer(this._bufferType,e._bindActive[this._bufferType]=this._glBuffer),Bt.activeShader=null)},i.recreateResource=function(){this._glBuffer||(this._glBuffer=e._gl.createBuffer()),this.completeCreate()},i.disposeResource=function(){this._glBuffer&&(bt.mainContext.deleteBuffer(this._glBuffer),this._glBuffer=null),this.memorySize=0},r(0,i,"bufferUsage",function(){return this._bufferUsage}),e._gl=null,e._bindActive={},e._bindVertexBuffer=null,e._enableAtributes=[],e}(),Vt=function(t){function i(t){this.texcoord=null,this.offsetX=300,this.offsetY=0,i.__super.call(this,512,0);var e=8*mt.BYTES_PE;this.position=[2,5126,!1,e,0],this.texcoord=[2,5126,!1,e,2*mt.BYTES_PE],this.color=[4,5126,!1,e,4*mt.BYTES_PE]}return c(i,"laya.webgl.shader.d2.skinAnishader.SkinSV",Et),i}(),Ut=function(t){function e(t){e.__super.call(this,2,0),this.color=[]}return c(e,"laya.webgl.shader.d2.value.Color2dSV",Et),e.prototype.setValue=function(t){t.fillStyle&&(this.color=t.fillStyle._color._color),t.strokeStyle&&(this.color=t.strokeStyle._color._color)},e}(),kt=function(t){function e(t){this.u_colorMatrix=null,this.strength=0,this.colorMat=null,this.colorAlpha=null,this.u_TexRange=[0,1,0,1],this.u_offset=[0,0],this.texcoord=Et._TEXCOORD,e.__super.call(this,256,0)}c(e,"laya.webgl.shader.d2.value.FillTextureSV",Et);var i=e.prototype;return i.setValue=function(t){this.ALPHA=t.ALPHA,t.filters&&this.setFilters(t.filters)},i.clear=function(){this.texture=null,this.shader=null,this.defines.setValue(0)},e}(),Ht=function(t){function e(t){this.u_colorMatrix=null,this.strength=0,this.blurInfo=null,this.colorMat=null,this.colorAlpha=null,this.texcoord=Et._TEXCOORD,void 0===t&&(t=0),e.__super.call(this,1,t)}c(e,"laya.webgl.shader.d2.value.TextureSV",Et);var i=e.prototype;return i.setValue=function(t){this.ALPHA=t.ALPHA,t.filters&&this.setFilters(t.filters)},i.clear=function(){this.texture=null,this.shader=null,this.defines.setValue(0)},e}(),Gt=function(t){function e(t){this.a_color=null,this.u_pos=[0,0],e.__super.call(this,4,0),this.position=[2,5126,!1,5*mt.BYTES_PE,0],this.a_color=[3,5126,!1,5*mt.BYTES_PE,2*mt.BYTES_PE]}return c(e,"laya.webgl.shader.d2.value.PrimitiveSV",Et),e}(),zt=function(t){function e(){this._atlaser=null,this._flashCacheImage=null,this._flashCacheImageNeedFlush=!1,e.__super.call(this)}c(e,"laya.webgl.atlas.AtlasWebGLCanvas",t);var i=e.prototype;return i.recreateResource=function(){var t=bt.mainContext,e=this._source=t.createTexture(),i=yt.curBindTexTarget,r=yt.curBindTexValue;yt.bindTexture(t,3553,e),t.texImage2D(3553,0,6408,this._w,this._h,0,6408,5121,null),t.texParameteri(3553,10241,9729),t.texParameteri(3553,10240,9729),t.texParameteri(3553,10242,33071),t.texParameteri(3553,10243,33071),i&&r&&yt.bindTexture(t,i,r),this.memorySize=this._w*this._h*4,this.completeCreate()},i.disposeResource=function(){this._source&&(bt.mainContext.deleteTexture(this._source),this._source=null,this.memorySize=0)},i.texSubImage2D=function(t,e,i){if(g.isFlash){this._flashCacheImage||(this._flashCacheImage=m.create(""),this._flashCacheImage._image.createCanvas(this._w,this._h));var r=i.bitmapdata;this._flashCacheImage._image.copyPixels(r,0,0,r.width,r.height,t,e),this._flashCacheImageNeedFlush||(this._flashCacheImageNeedFlush=!0)}else{var s=bt.mainContext,a=yt.curBindTexTarget,n=yt.curBindTexValue;yt.bindTexture(s,3553,this._source),g.isConchWebGL?(i!==ConchTextCanvas&&(0<=t-1&&s.texSubImage2DEx(!0,3553,0,t-1,e,6408,5121,i),t+1<=this._w&&s.texSubImage2DEx(!0,3553,0,t+1,e,6408,5121,i),0<=e-1&&s.texSubImage2DEx(!0,3553,0,t,e-1,6408,5121,i),e+1<=this._h&&s.texSubImage2DEx(!0,3553,0,t,e+1,6408,5121,i)),s.texSubImage2DEx(!0,3553,0,t,e,6408,5121,i)):(s.pixelStorei(37441,!0),0<=t-1&&s.texSubImage2D(3553,0,t-1,e,6408,5121,i),t+1<=this._w&&s.texSubImage2D(3553,0,t+1,e,6408,5121,i),0<=e-1&&s.texSubImage2D(3553,0,t,e-1,6408,5121,i),e+1<=this._h&&s.texSubImage2D(3553,0,t,e+1,6408,5121,i),s.texSubImage2D(3553,0,t,e,6408,5121,i),s.pixelStorei(37441,!1)),a&&n&&yt.bindTexture(s,a,n)}},i.texSubImage2DPixel=function(t,e,i,r,s){var a=bt.mainContext,n=yt.curBindTexTarget,h=yt.curBindTexValue;yt.bindTexture(a,3553,this._source);var l=new Uint8Array(s.data);g.isConchWebGL?a.texSubImage2DEx(!0,3553,0,t,e,i,r,6408,5121,l):(a.pixelStorei(37441,!0),a.texSubImage2D(3553,0,t,e,i,r,6408,5121,l),a.pixelStorei(37441,!1)),n&&h&&yt.bindTexture(a,n,h)},r(0,i,"width",t.prototype._$get_width,function(t){this._w=t}),r(0,i,"height",t.prototype._$get_height,function(t){this._h=t}),e}(i),Wt=function(t){function s(){this.flipY=!0,this.alwaysChange=!1,s.__super.call(this)}c(s,"laya.webgl.resource.WebGLCanvas",i);var e=s.prototype;return e.getCanvas=function(){return this._canvas},e.clear=function(){this._ctx&&this._ctx.clear()},e.destroy=function(){this._ctx&&this._ctx.destroy(),this._ctx=null,laya.resource.Resource.prototype.destroy.call(this)},e._setContext=function(t){this._ctx=t},e.getContext=function(t,e){return this._ctx?this._ctx:this._ctx=s._createContext(this)},e.size=function(t,e){this._w==t&&this._h==e||(this._w=t,this._h=e,this._ctx&&this._ctx.size(t,e),this._canvas&&(this._canvas.height=e,this._canvas.width=t))},e.activeResource=function(t){void 0===t&&(t=!1),this._source||this.recreateResource()},e.recreateResource=function(){this.createWebGlTexture(),this.completeCreate()},e.disposeResource=function(){this._source&&!this.iscpuSource&&(bt.mainContext.deleteTexture(this._source),this._source=null,this.memorySize=0)},e.createWebGlTexture=function(){var t=bt.mainContext;this._canvas;var e=this._source=t.createTexture();this.iscpuSource=!1;var i=yt.curBindTexTarget,r=yt.curBindTexValue;yt.bindTexture(t,3553,e),t.pixelStorei(37440,this.flipY?1:0),g.isConchWebGL?t.texImage2DEx(s.premulAlpha,3553,0,6408,6408,5121,this._imgData):(s.premulAlpha&&t.pixelStorei(37441,!0),t.texImage2D(3553,0,6408,6408,5121,this._imgData),s.premulAlpha&&t.pixelStorei(37441,!1)),t.texParameteri(3553,10240,9729),t.texParameteri(3553,10241,9729),t.texParameteri(3553,10242,33071),t.texParameteri(3553,10243,33071),t.pixelStorei(37440,0),this.memorySize=this._w*this._h*4,i&&r&&yt.bindTexture(t,i,r)},e.reloadCanvasData=function(){var t=bt.mainContext;if(!this._source)throw"reloadCanvasData error, gl texture not created!";var e=yt.curBindTexTarget,i=yt.curBindTexValue;yt.bindTexture(t,3553,this._source),g.isConchWebGL?t.texImage2DEx(s.premulAlpha,3553,0,6408,6408,5121,this._imgData):(s.premulAlpha&&t.pixelStorei(37441,!0),t.texImage2D(3553,0,6408,6408,5121,this._imgData),s.premulAlpha&&t.pixelStorei(37441,!1)),t.pixelStorei(37440,0),e&&i&&yt.bindTexture(t,e,i)},e.texSubImage2D=function(t,e,i){var r=bt.mainContext,s=yt.curBindTexTarget,a=yt.curBindTexValue;yt.bindTexture(r,3553,this._source),g.isConchWebGL?r.texSubImage2DEx(!0,3553,0,e,i,6408,5121,t._source):(r.pixelStorei(37441,!0),r.texSubImage2D(3553,0,e,i,6408,5121,t._source),r.pixelStorei(37441,!1)),s&&a&&yt.bindTexture(r,s,a)},e.toBase64=function(t,e,i){var r=null;this._canvas&&(r=this._canvas.toDataURL(t,e)),i.call(this,r)},r(0,e,"context",function(){return this._ctx}),r(0,e,"source",function(){return this.alwaysChange&&this.reloadCanvasData(),this._source}),r(0,e,"asBitmap",null,function(t){this._ctx&&(this._ctx.asBitmap=t)}),s._createContext=null,s.premulAlpha=!1,s}(),Yt=function(t){function a(t,e){this.CborderSize=12,a.__super.call(this),this.char=t,this.isSpace=" "===t,this.xs=e.scaleX,this.ys=e.scaleY,this.font=e.font.toString(),this.fontSize=e.font.size,this.fillColor=e.fillColor,this.borderColor=e.borderColor,this.lineWidth=e.lineWidth,this.underLine=e.underLine;var i,r=g.isConchApp;r?((i=ConchTextCanvas)._source=ConchTextCanvas,i._source.canvas=ConchTextCanvas):i=f.canvas.source,this.canvas=i,this._enableMerageInAtlas=!0,this._ctx=r?i:this.canvas.getContext("2d",void 0);var s=B.measureText(this.char,this.font);this.cw=s.width*this.xs,this.ch=(s.height||this.fontSize)*this.ys,this.onresize(this.cw+2*this.CborderSize,this.ch+2*this.CborderSize),this.texture=new F(this)}c(a,"laya.webgl.resource.WebGLCharImage",i);var e=a.prototype;return T.imps(e,{"laya.webgl.resource.IMergeAtlasBitmap":!0}),e.active=function(){this.texture.active()},e.recreateResource=function(){var t=g.isConchApp;if(this.onresize(this.cw+2*this.CborderSize,this.ch+2*this.CborderSize),this.canvas&&(this.canvas.height=this._h,this.canvas.width=this._w),t){var e=this.fontSize;1==this.xs&&1==this.ys||(e=parseInt(e*(this.xs>this.ys?this.xs:this.ys)+""));var i="normal 100 "+this.font;i=i.replace(a._fontSizeReg,e),this.borderColor&&(i+=" 1 "+this.borderColor),this._ctx.font=i,this._ctx.textBaseline="top",this._ctx.fillStyle=this.fillColor,this._ctx.fillText(this.char,this.CborderSize,this.CborderSize,null,null,null)}else{if(this._ctx.save(),this._ctx.lineJoin="round",this._ctx.clearRect(0,0,this.cw+2*this.CborderSize,this.ch+2*this.CborderSize),this._ctx.font=this.font,D.RightToLeft&&(this._ctx.textAlign="end"),this._ctx.textBaseline="top",this._ctx.translate(this.CborderSize,this.CborderSize),1==this.xs&&1==this.ys||this._ctx.scale(this.xs,this.ys),this.fillColor&&this.borderColor?(this._ctx.strokeStyle=this.borderColor,this._ctx.lineWidth=this.lineWidth,this._ctx.strokeText(this.char,0,0,null,null,0,null),this._ctx.fillStyle=this.fillColor,this._ctx.fillText(this.char,0,0,null,null,null)):-1===this.lineWidth?(this._ctx.fillStyle=this.fillColor?this.fillColor:"white",this._ctx.fillText(this.char,0,0,null,null,null)):(this._ctx.strokeStyle=this.borderColor?this.borderColor:"white",this._ctx.lineWidth=this.lineWidth,this._ctx.strokeText(this.char,0,0,null,null,0,null)),this.underLine){this._ctx.lineWidth=1,this._ctx.strokeStyle=this.fillColor,this._ctx.beginPath(),this._ctx.moveTo(0,this.fontSize+1);var r=this._ctx.measureText(this.char).width+1;this._ctx.lineTo(r,this.fontSize+1),this._ctx.stroke()}this._ctx.restore()}this.borderSize=this.CborderSize,this.completeCreate()},e.onresize=function(t,e){this._w=t,this._h=e,this._allowMerageInAtlas=!0},e.clearAtlasSource=function(){},r(0,e,"allowMerageInAtlas",function(){return this._allowMerageInAtlas}),r(0,e,"atlasSource",function(){return this.canvas}),r(0,e,"atlasImgData",function(){return!a.canUseCanvas&&this._ctx.getImageData?this._ctx.getImageData(0,0,this._w,this._h):null}),r(0,e,"enableMerageInAtlas",function(){return this._enableMerageInAtlas},function(t){this._enableMerageInAtlas=t}),a.createOneChar=function(t,e){return new a(t,e)},a.canUseCanvas=!0,a._fontSizeReg=new RegExp("\\d+(?=px)","g"),a}(),Xt=function(t){function o(t,e,i,r,s,a,n,h,l){void 0===i&&(i=6408),void 0===r&&(r=5121),void 0===s&&(s=34041),void 0===a&&(a=!1),void 0===n&&(n=!1),void 0===h&&(h=-1),void 0===l&&(l=1),o.__super.call(this),this._w=t,this._h=e,this._surfaceFormat=i,this._surfaceType=r,this._depthStencilFormat=s,g.isConchWebGL&&34041===this._depthStencilFormat&&(this._depthStencilFormat=33189),this._mipMap=a,this._repeat=n,this._minFifter=h,this._magFifter=l}c(o,"laya.webgl.resource.WebGLRenderTarget",i);var e=o.prototype;return e.recreateResource=function(){var t=bt.mainContext;this._frameBuffer||(this._frameBuffer=t.createFramebuffer()),this._source||(this._source=t.createTexture());var e=yt.curBindTexTarget,i=yt.curBindTexValue;yt.bindTexture(t,3553,this._source),t.texImage2D(3553,0,6408,this._w,this._h,0,this._surfaceFormat,this._surfaceType,null);var r=this._minFifter,s=this._magFifter,a=this._repeat?10497:33071,n=l.isPOT(this._w,this._h);if(n?(this._mipMap?-1!==r||(r=9987):-1!==r||(r=9729),-1!==s||(s=9729),t.texParameteri(3553,10241,r),t.texParameteri(3553,10240,s),t.texParameteri(3553,10242,a),t.texParameteri(3553,10243,a),this._mipMap&&t.generateMipmap(3553)):(-1!==r||(r=9729),-1!==s||(s=9729),t.texParameteri(3553,10241,r),t.texParameteri(3553,10240,s),t.texParameteri(3553,10242,33071),t.texParameteri(3553,10243,33071)),t.bindFramebuffer(36160,this._frameBuffer),t.framebufferTexture2D(36160,36064,3553,this._source,0),this._depthStencilFormat)switch(this._depthStencilBuffer||(this._depthStencilBuffer=t.createRenderbuffer()),t.bindRenderbuffer(36161,this._depthStencilBuffer),t.renderbufferStorage(36161,this._depthStencilFormat,this._w,this._h),this._depthStencilFormat){case 33189:t.framebufferRenderbuffer(36160,36096,36161,this._depthStencilBuffer);break;case 36168:t.framebufferRenderbuffer(36160,36128,36161,this._depthStencilBuffer);break;case 34041:t.framebufferRenderbuffer(36160,33306,36161,this._depthStencilBuffer)}t.bindFramebuffer(36160,null),e&&i&&yt.bindTexture(t,e,i),t.bindRenderbuffer(36161,null),n&&this._mipMap?this.memorySize=this._w*this._h*4*(1+1/3):this.memorySize=this._w*this._h*4,this.completeCreate()},e.disposeResource=function(){this._frameBuffer&&(bt.mainContext.deleteTexture(this._source),bt.mainContext.deleteFramebuffer(this._frameBuffer),bt.mainContext.deleteRenderbuffer(this._depthStencilBuffer),this._source=null,this._frameBuffer=null,this._depthStencilBuffer=null,this.memorySize=0)},r(0,e,"depthStencilBuffer",function(){return this._depthStencilBuffer}),r(0,e,"frameBuffer",function(){return this._frameBuffer}),o}(),Kt=function(t){function h(t,e,i,r,s,a,n){this.offsetX=0,this.offsetY=0,h.__super.call(this),this.repeat=!0,this.mipmap=!1,this.minFifter=-1,this.magFifter=-1,this.atlasImage=a,this.canvas=t,this._ctx=t.getContext("2d",void 0),this._w=r,this._h=s,this.offsetX=e,this.offsetY=i,this.src=n,this._enableMerageInAtlas=!0,k.enabled&&this._w<k.atlasLimitWidth&&this._h<k.atlasLimitHeight?this._allowMerageInAtlas=!0:this._allowMerageInAtlas=!1}c(h,"laya.webgl.resource.WebGLSubImage",i);var e=h.prototype;return T.imps(e,{"laya.webgl.resource.IMergeAtlasBitmap":!0}),e.size=function(t,e){this._w=t,this._h=e,this._ctx&&this._ctx.size(t,e),this.canvas&&(this.canvas.height=e,this.canvas.width=t)},e.recreateResource=function(){this.size(this._w,this._h),this._ctx.drawImage(this.atlasImage,this.offsetX,this.offsetY,this._w,this._h,0,0,this._w,this._h),this._allowMerageInAtlas&&this._enableMerageInAtlas?this.memorySize=0:this.createWebGlTexture(),this.completeCreate()},e.createWebGlTexture=function(){var t=bt.mainContext;if(!this.canvas)throw"create GLTextur err:no data:"+this.canvas;var e=this._source=t.createTexture(),i=yt.curBindTexTarget,r=yt.curBindTexValue;yt.bindTexture(t,3553,e),g.isConchWebGL?t.texImage2DEx(!0,3553,0,6408,6408,5121,this.canvas):(t.pixelStorei(37441,!0),t.texImage2D(3553,0,6408,6408,5121,this.canvas),t.pixelStorei(37441,!1));var s=this.minFifter,a=this.magFifter,n=this.repeat?10497:33071,h=l.isPOT(this.width,this.height);h?(this.mipmap?-1!==s||(s=9987):-1!==s||(s=9729),-1!==a||(a=9729),t.texParameteri(3553,10240,a),t.texParameteri(3553,10241,s),t.texParameteri(3553,10242,n),t.texParameteri(3553,10243,n),this.mipmap&&t.generateMipmap(3553)):(-1!==s||(s=9729),-1!==a||(a=9729),t.texParameteri(3553,10241,s),t.texParameteri(3553,10240,a),t.texParameteri(3553,10242,33071),t.texParameteri(3553,10243,33071)),i&&r&&yt.bindTexture(t,i,r),this.canvas=null,h&&this.mipmap?this.memorySize=this._w*this._h*4*(1+1/3):this.memorySize=this._w*this._h*4},e.disposeResource=function(){k.enabled&&this._allowMerageInAtlas||!this._source||(bt.mainContext.deleteTexture(this._source),this._source=null,this.memorySize=0)},e.clearAtlasSource=function(){},r(0,e,"allowMerageInAtlas",function(){return this._allowMerageInAtlas}),r(0,e,"atlasSource",function(){return this.canvas}),r(0,e,"enableMerageInAtlas",function(){return this._allowMerageInAtlas},function(t){this._allowMerageInAtlas=t}),h}(),Qt=function(t){function o(t,e,i,r){if(this._curActTexIndex=0,this.tag={},this._program=null,this._params=null,this._paramsMap={},this._offset=0,o.__super.call(this),!t||!e)throw"Shader Error";this._id=++o._count,this._vs=t,this._ps=e,this._nameMap=r||{},null!=i&&(o.sharders[i]=this)}c(o,"laya.webgl.shader.Shader",Bt);var e=o.prototype;return e.recreateResource=function(){this._compile(),this.completeCreate(),this.memorySize=0},e.disposeResource=function(){bt.mainContext.deleteShader(this._vshader),bt.mainContext.deleteShader(this._pshader),bt.mainContext.deleteProgram(this._program),this._vshader=this._pshader=this._program=null,this._params=null,this._paramsMap={},this.memorySize=0,this._curActTexIndex=0},e._compile=function(){if(this._vs&&this._ps&&!this._params){this._reCompile=!0,this._params=[];var t=[this._vs,this._ps],e=bt.mainContext;if(this._program=e.createProgram(),this._vshader=o._createShader(e,t[0],35633),this._pshader=o._createShader(e,t[1],35632),e.attachShader(this._program,this._vshader),e.attachShader(this._program,this._pshader),e.linkProgram(this._program),!g.isConchApp&&!e.getProgramParameter(this._program,35714))throw e.getProgramInfoLog(this._program);var i,r,s=0,a=0;for(a=g.isConchApp?e.getProgramParameterEx(this._vs,this._ps,"",35721):e.getProgramParameter(this._program,35721),s=0;s<a;s++){var n=null;i={vartype:"attribute",glfun:null,ivartype:0,attrib:n=g.isConchApp?e.getActiveAttribEx(this._vs,this._ps,"",s):e.getActiveAttrib(this._program,s),location:e.getAttribLocation(this._program,n.name),name:n.name,type:n.type,isArray:!1,isSame:!1,preValue:null,indexOfParams:0},this._params.push(i)}var h=0;for(h=g.isConchApp?e.getProgramParameterEx(this._vs,this._ps,"",35718):e.getProgramParameter(this._program,35718),s=0;s<h;s++){var l=null;l=g.isConchApp?e.getActiveUniformEx(this._vs,this._ps,"",s):e.getActiveUniform(this._program,s),0<(i={vartype:"uniform",glfun:null,ivartype:1,attrib:n,location:e.getUniformLocation(this._program,l.name),name:l.name,type:l.type,isArray:!1,isSame:!1,preValue:null,indexOfParams:0}).name.indexOf("[0]")&&(i.name=i.name.substr(0,i.name.length-3),i.isArray=!0,i.location=e.getUniformLocation(this._program,i.name)),this._params.push(i)}for(s=0,r=this._params.length;s<r;s++)if((i=this._params[s]).indexOfParams=s,i.index=1,i.value=[i.location,null],i.codename=i.name,i.name=this._nameMap[i.codename]?this._nameMap[i.codename]:i.codename,(this._paramsMap[i.name]=i)._this=this,i.uploadedValue=[],"attribute"!==i.vartype)switch(i.type){case 5124:i.fun=i.isArray?this._uniform1iv:this._uniform1i;break;case 5126:i.fun=i.isArray?this._uniform1fv:this._uniform1f;break;case 35664:i.fun=i.isArray?this._uniform_vec2v:this._uniform_vec2;break;case 35665:i.fun=i.isArray?this._uniform_vec3v:this._uniform_vec3;break;case 35666:i.fun=i.isArray?this._uniform_vec4v:this._uniform_vec4;break;case 35678:i.fun=this._uniform_sampler2D;break;case 35680:i.fun=this._uniform_samplerCube;break;case 35676:i.glfun=e.uniformMatrix4fv,i.fun=this._uniformMatrix4fv;break;case 35670:i.fun=this._uniform1i;break;case 35674:case 35675:default:throw new Error("compile shader err!")}else i.fun=this._attribute}},e.getUniform=function(t){return this._paramsMap[t]},e._attribute=function(t,e){var i=bt.mainContext,r=Ot._enableAtributes,s=t.location;return r[s]||i.enableVertexAttribArray(s),i.vertexAttribPointer(s,e[0],e[1],e[2],e[3],e[4]+this._offset),r[s]=Ot._bindVertexBuffer,1},e._uniform1f=function(t,e){var i=t.uploadedValue;return i[0]!==e?(bt.mainContext.uniform1f(t.location,i[0]=e),1):0},e._uniform1fv=function(t,e){if(e.length<4){var i=t.uploadedValue;return i[0]!==e[0]||i[1]!==e[1]||i[2]!==e[2]||i[3]!==e[3]?(bt.mainContext.uniform1fv(t.location,e),i[0]=e[0],i[1]=e[1],i[2]=e[2],i[3]=e[3],1):0}return bt.mainContext.uniform1fv(t.location,e),1},e._uniform_vec2=function(t,e){var i=t.uploadedValue;return i[0]!==e[0]||i[1]!==e[1]?(bt.mainContext.uniform2f(t.location,i[0]=e[0],i[1]=e[1]),1):0},e._uniform_vec2v=function(t,e){if(e.length<2){var i=t.uploadedValue;return i[0]!==e[0]||i[1]!==e[1]||i[2]!==e[2]||i[3]!==e[3]?(bt.mainContext.uniform2fv(t.location,e),i[0]=e[0],i[1]=e[1],i[2]=e[2],i[3]=e[3],1):0}return bt.mainContext.uniform2fv(t.location,e),1},e._uniform_vec3=function(t,e){var i=t.uploadedValue;return i[0]!==e[0]||i[1]!==e[1]||i[2]!==e[2]?(bt.mainContext.uniform3f(t.location,i[0]=e[0],i[1]=e[1],i[2]=e[2]),1):0},e._uniform_vec3v=function(t,e){return bt.mainContext.uniform3fv(t.location,e),1},e._uniform_vec4=function(t,e){var i=t.uploadedValue;return i[0]!==e[0]||i[1]!==e[1]||i[2]!==e[2]||i[3]!==e[3]?(bt.mainContext.uniform4f(t.location,i[0]=e[0],i[1]=e[1],i[2]=e[2],i[3]=e[3]),1):0},e._uniform_vec4v=function(t,e){return bt.mainContext.uniform4fv(t.location,e),1},e._uniformMatrix2fv=function(t,e){return bt.mainContext.uniformMatrix2fv(t.location,!1,e),1},e._uniformMatrix3fv=function(t,e){return bt.mainContext.uniformMatrix3fv(t.location,!1,e),1},e._uniformMatrix4fv=function(t,e){return bt.mainContext.uniformMatrix4fv(t.location,!1,e),1},e._uniform1i=function(t,e){var i=t.uploadedValue;return i[0]!==e?(bt.mainContext.uniform1i(t.location,i[0]=e),1):0},e._uniform1iv=function(t,e){return bt.mainContext.uniform1iv(t.location,e),1},e._uniform_ivec2=function(t,e){var i=t.uploadedValue;return i[0]!==e[0]||i[1]!==e[1]?(bt.mainContext.uniform2i(t.location,i[0]=e[0],i[1]=e[1]),1):0},e._uniform_ivec2v=function(t,e){return bt.mainContext.uniform2iv(t.location,e),1},e._uniform_vec3i=function(t,e){var i=t.uploadedValue;return i[0]!==e[0]||i[1]!==e[1]||i[2]!==e[2]?(bt.mainContext.uniform3i(t.location,i[0]=e[0],i[1]=e[1],i[2]=e[2]),1):0},e._uniform_vec3vi=function(t,e){return bt.mainContext.uniform3iv(t.location,e),1},e._uniform_vec4i=function(t,e){var i=t.uploadedValue;return i[0]!==e[0]||i[1]!==e[1]||i[2]!==e[2]||i[3]!==e[3]?(bt.mainContext.uniform4i(t.location,i[0]=e[0],i[1]=e[1],i[2]=e[2],i[3]=e[3]),1):0},e._uniform_vec4vi=function(t,e){return bt.mainContext.uniform4iv(t.location,e),1},e._uniform_sampler2D=function(t,e){var i=bt.mainContext,r=t.uploadedValue;return null==r[0]?(r[0]=this._curActTexIndex,i.uniform1i(t.location,this._curActTexIndex),i.activeTexture(o._TEXTURES[this._curActTexIndex]),yt.bindTexture(i,3553,e),this._curActTexIndex++,1):(i.activeTexture(o._TEXTURES[r[0]]),yt.bindTexture(i,3553,e),0)},e._uniform_samplerCube=function(t,e){var i=bt.mainContext,r=t.uploadedValue;return null==r[0]?(r[0]=this._curActTexIndex,i.uniform1i(t.location,this._curActTexIndex),i.activeTexture(o._TEXTURES[this._curActTexIndex]),yt.bindTexture(i,34067,e),this._curActTexIndex++,1):(i.activeTexture(o._TEXTURES[r[0]]),yt.bindTexture(i,34067,e),0)},e._noSetValue=function(t){console.log("no....:"+t.name)},e.uploadOne=function(t,e){this.activeResource(),yt.UseProgram(this._program);var i=this._paramsMap[t];i.fun.call(this,i,e)},e.uploadTexture2D=function(t){C.shaderCall++;var e=bt.mainContext;e.activeTexture(33984),yt.bindTexture(e,3553,t)},e.upload=function(t,e){Bt.activeShader=Bt.bindShader=this,this._lastUseFrameCount===C.loopCount||this.activeResource(),yt.UseProgram(this._program),this._reCompile?(e=this._params,this._reCompile=!1):e=e||this._params;bt.mainContext;for(var i,r,s=e.length,a=0,n=0;n<s;n++)null!==(r=t[(i=e[n]).name])&&(a+=i.fun.call(this,i,r));C.shaderCall+=a},e.uploadArray=function(t,e,i){Bt.activeShader=this,(Bt.bindShader=this).activeResource(),yt.UseProgram(this._program);this._params;for(var r,s,a=0,n=e-2;0<=n;n-=2)(s=this._paramsMap[t[n]])&&null!=(r=t[n+1])&&(i&&i[s.name]&&i[s.name].bind(),a+=s.fun.call(this,s,r));C.shaderCall+=a},e.getParams=function(){return this._params},o.getShader=function(t){return o.sharders[t]},o.create=function(t,e,i,r){return new o(t,e,i,r)},o.withCompile=function(t,e,i,r){if(i&&o.sharders[i])return o.sharders[i];var s=o._preCompileShader[2e-4*t];if(!s)throw new Error("withCompile shader err!"+t);return s.createShader(e,i,r)},o.withCompile2D=function(t,e,i,r,s){if(r&&o.sharders[r])return o.sharders[r];var a=o._preCompileShader[2e-4*t+e];if(!a)throw new Error("withCompile shader err!"+t+" "+e);return a.createShader(i,r,s)},o.addInclude=function(t,e){xt.addInclude(t,e)},o.preCompile=function(t,e,i,r){var s=2e-4*t;o._preCompileShader[s]=new xt(s,e,i,r)},o.preCompile2D=function(t,e,i,r,s){var a=2e-4*t+e;o._preCompileShader[a]=new xt(a,i,r,s)},o._createShader=function(t,e,i){var r=t.createShader(i);return t.shaderSource(r,e),t.compileShader(r),r},o._TEXTURES=[33984,33985,33986,33987,33988,33989,33990,,33991,33992],o._count=0,o._preCompileShader={},o.SHADERNAME2ID=2e-4,o.sharders=((o.sharders=[]).length=32,o.sharders),n(o,["nameKey",function(){return this.nameKey=new L}]),o}(),Zt=function(t){function e(){this._maxsize=0,this._upload=!0,this._uploadSize=0,e.__super.call(this),this.lock=!0}c(e,"laya.webgl.utils.Buffer2D",t);var i=e.prototype;return i.needSize=function(t){var e=this._byteLength;if(t){var i=this._byteLength+t;i<=this._buffer.byteLength||this._resizeBuffer(i<<1,!0),this._byteLength=i}return e},i._bufferData=function(){this._maxsize=Math.max(this._maxsize,this._byteLength),C.loopCount%30==0&&(this._buffer.byteLength>this._maxsize+64&&(this.memorySize=this._buffer.byteLength,this._buffer=this._buffer.slice(0,this._maxsize+64),this._checkArrayUse()),this._maxsize=this._byteLength),this._uploadSize<this._buffer.byteLength&&(this._uploadSize=this._buffer.byteLength,Ot._gl.bufferData(this._bufferType,this._uploadSize,this._bufferUsage),this.memorySize=this._uploadSize),Ot._gl.bufferSubData(this._bufferType,0,this._buffer)},i._bufferSubData=function(t,e,i){if(void 0===t&&(t=0),void 0===e&&(e=0),void 0===i&&(i=0),this._maxsize=Math.max(this._maxsize,this._byteLength),C.loopCount%30==0&&(this._buffer.byteLength>this._maxsize+64&&(this.memorySize=this._buffer.byteLength,this._buffer=this._buffer.slice(0,this._maxsize+64),this._checkArrayUse()),this._maxsize=this._byteLength),this._uploadSize<this._buffer.byteLength&&(this._uploadSize=this._buffer.byteLength,Ot._gl.bufferData(this._bufferType,this._uploadSize,this._bufferUsage),this.memorySize=this._uploadSize),e||i){var r=this._buffer.slice(e,i);Ot._gl.bufferSubData(this._bufferType,t,r)}else Ot._gl.bufferSubData(this._bufferType,t,this._buffer)},i._checkArrayUse=function(){},i._bind_upload=function(){return!!this._upload&&(this._upload=!1,this._bind(),this._bufferData(),!0)},i._bind_subUpload=function(t,e,i){return void 0===t&&(t=0),void 0===e&&(e=0),void 0===i&&(i=0),!!this._upload&&(this._upload=!1,this._bind(),this._bufferSubData(t,e,i),!0)},i._resizeBuffer=function(t,e){if(t<this._buffer.byteLength)return this;if(this.memorySize=t,e&&this._buffer&&0<this._buffer.byteLength){var i=new ArrayBuffer(t);new Uint8Array(i).set(new Uint8Array(this._buffer),0),this._buffer=i}else this._buffer=new ArrayBuffer(t);return this._checkArrayUse(),this._upload=!0,this},i.append=function(t){this._upload=!0;var e,i;e=t.byteLength,t instanceof Uint8Array?(this._resizeBuffer(this._byteLength+e,!0),i=new Uint8Array(this._buffer,this._byteLength)):t instanceof Uint16Array?(this._resizeBuffer(this._byteLength+e,!0),i=new Uint16Array(this._buffer,this._byteLength)):t instanceof Float32Array&&(this._resizeBuffer(this._byteLength+e,!0),i=new Float32Array(this._buffer,this._byteLength)),i.set(t,0),this._byteLength+=e,this._checkArrayUse()},i.appendU16Array=function(t,e){this._resizeBuffer(this._byteLength+2*e,!0);for(var i=new Uint16Array(this._buffer,this._byteLength,e),r=0;r<e;r++)i[r]=t[r];this._byteLength+=2*e,this._checkArrayUse()},i.appendEx=function(t,e){this._upload=!0;var i;i=t.byteLength,this._resizeBuffer(this._byteLength+i,!0),new e(this._buffer,this._byteLength).set(t,0),this._byteLength+=i,this._checkArrayUse()},i.appendEx2=function(t,e,i,r){void 0===r&&(r=1),this._upload=!0;var s,a;s=i*r,this._resizeBuffer(this._byteLength+s,!0),a=new e(this._buffer,this._byteLength);var n=0;for(n=0;n<i;n++)a[n]=t[n];this._byteLength+=s,this._checkArrayUse()},i.getBuffer=function(){return this._buffer},i.setNeedUpload=function(){this._upload=!0},i.getNeedUpload=function(){return this._upload},i.upload=function(){var t=this._bind_upload();return Ot._gl.bindBuffer(this._bufferType,null),Ot._bindActive[this._bufferType]=null,Bt.activeShader=null,t},i.subUpload=function(t,e,i){void 0===t&&(t=0),void 0===e&&(e=0),void 0===i&&(i=0);var r=this._bind_subUpload();return Ot._gl.bindBuffer(this._bufferType,null),Ot._bindActive[this._bufferType]=null,Bt.activeShader=null,r},i.disposeResource=function(){t.prototype.disposeResource.call(this),this._upload=!0,this._uploadSize=0},i.clear=function(){this._byteLength=0,this._upload=!0},r(0,i,"bufferLength",function(){return this._buffer.byteLength}),r(0,i,"byteLength",null,function(t){this._byteLength!==t&&(t<=this._buffer.byteLength||this._resizeBuffer(2*t+256,!0),this._byteLength=t)}),e.__int__=function(t){$t.QuadrangleIB=$t.create(35044),pt.fillIBQuadrangle($t.QuadrangleIB,16)},e.FLOAT32=4,e.SHORT=2,e}(Ot),qt=(function(e){function i(t){this.u_blurX=!1,this.u_color=null,this.u_offset=null,this.u_strength=NaN,this.u_texW=0,this.u_texH=0,i.__super.call(this,9)}c(i,"laya.webgl.shader.d2.value.GlowSV",e);var t=i.prototype;t.setValue=function(t){e.prototype.setValue.call(this,t)},t.clear=function(){e.prototype.clear.call(this)}}(Ht),function(t){function e(t){e.__super.call(this,64),this.defines.add(64)}c(e,"laya.webgl.shader.d2.value.TextSV",t);var i=e.prototype;return i.release=function(){(e.pool[e._length++]=this).clear()},i.clear=function(){t.prototype.clear.call(this)},e.create=function(){return e._length?e.pool[--e._length]:new e(null)},e.pool=[],e._length=0,e}(Ht)),jt=function(t){function s(t,e,i,r){this._params2dQuick1=null,this._params2dQuick2=null,this._shaderValueWidth=NaN,this._shaderValueHeight=NaN,s.__super.call(this,t,e,i,r)}c(s,"laya.webgl.shader.d2.Shader2X",t);var e=s.prototype;return e.upload2dQuick1=function(t){this.upload(t,this._params2dQuick1||this._make2dQuick1())},e._make2dQuick1=function(){if(!this._params2dQuick1){this.activeResource(),this._params2dQuick1=[];for(var t,e=this._params,i=0,r=e.length;i<r;i++)t=e[i],(g.isFlash||"size"!==t.name&&"position"!==t.name&&"texcoord"!==t.name)&&this._params2dQuick1.push(t)}return this._params2dQuick1},e.disposeResource=function(){t.prototype.disposeResource.call(this),this._params2dQuick1=null,this._params2dQuick2=null},e.upload2dQuick2=function(t){this.upload(t,this._params2dQuick2||this._make2dQuick2())},e._make2dQuick2=function(){if(!this._params2dQuick2){this.activeResource(),this._params2dQuick2=[];for(var t,e=this._params,i=0,r=e.length;i<r;i++)t=e[i],(g.isFlash||"size"!==t.name)&&this._params2dQuick2.push(t)}return this._params2dQuick2},s.create=function(t,e,i,r){return new s(t,e,i,r)},s}(Qt),$t=function(t){function e(t){this._uint8Array=null,this._uint16Array=null,void 0===t&&(t=35044),e.__super.call(this),this._bufferUsage=t,this._bufferType=34963,g.isFlash||(this._buffer=new ArrayBuffer(8))}c(e,"laya.webgl.utils.IndexBuffer2D",Zt);var i=e.prototype;return i._checkArrayUse=function(){this._uint8Array&&(this._uint8Array=new Uint8Array(this._buffer)),this._uint16Array&&(this._uint16Array=new Uint16Array(this._buffer))},i.getUint8Array=function(){return this._uint8Array||(this._uint8Array=new Uint8Array(this._buffer))},i.getUint16Array=function(){return this._uint16Array||(this._uint16Array=new Uint16Array(this._buffer))},i.destory=function(){this._uint16Array=null,this._uint8Array=null,this._buffer=null},e.QuadrangleIB=null,e.create=function(t){return void 0===t&&(t=35044),new e(t)},e}(),Jt=function(t){function i(t,e){this._floatArray32=null,this._vertexStride=0,i.__super.call(this),this._vertexStride=t,this._bufferUsage=e,this._bufferType=34962,g.isFlash||(this._buffer=new ArrayBuffer(8)),this.getFloat32Array()}c(i,"laya.webgl.utils.VertexBuffer2D",t);var e=i.prototype;return e.getFloat32Array=function(){return this._floatArray32||(this._floatArray32=new Float32Array(this._buffer))},e.bind=function(t){t&&t._bind(),this._bind()},e.insertData=function(t,e){this.getFloat32Array().set(t,e),this._upload=!0},e.bind_upload=function(t){t._bind_upload()||t._bind(),this._bind_upload()||this._bind()},e._checkArrayUse=function(){this._floatArray32&&(this._floatArray32=new Float32Array(this._buffer))},e.disposeResource=function(){t.prototype.disposeResource.call(this)},e.destory=function(){this._byteLength=0,this._upload=!0,this._buffer=null,this._floatArray32=null},r(0,e,"vertexStride",function(){return this._vertexStride}),i.create=function(t,e){return void 0===e&&(e=35048),new i(t,e)},i}(Zt),te=function(t){function a(t,e,i,r){if(this._format=0,this._mipmap=!1,this._allowMerageInAtlas=!1,this._enableMerageInAtlas=!1,this.repeat=!1,this._image=null,this.minFifter=0,void(this.magFifter=0)===i&&(i=6408),void 0===r&&(r=!0),a.__super.call(this,t,e),this._format=i,this._mipmap=r,this.repeat=!1,this.minFifter=-1,this.magFifter=-1,"string"==typeof t)this._url=t,this._src=t,this._image=new f.window.Image,e&&(e.onload&&(this.onload=e.onload),e.onerror&&(this.onerror=e.onerror),e.onCreate&&e.onCreate(this)),this._image.crossOrigin=t&&0==t.indexOf("data:")?null:"",t&&(this._image.src=t);else if(t instanceof ArrayBuffer){this._src=e,this._url=this._src;var s=new h(t);s.readUTFBytes(4),s.readUTFBytes(2),s.getInt16();s.endian="bigEndian",this._w=s.getInt16(),this._h=s.getInt16();s.getInt16(),s.getInt16();this._image=new Uint8Array(t,s.pos),this._format=bt.compressEtc1.COMPRESSED_RGB_ETC1_WEBGL,k.enabled&&this._w<k.atlasLimitWidth&&this._h<k.atlasLimitHeight?this._allowMerageInAtlas=!0:this._allowMerageInAtlas=!1}else this._src=e,this._url=this._src,this._image=t.source||t,this.onresize();this._$5__enableMerageInAtlas=!0}c(a,"laya.webgl.resource.WebGLImage",m);var e=a.prototype;return T.imps(e,{"laya.webgl.resource.IMergeAtlasBitmap":!0}),e._init_=function(t,e){},e._createWebGlTexture=function(){if(!this._image)throw"create GLTextur err:no data:"+this._image;var t=bt.mainContext,e=this._source=t.createTexture(),i=yt.curBindTexTarget,r=yt.curBindTexValue;if(yt.bindTexture(t,3553,e),g.isConchWebGL)switch(this._format){case 6408:t.texImage2DEx(!0,3553,0,this._format,6408,5121,this._image);break;case bt.compressEtc1.COMPRESSED_RGB_ETC1_WEBGL:t.compressedTexImage2D(3553,0,this._format,this._w,this._h,0,this._image)}else{switch(t.pixelStorei(37441,!0),this._format){case 6408:t.texImage2D(3553,0,this._format,6408,5121,this._image);break;case bt.compressEtc1.COMPRESSED_RGB_ETC1_WEBGL:t.compressedTexImage2D(3553,0,this._format,this._w,this._h,0,this._image)}t.pixelStorei(37441,!1)}var s=this.minFifter,a=this.magFifter,n=this.repeat?10497:33071,h=l.isPOT(this._w,this._h);h?(this.mipmap?-1!==s||(s=9987):-1!==s||(s=9729),-1!==a||(a=9729),t.texParameteri(3553,10241,s),t.texParameteri(3553,10240,a),t.texParameteri(3553,10242,n),t.texParameteri(3553,10243,n),this.mipmap&&t.generateMipmap(3553)):(-1!==s||(s=9729),-1!==a||(a=9729),t.texParameteri(3553,10241,s),t.texParameteri(3553,10240,a),t.texParameteri(3553,10242,33071),t.texParameteri(3553,10243,33071)),i&&r&&yt.bindTexture(t,i,r),this._image.onload=null,this._image=null,h&&this.mipmap?this.memorySize=this._w*this._h*4*(1+1/3):this.memorySize=this._w*this._h*4,this._recreateLock=!1},e.recreateResource=function(){var t=this;if(null!=this._src&&""!==this._src)if(this._needReleaseAgain=!1,this._image){if(this._recreateLock)return;this._allowMerageInAtlas&&this._$5__enableMerageInAtlas?(this.memorySize=0,this._recreateLock=!1):this._createWebGlTexture(),this.completeCreate()}else{this._recreateLock=!0;var e=this;this._image=new f.window.Image,this._image.crossOrigin=0==this._src.indexOf("data:")?null:"",this._image.onload=function(){if(e._needReleaseAgain)return e._needReleaseAgain=!1,e._image.onload=null,void(e._image=null);e._allowMerageInAtlas&&e._enableMerageInAtlas?(t.memorySize=0,t._recreateLock=!1):e._createWebGlTexture(),e.completeCreate()},this._image.src=this._src}},e.disposeResource=function(){this._recreateLock&&(this._needReleaseAgain=!0),this._source&&(bt.mainContext.deleteTexture(this._source),this._source=null,this._image=null,this.memorySize=0)},e.onresize=function(){this._w=this._image.width,this._h=this._image.height,k.enabled&&this._w<k.atlasLimitWidth&&this._h<k.atlasLimitHeight?this._allowMerageInAtlas=!0:this._allowMerageInAtlas=!1},e.clearAtlasSource=function(){this._image=null},r(0,e,"format",function(){return this._format}),r(0,e,"enableMerageInAtlas",function(){return this._$5__enableMerageInAtlas},function(t){this._$5__enableMerageInAtlas=t}),r(0,e,"mipmap",function(){return this._mipmap}),r(0,e,"allowMerageInAtlas",function(){return this._allowMerageInAtlas}),r(0,e,"atlasSource",function(){return this._image}),r(0,e,"onload",null,function(t){var e=this;this._onload=t,this._image&&(this._image.onload=null!=this._onload?function(){e.onresize(),e._onload()}:null)}),r(0,e,"onerror",null,function(t){var e=this;this._onerror=t,this._image&&(this._image.onerror=null!=this._onerror?function(){e._onerror()}:null)}),a}();T.__init([ft,U,At,xt])}(window,document,Laya),"function"==typeof define&&define.amd&&define("laya.core",["require","exports"],function(t,e){"use strict";for(var i in Object.defineProperty(e,"__esModule",{value:!0}),Laya){var r=Laya[i];r&&r.__isclass&&(e[i]=r)}});
!function(t,e,st){st.un,st.uns;var i=st.static,n=st.class,a=st.getset,f=st.__newvec,h=laya.maths.Bezier,c=laya.utils.Browser,wt=laya.utils.Byte,s=(laya.events.Event,laya.events.EventDispatcher),r=laya.display.Graphics,l=laya.resource.HTMLCanvas,o=laya.utils.Handler,u=laya.net.Loader,d=laya.maths.MathUtil,St=laya.maths.Matrix,_=(laya.display.Node,laya.maths.Point,laya.maths.Rectangle),m=laya.renders.Render,p=(laya.renders.RenderContext,laya.resource.Resource),y=laya.utils.RunDriver,rt=laya.display.Sprite,x=laya.utils.Stat,Ft=laya.resource.Texture,g=(laya.net.URL,laya.utils.Utils),S=function(){function t(){this.nodes=null,this.name=null,this.playTime=NaN,this.bone3DMap=null,this.totalKeyframeDatasLength=0}return n(t,"laya.ani.AnimationContent"),t}(),F=function(){function t(){this.name=null,this.parentIndex=0,this.parent=null,this.keyframeWidth=0,this.lerpType=0,this.interpolationMethod=null,this.childs=null,this.keyFrame=null,this.playTime=NaN,this.extenData=null,this.dataOffset=0}return n(t,"laya.ani.AnimationNodeContent"),t}(),v=function(){function t(){}return n(t,"laya.ani.AnimationParser01"),t.parse=function(t,e){var i=e.__getBuffer(),a=0,s=0,r=0,n=0,h=0,l=0,o=0,u=e.readUTFString();t._aniClassName=u;var c,d=e.readUTFString().split("\n"),_=e.getUint8(),p=e.getUint32(),f=e.getUint32();0<p&&(c=i.slice(p,f));var m=new wt(c);for(0<f&&(t._publicExtData=i.slice(f,i.byteLength)),t._useParent=!!e.getUint8(),t._anis.length=_,a=0;a<_;a++){var y=t._anis[a]=new S;y.nodes=new Array;var x=y.name=d[e.getUint16()];t._aniMap[x]=a,y.bone3DMap={},y.playTime=e.getFloat32();var g=y.nodes.length=e.getUint8();for(s=y.totalKeyframeDatasLength=0;s<g;s++){var v=y.nodes[s]=new F;v.childs=[];var D=e.getInt16();0<=D&&(v.name=d[D],y.bone3DMap[v.name]=s),v.keyFrame=new Array,v.parentIndex=e.getInt16(),-1==v.parentIndex?v.parent=null:v.parent=y.nodes[v.parentIndex],v.lerpType=e.getUint8();var M=e.getUint32();m.pos=M;var I=v.keyframeWidth=m.getUint16();if(y.totalKeyframeDatasLength+=I,0===v.lerpType||1===v.lerpType)for(v.interpolationMethod=[],v.interpolationMethod.length=I,r=0;r<I;r++)v.interpolationMethod[r]=L.interpolation[m.getUint8()];null!=v.parent&&v.parent.childs.push(v);var b=e.getUint16();0<b&&(v.extenData=i.slice(e.pos,e.pos+b),e.pos+=b);var N,T=e.getUint16(),A=0;for(r=0,n=v.keyFrame.length=T;r<n;r++){if((N=v.keyFrame[r]=new k).duration=e.getFloat32(),N.startTime=A,2===v.lerpType){N.interpolationData=[];var C,w=e.getUint8();switch(C=e.getFloat32()){case 254:for(N.interpolationData.length=I,o=0;o<I;o++)N.interpolationData[o]=0;break;case 255:for(N.interpolationData.length=I,o=0;o<I;o++)N.interpolationData[o]=5;break;default:for(N.interpolationData.push(C),l=1;l<w;l++)N.interpolationData.push(e.getFloat32())}}for(N.data=new Float32Array(I),h=0;h<I;h++)N.data[h]=e.getFloat32(),-1e-8<N.data[h]&&N.data[h]<1e-8&&(N.data[h]=0);A+=N.duration}N.startTime=y.playTime,v.playTime=y.playTime,t._calculateKeyFrame(v,T,I)}}},t}(),D=function(){function D(){}return n(D,"laya.ani.AnimationParser02"),D.READ_DATA=function(){D._DATA.offset=D._reader.getUint32(),D._DATA.size=D._reader.getUint32()},D.READ_BLOCK=function(){for(var t=D._BLOCK.count=D._reader.getUint16(),e=D._BLOCK.blockStarts=[],i=D._BLOCK.blockLengths=[],a=0;a<t;a++)e.push(D._reader.getUint32()),i.push(D._reader.getUint32())},D.READ_STRINGS=function(){var t=D._reader.getUint32(),e=D._reader.getUint16(),i=D._reader.pos;D._reader.pos=t+D._DATA.offset;for(var a=0;a<e;a++)D._strings[a]=D._reader.readUTFString();D._reader.pos=i},D.parse=function(t,e){D._templet=t;(D._reader=e).__getBuffer();D.READ_DATA(),D.READ_BLOCK(),D.READ_STRINGS();for(var i=0,a=D._BLOCK.count;i<a;i++){var s=e.getUint16(),r=D._strings[s],n=D["READ_"+r];if(null==n)throw new Error("model file err,no this function:"+s+" "+r);n.call()}},D.READ_ANIMATIONS=function(){var t=D._reader,e=t.__getBuffer(),i=0,a=0,s=0,r=0,n=t.getUint16(),h=[];for(h.length=n,i=0;i<n;i++)h[i]=L.interpolation[t.getByte()];var l=t.getUint8();for(D._templet._anis.length=l,i=0;i<l;i++){var o=D._templet._anis[i]={};o.nodes=new Array;var u=o.name=D._strings[t.getUint16()];D._templet._aniMap[u]=i,o.bone3DMap={},o.playTime=t.getFloat32();var c=o.nodes.length=t.getInt16();for(a=o.totalKeyframeDatasLength=0;a<c;a++){var d=o.nodes[a]={};d.keyframeWidth=n,d.childs=[];var _=t.getUint16();0<=_&&(d.name=D._strings[_],o.bone3DMap[d.name]=a),d.keyFrame=new Array,d.parentIndex=t.getInt16(),-1==d.parentIndex?d.parent=null:d.parent=o.nodes[d.parentIndex],o.totalKeyframeDatasLength+=n,d.interpolationMethod=h,null!=d.parent&&d.parent.childs.push(d);var p=t.getUint16(),f=null,m=null;for(s=0,r=d.keyFrame.length=p;s<r;s++){(f=d.keyFrame[s]={}).startTime=t.getFloat32(),m&&(m.duration=f.startTime-m.startTime);var y=D._DATA.offset,x=t.getUint32(),g=4*n,v=e.slice(y+x,y+x+g);f.data=new Float32Array(v),m=f}f.duration=0,d.playTime=o.playTime,D._templet._calculateKeyFrame(d,p,n)}}},D._templet=null,D._reader=null,D._strings=[],i(D,["_BLOCK",function(){return this._BLOCK={count:0}},"_DATA",function(){return this._DATA={offset:0,size:0}}]),D}(),kt=(function(){function t(){}n(t,"laya.ani.AnimationState"),t.stopped=0,t.paused=1,t.playing=2}(),function(){function s(){this.name=null,this.root=null,this.parentBone=null,this.length=10,this.transform=null,this.inheritScale=!0,this.inheritRotation=!0,this.rotation=NaN,this.resultRotation=NaN,this.d=-1,this._tempMatrix=null,this._sprite=null,this.resultTransform=new zt,this.resultMatrix=new St,this._children=[]}n(s,"laya.ani.bone.Bone");var t=s.prototype;return t.setTempMatrix=function(t){this._tempMatrix=t;var e,i=0;for(i=0,e=this._children.length;i<e;i++)this._children[i].setTempMatrix(this._tempMatrix)},t.update=function(t){var e;if(this.rotation=this.transform.skX,t)e=this.resultTransform.getMatrix(),St.mul(e,t,this.resultMatrix),this.resultRotation=this.rotation;else if(this.resultRotation=this.rotation+this.parentBone.resultRotation,this.parentBone)if(this.inheritRotation&&this.inheritScale)e=this.resultTransform.getMatrix(),St.mul(e,this.parentBone.resultMatrix,this.resultMatrix);else{var i=this.parentBone,a=NaN,s=NaN,r=NaN,n=this.parentBone.resultMatrix;e=this.resultTransform.getMatrix();var h=n.a*e.tx+n.c*e.ty+n.tx,l=n.b*e.tx+n.d*e.ty+n.ty,o=new St;this.inheritRotation?(a=Math.atan2(i.resultMatrix.b,i.resultMatrix.a),s=Math.cos(a),r=Math.sin(a),o.setTo(s,r,-r,s,0,0),St.mul(this._tempMatrix,o,St.TEMP),St.TEMP.copyTo(o),e=this.resultTransform.getMatrix(),St.mul(e,o,this.resultMatrix),this.resultTransform.scX*this.resultTransform.scY<0&&this.resultMatrix.rotate(.5*Math.PI)):(this.inheritScale,e=this.resultTransform.getMatrix(),St.TEMP.identity(),St.TEMP.d=this.d,St.mul(e,St.TEMP,this.resultMatrix)),this.resultMatrix.tx=h,this.resultMatrix.ty=l}else(e=this.resultTransform.getMatrix()).copyTo(this.resultMatrix);var u,c=0;for(c=0,u=this._children.length;c<u;c++)this._children[c].update()},t.updateChild=function(){var t,e=0;for(e=0,t=this._children.length;e<t;e++)this._children[e].update()},t.setRotation=function(t){this._sprite&&(this._sprite.rotation=180*t/Math.PI)},t.updateDraw=function(t,e){s.ShowBones&&!s.ShowBones[this.name]||(this._sprite||(this._sprite=new rt,this._sprite.graphics.drawCircle(0,0,5,"#ff0000"),this._sprite.graphics.drawLine(0,0,this.length,0,"#00ff00"),this._sprite.graphics.fillText(this.name,0,0,"20px Arial","#00ff00","center"),st.stage.addChild(this._sprite)),this._sprite.x=t+this.resultMatrix.tx,this._sprite.y=e+this.resultMatrix.ty);var i,a=0;for(a=0,i=this._children.length;a<i;a++)this._children[a].updateDraw(t,e)},t.addChild=function(t){this._children.push(t),t.parentBone=this},t.findBone=function(t){if(this.name==t)return this;var e,i,a=0;for(a=0,e=this._children.length;a<e;a++)if(i=this._children[a].findBone(t))return i;return null},t.localToWorld=function(t){var e=t[0],i=t[1];t[0]=e*this.resultMatrix.a+i*this.resultMatrix.c+this.resultMatrix.tx,t[1]=e*this.resultMatrix.b+i*this.resultMatrix.d+this.resultMatrix.ty},s.ShowBones={},s}()),Pt=function(){function f(){this.name=null,this.parent=null,this.attachmentName=null,this.srcDisplayIndex=-1,this.type="src",this.templet=null,this.currSlotData=null,this.currTexture=null,this.currDisplayData=null,this.displayIndex=-1,this.originalIndex=-1,this._diyTexture=null,this._parentMatrix=null,this._resultMatrix=null,this._replaceDic={},this._curDiyUV=null,this._curDiyVS=null,this._skinSprite=null,this.deformData=null,this._mVerticleArr=null}n(f,"laya.ani.bone.BoneSlot");var t=f.prototype;return t.showSlotData=function(t,e){void 0===e&&(e=!0),this.currSlotData=t,e&&(this.displayIndex=this.srcDisplayIndex),this.currDisplayData=null,this.currTexture=null},t.showDisplayByName=function(t){this.currSlotData&&this.showDisplayByIndex(this.currSlotData.getDisplayByName(t))},t.replaceDisplayByName=function(t,e){if(this.currSlotData){var i;i=this.currSlotData.getDisplayByName(t);var a;a=this.currSlotData.getDisplayByName(e),this.replaceDisplayByIndex(i,a)}},t.replaceDisplayByIndex=function(t,e){this.currSlotData&&(this._replaceDic[t]=e,this.originalIndex==t&&this.showDisplayByIndex(t))},t.showDisplayByIndex=function(t){if(this.originalIndex=t,null!=this._replaceDic[t]&&(t=this._replaceDic[t]),this.currSlotData&&-1<t&&t<this.currSlotData.displayArr.length){if(this.displayIndex=t,this.currDisplayData=this.currSlotData.displayArr[t],this.currDisplayData){var e=this.currDisplayData.name;this.currTexture=this.templet.getTexture(e),this.currTexture&&0==this.currDisplayData.type&&this.currDisplayData.uvs&&(!m.isConchApp||m.isConchApp&&"0.9.15"<rt.RUNTIMEVERION)&&(this.currTexture=this.currDisplayData.createTexture(this.currTexture))}}else this.displayIndex=-1,this.currDisplayData=null,this.currTexture=null},t.replaceSkin=function(t){this._diyTexture=t,this._curDiyUV&&(this._curDiyUV.length=0),this.currDisplayData&&this._diyTexture==this.currDisplayData.texture&&(this._diyTexture=null)},t.setParentMatrix=function(t){this._parentMatrix=t},t.draw=function(t,e,i,a){if(void 0===i&&(i=!1),void 0===a&&(a=1),(null!=this._diyTexture||null!=this.currTexture)&&null!=this.currDisplayData||this.currDisplayData&&3==this.currDisplayData.type){var s,r=this.currTexture;switch(this._diyTexture&&(r=this._diyTexture),this.currDisplayData.type){case 0:if(t){var n=this.getDisplayMatrix();if(this._parentMatrix){var h=!1;if(n){var l;if(St.mul(n,this._parentMatrix,St.TEMP),l=i?(null==this._resultMatrix&&(this._resultMatrix=new St),this._resultMatrix):new St,!m.isWebGL&&this.currDisplayData.uvs||m.isWebGL&&this._diyTexture&&this.currDisplayData.uvs){var o=f._tempMatrix;o.identity(),this.currDisplayData.uvs[1]>this.currDisplayData.uvs[5]&&(o.d=-1),this.currDisplayData.uvs[0]>this.currDisplayData.uvs[4]&&this.currDisplayData.uvs[1]>this.currDisplayData.uvs[5]&&(h=!0,o.rotate(-Math.PI/2)),St.mul(o,St.TEMP,l)}else St.TEMP.copyTo(l);h?t.drawTexture(r,-this.currDisplayData.height/2,-this.currDisplayData.width/2,this.currDisplayData.height,this.currDisplayData.width,l):t.drawTexture(r,-this.currDisplayData.width/2,-this.currDisplayData.height/2,this.currDisplayData.width,this.currDisplayData.height,l)}}}break;case 1:if(null==(s=i?(null==this._skinSprite&&(this._skinSprite=f.createSkinMesh()),this._skinSprite):f.createSkinMesh()))return;var u;if(null==this.currDisplayData.bones){var c,d=this.currDisplayData.weights;this.deformData&&(d=this.deformData),c=this._diyTexture?(this._curDiyUV||(this._curDiyUV=[]),0==this._curDiyUV.length&&(this._curDiyUV=C.getRelativeUV(this.currTexture.uv,this.currDisplayData.uvs,this._curDiyUV),this._curDiyUV=C.getAbsoluteUV(this._diyTexture.uv,this._curDiyUV,this._curDiyUV)),this._curDiyUV):this.currDisplayData.uvs,this._mVerticleArr=d;this.currDisplayData.triangles.length;u=this.currDisplayData.triangles,s.init2(r,null,u,this._mVerticleArr,c);var _,p=this.getDisplayMatrix();if(this._parentMatrix)if(p)St.mul(p,this._parentMatrix,St.TEMP),_=i?(null==this._resultMatrix&&(this._resultMatrix=new St),this._resultMatrix):new St,St.TEMP.copyTo(_),s.transform=_}else this.skinMesh(e,s,a);t.drawSkin(s);break;case 2:if(null==(s=i?(null==this._skinSprite&&(this._skinSprite=f.createSkinMesh()),this._skinSprite):f.createSkinMesh()))return;this.skinMesh(e,s,a),t.drawSkin(s)}}},t.skinMesh=function(t,e,i){var a,s=this.currTexture,r=this.currDisplayData.bones;a=this._diyTexture?(s=this._diyTexture,this._curDiyUV||(this._curDiyUV=[]),0==this._curDiyUV.length&&(this._curDiyUV=C.getRelativeUV(this.currTexture.uv,this.currDisplayData.uvs,this._curDiyUV),this._curDiyUV=C.getAbsoluteUV(this._diyTexture.uv,this._curDiyUV,this._curDiyUV)),this._curDiyUV):this.currDisplayData.uvs;var n,h,l=this.currDisplayData.weights,o=this.currDisplayData.triangles,u=0,c=0,d=0,_=NaN,p=NaN,f=0,m=0,y=[],x=0,g=0;if(this.deformData&&0<this.deformData.length){var v=0;for(x=0,g=r.length;x<g;){for(d=r[x++]+x,c=u=0;x<d;x++)h=t[r[x]],_=l[f]+this.deformData[v++],p=l[f+1]+this.deformData[v++],m=l[f+2],u+=(_*h.a+p*h.c+h.tx)*m,c+=(_*h.b+p*h.d+h.ty)*m,f+=3;y.push(u,c)}}else for(x=0,g=r.length;x<g;){for(d=r[x++]+x,c=u=0;x<d;x++)h=t[r[x]],_=l[f],p=l[f+1],m=l[f+2],u+=(_*h.a+p*h.c+h.tx)*m,c+=(_*h.b+p*h.d+h.ty)*m,f+=3;y.push(u,c)}this._mVerticleArr=y,n=o,e.init2(s,null,n,this._mVerticleArr,a)},t.drawBonePoint=function(t){t&&this._parentMatrix&&t.drawCircle(this._parentMatrix.tx,this._parentMatrix.ty,5,"#ff0000")},t.getDisplayMatrix=function(){return this.currDisplayData?this.currDisplayData.transform.getMatrix():null},t.getMatrix=function(){return this._resultMatrix},t.copy=function(){var t=new f;return t.type="copy",t.name=this.name,t.attachmentName=this.attachmentName,t.srcDisplayIndex=this.srcDisplayIndex,t.parent=this.parent,t.displayIndex=this.displayIndex,t.templet=this.templet,t.currSlotData=this.currSlotData,t.currTexture=this.currTexture,t.currDisplayData=this.currDisplayData,t},f.createSkinMesh=function(){return m.isWebGL||m.isConchApp?y.skinAniSprite():m.isWebGL?null:O.useSimpleMeshInCanvas?new R:new U},i(f,["_tempMatrix",function(){return this._tempMatrix=new St}]),f}(),M=function(){function t(){this.mesh=null,this.transform=null,this.context=null,this.mode=0}n(t,"laya.ani.bone.canvasmesh.CanvasMeshRender");var e=t.prototype;return e.renderToContext=function(t){this.context=t.ctx||t,this.mesh&&(0==this.mode?this._renderWithIndexes(this.mesh):this._renderNoIndexes(this.mesh))},e._renderNoIndexes=function(t){var e=0,i=t.vertices.length/2,a=0;for(e=0;e<i-2;e++)a=2*e,this._renderDrawTriangle(t,a,a+2,a+4)},e._renderWithIndexes=function(t){var e=t.indexes,i=0,a=e.length;for(i=0;i<a;i+=3){var s=2*e[i],r=2*e[i+1],n=2*e[i+2];this._renderDrawTriangle(t,s,r,n)}},e._renderDrawTriangle=function(t,e,i,a){var s=this.context,r=t.uvs,n=t.vertices,h=t.texture,l=h.bitmap,o=l.source,u=h.width,c=h.height,d=l.width,_=l.height,p=NaN,f=NaN,m=NaN,y=NaN,x=NaN,g=NaN;if(t.useUvTransform){var v=t.uvTransform;p=(r[e]*v.a+r[e+1]*v.c+v.tx)*d,f=(r[i]*v.a+r[i+1]*v.c+v.tx)*d,m=(r[a]*v.a+r[a+1]*v.c+v.tx)*d,y=(r[e]*v.b+r[e+1]*v.d+v.ty)*_,x=(r[i]*v.b+r[i+1]*v.d+v.ty)*_,g=(r[a]*v.b+r[a+1]*v.d+v.ty)*_}else p=r[e]*d,f=r[i]*d,m=r[a]*d,y=r[e+1]*_,x=r[i+1]*_,g=r[a+1]*_;var D=n[e],M=n[i],I=n[a],b=n[e+1],N=n[i+1],T=n[a+1];if(0<t.canvasPadding){var A=t.canvasPadding,C=t.canvasPadding,w=(D+M+I)/3,S=(b+N+T)/3,F=D-w,k=b-S,P=Math.sqrt(F*F+k*k);D=w+F/P*(P+A),b=S+k/P*(P+C),k=N-S,M=w+(F=M-w)/(P=Math.sqrt(F*F+k*k))*(P+A),N=S+k/P*(P+C),k=T-S,I=w+(F=I-w)/(P=Math.sqrt(F*F+k*k))*(P+A),T=S+k/P*(P+C)}if(s.save(),this.transform){var B=this.transform;s.transform(B.a,B.b,B.c,B.d,B.tx,B.ty)}s.beginPath(),s.moveTo(D,b),s.lineTo(M,N),s.lineTo(I,T),s.closePath(),s.clip();var U=1/(p*x+y*m+f*g-x*m-y*f-p*g),L=D*x+y*I+M*g-x*I-y*M-D*g,R=p*M+D*m+f*I-M*m-D*f-p*I,O=p*x*I+y*M*m+D*f*g-D*x*m-y*f*I-p*M*g,E=b*x+y*T+N*g-x*T-y*N-b*g,K=p*N+b*m+f*T-N*m-b*f-p*T,Y=p*x*T+y*N*m+b*f*g-b*x*m-y*f*T-p*N*g;s.transform(L*U,E*U,R*U,K*U,O*U,Y*U),s.drawImage(o,h.uv[0]*d,h.uv[1]*_,u,c,h.uv[0]*d,h.uv[1]*_,u,c),s.restore()},t}(),I=function(){function t(){this.texture=null,this.uvs=[0,0,1,0,1,1,0,1],this.vertices=[0,0,100,0,100,100,0,100],this.indexes=[0,1,3,3,1,2],this.uvTransform=null,this.useUvTransform=!1,this.canvasPadding=1}return n(t,"laya.ani.bone.canvasmesh.MeshData"),t.prototype.getBounds=function(){return _._getWrapRec(this.vertices)},t}(),Bt=function(){function t(){this.skinName=null,this.deformSlotDataList=[]}return n(t,"laya.ani.bone.DeformAniData"),t}(),Ut=function(){function t(){this.deformSlotDisplayList=[]}return n(t,"laya.ani.bone.DeformSlotData"),t}(),Lt=function(){function t(){this.boneSlot=null,this.slotIndex=-1,this.attachment=null,this.deformData=null,this.frameIndex=0,this.timeList=[],this.vectices=[],this.tweenKeyList=[]}n(t,"laya.ani.bone.DeformSlotDisplayData");var e=t.prototype;return e.binarySearch1=function(t,e){var i=0,a=t.length-2;if(0==a)return 1;for(var s=a>>>1;;){if(t[Math.floor(s+1)]<=e?i=s+1:a=s,i==a)return i+1;s=i+a>>>1}return 0},e.apply=function(t,e,i){if(void 0===i&&(i=1),t+=.05,!(this.timeList.length<=0)){var a=0;if(!(t<this.timeList[0])){var s=this.vectices[0].length,r=[],n=this.binarySearch1(this.timeList,t);if(this.frameIndex=n,t>=this.timeList[this.timeList.length-1]){var h=this.vectices[this.vectices.length-1];if(i<1)for(a=0;a<s;a++)r[a]+=(h[a]-r[a])*i;else for(a=0;a<s;a++)r[a]=h[a];this.deformData=r}else{this.tweenKeyList[this.frameIndex];var l=this.vectices[this.frameIndex-1],o=this.vectices[this.frameIndex],u=this.timeList[this.frameIndex-1],c=this.timeList[this.frameIndex];i=this.tweenKeyList[n-1]?(t-u)/(c-u):0;var d=NaN;for(a=0;a<s;a++)d=l[a],r[a]=d+(o[a]-d)*i;this.deformData=r}}}},t}(),Rt=function(){function t(){this.time=NaN,this.drawOrder=[]}return n(t,"laya.ani.bone.DrawOrderData"),t}(),Ot=function(){function t(){this.name=null,this.intValue=0,this.floatValue=NaN,this.stringValue=null,this.time=NaN}return n(t,"laya.ani.bone.EventData"),t}(),b=function(){function at(t,e){this._targetBone=null,this._bones=null,this._data=null,this.name=null,this.mix=NaN,this.bendDirection=NaN,this.isSpine=!0,this._sp=null,this.isDebug=!1,this._data=t,this._targetBone=e[t.targetBoneIndex],this.isSpine=t.isSpine,null==this._bones&&(this._bones=[]);for(var i=this._bones.length=0,a=t.boneIndexs.length;i<a;i++)this._bones.push(e[t.boneIndexs[i]]);this.name=t.name,this.mix=t.mix,this.bendDirection=t.bendDirection}n(at,"laya.ani.bone.IkConstraint");var t=at.prototype;return t.apply=function(){switch(this._bones.length){case 1:this._applyIk1(this._bones[0],this._targetBone.resultMatrix.tx,this._targetBone.resultMatrix.ty,this.mix);break;case 2:this.isSpine?this._applyIk2(this._bones[0],this._bones[1],this._targetBone.resultMatrix.tx,this._targetBone.resultMatrix.ty,this.bendDirection,this.mix):this._applyIk3(this._bones[0],this._bones[1],this._targetBone.resultMatrix.tx,this._targetBone.resultMatrix.ty,this.bendDirection,this.mix)}},t._applyIk1=function(t,e,i,a){var s=t.parentBone,r=1/(s.resultMatrix.a*s.resultMatrix.d-s.resultMatrix.b*s.resultMatrix.c),n=e-s.resultMatrix.tx,h=i-s.resultMatrix.ty,l=(n*s.resultMatrix.d-h*s.resultMatrix.c)*r-t.transform.x,o=(h*s.resultMatrix.a-n*s.resultMatrix.b)*r-t.transform.y,u=Math.atan2(o,l)*at.radDeg-0-t.transform.skX;t.transform.scX<0&&(u+=180),180<u?u-=360:u<-180&&(u+=360),t.transform.skX=t.transform.skY=t.transform.skX+u*a,t.update()},t.updatePos=function(t,e){this._sp&&this._sp.pos(t,e)},t._applyIk2=function(t,e,i,a,s,r){if(0!=r){var n=t.resultTransform.x,h=t.resultTransform.y,l=t.transform.scX,o=t.transform.scY,u=e.transform.scX,c=0,d=0,_=0;_=l<0?(l=-l,c=180,-1):(c=0,1),o<0&&(o=-o,_=-_),d=u<0?(u=-u,180):0;var p=e.resultTransform.x,f=NaN,m=NaN,y=NaN,x=t.resultMatrix.a,g=t.resultMatrix.c,v=t.resultMatrix.b,D=t.resultMatrix.d,M=Math.abs(l-o)<=1e-4;y=M?(m=x*p+g*(f=e.resultTransform.y)+t.resultMatrix.tx,v*p+D*f+t.resultMatrix.ty):(f=0,m=x*p+t.resultMatrix.tx,v*p+t.resultMatrix.ty),this.isDebug&&(this._sp||(this._sp=new rt,st.stage.addChild(this._sp)),this._sp.graphics.clear(),this._sp.graphics.drawCircle(i,a,15,"#ffff00"),this._sp.graphics.drawCircle(m,y,15,"#ff00ff")),t.setRotation(Math.atan2(y-t.resultMatrix.ty,m-t.resultMatrix.tx));var I=t.parentBone;x=I.resultMatrix.a,g=I.resultMatrix.c,v=I.resultMatrix.b;var b=1/(x*(D=I.resultMatrix.d)-g*v),N=i-I.resultMatrix.tx,T=a-I.resultMatrix.ty,A=(N*D-T*g)*b-n,C=(T*x-N*v)*b-h,w=((N=m-I.resultMatrix.tx)*D-(T=y-I.resultMatrix.ty)*g)*b-n,S=(T*x-N*v)*b-h,F=Math.sqrt(w*w+S*S),k=e.length*u,P=NaN,B=NaN;if(M){var U=(A*A+C*C-F*F-(k*=l)*k)/(2*F*k);U<-1?U=-1:1<U&&(U=1),B=Math.acos(U)*s,x=F+k*U,g=k*Math.sin(B),P=Math.atan2(C*x-A*g,A*x+C*g)}else{var L=(x=l*k)*x,R=(g=o*k)*g,O=A*A+C*C,E=Math.atan2(C,A),K=-2*R*F,Y=R-L;if(0<(D=K*K-4*Y*(v=R*F*F+L*O-L*R))){var V=Math.sqrt(D);K<0&&(V=-V);var W=(V=-(K+V)/2)/Y,X=v/V,z=Math.abs(W)<Math.abs(X)?W:X;z*z<=O&&(T=Math.sqrt(O-z*z)*s,P=E-Math.atan2(T,z),B=Math.atan2(T/o,(z-F)/l))}var q=0,G=Number.MAX_VALUE,H=0,Q=0,Z=0,j=0,$=0,J=0;j<(D=(N=F+x)*N)&&(Z=0,j=D,$=N),(D=(N=F-x)*N)<G&&(q=Math.PI,G=D,H=N);var tt=Math.acos(-x*F/(L-R));(D=(N=x*Math.cos(tt)+F)*N+(T=g*Math.sin(tt))*T)<G&&(q=tt,G=D,H=N,Q=T),j<D&&(Z=tt,j=D,$=N,J=T),B=O<=(G+j)/2?(P=E-Math.atan2(Q*s,H),q*s):(P=E-Math.atan2(J*s,$),Z*s)}var et=Math.atan2(f,p)*_,it=t.resultTransform.skX;180<(P=(P-et)*at.radDeg+c-it)?P-=360:P<-180&&(P+=360),t.resultTransform.x=n,t.resultTransform.y=h,t.resultTransform.skX=t.resultTransform.skY=it+P*r,it=e.resultTransform.skX,180<(B=((B+et)*at.radDeg-0)*_+d-(it%=360))?B-=360:B<-180&&(B+=360),e.resultTransform.x=p,e.resultTransform.y=f,e.resultTransform.skX=e.resultTransform.skY=e.resultTransform.skY+B*r,t.update()}},t._applyIk3=function(t,e,i,a,s,r){if(0!=r){var n,h,l=e.resultMatrix.a*e.length,o=e.resultMatrix.b*e.length,u=l*l+o*o,c=Math.sqrt(u),d=t.resultMatrix.tx,_=t.resultMatrix.ty,p=e.resultMatrix.tx,f=e.resultMatrix.ty,m=p-d,y=f-_,x=m*m+y*y,g=Math.sqrt(x),v=(m=i-t.resultMatrix.tx)*m+(y=a-t.resultMatrix.ty)*y,D=Math.sqrt(v);if(c+g<=D||D+c<=g||D+g<=c){var M=NaN;p=d+(M=c+g<=D?1:-1)*(i-d)*g/D,f=_+M*(a-_)*g/D}else{var I=(x-u+v)/(2*v),b=Math.sqrt(x-I*I*v)/D,N=d+m*I,T=_+y*I,A=-y*b,C=m*b;f=0<s?(p=N-A,T-C):(p=N+A,T+C)}n=p,h=f,this.isDebug&&(this._sp||(this._sp=new rt,st.stage.addChild(this._sp)),this._sp.graphics.clear(),this._sp.graphics.drawCircle(d,_,15,"#ff00ff"),this._sp.graphics.drawCircle(i,a,15,"#ffff00"),this._sp.graphics.drawCircle(n,h,15,"#ff00ff"));var w,S;w=Math.atan2(h-t.resultMatrix.ty,n-t.resultMatrix.tx),t.setRotation(w),(S=at._tempMatrix).identity(),S.rotate(w),S.scale(t.resultMatrix.getScaleX(),t.resultMatrix.getScaleY()),S.translate(t.resultMatrix.tx,t.resultMatrix.ty),S.copyTo(t.resultMatrix),t.updateChild();var F,k;F=Math.atan2(a-h,i-n),e.setRotation(F),(k=at._tempMatrix).identity(),k.rotate(F),k.scale(e.resultMatrix.getScaleX(),e.resultMatrix.getScaleY()),k.translate(n,h),S.copyTo(e.resultMatrix),e.updateChild()}},i(at,["radDeg",function(){return this.radDeg=180/Math.PI},"degRad",function(){return this.degRad=Math.PI/180},"_tempMatrix",function(){return this._tempMatrix=new St}]),at}(),Et=function(){function t(){this.name=null,this.targetBoneName=null,this.bendDirection=1,this.mix=1,this.isSpine=!0,this.targetBoneIndex=-1,this.boneNames=[],this.boneIndexs=[]}return n(t,"laya.ani.bone.IkConstraintData"),t}(),N=function(){function _(){}return n(_,"laya.ani.bone.MeshTools"),_.findEdge=function(t,e,i){void 0===e&&(e=0),void 0===i&&(i=!0);var a,s=0,r=0;for(a=t.length,r=-1,s=0;s<a;s+=2)(r<0||i==t[r+e]<t[s+e])&&(r=s);return r},_.findBestTriangle=function(t){var e;e=_.findEdge(t,1,!0);var i;i=_.findEdge(t,1,!1);var a;a=_.findEdge(t,0,!0);var s,r;return s=_.findEdge(t,0,!1),(r=_._bestTriangle).length=0,r.push(a,s),r.indexOf(e)<0&&r.push(e),r.indexOf(i)<0&&r.push(i),r},_.solveMesh=function(t,e){var i,a,s,r;(e=e||[]).length=0,i=t.uvs,a=t.vertices;var n,h,l;return n=(r=_.findBestTriangle(i))[0],h=r[1],l=r[2],_._absArr.length=0,_.isNormalUV(t.texture.uv)&&_.adptTexture(t),s=_.solvePoints(t.texture.uv,i[n],i[n+1],i[h]-i[n],i[h+1]-i[n+1],i[l]-i[n],i[l+1]-i[n+1],_._absArr),_.transPoints(s,a[n],a[n+1],a[h]-a[n],a[h+1]-a[n+1],a[l]-a[n],a[l+1]-a[n+1],e)},_.findWrapRect=function(t){var e;e=_.findEdge(t,1,!0);var i;i=_.findEdge(t,1,!1);var a;a=_.findEdge(t,0,!0);var s;s=_.findEdge(t,0,!1);var r;r=t[a];var n;n=t[s];var h;h=t[e+1];var l;return[n,l=t[i+1],r-n,h-l]},_.adptTexture=function(t){var e,i,a;e=_.findWrapRect(t.uvs);var s=(i=t.texture).width,r=i.height;a=Ft.create(i,e[0]*s,e[1]*r,e[2]*s,e[3]*r),t.texture=a},_.isNormalUV=function(t){return 0==t[0]&&0==t[1]&&1==t[4]&&1==t[5]},_.solvePoints=function(t,e,i,a,s,r,n,h){h=h||[];var l,o,u=0;for(l=t.length,u=0;u<l;u+=2)o=_.solve2(t[u],t[u+1],e,i,a,s,r,n),h.push(o[0],o[1]);return h},_.transPoints=function(t,e,i,a,s,r,n,h){h=h||[];var l,o=0;for(l=t.length,o=0;o<l;o+=2)_.transPoint(t[o],t[o+1],e,i,a,s,r,n,h);return h},_.transPoint=function(t,e,i,a,s,r,n,h,l){var o,u;return o=i+s*t+n*e,u=a+r*t+h*e,(l=l||[]).push(o,u),l},_.solve2=function(t,e,i,a,s,r,n,h,l,o){void 0===l&&(l=!1),o=o||[];var u,c;if(0==s)return _.solve2(t,e,i,a,n,h,s,r,!0,o);var d;return u=((d=t-i)-(c=(e-a-d*r/s)/(h-n*r/s))*n)/s,l?o.push(c,u):o.push(u,c),o},_.solve=function(t,e,i,a){return _.solve2(t.x,t.y,e.x,e.y,i.x,i.y,a.x,a.y)},_._bestTriangle=[],_._absArr=[],_}(),T=function(){function k(t,e){this.target=null,this.data=null,this.bones=null,this.position=NaN,this.spacing=NaN,this.rotateMix=NaN,this.translateMix=NaN,this._debugKey=!1,this._spaces=null,this._segments=[],this._curves=[],this.data=t,this.position=t.position,this.spacing=t.spacing,this.rotateMix=t.rotateMix,this.translateMix=t.translateMix,this.bones=[];for(var i=this.data.bones,a=0,s=i.length;a<s;a++)this.bones.push(e[i[a]])}n(k,"laya.ani.bone.PathConstraint");var t=k.prototype;return t.apply=function(t,e){if(this.target){var i=this.translateMix,a=this.translateMix,s=0<a,r=this.data.spacingMode,n="length"==r,h=this.data.rotateMode,l="tangent"==h,o="chainScale"==h,u=[],c=this.bones.length,d=l?c:c+1,_=[];(this._spaces=_)[0]=this.position;var p=this.spacing;if(o||n)for(var f=0,m=d-1;f<m;){var y=this.bones[f],x=y.length,g=x*y.resultMatrix.a,v=x*y.resultMatrix.b;x=Math.sqrt(g*g+v*v),o&&(u[f]=x),_[++f]=n?Math.max(0,x+p):p}else for(f=1;f<d;f++)_[f]=p;var D=this.computeWorldPositions(this.target,t,e,d,l,"percent"==this.data.positionMode,"percent"==r);if(this._debugKey){for(f=0;f<D.length;f++)e.drawCircle(D[f++],D[f++],5,"#00ff00");var M=[];for(f=0;f<D.length;f++)M.push(D[f++],D[f++]);e.drawLines(0,0,M,"#ff0000")}var I=D[0],b=D[1],N=this.data.offsetRotation,T="chain"==h&&0==N,A=NaN;for(f=0,A=3;f<c;f++,A+=3){(y=this.bones[f]).resultMatrix.tx+=(I-y.resultMatrix.tx)*i,y.resultMatrix.ty+=(b-y.resultMatrix.ty)*i;var C=(g=D[A])-I,w=(v=D[A+1])-b;if(o&&0!=(x=u[f])){var S=(Math.sqrt(C*C+w*w)/x-1)*a+1;y.resultMatrix.a*=S,y.resultMatrix.c*=S}if(I=g,b=v,s){var F=y.resultMatrix.a,k=y.resultMatrix.c,P=y.resultMatrix.b,B=y.resultMatrix.d,U=NaN,L=NaN,R=NaN;U=l?D[A-1]:0==_[f+1]?D[A+2]:Math.atan2(w,C),U-=Math.atan2(P,F)-N/180*Math.PI,T&&(L=Math.cos(U),R=Math.sin(U),I+=((x=y.length)*(L*F-R*P)-C)*a,b+=(x*(R*F+L*P)-w)*a),U>Math.PI?U-=2*Math.PI:U<-Math.PI&&(U+=2*Math.PI),U*=a,L=Math.cos(U),R=Math.sin(U),y.resultMatrix.a=L*F-R*P,y.resultMatrix.c=L*k-R*B,y.resultMatrix.b=R*F+L*P,y.resultMatrix.d=R*k+L*B}}}},t.computeWorldVertices2=function(t,e,i,a,s,r){var n,h,l=t.currDisplayData.bones,o=t.currDisplayData.weights,u=t.currDisplayData.triangles,c=0,d=0,_=0,p=0,f=0,m=0,y=0,x=0,g=0,v=0,D=0;if(null!=l){for(c=0;c<i;c+=2)d+=(p=l[d])+1,_+=p;var M=e;for(f=r,m=3*_;f<a;f+=2){for(x=y=0,p=l[d++],p+=d;d<p;d++,m+=3){n=M[l[d]].resultMatrix,g=o[m],v=o[m+1];var I=o[m+2];y+=(g*n.a+v*n.c+n.tx)*I,x+=(g*n.b+v*n.d+n.ty)*I}s[f]=y,s[f+1]=x}}else{var b,N;if(u||(u=o),t.deformData&&(u=t.deformData),b=t.parent,e)for(D=e.length,c=0;c<D;c++)if(e[c].name==b){h=e[c];break}h&&(N=h.resultMatrix),N||(N=k._tempMt);var T=N.tx,A=N.ty,C=N.a,w=N.b,S=N.c,F=N.d;for(h&&(F*=h.d),d=i,f=r;f<a;d+=2,f+=2)g=u[d],v=u[d+1],s[f]=g*C+v*w+T,s[f+1]=-(g*S+v*F+A)}},t.computeWorldPositions=function(t,e,i,a,s,r,n){t.currDisplayData.bones,t.currDisplayData.weights,t.currDisplayData.triangles;var h=[],l=0,o=t.currDisplayData.verLen,u=this.position,c=this._spaces,d=[],_=[],p=o/6,f=-1,m=NaN,y=0,x=0,g=NaN,v=NaN,D=NaN,M=NaN;if(p--,o-=4,this.computeWorldVertices2(t,e,2,o,h,0),this._debugKey)for(l=0;l<h.length;)i.drawCircle(h[l++],h[l++],10,"#ff0000");d=h,this._curves.length=p;var I=this._curves,b=d[m=0],N=d[1],T=0,A=0,C=0,w=0,S=0,F=0,k=NaN,P=NaN,B=NaN,U=NaN,L=NaN,R=NaN,O=NaN,E=NaN,K=0;for(l=0,K=2;l<p;l++,K+=6)T=d[K],A=d[K+1],C=d[K+2],w=d[K+3],L=2*(k=.1875*(b-2*T+C))+(B=.09375*(3*(T-C)-b+(S=d[K+4]))),R=2*(P=.1875*(N-2*A+w))+(U=.09375*(3*(A-w)-N+(F=d[K+5]))),O=.75*(T-b)+k+.16666667*B,E=.75*(A-N)+P+.16666667*U,m+=Math.sqrt(O*O+E*E),O+=L,E+=R,L+=B,R+=U,m+=Math.sqrt(O*O+E*E),O+=L,E+=R,m+=Math.sqrt(O*O+E*E),O+=L+B,E+=R+U,m+=Math.sqrt(O*O+E*E),I[l]=m,b=S,N=F;if(r&&(u*=m),n)for(l=0;l<a;l++)c[l]*=m;var Y=this._segments,V=0,W=0;for(W=x=y=l=0;l<a;l++,y+=3)if((g=u+=v=c[l])<0)this.addBeforePosition(g,d,0,_,y);else if(m<g)this.addAfterPosition(g-m,d,o-4,_,y);else{for(;;x++)if(!((M=I[x])<g)){0==x?g/=M:g=(g-(D=I[x-1]))/(M-D);break}if(x!=f){var X=6*(f=x);for(b=d[X],N=d[X+1],T=d[X+2],A=d[X+3],C=d[X+4],w=d[X+5],L=2*(k=.03*(b-2*T+C))+(B=.006*(3*(T-C)-b+(S=d[X+6]))),R=2*(P=.03*(N-2*A+w))+(U=.006*(3*(A-w)-N+(F=d[X+7]))),O=.3*(T-b)+k+.16666667*B,E=.3*(A-N)+P+.16666667*U,V=Math.sqrt(O*O+E*E),Y[0]=V,X=1;X<8;X++)O+=L,E+=R,L+=B,R+=U,V+=Math.sqrt(O*O+E*E),Y[X]=V;O+=L,E+=R,V+=Math.sqrt(O*O+E*E),Y[8]=V,O+=L+B,E+=R+U,V+=Math.sqrt(O*O+E*E),Y[9]=V,W=0}for(g*=V;;W++)if(!((M=Y[W])<g)){0==W?g/=M:g=W+(g-(D=Y[W-1]))/(M-D);break}this.addCurvePosition(.1*g,b,N,T,A,C,w,S,F,_,y,s||0<l&&0==v)}return _},t.addBeforePosition=function(t,e,i,a,s){var r=e[i],n=e[i+1],h=e[i+2]-r,l=e[i+3]-n,o=Math.atan2(l,h);a[s]=r+t*Math.cos(o),a[s+1]=n+t*Math.sin(o),a[s+2]=o},t.addAfterPosition=function(t,e,i,a,s){var r=e[i+2],n=e[i+3],h=r-e[i],l=n-e[i+1],o=Math.atan2(l,h);a[s]=r+t*Math.cos(o),a[s+1]=n+t*Math.sin(o),a[s+2]=o},t.addCurvePosition=function(t,e,i,a,s,r,n,h,l,o,u,c){0==t&&(t=1e-4);var d=t*t,_=d*t,p=1-t,f=p*p,m=f*p,y=p*t,x=3*y,g=p*x,v=x*t,D=e*m+a*g+r*v+h*_,M=i*m+s*g+n*v+l*_;o[u]=D,o[u+1]=M,o[u+2]=c?Math.atan2(M-(i*f+s*y*2+n*d),D-(e*f+a*y*2+r*d)):0},k.NONE=-1,k.BEFORE=-2,k.AFTER=-3,i(k,["_tempMt",function(){return this._tempMt=new St}]),k}(),Kt=function(){function t(){this.name=null,this.target=null,this.positionMode=null,this.spacingMode=null,this.rotateMode=null,this.offsetRotation=NaN,this.position=NaN,this.spacing=NaN,this.rotateMix=NaN,this.translateMix=NaN,this.bones=[]}return n(t,"laya.ani.bone.PathConstraintData"),t}(),Yt=function(){function t(){this.name=null,this.slotArr=[]}return n(t,"laya.ani.bone.SkinData"),t}(),Vt=function(){function t(){this.name=null,this.attachmentName=null,this.type=0,this.transform=null,this.width=NaN,this.height=NaN,this.texture=null,this.bones=null,this.uvs=null,this.weights=null,this.triangles=null,this.vertices=null,this.lengths=null,this.verLen=0}n(t,"laya.ani.bone.SkinSlotDisplayData");var e=t.prototype;return e.createTexture=function(t){return this.texture||(this.texture=new Ft(t.bitmap,this.uvs),this.uvs[0]>this.uvs[4]&&this.uvs[1]>this.uvs[5]?(this.texture.width=t.height,this.texture.height=t.width,this.texture.offsetX=-t.offsetX,this.texture.offsetY=-t.offsetY,this.texture.sourceWidth=t.sourceHeight,this.texture.sourceHeight=t.sourceWidth):(this.texture.width=t.width,this.texture.height=t.height,this.texture.offsetX=-t.offsetX,this.texture.offsetY=-t.offsetY,this.texture.sourceWidth=t.sourceWidth,this.texture.sourceHeight=t.sourceHeight),m.isWebGL||this.uvs[1]>this.uvs[5]&&(this.texture.offsetY=this.texture.sourceHeight-this.texture.height-this.texture.offsetY)),this.texture},e.destory=function(){this.texture&&this.texture.destroy()},t}(),Wt=function(){function t(){this.name=null,this.displayArr=[]}return n(t,"laya.ani.bone.SlotData"),t.prototype.getDisplayByName=function(t){for(var e=0,i=this.displayArr.length;e<i;e++)if(this.displayArr[e].attachmentName==t)return e;return-1},t}(),A=function(){function t(t,e){this._data=null,this._bones=null,this.target=null,this.rotateMix=NaN,this.translateMix=NaN,this.scaleMix=NaN,this.shearMix=NaN,this._temp=f(2,0),this._data=t,null==this._bones&&(this._bones=[]),this.target=e[t.targetIndex];var i,a=0;for(a=0,i=t.boneIndexs.length;a<i;a++)this._bones.push(e[t.boneIndexs[a]]);this.rotateMix=t.rotateMix,this.translateMix=t.translateMix,this.scaleMix=t.scaleMix,this.shearMix=t.shearMix}return n(t,"laya.ani.bone.TfConstraint"),t.prototype.apply=function(){for(var t,e=this.target.resultMatrix.a,i=this.target.resultMatrix.b,a=this.target.resultMatrix.c,s=this.target.resultMatrix.d,r=0,n=this._bones.length;r<n;r++){if(t=this._bones[r],0<this.rotateMix){var h=t.resultMatrix.a,l=t.resultMatrix.b,o=t.resultMatrix.c,u=t.resultMatrix.d,c=Math.atan2(a,e)-Math.atan2(o,h)+this._data.offsetRotation*Math.PI/180;c>Math.PI?c-=2*Math.PI:c<-Math.PI&&(c+=2*Math.PI),c*=this.rotateMix;var d=Math.cos(c),_=Math.sin(c);t.resultMatrix.a=d*h-_*o,t.resultMatrix.b=d*l-_*u,t.resultMatrix.c=_*h+d*o,t.resultMatrix.d=_*l+d*u}if(this.translateMix&&(this._temp[0]=this._data.offsetX,this._temp[1]=this._data.offsetY,this.target.localToWorld(this._temp),t.resultMatrix.tx+=(this._temp[0]-t.resultMatrix.tx)*this.translateMix,t.resultMatrix.ty+=(this._temp[1]-t.resultMatrix.ty)*this.translateMix,t.updateChild()),0<this.scaleMix){var p=Math.sqrt(t.resultMatrix.a*t.resultMatrix.a+t.resultMatrix.c*t.resultMatrix.c),f=Math.sqrt(e*e+a*a),m=1e-5<p?(p+(f-p+this._data.offsetScaleX)*this.scaleMix)/p:0;t.resultMatrix.a*=m,t.resultMatrix.c*=m,p=Math.sqrt(t.resultMatrix.b*t.resultMatrix.b+t.resultMatrix.d*t.resultMatrix.d),f=Math.sqrt(i*i+s*s),m=1e-5<p?(p+(f-p+this._data.offsetScaleY)*this.scaleMix)/p:0,t.resultMatrix.b*=m,t.resultMatrix.d*=m}if(0<this.shearMix){l=t.resultMatrix.b,u=t.resultMatrix.d;var y=Math.atan2(u,l);(c=Math.atan2(s,i)-Math.atan2(a,e)-(y-Math.atan2(t.resultMatrix.c,t.resultMatrix.a)))>Math.PI?c-=2*Math.PI:c<-Math.PI&&(c+=2*Math.PI),c=y+(c+this._data.offsetShearY*Math.PI/180)*this.shearMix,m=Math.sqrt(l*l+u*u),t.resultMatrix.b=Math.cos(c)*m,t.resultMatrix.d=Math.sin(c)*m}}},t}(),Xt=function(){function t(){this.name=null,this.targetIndex=0,this.rotateMix=NaN,this.translateMix=NaN,this.scaleMix=NaN,this.shearMix=NaN,this.offsetRotation=NaN,this.offsetX=NaN,this.offsetY=NaN,this.offsetScaleX=NaN,this.offsetScaleY=NaN,this.offsetShearY=NaN,this.boneIndexs=[]}return n(t,"laya.ani.bone.TfConstraintData"),t}(),zt=function(){function t(){this.skX=0,this.skY=0,this.scX=1,this.scY=1,this.x=0,this.y=0,this.skewX=0,this.skewY=0,this.mMatrix=null}n(t,"laya.ani.bone.Transform");var e=t.prototype;return e.initData=function(t){null!=t.x&&(this.x=t.x),null!=t.y&&(this.y=t.y),null!=t.skX&&(this.skX=t.skX),null!=t.skY&&(this.skY=t.skY),null!=t.scX&&(this.scX=t.scX),null!=t.scY&&(this.scY=t.scY)},e.getMatrix=function(){var t;return(t=this.mMatrix?this.mMatrix:this.mMatrix=new St).identity(),t.scale(this.scX,this.scY),(this.skewX||this.skewY)&&this.skew(t,this.skewX*Math.PI/180,this.skewY*Math.PI/180),t.rotate(this.skX*Math.PI/180),t.translate(this.x,this.y),t},e.skew=function(t,e,i){var a=Math.sin(i),s=Math.cos(i),r=Math.sin(e),n=Math.cos(e);return t.setTo(t.a*n-t.b*a,t.a*r+t.b*s,t.c*n-t.d*a,t.c*r+t.d*s,t.tx*n-t.ty*a,t.tx*r+t.ty*s),t},t}(),C=function(){function t(){}return n(t,"laya.ani.bone.UVTools"),t.getRelativeUV=function(t,e,i){var a=t[0],s=t[2]-t[0],r=t[1],n=t[5]-t[1];i||(i=[]),i.length=e.length;var h,l=0;h=i.length;var o=1/s,u=1/n;for(l=0;l<h;l+=2)i[l]=(e[l]-a)*o,i[l+1]=(e[l+1]-r)*u;return i},t.getAbsoluteUV=function(t,e,i){if(0==t[0]&&0==t[1]&&1==t[4]&&1==t[5])return i?(g.copyArray(i,e),i):e;var a=t[0],s=t[2]-t[0],r=t[1],n=t[5]-t[1];i||(i=[]),i.length=e.length;var h,l=0;for(h=i.length,l=0;l<h;l+=2)i[l]=e[l]*s+a,i[l+1]=e[l+1]*n+r;return i},t}(),k=function(){function t(){this.startTime=NaN,this.duration=NaN,this.interpolationData=null,this.data=null,this.nextData=null}return n(t,"laya.ani.KeyFramesContent"),t}(),w=function(){function u(){}return n(u,"laya.ani.math.BezierLerp"),u.getBezierRate=function(t,e,i,a,s){var r=u._getBezierParamKey(e,i,a,s),n=100*r+t;if(u._bezierResultCache[n])return u._bezierResultCache[n];var h,l=u._getBezierPoints(e,i,a,s,r),o=0;for(h=l.length,o=0;o<h;o+=2)if(t<=l[o])return u._bezierResultCache[n]=l[o+1],l[o+1];return u._bezierResultCache[n]=1},u._getBezierParamKey=function(t,e,i,a){return 100*(100*(100*(100*t+e)+i)+a)},u._getBezierPoints=function(t,e,i,a,s){return u._bezierPointsCache[s]?u._bezierPointsCache[s]:(r=[0,0,t,e,i,a,1,1],n=(new h).getBezierPoints(r,100,3),u._bezierPointsCache[s]=n);var r,n},u._bezierResultCache={},u._bezierPointsCache={},u}(),P=function(t){function e(){this._destroyed=!1,this._templet=null,this._currentTime=NaN,this._currentFrameTime=NaN,this._playStart=NaN,this._playEnd=NaN,this._playDuration=NaN,this._overallDuration=NaN,this._stopWhenCircleFinish=!1,this._elapsedPlaybackTime=NaN,this._startUpdateLoopCount=NaN,this._currentAnimationClipIndex=0,this._currentKeyframeIndex=0,this._paused=!1,this._cacheFrameRate=0,this._cacheFrameRateInterval=NaN,this._cachePlayRate=NaN,this._fullFrames=null,this.isCache=!0,this.playbackRate=1,this.returnToZeroStopped=!1,e.__super.call(this),this._destroyed=!1,this._currentAnimationClipIndex=-1,this._currentKeyframeIndex=-1,this._currentTime=0,this._overallDuration=Number.MAX_VALUE,this._stopWhenCircleFinish=!1,this._elapsedPlaybackTime=0,this._startUpdateLoopCount=-1,this._cachePlayRate=1,this.cacheFrameRate=60,this.returnToZeroStopped=!1}n(e,"laya.ani.AnimationPlayer",s);var i=e.prototype;return st.imps(i,{"laya.resource.IDestroy":!0}),i._onTempletLoadedComputeFullKeyframeIndices=function(t,e,i){this._templet===i&&this._cachePlayRate===t&&this._cacheFrameRate===e&&this._computeFullKeyframeIndices()},i._computeFullKeyframeIndices=function(){for(var t=this._fullFrames=[],e=this._templet,i=this._cacheFrameRateInterval*this._cachePlayRate,a=0,s=e.getAnimationCount();a<s;a++){for(var r=[],n=0,h=e.getAnimation(a).nodes.length;n<h;n++){for(var l=e.getAnimation(a).nodes[n],o=Math.floor(l.playTime/i+.01),u=new Uint16Array(o+1),c=-1,d=0,_=l.keyFrame.length;d<_;d++){var p=l.keyFrame[d],f=p.startTime,m=f+p.duration+i;do{for(var y=Math.floor(f/i+.5),x=c+1;x<y;x++)u[x]=d;u[c=y]=d,f+=i}while(f<=m)}r.push(u)}t.push(r)}},i._onAnimationTempletLoaded=function(){this.destroyed||this._calculatePlayDuration()},i._calculatePlayDuration=function(){if(0!==this.state){var t=this._templet.getAniDuration(this._currentAnimationClipIndex);0===this._playEnd&&(this._playEnd=t),this._playEnd>t&&(this._playEnd=t),this._playDuration=this._playEnd-this._playStart}},i._setPlayParams=function(t,e){this._currentTime=t,this._currentKeyframeIndex=Math.max(Math.floor(this.currentPlayTime/e+.01),0),this._currentFrameTime=this._currentKeyframeIndex*e},i._setPlayParamsWhenStop=function(t,e){this._currentTime=t,this._currentKeyframeIndex=Math.max(Math.floor(t/e+.01),0),this._currentFrameTime=this._currentKeyframeIndex*e,this._currentAnimationClipIndex=-1},i._update=function(t){if(-1!==this._currentAnimationClipIndex&&!this._paused&&this._templet&&this._templet.loaded){var e=this._cacheFrameRateInterval*this._cachePlayRate,i=0;this._startUpdateLoopCount!==x.loopCount&&(i=t*this.playbackRate,this._elapsedPlaybackTime+=i);var a=this.playDuration;if(0!==this._overallDuration&&this._elapsedPlaybackTime>=this._overallDuration||0===this._overallDuration&&this._elapsedPlaybackTime>=a)return this._setPlayParamsWhenStop(a,e),void this.event("stopped");if(i+=this._currentTime,0<a)if(a<=i)do{if(i-=a,this._stopWhenCircleFinish)return this._setPlayParamsWhenStop(a,e),this._stopWhenCircleFinish=!1,void this.event("stopped");i<a&&(this._setPlayParams(i,e),this.event("complete"))}while(a<=i);else this._setPlayParams(i,e);else{if(this._stopWhenCircleFinish)return this._setPlayParamsWhenStop(a,e),this._stopWhenCircleFinish=!1,void this.event("stopped");this._currentTime=this._currentFrameTime=this._currentKeyframeIndex=0,this.event("complete")}}},i._destroy=function(){this.offAll(),this._templet=null,this._fullFrames=null,this._destroyed=!0},i.play=function(t,e,i,a,s){if(void 0===t&&(t=0),void 0===e&&(e=1),void 0===i&&(i=2147483647),void 0===a&&(a=0),void 0===s&&(s=0),!this._templet)throw new Error("AnimationPlayer:templet must not be null,maybe you need to set url.");if(i<0||a<0||s<0)throw new Error("AnimationPlayer:overallDuration,playStart and playEnd must large than zero.");if(0!==s&&s<a)throw new Error("AnimationPlayer:start must less than end.");this._currentTime=0,this._currentFrameTime=0,this._elapsedPlaybackTime=0,this.playbackRate=e,this._overallDuration=i,this._playStart=a,this._playEnd=s,this._paused=!1,this._currentAnimationClipIndex=t,this._currentKeyframeIndex=0,this._startUpdateLoopCount=x.loopCount,this.event("played"),this._templet.loaded?this._calculatePlayDuration():this._templet.once("loaded",this,this._onAnimationTempletLoaded),this._update(0)},i.playByFrame=function(t,e,i,a,s,r){void 0===t&&(t=0),void 0===e&&(e=1),void 0===i&&(i=2147483647),void 0===a&&(a=0),void 0===s&&(s=0),void 0===r&&(r=30);var n=1e3/r;this.play(t,e,i,a*n,s*n)},i.stop=function(t){void 0===t&&(t=!0),t?(this._currentTime=this._currentFrameTime=this._currentKeyframeIndex=0,this._currentAnimationClipIndex=-1,this.event("stopped")):this._stopWhenCircleFinish=!0},a(0,i,"playEnd",function(){return this._playEnd}),a(0,i,"templet",function(){return this._templet},function(t){0===!this.state&&this.stop(!0),this._templet!==t&&((this._templet=t).loaded?this._computeFullKeyframeIndices():t.once("loaded",this,this._onTempletLoadedComputeFullKeyframeIndices,[this._cachePlayRate,this._cacheFrameRate]))}),a(0,i,"playStart",function(){return this._playStart}),a(0,i,"playDuration",function(){return this._playDuration}),a(0,i,"state",function(){return-1===this._currentAnimationClipIndex?0:this._paused?1:2}),a(0,i,"currentKeyframeIndex",function(){return this._currentKeyframeIndex}),a(0,i,"overallDuration",function(){return this._overallDuration}),a(0,i,"currentFrameTime",function(){return this._currentFrameTime}),a(0,i,"currentAnimationClipIndex",function(){return this._currentAnimationClipIndex}),a(0,i,"currentPlayTime",function(){return this._currentTime+this._playStart}),a(0,i,"cachePlayRate",function(){return this._cachePlayRate},function(t){this._cachePlayRate!==t&&(this._cachePlayRate=t,this._templet&&(this._templet.loaded?this._computeFullKeyframeIndices():this._templet.once("loaded",this,this._onTempletLoadedComputeFullKeyframeIndices,[t,this._cacheFrameRate])))}),a(0,i,"cacheFrameRate",function(){return this._cacheFrameRate},function(t){this._cacheFrameRate!==t&&(this._cacheFrameRate=t,this._cacheFrameRateInterval=1e3/this._cacheFrameRate,this._templet&&(this._templet.loaded?this._computeFullKeyframeIndices():this._templet.once("loaded",this,this._onTempletLoadedComputeFullKeyframeIndices,[this._cachePlayRate,t])))}),a(0,i,"currentTime",null,function(t){if(-1!==this._currentAnimationClipIndex&&this._templet&&this._templet.loaded){if(t<this._playStart||t>this._playEnd)throw new Error("AnimationPlayer:value must large than playStartTime,small than playEndTime.");this._startUpdateLoopCount=x.loopCount;var e=this._cacheFrameRateInterval*this._cachePlayRate;this._currentTime=t,this._currentKeyframeIndex=Math.max(Math.floor(this.currentPlayTime/e),0),this._currentFrameTime=this._currentKeyframeIndex*e}}),a(0,i,"paused",function(){return this._paused},function(t){(this._paused=t)&&this.event("paused")}),a(0,i,"cacheFrameRateInterval",function(){return this._cacheFrameRateInterval}),a(0,i,"destroyed",function(){return this._destroyed}),e}(),B=function(t){function e(){e.__super.call(this),m.isConchNode&&(this.drawSkin=function(t){t.transform||(t.transform=St.EMPTY),this._addCmd([t]),this.setSkinMesh&&this.setSkinMesh(t._ps,t.mVBData,t.mEleNum,0,t.mTexture,t.transform)})}return n(e,"laya.ani.GraphicsAni",r),e.prototype.drawSkin=function(t){var e=[t];this._saveToCmd(m._context._drawSkin,e)},e.create=function(){return e._caches.pop()||new e},e.recycle=function(t){t.clear(),e._caches.push(t)},e._caches=[],e}(),U=function(t){function a(){a.__super.call(this),this.mesh=new I}n(a,"laya.ani.bone.canvasmesh.SkinMeshCanvas",M);var e=a.prototype;return e.init2=function(t,e,i,a,s){var r;this.transform&&(this.transform=null),i?r=i:(r=[]).push(0,1,3,3,1,2),this.mesh.texture=t,this.mesh.indexes=r,this.mesh.vertices=a,this.mesh.uvs=s},e.render=function(t,e,i){this.mesh.texture&&(this.transform?(this.transform.translate(e,i),this.renderToContext(t),this.transform.translate(-e,-i)):(this.transform=a._tempMatrix,this.transform.identity(),this.transform.translate(e,i),this.renderToContext(t),this.transform.translate(-e,-i),this.transform=null))},i(a,["_tempMatrix",function(){return this._tempMatrix=new St}]),a}(),L=function(t){function x(){this._aniMap={},this.unfixedLastAniIndex=-1,x.__super.call(this),this._anis=new Array}n(x,"laya.ani.AnimationTemplet",p);var e=x.prototype;return e.parse=function(t){var e=new wt(t);this._aniVersion=e.readUTFString(),v.parse(this,e)},e._calculateKeyFrame=function(t,e,i){var a=t.keyFrame;a[e]=a[0];for(var s=0;s<e;s++){var r=a[s];r.nextData=0===r.duration?r.data:a[s+1].data}a.length--},e.onAsynLoaded=function(t,e,i){var a=new wt(e);switch(this._aniVersion=a.readUTFString(),this._aniVersion){case"LAYAANIMATION:02":D.parse(this,a);break;default:v.parse(this,a)}this._endLoaded()},e.disposeResource=function(){this._aniVersion=null,this._anis=null,this._aniMap=null,this._publicExtData=null,this.unfixedCurrentFrameIndexes=null,this.unfixedCurrentTimes=null,this.unfixedKeyframes=null,this._aniClassName=null,this._animationDatasCache=null},e.getAnimationCount=function(){return this._anis.length},e.getAnimation=function(t){return this._anis[t]},e.getAniDuration=function(t){return this._anis[t].playTime},e.getNodes=function(t){return this._anis[t].nodes},e.getNodeIndexWithName=function(t,e){return this._anis[t].bone3DMap[e]},e.getNodeCount=function(t){return this._anis[t].nodes.length},e.getTotalkeyframesLength=function(t){return this._anis[t].totalKeyframeDatasLength},e.getPublicExtData=function(){return this._publicExtData},e.getAnimationDataWithCache=function(t,e,i,a){var s=e[i];if(s){var r=s[t];return r?r[a]:null}return null},e.setAnimationDataWithCache=function(t,e,i,a,s){var r=e[i]||(e[i]={});(r[t]||(r[t]=[]))[a]=s},e.getOriginalData=function(t,e,i,a,s){for(var r=this._anis[t].nodes,n=0,h=0,l=r.length,o=0;h<l;h++){var u,c=r[h];u=c.keyFrame[i[h][a]],c.dataOffset=o;var d=s-u.startTime,_=c.lerpType;if(_)switch(_){case 0:case 1:for(n=0;n<c.keyframeWidth;)n+=c.interpolationMethod[n](c,n,e,o+n,u.data,d,null,u.duration,u.nextData);break;case 2:var p=u.interpolationData,f=p.length,m=0;for(n=0;n<f;){var y=p[n];switch(y){case 6:case 7:n+=x.interpolation[y](c,m,e,o+m,u.data,d,null,u.duration,u.nextData,p,n+1);break;default:n+=x.interpolation[y](c,m,e,o+m,u.data,d,null,u.duration,u.nextData)}m++}}else for(n=0;n<c.keyframeWidth;)n+=c.interpolationMethod[n](c,n,e,o+n,u.data,d,null,u.duration,u.nextData);o+=c.keyframeWidth}},e.getNodesCurrentFrameIndex=function(t,e){var i=this._anis[t].nodes;t!==this.unfixedLastAniIndex&&(this.unfixedCurrentFrameIndexes=new Uint32Array(i.length),this.unfixedCurrentTimes=new Float32Array(i.length),this.unfixedLastAniIndex=t);for(var a=0,s=i.length;a<s;a++){var r=i[a];for(e<this.unfixedCurrentTimes[a]&&(this.unfixedCurrentFrameIndexes[a]=0),this.unfixedCurrentTimes[a]=e;this.unfixedCurrentFrameIndexes[a]<r.keyFrame.length&&!(r.keyFrame[this.unfixedCurrentFrameIndexes[a]].startTime>this.unfixedCurrentTimes[a]);)this.unfixedCurrentFrameIndexes[a]++;this.unfixedCurrentFrameIndexes[a]--}return this.unfixedCurrentFrameIndexes},e.getOriginalDataUnfixedRate=function(t,e,i){var a=this._anis[t].nodes;t!==this.unfixedLastAniIndex&&(this.unfixedCurrentFrameIndexes=new Uint32Array(a.length),this.unfixedCurrentTimes=new Float32Array(a.length),this.unfixedKeyframes=f(a.length),this.unfixedLastAniIndex=t);for(var s=0,r=0,n=a.length,h=0;r<n;r++){var l=a[r];for(i<this.unfixedCurrentTimes[r]&&(this.unfixedCurrentFrameIndexes[r]=0),this.unfixedCurrentTimes[r]=i;this.unfixedCurrentFrameIndexes[r]<l.keyFrame.length&&!(l.keyFrame[this.unfixedCurrentFrameIndexes[r]].startTime>this.unfixedCurrentTimes[r]);)this.unfixedKeyframes[r]=l.keyFrame[this.unfixedCurrentFrameIndexes[r]],this.unfixedCurrentFrameIndexes[r]++;var o=this.unfixedKeyframes[r];l.dataOffset=h;var u=i-o.startTime;if(l.lerpType)switch(l.lerpType){case 0:case 1:for(s=0;s<l.keyframeWidth;)s+=l.interpolationMethod[s](l,s,e,h+s,o.data,u,null,o.duration,o.nextData);break;case 2:var c=o.interpolationData,d=c.length,_=0;for(s=0;s<d;){var p=c[s];switch(p){case 6:case 7:s+=x.interpolation[p](l,_,e,h+_,o.data,u,null,o.duration,o.nextData,c,s+1);break;default:s+=x.interpolation[p](l,_,e,h+_,o.data,u,null,o.duration,o.nextData)}_++}}else for(s=0;s<l.keyframeWidth;)s+=l.interpolationMethod[s](l,s,e,h+s,o.data,u,null,o.duration,o.nextData);h+=l.keyframeWidth}},x._LinearInterpolation_0=function(t,e,i,a,s,r,n,h,l,o){var u=0===h?0:r/h;return i[a]=(1-u)*s[e]+u*l[e],1},x._QuaternionInterpolation_1=function(t,e,i,a,s,r,n,h,l,o){var u=0===h?0:r/h;return d.slerpQuaternionArray(s,e,l,e,u,i,a),4},x._AngleInterpolation_2=function(t,e,i,a,s,r,n,h,l,o){return 0},x._RadiansInterpolation_3=function(t,e,i,a,s,r,n,h,l,o){return 0},x._Matrix4x4Interpolation_4=function(t,e,i,a,s,r,n,h,l,o){for(var u=0;u<16;u++,e++)i[a+u]=s[e]+r*n[e];return 16},x._NoInterpolation_5=function(t,e,i,a,s,r,n,h,l,o){return i[a]=s[e],1},x._BezierInterpolation_6=function(t,e,i,a,s,r,n,h,l,o,u){return void 0===u&&(u=0),i[a]=s[e]+(l[e]-s[e])*w.getBezierRate(r/h,o[u],o[u+1],o[u+2],o[u+3]),5},x._BezierInterpolation_7=function(t,e,i,a,s,r,n,h,l,o,u){return void 0===u&&(u=0),i[a]=o[u+4]+o[u+5]*w.getBezierRate((.001*r+o[u+6])/o[u+7],o[u],o[u+1],o[u+2],o[u+3]),9},x.load=function(t){return st.loader.create(t,null,null,x)},x.interpolation=[x._LinearInterpolation_0,x._QuaternionInterpolation_1,x._AngleInterpolation_2,x._RadiansInterpolation_3,x._Matrix4x4Interpolation_4,x._NoInterpolation_5,x._BezierInterpolation_6,x._BezierInterpolation_7],x}(),R=(function(t){function a(){this.isCached=!1,this.canvas=null,this.tex=null,this.rec=null,a.__super.call(this)}n(a,"laya.ani.bone.canvasmesh.CacheAbleSkinMesh",U);var e=a.prototype;e.getCanvasPic=function(){var t,e=new l("2D"),i=e.getContext("2d");return this.rec=this.mesh.getBounds(),e.size(this.rec.width,this.rec.height),t=this.transform,this.transform=a.tempMt,this.transform.identity(),this.transform.translate(-this.rec.x,-this.rec.y),this.renderToContext(i),this.transform.translate(+this.rec.x,+this.rec.y),this.transform=t,new Ft(e)},e.render=function(t,e,i){this.mesh.texture&&(this.isCached||(this.isCached=!0,this.tex=this.getCanvasPic()),this.transform?(this.transform.translate(e,i),this._renderTextureToContext(t),this.transform.translate(-e,-i)):(this.transform=U._tempMatrix,this.transform.identity(),this.transform.translate(e,i),this._renderTextureToContext(t),this.transform.translate(-e,-i),this.transform=null))},e._renderTextureToContext=function(t){var e;if(this.context=t.ctx||t,t.save(),e=this.tex,this.transform){var i=this.transform;t.transform(i.a,i.b,i.c,i.d,i.tx,i.ty)}this.rec=this.mesh.getBounds(),t.translate(this.rec.x,this.rec.y),t.drawTexture(e,0,0,e.width,e.height,0,0),t.restore()},i(a,["tempMt",function(){return this.tempMt=new St}])}(),function(r){function t(){this.cacheOK=!1,this.cacheCmdOK=!1,this.transformCmds=[],this.drawCmds=[],t.__super.call(this),this.tempMesh=new I}n(t,"laya.ani.bone.canvasmesh.SimpleSkinMeshCanvas",r);var e=t.prototype;return e.init2=function(t,e,i,a,s){r.prototype.init2.call(this,t,e,i,a,s),this.cacheOK=!1,this.cacheCmdOK=!1,this.transformCmds.length=6,this.drawCmds.length=9},e.renderToContext=function(t){if(this.context=t.ctx||t,this.mesh){if(this.mesh.uvs.length<=8)return void(0==this.mode?this._renderWithIndexes(this.mesh):this._renderNoIndexes(this.mesh));this.cacheOK||(this.tempMesh.texture=this.mesh.texture,this.tempMesh.uvs=this.mesh.texture.uv,this.tempMesh.vertices=N.solveMesh(this.mesh,this.tempMesh.vertices),this.cacheOK=!0),0==this.mode?this._renderWithIndexes(this.tempMesh):this._renderNoIndexes(this.tempMesh)}},e._renderWithIndexes=function(t){if(this.cacheCmdOK)this.renderByCache(t);else{var e=t.indexes,i=0,a=e.length;for(1<a&&(a=1),i=0;i<a;i+=3){var s=2*e[i],r=2*e[i+1],n=2*e[i+2];this._renderDrawTriangle(t,s,r,n)}this.cacheCmdOK=!0}},e._renderDrawTriangle=function(t,e,i,a){var s=this.context,r=t.uvs,n=t.vertices,h=t.texture,l=h.bitmap,o=l.source,u=h.width,c=h.height,d=l.width,_=l.height,p=NaN,f=NaN,m=NaN,y=NaN,x=NaN,g=NaN;if(t.useUvTransform){var v=t.uvTransform;p=(r[e]*v.a+r[e+1]*v.c+v.tx)*d,f=(r[i]*v.a+r[i+1]*v.c+v.tx)*d,m=(r[a]*v.a+r[a+1]*v.c+v.tx)*d,y=(r[e]*v.b+r[e+1]*v.d+v.ty)*_,x=(r[i]*v.b+r[i+1]*v.d+v.ty)*_,g=(r[a]*v.b+r[a+1]*v.d+v.ty)*_}else p=r[e]*d,f=r[i]*d,m=r[a]*d,y=r[e+1]*_,x=r[i+1]*_,g=r[a+1]*_;var D=n[e],M=n[i],I=n[a],b=n[e+1],N=n[i+1],T=n[a+1],A=1/(p*x+y*m+f*g-x*m-y*f-p*g),C=D*x+y*I+M*g-x*I-y*M-D*g,w=p*M+D*m+f*I-M*m-D*f-p*I,S=p*x*I+y*M*m+D*f*g-D*x*m-y*f*I-p*M*g,F=b*x+y*T+N*g-x*T-y*N-b*g,k=p*N+b*m+f*T-N*m-b*f-p*T,P=p*x*T+y*N*m+b*f*g-b*x*m-y*f*T-p*N*g;if(this.transformCmds[0]=C*A,this.transformCmds[1]=F*A,this.transformCmds[2]=w*A,this.transformCmds[3]=k*A,this.transformCmds[4]=S*A,this.transformCmds[5]=P*A,this.drawCmds[0]=o,this.drawCmds[1]=h.uv[0]*d,this.drawCmds[2]=h.uv[1]*_,this.drawCmds[3]=u,this.drawCmds[4]=c,this.drawCmds[5]=h.uv[0]*d,this.drawCmds[6]=h.uv[1]*_,this.drawCmds[7]=u,this.drawCmds[8]=c,s.save(),this.transform){var B=this.transform;s.transform(B.a,B.b,B.c,B.d,B.tx,B.ty)}s.transform.apply(s,this.transformCmds),s.drawImage.apply(s,this.drawCmds),s.restore()},e.renderByCache=function(t){var e=this.context;if(e.save(),this.transform){var i=this.transform;e.transform(i.a,i.b,i.c,i.d,i.tx,i.ty)}e.transform.apply(e,this.transformCmds),e.drawImage.apply(e,this.drawCmds),e.restore()},t}(U)),O=function(e){function i(t,e){this._templet=null,this._player=null,this._curOriginalData=null,this._boneMatrixArray=[],this._lastTime=0,this._currAniName=null,this._currAniIndex=-1,this._pause=!0,this._aniClipIndex=-1,this._clipIndex=-1,this._skinIndex=0,this._skinName="default",this._aniMode=0,this._graphicsCache=null,this._boneSlotDic=null,this._bindBoneBoneSlotDic=null,this._boneSlotArray=null,this._index=-1,this._total=-1,this._indexControl=!1,this._aniPath=null,this._texturePath=null,this._complete=null,this._loadAniMode=0,this._yReverseMatrix=null,this._ikArr=null,this._tfArr=null,this._pathDic=null,this._rootBone=null,this._boneList=null,this._aniSectionDic=null,this._eventIndex=0,this._drawOrderIndex=0,this._drawOrder=null,this._lastAniClipIndex=-1,this._lastUpdateAniClipIndex=-1,i.__super.call(this),void 0===e&&(e=0),t&&this.init(t,e)}n(i,"laya.ani.bone.Skeleton",e);var t=i.prototype;return t.init=function(t,e){void 0===e&&(e=0);var i,a,s,r=0,n=0;if(1==e)for(this._graphicsCache=[],r=0,n=t.getAnimationCount();r<n;r++)this._graphicsCache.push([]);if(this._yReverseMatrix=t.yReverseMatrix,this._aniMode=e,this._templet=t,this._player=new P,this._player.cacheFrameRate=t.rate,this._player.templet=t,this._player.play(),this._parseSrcBoneMatrix(),this._boneList=t.mBoneArr,this._rootBone=t.mRootBone,this._aniSectionDic=t.aniSectionDic,0<t.ikArr.length)for(this._ikArr=[],r=0,n=t.ikArr.length;r<n;r++)this._ikArr.push(new b(t.ikArr[r],this._boneList));if(0<t.pathArr.length)for(null==this._pathDic&&(this._pathDic={}),r=0,n=t.pathArr.length;r<n;r++)i=t.pathArr[r],a=new T(i,this._boneList),(s=this._boneSlotDic[i.name])&&((a=new T(i,this._boneList)).target=s),this._pathDic[i.name]=a;if(0<t.tfArr.length)for(this._tfArr=[],r=0,n=t.tfArr.length;r<n;r++)this._tfArr.push(new A(t.tfArr[r],this._boneList));if(0<t.skinDataArray.length){var h=this._templet.skinDataArray[this._skinIndex];this._skinName=h.name}this._player.on("played",this,this._onPlay),this._player.on("stopped",this,this._onStop),this._player.on("paused",this,this._onPause)},t.load=function(t,e,i){void 0===i&&(i=0),this._aniPath=t,this._complete=e,this._loadAniMode=i,st.loader.load([{url:t,type:"arraybuffer"}],o.create(this,this._onLoaded))},t._onLoaded=function(){var t,e=u.getRes(this._aniPath);null!=e&&(null==E.TEMPLET_DICTIONARY&&(E.TEMPLET_DICTIONARY={}),(t=E.TEMPLET_DICTIONARY[this._aniPath])?t.isParseFail?this._parseFail():t.isParserComplete?this._parseComplete():(t.on("complete",this,this._parseComplete),t.on("error",this,this._parseFail)):((t=new E)._setUrl(this._aniPath),(E.TEMPLET_DICTIONARY[this._aniPath]=t).on("complete",this,this._parseComplete),t.on("error",this,this._parseFail),t.isParserComplete=!1,t.parseData(null,e)))},t._parseComplete=function(){var t=E.TEMPLET_DICTIONARY[this._aniPath];t&&(this.init(t,this._loadAniMode),this.play(0,!0)),this._complete&&this._complete.runWith(this)},t._parseFail=function(){console.log("[Error]:"+this._aniPath+"解析失败")},t._onPlay=function(){this.event("played")},t._onStop=function(){var t,e=this._templet.eventAniArr[this._aniClipIndex];if(e&&this._eventIndex<e.length)for(;this._eventIndex<e.length;this._eventIndex++)(t=e[this._eventIndex]).time>=this._player.playStart&&t.time<=this._player.playEnd&&this.event("label",t);this._drawOrder=null,this.event("stopped")},t._onPause=function(){this.event("paused")},t._parseSrcBoneMatrix=function(){var t=0,e=0;for(e=this._templet.srcBoneMatrixArr.length,t=0;t<e;t++)this._boneMatrixArray.push(new St);if(0==this._aniMode)this._boneSlotDic=this._templet.boneSlotDic,this._bindBoneBoneSlotDic=this._templet.bindBoneBoneSlotDic,this._boneSlotArray=this._templet.boneSlotArray;else{null==this._boneSlotDic&&(this._boneSlotDic={}),null==this._bindBoneBoneSlotDic&&(this._bindBoneBoneSlotDic={}),null==this._boneSlotArray&&(this._boneSlotArray=[]);var i,a,s=this._templet.boneSlotArray;for(t=0,e=s.length;t<e;t++)i=s[t],null==(a=this._bindBoneBoneSlotDic[i.parent])&&(this._bindBoneBoneSlotDic[i.parent]=a=[]),this._boneSlotDic[i.name]=i=i.copy(),a.push(i),this._boneSlotArray.push(i)}},t._emitMissedEvents=function(t,e,i){void 0===i&&(i=0);var a=this._templet.eventAniArr[this._player.currentAnimationClipIndex];if(a){var s,r,n=0;for(s=a.length,n=i;n<s;n++)(r=a[n]).time>=this._player.playStart&&r.time<=this._player.playEnd&&this.event("label",r)}},t._update=function(t){if(void 0===t&&(t=!0),!(this._pause||t&&this._indexControl)){var e=this.timer.currTimer,i=this._player.currentKeyframeIndex,a=e-this._lastTime;if(t?this._player._update(a):i=-1,this._lastTime=e,this._player&&(this._index=this._clipIndex=this._player.currentKeyframeIndex,!(this._index<0||0<a&&this._clipIndex==i&&this._lastUpdateAniClipIndex==this._aniClipIndex))){var s;this._lastUpdateAniClipIndex=this._aniClipIndex,i>this._clipIndex&&0!=this._eventIndex&&(this._emitMissedEvents(this._player.playStart,this._player.playEnd,this._eventIndex),this._eventIndex=0);var r,n=this._templet.eventAniArr[this._aniClipIndex];if(n&&this._eventIndex<n.length&&((s=n[this._eventIndex]).time>=this._player.playStart&&s.time<=this._player.playEnd?this._player.currentPlayTime>=s.time&&(this.event("label",s),this._eventIndex++):this._eventIndex++),0==this._aniMode){if(r=this._templet.getGrahicsDataWithCache(this._aniClipIndex,this._clipIndex))return void(this.graphics!=r&&(this.graphics=r));var h=0,l=0;for(l=this._clipIndex;!this._templet.getGrahicsDataWithCache(this._aniClipIndex,l-1)&&0<l;)l--;if(l<this._clipIndex)for(h=l;h<this._clipIndex;h++)this._createGraphics(h)}else if(1==this._aniMode){if(r=this._getGrahicsDataWithCache(this._aniClipIndex,this._clipIndex))return void(this.graphics!=r&&(this.graphics=r));for(l=this._clipIndex;!this._getGrahicsDataWithCache(this._aniClipIndex,l-1)&&0<l;)l--;if(l<this._clipIndex)for(h=l;h<this._clipIndex;h++)this._createGraphics(h)}this._createGraphics()}}},t._createGraphics=function(t){void 0===t&&(t=-1),-1==t&&(t=this._clipIndex);var e,i,a=t*this._player.cacheFrameRateInterval,s=this._templet.drawOrderAniArr[this._aniClipIndex];if(s&&0<s.length)for(this._drawOrderIndex=0,e=s[this._drawOrderIndex];a>=e.time&&(this._drawOrder=e.drawOrder,this._drawOrderIndex++,!(this._drawOrderIndex>=s.length));)e=s[this._drawOrderIndex];0==this._aniMode||1==this._aniMode?this.graphics=B.create():this.graphics instanceof laya.ani.GraphicsAni?this.graphics.clear():this.graphics=B.create(),i=this.graphics;var r=this._templet.getNodes(this._aniClipIndex);this._templet.getOriginalData(this._aniClipIndex,this._curOriginalData,this._player._fullFrames[this._aniClipIndex],t,a);var n,h,l,o,u=this._aniSectionDic[this._aniClipIndex],c=0,d=0,_=0,p=0,f=0,m=this._templet.srcBoneMatrixArr.length;for(f=u[d=0];d<m;d++)o=this._boneList[d],l=this._templet.srcBoneMatrixArr[d],o.resultTransform.scX=l.scX*this._curOriginalData[c++],o.resultTransform.skX=l.skX+this._curOriginalData[c++],o.resultTransform.skY=l.skY+this._curOriginalData[c++],o.resultTransform.scY=l.scY*this._curOriginalData[c++],o.resultTransform.x=l.x+this._curOriginalData[c++],o.resultTransform.y=l.y+this._curOriginalData[c++],8===this._templet.tMatrixDataLen&&(o.resultTransform.skewX=l.skewX+this._curOriginalData[c++],o.resultTransform.skewY=l.skewY+this._curOriginalData[c++]);var y,x={},g={};for(f+=u[1];d<f;d++)x[(y=r[d]).name]=this._curOriginalData[c++],g[y.name]=this._curOriginalData[c++],this._curOriginalData[c++],this._curOriginalData[c++],this._curOriginalData[c++],this._curOriginalData[c++];var v,D,M={},I={};for(f+=u[2];d<f;d++)M[(y=r[d]).name]=this._curOriginalData[c++],I[y.name]=this._curOriginalData[c++],this._curOriginalData[c++],this._curOriginalData[c++],this._curOriginalData[c++],this._curOriginalData[c++];if(this._pathDic)for(f+=u[3];d<f;d++){if(y=r[d],v=this._pathDic[y.name])switch(new wt(y.extenData).getByte()){case 1:v.position=this._curOriginalData[c++];break;case 2:v.spacing=this._curOriginalData[c++];break;case 3:v.rotateMix=this._curOriginalData[c++],v.translateMix=this._curOriginalData[c++]}}if(this._yReverseMatrix?this._rootBone.update(this._yReverseMatrix):this._rootBone.update(St.TEMP.identity()),this._ikArr)for(d=0,f=this._ikArr.length;d<f;d++)D=this._ikArr[d],M.hasOwnProperty(D.name)&&(D.bendDirection=M[D.name]),I.hasOwnProperty(D.name)&&(D.mix=I[D.name]),D.apply();if(this._pathDic)for(var b in this._pathDic)(v=this._pathDic[b]).apply(this._boneList,i);if(this._tfArr)for(d=0,p=this._tfArr.length;d<p;d++)this._tfArr[d].apply();for(d=0,p=this._boneList.length;d<p;d++)if(o=this._boneList[d],h=this._bindBoneBoneSlotDic[o.name],o.resultMatrix.copyTo(this._boneMatrixArray[d]),h)for(_=0,f=h.length;_<f;_++)(n=h[_])&&n.setParentMatrix(o.resultMatrix);var N,T,A,C,w={},S=this._templet.deformAniArr;if(S&&0<S.length){if(this._lastAniClipIndex!=this._aniClipIndex)for(this._lastAniClipIndex=this._aniClipIndex,d=0,f=this._boneSlotArray.length;d<f;d++)(n=this._boneSlotArray[d]).deformData=null;var F,k=S[this._aniClipIndex];for(F in N=k.default,this._setDeform(N,w,this._boneSlotArray,a),k)"default"!=F&&F!=this._skinName&&(N=k[F],this._setDeform(N,w,this._boneSlotArray,a));N=k[this._skinName],this._setDeform(N,w,this._boneSlotArray,a)}if(this._drawOrder)for(d=0,f=this._drawOrder.length;d<f;d++)T=x[(n=this._boneSlotArray[this._drawOrder[d]]).name],A=g[n.name],isNaN(A)||(i.save(),i.alpha(A)),isNaN(T)||-2==T||(this._templet.attachmentNames?n.showDisplayByName(this._templet.attachmentNames[T]):n.showDisplayByIndex(T)),w[this._drawOrder[d]]?(C=w[this._drawOrder[d]],n.currDisplayData&&C[n.currDisplayData.attachmentName]?n.deformData=C[n.currDisplayData.attachmentName]:n.deformData=null):n.deformData=null,isNaN(A)?n.draw(i,this._boneMatrixArray,2==this._aniMode):n.draw(i,this._boneMatrixArray,2==this._aniMode,A),isNaN(A)||i.restore();else for(d=0,f=this._boneSlotArray.length;d<f;d++)T=x[(n=this._boneSlotArray[d]).name],A=g[n.name],isNaN(A)||(i.save(),i.alpha(A)),isNaN(T)||-2==T||(this._templet.attachmentNames?n.showDisplayByName(this._templet.attachmentNames[T]):n.showDisplayByIndex(T)),w[d]?(C=w[d],n.currDisplayData&&C[n.currDisplayData.attachmentName]?n.deformData=C[n.currDisplayData.attachmentName]:n.deformData=null):n.deformData=null,isNaN(A)?n.draw(i,this._boneMatrixArray,2==this._aniMode):n.draw(i,this._boneMatrixArray,2==this._aniMode,A),isNaN(A)||i.restore();0==this._aniMode?this._templet.setGrahicsDataWithCache(this._aniClipIndex,t,i):1==this._aniMode&&this._setGrahicsDataWithCache(this._aniClipIndex,t,i)},t._setDeform=function(t,e,i,a){if(t){var s,r,n,h=0,l=0,o=0;if(t)for(h=0,l=t.deformSlotDataList.length;h<l;h++)for(s=t.deformSlotDataList[h],o=0;o<s.deformSlotDisplayList.length;o++)n=i[(r=s.deformSlotDisplayList[o]).slotIndex],r.apply(a,n),e[r.slotIndex]||(e[r.slotIndex]={}),e[r.slotIndex][r.attachment]=r.deformData}},t.getAnimNum=function(){return this._templet.getAnimationCount()},t.getAniNameByIndex=function(t){return this._templet.getAniNameByIndex(t)},t.getSlotByName=function(t){return this._boneSlotDic[t]},t.showSkinByName=function(t,e){void 0===e&&(e=!0),this.showSkinByIndex(this._templet.getSkinIndexByName(t),e)},t.showSkinByIndex=function(t,e){void 0===e&&(e=!0);for(var i=0;i<this._boneSlotArray.length;i++)this._boneSlotArray[i].showSlotData(null,e);if(this._templet.showSkinByIndex(this._boneSlotDic,t,e)){var a=this._templet.skinDataArray[t];this._skinIndex=t,this._skinName=a.name}this._clearCache()},t.showSlotSkinByIndex=function(t,e){if(0!=this._aniMode){var i=this.getSlotByName(t);i&&i.showDisplayByIndex(e),this._clearCache()}},t.showSlotSkinByName=function(t,e){if(0!=this._aniMode){var i=this.getSlotByName(t);i&&i.showDisplayByName(e),this._clearCache()}},t.replaceSlotSkinName=function(t,e,i){if(0!=this._aniMode){var a=this.getSlotByName(t);a&&a.replaceDisplayByName(e,i),this._clearCache()}},t.replaceSlotSkinByIndex=function(t,e,i){if(0!=this._aniMode){var a=this.getSlotByName(t);a&&a.replaceDisplayByIndex(e,i),this._clearCache()}},t.setSlotSkin=function(t,e){if(0!=this._aniMode){var i=this.getSlotByName(t);i&&i.replaceSkin(e),this._clearCache()}},t._clearCache=function(){if(1==this._aniMode)for(var t=0,e=this._graphicsCache.length;t<e;t++){for(var i=0,a=this._graphicsCache[t].length;i<a;i++){var s=this._graphicsCache[t][i];s!=this.graphics&&B.recycle(s)}this._graphicsCache[t].length=0}},t.play=function(t,e,i,a,s,r){void 0===i&&(i=!0),void 0===a&&(a=0),void 0===s&&(s=0),void 0===r&&(r=!0),this._indexControl=!1;var n=-1,h=NaN;if(h=e?2147483647:0,"string"==typeof t)for(var l=0,o=this._templet.getAnimationCount();l<o;l++){var u=this._templet.getAnimation(l);if(u&&t==u.name){n=l;break}}else n=t;-1<n&&n<this.getAnimNum()&&(this._aniClipIndex=n,(i||this._pause||this._currAniIndex!=n)&&(this._currAniIndex=n,this._curOriginalData=new Float32Array(this._templet.getTotalkeyframesLength(n)),this._drawOrder=null,this._eventIndex=0,this._player.play(n,this._player.playbackRate,h,a,s),r&&this._templet.showSkinByIndex(this._boneSlotDic,this._skinIndex),this._pause&&(this._pause=!1,this._lastTime=c.now(),this.timer.frameLoop(1,this,this._update,null,!0)),this._update()))},t.stop=function(){this._pause||(this._pause=!0,this._player&&this._player.stop(!0),this.timer.clear(this,this._update))},t.playbackRate=function(t){this._player&&(this._player.playbackRate=t)},t.paused=function(){this._pause||(this._pause=!0,this._player&&(this._player.paused=!0),this.timer.clear(this,this._update))},t.resume=function(){this._indexControl=!1,this._pause&&(this._pause=!1,this._player&&(this._player.paused=!1),this._lastTime=c.now(),this.timer.frameLoop(1,this,this._update,null,!0))},t._getGrahicsDataWithCache=function(t,e){return this._graphicsCache[t][e]},t._setGrahicsDataWithCache=function(t,e,i){this._graphicsCache[t][e]=i},t.destroy=function(t){void 0===t&&(t=!0),e.prototype.destroy.call(this,t),this._templet=null,this._player&&this._player.offAll(),this._player=null,this._curOriginalData=null,this._boneMatrixArray.length=0,this._lastTime=0,this.timer.clear(this,this._update)},a(0,t,"url",function(){return this._aniPath},function(t){this.load(t)}),a(0,t,"index",function(){return this._index},function(t){this.player&&(this._index=t,this._player.currentTime=1e3*this._index/this._player.cacheFrameRate,this._indexControl=!0,this._update(!1))}),a(0,t,"total",function(){return this._templet&&this._player?this._total=Math.floor(this._templet.getAniDuration(this._player.currentAnimationClipIndex)/1e3*this._player.cacheFrameRate):this._total=-1,this._total}),a(0,t,"templet",function(){return this._templet}),a(0,t,"player",function(){return this._player}),i.useSimpleMeshInCanvas=!1,i}(rt),E=(function(e){function f(t){this._start=0,this._Pos=0,this._data=null,this._curIndex=0,this._preIndex=0,this._playIndex=0,this._playing=!1,this._ended=!0,this._count=0,this._ids=null,this._loadedImage={},this._idOfSprite=null,this._parentMovieClip=null,this._movieClipList=null,this._labels=null,this.basePath=null,this._atlasPath=null,this._url=null,this._isRoot=!1,this._completeHandler=null,this._endFrame=-1,this.interval=30,this.loop=!1,f.__super.call(this),this._ids={},this._idOfSprite=[],this._reset(),this._playing=!1,(this._parentMovieClip=t)?(this._isRoot=!1,this._movieClipList=t._movieClipList,this._movieClipList.push(this)):(this._movieClipList=[this],this._isRoot=!0,this._setUpNoticeType(1))}n(f,"laya.ani.swf.MovieClip",e);var t=f.prototype;t.destroy=function(t){void 0===t&&(t=!0),this._clear(),e.prototype.destroy.call(this,t)},t._setDisplay=function(t){e.prototype._setDisplay.call(this,t),this._isRoot&&this._$3__onDisplay(t)},t._$3__onDisplay=function(t){t?this.timer.loop(this.interval,this,this.updates,null,!0):this.timer.clear(this,this.updates)},t.updates=function(){if(!this._parentMovieClip){var t,e=0;for(t=this._movieClipList.length,e=0;e<t;e++)this._movieClipList[e]&&this._movieClipList[e]._update()}},t.addLabel=function(t,e){this._labels||(this._labels={}),this._labels[e]=t},t.removeLabel=function(t){if(t){if(!this._labels)for(var e in this._labels)if(this._labels[e]===t){delete this._labels[e];break}}else this._labels=null},t._update=function(){if(this._data&&this._playing){if(this._playIndex++,this._playIndex>=this._count){if(!this.loop)return this._playIndex--,void this.stop();this._playIndex=0}if(this._parse(this._playIndex),this._labels&&this._labels[this._playIndex]&&this.event("label",this._labels[this._playIndex]),-1!=this._endFrame&&this._endFrame==this._playIndex){if(this._endFrame=-1,null!=this._completeHandler){var t=this._completeHandler;this._completeHandler=null,t.run()}this.stop()}}},t.stop=function(){this._playing=!1},t.gotoAndStop=function(t){this.index=t,this.stop()},t._clear=function(){if(this.stop(),this._idOfSprite.length=0,!this._parentMovieClip){this.timer.clear(this,this.updates);var t,e=0;for(t=this._movieClipList.length,e=0;e<t;e++)this._movieClipList[e]!=this&&this._movieClipList[e]._clear();this._movieClipList.length=0}var i;for(i in this._atlasPath&&u.clearRes(this._atlasPath),this._loadedImage)this._loadedImage[i]&&(u.clearRes(i),this._loadedImage[i]=!1);this.removeChildren(),this.graphics=null,this._parentMovieClip=null},t.play=function(t,e){void 0===t&&(t=0),void 0===e&&(e=!0),this.loop=e,this._playing=!0,this._data&&this._displayFrame(t)},t._displayFrame=function(t){void 0===t&&(t=-1),-1!=t&&(this._curIndex>t&&this._reset(),this._parse(t))},t._reset=function(t){void 0===t&&(t=!0),t&&1!=this._curIndex&&this.removeChildren(),this._preIndex=this._curIndex=-1,this._Pos=this._start},t._parse=function(t){var e,i,a,s=0,r=0,n=0,h=!1,l=this._idOfSprite,o=this._data;for(this._ended&&this._reset(),o.pos=this._Pos,this._ended=!1,this._playIndex=t,this._curIndex>t&&t<this._preIndex&&(this._reset(!0),o.pos=this._Pos);this._curIndex<=t&&!this._ended;)switch(o.getUint16()){case 12:if(s=o.getUint16(),r=this._ids[o.getUint16()],this._Pos=o.pos,o.pos=r,0==(n=o.getUint8())){var u=o.getUint16();if(!(i=l[s])){i=l[s]=new rt;var c=new rt;c.loadImage(this.basePath+u+".png"),this._loadedImage[this.basePath+u+".png"]=!0,i.addChild(c),c.size(o.getFloat32(),o.getFloat32());var d=o._getMatrix();c.transform=d}i.alpha=1}else 1==n&&((e=l[s])||(l[s]=e=new f(this),e.interval=this.interval,e._ids=this._ids,e.basePath=this.basePath,e._setData(o,r),e._initState(),e.play(0)),e.alpha=1);o.pos=this._Pos;break;case 3:var _=l[o.getUint16()];_&&(this.addChild(_),_.zOrder=o.getUint16(),h=!0);break;case 4:(_=l[o.getUint16()])&&_.removeSelf();break;case 5:l[o.getUint16()][f._ValueList[o.getUint16()]]=o.getFloat32();break;case 6:l[o.getUint16()].visible=0<o.getUint8();break;case 7:var p=(i=l[o.getUint16()]).transform||St.create();p.setTo(o.getFloat32(),o.getFloat32(),o.getFloat32(),o.getFloat32(),o.getFloat32(),o.getFloat32()),i.transform=p;break;case 8:l[o.getUint16()].setPos(o.getFloat32(),o.getFloat32());break;case 9:l[o.getUint16()].setSize(o.getFloat32(),o.getFloat32());break;case 10:l[o.getUint16()].alpha=o.getFloat32();break;case 11:l[o.getUint16()].setScale(o.getFloat32(),o.getFloat32());break;case 98:a=o.getString(),this.event(a),"stop"==a&&this.stop();break;case 99:this._curIndex=o.getUint16(),h&&this.updateZOrder();break;case 100:this._count=this._curIndex+1,this._ended=!0,this._playing&&(this.event("enterframe"),this.event("end"),this.event("complete")),this._reset(!1)}this._playing&&!this._ended&&this.event("enterframe"),this._Pos=o.pos},t._setData=function(t,e){this._data=t,this._start=e+3},t.load=function(t,e,i){var a;void 0===e&&(e=!1),this._url=t,e&&(this._atlasPath=i||t.split(".swf")[0]+".json"),this.stop(),this._clear(),this._movieClipList=[this],a=[{url:t,type:"arraybuffer"}],this._atlasPath&&a.push({url:this._atlasPath,type:"atlas"}),st.loader.load(a,o.create(this,this._onLoaded))},t._onLoaded=function(){var t;(t=u.getRes(this._url))?!this._atlasPath||u.getAtlas(this._atlasPath)?(this.basePath=this._atlasPath?u.getAtlas(this._atlasPath).dir:this._url.split(".swf")[0]+"/image/",this._initData(t)):this.event("error","Atlas not find"):this.event("error","file not find")},t._initState=function(){this._reset(),this._ended=!1;var t=this._playing;for(this._playing=!1,this._curIndex=0;!this._ended;)this._parse(++this._curIndex);this._playing=t},t._initData=function(t){this._data=new wt(t);var e=0,i=this._data.getUint16();for(e=0;e<i;e++)this._ids[this._data.getInt16()]=this._data.getInt32();this.interval=1e3/this._data.getUint16(),this._setData(this._data,this._ids[32767]),this._initState(),this.play(0),this.event("loaded"),this._parentMovieClip||this.timer.loop(this.interval,this,this.updates,null,!0)},t.playTo=function(t,e,i){this._completeHandler=i,this._endFrame=e,this.play(t,!1)},a(0,t,"index",function(){return this._playIndex},function(t){this._playIndex=t,this._data&&this._displayFrame(this._playIndex),this._labels&&this._labels[t]&&this.event("label",this._labels[t])}),a(0,t,"count",function(){return this._count}),a(0,t,"playing",function(){return this._playing}),a(0,t,"url",null,function(t){this.load(t)}),f._ValueList=["x","y","width","height","scaleX","scaleY","rotation","alpha"]}(rt),function(e){function s(){this._mainTexture=null,this._textureJson=null,this._graphicsCache=[],this.srcBoneMatrixArr=[],this.ikArr=[],this.tfArr=[],this.pathArr=[],this.boneSlotDic={},this.bindBoneBoneSlotDic={},this.boneSlotArray=[],this.skinDataArray=[],this.skinDic={},this.subTextureDic={},this.isParseFail=!1,this.yReverseMatrix=null,this.drawOrderAniArr=[],this.eventAniArr=[],this.attachmentNames=null,this.deformAniArr=[],this._isDestroyed=!1,this._rate=30,this.isParserComplete=!1,this.aniSectionDic={},this._skBufferUrl=null,this._textureDic={},this._loadList=null,this._path=null,this.tMatrixDataLen=0,this.mRootBone=null,s.__super.call(this),this.skinSlotDisplayDataArr=[],this.mBoneArr=[]}n(s,"laya.ani.bone.Templet",e);var t=s.prototype;return t.loadAni=function(t){this._skBufferUrl=t,st.loader.load(t,o.create(this,this.onComplete),null,"arraybuffer")},t.onComplete=function(t){if(this._isDestroyed)this.destroy();else{var e=u.getRes(this._skBufferUrl);e?(this._path=this._skBufferUrl.slice(0,this._skBufferUrl.lastIndexOf("/"))+"/",this.parseData(null,e)):this.event("error","load failed:"+this._skBufferUrl)}},t.parseData=function(t,e,i){void 0===i&&(i=30),!this._path&&this.url&&(this._path=this.url.slice(0,this.url.lastIndexOf("/"))+"/"),this._mainTexture=t,this._mainTexture&&m.isWebGL&&t.bitmap&&(t.bitmap.enableMerageInAtlas=!1),this._rate=i,this.parse(e)},t.buildArmature=function(t){return void 0===t&&(t=0),new O(this,t)},t.parse=function(t){e.prototype.parse.call(this,t),this._endLoaded(),this._aniVersion!=s.LAYA_ANIMATION_VISION&&(console.log("[Error] 版本不一致，请使用IDE版本配套的重新导出"+this._aniVersion+"->"+s.LAYA_ANIMATION_VISION),this._loaded=!1),this.loaded?this._mainTexture?this._parsePublicExtData():this._parseTexturePath():(this.event("error",this),this.isParseFail=!0)},t._parseTexturePath=function(){if(this._isDestroyed)this.destroy();else{var t=0;this._loadList=[];var e,i=new wt(this.getPublicExtData()),a=0,s=0,r=0,n=i.getInt32(),h=i.readUTFString(),l=h.split("\n");for(t=0;t<n;t++)e=this._path+l[2*t],h=l[2*t+1],i.getFloat32(),i.getFloat32(),a=i.getFloat32(),s=i.getFloat32(),r=i.getFloat32(),isNaN(r)?0:r,r=i.getFloat32(),isNaN(r)?0:r,r=i.getFloat32(),isNaN(r)?a:r,r=i.getFloat32(),isNaN(r)?s:r,-1==this._loadList.indexOf(e)&&this._loadList.push(e);st.loader.load(this._loadList,o.create(this,this._textureComplete))}},t._textureComplete=function(){for(var t,e,i=0,a=this._loadList.length;i<a;i++)e=this._loadList[i],t=this._textureDic[e]=u.getRes(e),m.isWebGL&&t&&t.bitmap&&(t.bitmap.enableMerageInAtlas=!1);this._parsePublicExtData()},t._parsePublicExtData=function(){var t=0,e=0,i=0,a=0,s=0;for(t=0,s=this.getAnimationCount();t<s;t++)this._graphicsCache.push([]);var r;r="Dragon"!=this._aniClassName;var n,h,l=new wt(this.getPublicExtData()),o=0,u=0,c=0,d=0,_=0,p=0,f=0,m=0,y=0,x=l.getInt32(),g=l.readUTFString(),v=g.split("\n");for(t=0;t<x;t++){if(n=this._mainTexture,h=this._path+v[2*t],g=v[2*t+1],null==this._mainTexture&&(n=this._textureDic[h]),!n)return this.event("error",this),void(this.isParseFail=!0);o=l.getFloat32(),u=l.getFloat32(),c=l.getFloat32(),d=l.getFloat32(),y=l.getFloat32(),_=isNaN(y)?0:y,y=l.getFloat32(),p=isNaN(y)?0:y,y=l.getFloat32(),f=isNaN(y)?c:y,y=l.getFloat32(),m=isNaN(y)?d:y,this.subTextureDic[g]=Ft.create(n,o,u,c,d,-_,-p,f,m)}this._mainTexture=n;var D,M,I,b,N,T=l.getUint16();for(t=0;t<T;t++)(D=[]).push(l.getUint16()),D.push(l.getUint16()),D.push(l.getUint16()),D.push(l.getUint16()),this.aniSectionDic[t]=D;var A,C=l.getInt16(),w={};for(t=0;t<C;t++)M=new kt,0==t?A=M:M.root=A,M.d=r?-1:1,b=l.readUTFString(),N=l.readUTFString(),M.length=l.getFloat32(),1==l.getByte()&&(M.inheritRotation=!1),1==l.getByte()&&(M.inheritScale=!1),M.name=b,N&&((I=w[N])?I.addChild(M):this.mRootBone=M),w[b]=M,this.mBoneArr.push(M);this.tMatrixDataLen=l.getUint16();var S,F,k=l.getUint16(),P=Math.floor(k/this.tMatrixDataLen),B=this.srcBoneMatrixArr;for(t=0;t<P;t++)(S=new zt).scX=l.getFloat32(),S.skX=l.getFloat32(),S.skY=l.getFloat32(),S.scY=l.getFloat32(),S.x=l.getFloat32(),S.y=l.getFloat32(),8===this.tMatrixDataLen&&(S.skewX=l.getFloat32(),S.skewY=l.getFloat32()),B.push(S),(M=this.mBoneArr[t]).transform=S;var U,L=l.getUint16(),R=0;for(t=0;t<L;t++){for(F=new Et,R=l.getUint16(),e=0;e<R;e++)F.boneNames.push(l.readUTFString()),F.boneIndexs.push(l.getInt16());F.name=l.readUTFString(),F.targetBoneName=l.readUTFString(),F.targetBoneIndex=l.getInt16(),F.bendDirection=l.getFloat32(),F.mix=l.getFloat32(),F.isSpine=r,this.ikArr.push(F)}var O,E=l.getUint16(),K=0;for(t=0;t<E;t++){for(U=new Xt,K=l.getUint16(),e=0;e<K;e++)U.boneIndexs.push(l.getInt16());U.name=l.getUTFString(),U.targetIndex=l.getInt16(),U.rotateMix=l.getFloat32(),U.translateMix=l.getFloat32(),U.scaleMix=l.getFloat32(),U.shearMix=l.getFloat32(),U.offsetRotation=l.getFloat32(),U.offsetX=l.getFloat32(),U.offsetY=l.getFloat32(),U.offsetScaleX=l.getFloat32(),U.offsetScaleY=l.getFloat32(),U.offsetShearY=l.getFloat32(),this.tfArr.push(U)}var Y=l.getUint16(),V=0;for(t=0;t<Y;t++){for((O=new Kt).name=l.readUTFString(),V=l.getUint16(),e=0;e<V;e++)O.bones.push(l.getInt16());O.target=l.readUTFString(),O.positionMode=l.readUTFString(),O.spacingMode=l.readUTFString(),O.rotateMode=l.readUTFString(),O.offsetRotation=l.getFloat32(),O.position=l.getFloat32(),O.spacing=l.getFloat32(),O.rotateMix=l.getFloat32(),O.translateMix=l.getFloat32(),this.pathArr.push(O)}var W,X,z,q,G,H=0,Q=0,Z=0,j=NaN,$=0,J=l.getInt16();for(t=0;t<J;t++){var tt=l.getUint8(),et={};this.deformAniArr.push(et);for(var it=0;it<tt;it++)for((W=new Bt).skinName=l.getUTFString(),et[W.skinName]=W,H=l.getInt16(),e=0;e<H;e++)for(X=new Ut,W.deformSlotDataList.push(X),Q=l.getInt16(),i=0;i<Q;i++)for(z=new Lt,X.deformSlotDisplayList.push(z),z.slotIndex=l.getInt16(),z.attachment=l.getUTFString(),Z=l.getInt16(),a=0;a<Z;a++)for(1==l.getByte()?z.tweenKeyList.push(!0):z.tweenKeyList.push(!1),j=l.getFloat32(),z.timeList.push(j),q=[],z.vectices.push(q),$=l.getInt16(),s=0;s<$;s++)q.push(l.getFloat32())}var at,st,rt=l.getInt16(),nt=0,ht=0;for(t=0;t<rt;t++){for(nt=l.getInt16(),G=[],e=0;e<nt;e++){for((at=new Rt).time=l.getFloat32(),ht=l.getInt16(),i=0;i<ht;i++)at.drawOrder.push(l.getInt16());G.push(at)}this.drawOrderAniArr.push(G)}var lt,ot=l.getInt16(),ut=0;for(t=0;t<ot;t++){for(ut=l.getInt16(),st=[],e=0;e<ut;e++)(lt=new Ot).name=l.getUTFString(),lt.intValue=l.getInt32(),lt.floatValue=l.getFloat32(),lt.stringValue=l.getUTFString(),lt.time=l.getFloat32(),st.push(lt);this.eventAniArr.push(st)}var ct=l.getInt16();if(0<ct)for(this.attachmentNames=[],t=0;t<ct;t++)this.attachmentNames.push(l.getUTFString());var dt,_t,pt=l.getInt16();for(t=0;t<pt;t++)(dt=new Pt).name=l.readUTFString(),dt.parent=l.readUTFString(),dt.attachmentName=l.readUTFString(),dt.srcDisplayIndex=dt.displayIndex=l.getInt16(),(dt.templet=this).boneSlotDic[dt.name]=dt,null==(_t=this.bindBoneBoneSlotDic[dt.parent])&&(this.bindBoneBoneSlotDic[dt.parent]=_t=[]),_t.push(dt),this.boneSlotArray.push(dt);var ft,mt,yt,xt=l.readUTFString().split("\n"),gt=0,vt=l.getUint8(),Dt=0,Mt=0,It=0,bt=0,Nt=0,Tt=0,At=0;for(t=0;t<vt;t++){for((ft=new Yt).name=xt[gt++],Dt=l.getUint8(),e=0;e<Dt;e++){for((mt=new Wt).name=xt[gt++],dt=this.boneSlotDic[mt.name],Mt=l.getUint8(),i=0;i<Mt;i++){if(yt=new Vt,this.skinSlotDisplayDataArr.push(yt),yt.name=xt[gt++],yt.attachmentName=xt[gt++],yt.transform=new zt,yt.transform.scX=l.getFloat32(),yt.transform.skX=l.getFloat32(),yt.transform.skY=l.getFloat32(),yt.transform.scY=l.getFloat32(),yt.transform.x=l.getFloat32(),yt.transform.y=l.getFloat32(),mt.displayArr.push(yt),yt.width=l.getFloat32(),yt.height=l.getFloat32(),yt.type=l.getUint8(),yt.verLen=l.getUint16(),0<(C=l.getUint16()))for(yt.bones=[],a=0;a<C;a++){var Ct=l.getUint16();yt.bones.push(Ct)}if(0<(It=l.getUint16()))for(yt.uvs=[],a=0;a<It;a++)yt.uvs.push(l.getFloat32());if(0<(bt=l.getUint16()))for(yt.weights=[],a=0;a<bt;a++)yt.weights.push(l.getFloat32());if(0<(Nt=l.getUint16()))for(yt.triangles=[],a=0;a<Nt;a++)yt.triangles.push(l.getUint16());if(0<(Tt=l.getUint16()))for(yt.vertices=[],a=0;a<Tt;a++)yt.vertices.push(l.getFloat32());if(0<(At=l.getUint16()))for(yt.lengths=[],a=0;a<At;a++)yt.lengths.push(l.getFloat32())}ft.slotArr.push(mt)}this.skinDic[ft.name]=ft,this.skinDataArray.push(ft)}1==l.getUint8()?(this.yReverseMatrix=new St(1,0,0,-1,0,0),A&&A.setTempMatrix(this.yReverseMatrix)):A&&A.setTempMatrix(new St),this.showSkinByIndex(this.boneSlotDic,0),this.isParserComplete=!0,this.event("complete",this)},t.getTexture=function(t){var e=this.subTextureDic[t];return e||(e=this.subTextureDic[t.substr(0,t.length-1)]),null==e?this._mainTexture:e},t.showSkinByIndex=function(t,e,i){if(void 0===i&&(i=!0),e<0&&e>=this.skinDataArray.length)return!1;var a,s,r=0,n=0,h=this.skinDataArray[e];if(h){for(r=0,n=h.slotArr.length;r<n;r++)(s=h.slotArr[r])&&(a=t[s.name])&&(a.showSlotData(s,i),i&&"undefined"!=a.attachmentName&&"null"!=a.attachmentName?a.showDisplayByName(a.attachmentName):a.showDisplayByIndex(a.displayIndex));return!0}return!1},t.getSkinIndexByName=function(t){for(var e=0,i=this.skinDataArray.length;e<i;e++)if(this.skinDataArray[e].name==t)return e;return-1},t.getGrahicsDataWithCache=function(t,e){return this._graphicsCache[t]&&this._graphicsCache[t][e]?this._graphicsCache[t][e]:null},t.setGrahicsDataWithCache=function(t,e,i){this._graphicsCache[t][e]=i},t.destroy=function(){var t;for(var e in this._isDestroyed=!0,this.subTextureDic)(t=this.subTextureDic[e])&&t.destroy();for(e in this._textureDic)(t=this._textureDic[e])&&t.destroy();for(var i=0,a=this.skinSlotDisplayDataArr.length;i<a;i++)this.skinSlotDisplayDataArr[i].destory();this.skinSlotDisplayDataArr.length=0,this.url&&delete s.TEMPLET_DICTIONARY[this.url],laya.resource.Resource.prototype.destroy.call(this)},t.getAniNameByIndex=function(t){var e=this.getAnimation(t);return e?e.name:null},a(0,t,"rate",function(){return this._rate},function(t){this._rate=t}),s.LAYA_ANIMATION_VISION="LAYAANIMATION:1.6.0",s.TEMPLET_DICTIONARY=null,s}(L))}(window,document,Laya),"function"==typeof define&&define.amd&&define("laya.core",["require","exports"],function(t,e){"use strict";for(var i in Object.defineProperty(e,"__esModule",{value:!0}),Laya){var a=Laya[i];a&&a.__isclass&&(e[i]=a)}});
!function(t,e,a){a.un,a.uns,a.static;var n=a.class,s=a.getset,l=(a.__newvec,laya.utils.Browser,laya.utils.Color),i=laya.filters.ColorFilterAction,r=laya.filters.webgl.ColorFilterActionGL,o=laya.filters.Filter,u=laya.filters.webgl.FilterActionGL,c=laya.maths.Matrix,h=(laya.maths.Rectangle,laya.renders.Render),f=(laya.renders.RenderContext,laya.webgl.resource.RenderTarget2D),_=laya.utils.RunDriver,d=(laya.webgl.shader.d2.ShaderDefines2D,laya.display.Sprite,laya.resource.Texture,laya.webgl.shader.d2.value.Value2D),g=function(){function t(){this.data=null}n(t,"laya.filters.FilterAction");var e=t.prototype;return a.imps(e,{"laya.filters.IFilterAction":!0}),e.apply=function(t){return null},t}(),y=function(){function t(){}return n(t,"laya.filters.WebGLFilter"),t.enable=function(){t.isInit||(t.isInit=!0,h.isWebGL&&(_.createFilterAction=function(t){var e;switch(t){case 32:e=new r;break;case 16:e=new p;break;case 8:e=new w}return e}))},t.isInit=!1,t.__init$=function(){_.createFilterAction=function(t){var e;switch(t){case 16:case 8:e=new g;break;case 32:e=new i}return e}},t}(),p=(function(t){function e(t){this.strength=NaN,this.strength_sig2_2sig2_gauss1=[],e.__super.call(this),void 0===t&&(t=4),h.isWebGL&&y.enable(),this.strength=t,this._action=_.createFilterAction(16),this._action.data=this}n(e,"laya.filters.BlurFilter",o);var i=e.prototype;i.callNative=function(t){t.conchModel&&t.conchModel.blurFilter&&t.conchModel.blurFilter(this.strength)},s(0,i,"action",function(){return this._action}),s(0,i,"type",function(){return 16})}(),function(t){function r(t,e,i,a){this._color=null,r.__super.call(this),this._elements=new Float32Array(9),void 0===e&&(e=4),void 0===i&&(i=6),void 0===a&&(a=6),h.isWebGL&&y.enable(),this._color=new l(t),this.blur=Math.min(e,20),this.offX=i,this.offY=a,this._action=_.createFilterAction(8),this._action.data=this}n(r,"laya.filters.GlowFilter",o);var e=r.prototype;e.getColor=function(){return this._color._color},e.callNative=function(t){t.conchModel&&t.conchModel.glowFilter&&t.conchModel.glowFilter(this._color.strColor,this._elements[4],this._elements[5],this._elements[6])},s(0,e,"type",function(){return 8}),s(0,e,"action",function(){return this._action}),s(0,e,"offY",function(){return this._elements[6]},function(t){this._elements[6]=t}),s(0,e,"offX",function(){return this._elements[5]},function(t){this._elements[5]=t}),s(0,e,"blur",function(){return this._elements[4]},function(t){this._elements[4]=t})}(),function(t){function e(){this.data=null,e.__super.call(this)}n(e,"laya.filters.webgl.BlurFilterActionGL",u);var i=e.prototype;return i.setValueMix=function(t){t.defines.add(this.data.type)},i.apply3d=function(t,e,i,a,r){var n=t.getValue("bounds"),s=d.create(1,0);s.setFilters([this.data]),c.EMPTY.identity(),i.ctx.drawTarget(t,0,0,n.width,n.height,c.EMPTY,"src",s),s.setFilters(null)},i.setValue=function(t){t.strength=this.data.strength;var e=this.data.strength/3,i=e*e;this.data.strength_sig2_2sig2_gauss1[0]=this.data.strength,this.data.strength_sig2_2sig2_gauss1[1]=i,this.data.strength_sig2_2sig2_gauss1[2]=2*i,this.data.strength_sig2_2sig2_gauss1[3]=1/(2*Math.PI*i),t.strength_sig2_2sig2_gauss1=this.data.strength_sig2_2sig2_gauss1},s(0,i,"typeMix",function(){return 16}),e}()),w=function(t){function e(){this.data=null,this._initKey=!1,this._textureWidth=0,this._textureHeight=0,e.__super.call(this)}n(e,"laya.filters.webgl.GlowFilterActionGL",u);var i=e.prototype;return a.imps(i,{"laya.filters.IFilterActionGL":!0}),i.setValueMix=function(t){},i.apply3d=function(t,e,i,a,r){var n=t.getValue("bounds");t.addValue("color",this.data.getColor());var s,l=n.width,o=n.height;this._textureWidth=l,this._textureHeight=o;var u=c.TEMP;return u.identity(),(s=d.create(1,0)).setFilters([this.data]),i.ctx.drawTarget(t,0,0,this._textureWidth,this._textureHeight,u,"src",s,null),s=d.create(1,0),i.ctx.drawTarget(t,0,0,this._textureWidth,this._textureHeight,u,"src",s),null},i.setSpriteWH=function(t){this._textureWidth=t.width,this._textureHeight=t.height},i.setValue=function(t){t.u_offsetX=this.data.offX,t.u_offsetY=-this.data.offY,t.u_strength=1,t.u_blurX=this.data.blur,t.u_blurY=this.data.blur,t.u_textW=this._textureWidth,t.u_textH=this._textureHeight,t.u_color=this.data.getColor()},s(0,i,"typeMix",function(){return 8}),e.tmpTarget=function(t,e,i,a,r){var n=t.getValue("bounds");t.getValue("out").end();var s=f.create(n.width,n.height);s.start();var l=t.getValue("color");l&&s.clear(l[0],l[1],l[2],0),t.addValue("tmpTarget",s)},e.startOut=function(t,e,i,a,r){t.getValue("tmpTarget").end();var n=t.getValue("out");n.start();var s=t.getValue("color");s&&n.clear(s[0],s[1],s[2],0)},e.recycleTarget=function(t,e,i,a,r){t.getValue("src");t.getValue("tmpTarget").recycle()},e}();a.__init([y])}(window,document,Laya),"function"==typeof define&&define.amd&&define("laya.core",["require","exports"],function(t,e){"use strict";for(var i in Object.defineProperty(e,"__esModule",{value:!0}),Laya){var a=Laya[i];a&&a.__isclass&&(e[i]=a)}});
!function(t,i,p){p.un,p.uns;var s=p.static,n=p.class,h=p.getset,e=(p.__newvec,laya.display.Animation),o=laya.utils.Browser,g=laya.utils.ClassUtils,r=laya.filters.ColorFilter,l=laya.utils.Ease,a=laya.events.Event,c=(laya.events.EventDispatcher,laya.display.css.Font),u=laya.display.FrameAnimation,_=laya.display.Graphics,d=laya.utils.Handler,f=laya.display.Input,m=laya.net.Loader,y=(laya.display.Node,laya.maths.Point),v=laya.maths.Rectangle,C=laya.renders.Render,b=laya.display.Sprite,S=laya.display.Text,x=laya.resource.Texture,w=laya.utils.Tween,B=laya.utils.Utils,k=laya.utils.WeakObject;p.interface("laya.ui.IItem"),p.interface("laya.ui.ISelect"),p.interface("laya.ui.IRender"),p.interface("laya.ui.IComponent"),p.interface("laya.ui.IBox","IComponent");var I=function(){function t(){this.enable=!1,this.top=NaN,this.bottom=NaN,this.left=NaN,this.right=NaN,this.centerX=NaN,this.centerY=NaN,this.anchorX=NaN,this.anchorY=NaN}return n(t,"laya.ui.LayoutStyle"),s(t,["EMPTY",function(){return this.EMPTY=new t}]),t}(),L=function(){function t(){}return n(t,"laya.ui.Styles"),t.labelColor="#000000",t.buttonStateNum=3,t.scrollBarMinNum=15,t.scrollBarDelayTime=500,s(t,["defaultSizeGrid",function(){return this.defaultSizeGrid=[4,4,4,4,0]},"labelPadding",function(){return this.labelPadding=[2,2,2,2]},"inputLabelPadding",function(){return this.inputLabelPadding=[1,1,1,3]},"buttonLabelColors",function(){return this.buttonLabelColors=["#32556b","#32cc6b","#ff0000","#C0C0C0"]},"comboBoxItemColors",function(){return this.comboBoxItemColors=["#5e95b6","#ffffff","#000000","#8fa4b1","#ffffff"]}]),t}(),M=function(){function h(){}return n(h,"laya.ui.UIUtils"),h.fillArray=function(t,i,e){var s=t.concat();if(i)for(var h=i.split(","),n=0,o=Math.min(s.length,h.length);n<o;n++){var r=h[n];s[n]="true"==r||"false"!=r&&r,null!=e&&(s[n]=e(r))}return s},h.toColor=function(t){return B.toHexColor(t)},h.gray=function(t,i){void 0===i&&(i=!0),i?h.addFilter(t,h.grayFilter):h.clearFilter(t,r)},h.addFilter=function(t,i){var e=t.filters||[];e.push(i),t.filters=e},h.clearFilter=function(t,i){var e=t.filters;if(null!=e&&0<e.length){for(var s=e.length-1;-1<s;s--){var h=e[s];p.__typeof(h,i)&&e.splice(s,1)}t.filters=e}},h._getReplaceStr=function(t){return h.escapeSequence[t]},h.adptString=function(t){return t.replace(/\\(\w)/g,h._getReplaceStr)},h.getBindFun=function(t){var i=h._funMap.get(t);if(null==i){var e='"'+t+'"',s="(function(data){if(data==null)return;with(data){try{\nreturn "+(e=e.replace(/^"\${|}"$/g,"").replace(/\${/g,'"+').replace(/}/g,'+"'))+"\n}catch(e){}}})";i=p._runScript(s),h._funMap.set(t,i)}return i},s(h,["grayFilter",function(){return this.grayFilter=new r([.3086,.6094,.082,0,0,.3086,.6094,.082,0,0,.3086,.6094,.082,0,0,0,0,0,1,0])},"escapeSequence",function(){return this.escapeSequence={"\\n":"\n","\\t":"\t"}},"_funMap",function(){return this._funMap=new k}]),h}(),z=function(){function t(){}return n(t,"UIConfig"),t.touchScrollEnable=!0,t.mouseWheelEnable=!0,t.showButtons=!0,t.popupBgColor="#000000",t.popupBgAlpha=.5,t.closeDialogOnSide=!0,t}(),T=function(i){function f(){this.autoCacheCmd=!0,this._width=0,this._height=0,this._source=null,this._sizeGrid=null,this._isChanged=!1,this._offset=null,f.__super.call(this)}n(f,"laya.ui.AutoBitmap",i);var t=f.prototype;return t.destroy=function(){i.prototype.destroy.call(this),this._source=null,this._sizeGrid=null,this._offset=null},t._setChanged=function(){this._isChanged||(this._isChanged=!0,p.timer.callLater(this,this.changeSource))},t.changeSource=function(){this._isChanged=!1;var t=this._source;if(t&&t.bitmap){var i=this.width,e=this.height,s=this._sizeGrid,h=t.sourceWidth,n=t.sourceHeight;if(!s||h===i&&n===e)this.clear(),this.drawTexture(t,this._offset?this._offset[0]:0,this._offset?this._offset[1]:0,i,e);else{t.$_GID||(t.$_GID=B.getGID());var o=t.$_GID+"."+i+"."+e+"."+s.join(".");if(B.isOKCmdList(k.I.get(o)))return void(this.cmds=k.I.get(o));this.clear();var r=s[0],l=s[1],a=s[2],c=s[3],u=s[4],_=!1;if(i==h&&(c=l=0),e==n&&(r=a=0),i<c+l){var d=i;_=!0,i=c+l,this.save(),this.clipRect(0,0,d,e)}c&&r&&this.drawTexture(f.getTexture(t,0,0,c,r),0,0,c,r),l&&r&&this.drawTexture(f.getTexture(t,h-l,0,l,r),i-l,0,l,r),c&&a&&this.drawTexture(f.getTexture(t,0,n-a,c,a),0,e-a,c,a),l&&a&&this.drawTexture(f.getTexture(t,h-l,n-a,l,a),i-l,e-a,l,a),r&&this.drawBitmap(u,f.getTexture(t,c,0,h-c-l,r),c,0,i-c-l,r),a&&this.drawBitmap(u,f.getTexture(t,c,n-a,h-c-l,a),c,e-a,i-c-l,a),c&&this.drawBitmap(u,f.getTexture(t,0,r,c,n-r-a),0,r,c,e-r-a),l&&this.drawBitmap(u,f.getTexture(t,h-l,r,l,n-r-a),i-l,r,l,e-r-a),this.drawBitmap(u,f.getTexture(t,c,r,h-c-l,n-r-a),c,r,i-c-l,e-r-a),_&&this.restore(),this.autoCacheCmd&&!C.isConchApp&&k.I.set(o,this.cmds)}this._repaint()}},t.drawBitmap=function(t,i,e,s,h,n){void 0===h&&(h=0),void 0===n&&(n=0),h<.1||n<.1||(!t||i.width==h&&i.height==n?this.drawTexture(i,e,s,h,n):this.fillTexture(i,e,s,h,n))},t.clear=function(t){void 0===t&&(t=!0),i.prototype.clear.call(this,!1)},h(0,t,"sizeGrid",function(){return this._sizeGrid},function(t){this._sizeGrid=t,this._setChanged()}),h(0,t,"width",function(){return this._width?this._width:this._source?this._source.sourceWidth:0},function(t){this._width!=t&&(this._width=t,this._setChanged())}),h(0,t,"height",function(){return this._height?this._height:this._source?this._source.sourceHeight:0},function(t){this._height!=t&&(this._height=t,this._setChanged())}),h(0,t,"source",function(){return this._source},function(t){t?(this._source=t,this._setChanged()):(this._source=null,this.clear())}),f.getTexture=function(t,i,e,s,h){s<=0&&(s=1),h<=0&&(h=1),t.$_GID||(t.$_GID=B.getGID());var n=t.$_GID+"."+i+"."+e+"."+s+"."+h,o=k.I.get(n);return o&&o.source||(o=x.createFromTexture(t,i,e,s,h),k.I.set(n,o)),o},f}(_),P=(function(t){function i(){i.__super.call(this)}n(i,"laya.ui.UIEvent",a),i.SHOW_TIP="showtip",i.HIDE_TIP="hidetip"}(),function(i){function t(){this._comXml=null,this._dataSource=null,this._toolTip=null,this._tag=null,this._disabled=!1,this._gray=!1,this.layoutEnabled=!0,t.__super.call(this),this._layout=I.EMPTY,this.preinitialize(),this.createChildren(),this.initialize()}n(t,"laya.ui.Component",i);var e=t.prototype;return p.imps(e,{"laya.ui.IComponent":!0}),e.destroy=function(t){void 0===t&&(t=!0),i.prototype.destroy.call(this,t),this._dataSource=this._layout=null,this._tag=null,this._toolTip=null},e.preinitialize=function(){},e.createChildren=function(){},e.initialize=function(){},e.callLater=function(t,i){p.timer.callLater(this,t,i)},e.runCallLater=function(t){p.timer.runCallLater(this,t)},e.commitMeasure=function(){},e.changeSize=function(){this.event("resize"),this._layout.enable&&(this.resetLayoutX(),this.resetLayoutY())},e.getLayout=function(){return this._layout===I.EMPTY&&(this._layout=new I),this._layout},e._setLayoutEnabled=function(t){this._layout&&this._layout.enable!=t&&(this._layout.enable=t,this.on("added",this,this.onAdded),this.on("removed",this,this.onRemoved),this.parent&&this.onAdded())},e.onRemoved=function(){this.parent.off("resize",this,this.onCompResize)},e.onAdded=function(){this.parent.on("resize",this,this.onCompResize),this.resetLayoutX(),this.resetLayoutY()},e.onCompResize=function(){this._layout&&this._layout.enable&&(this.resetLayoutX(),this.resetLayoutY())},e.resetLayoutX=function(){var t=this._layout;if(isNaN(t.anchorX)||(this.pivotX=t.anchorX*this.width),this.layoutEnabled){var i=this.parent;i&&(isNaN(t.centerX)?isNaN(t.left)?isNaN(t.right)||(this.x=Math.round(i.width-this.displayWidth-t.right+this.pivotX*this.scaleX)):(this.x=Math.round(t.left+this.pivotX*this.scaleX),isNaN(t.right)||(this.width=(i._width-t.left-t.right)/(this.scaleX||.01))):this.x=Math.round(.5*(i.width-this.displayWidth)+t.centerX+this.pivotX*this.scaleX))}},e.resetLayoutY=function(){var t=this._layout;if(isNaN(t.anchorY)||(this.pivotY=t.anchorY*this.height),this.layoutEnabled){var i=this.parent;i&&(isNaN(t.centerY)?isNaN(t.top)?isNaN(t.bottom)||(this.y=Math.round(i.height-this.displayHeight-t.bottom+this.pivotY*this.scaleY)):(this.y=Math.round(t.top+this.pivotY*this.scaleY),isNaN(t.bottom)||(this.height=(i._height-t.top-t.bottom)/(this.scaleY||.01))):this.y=Math.round(.5*(i.height-this.displayHeight)+t.centerY+this.pivotY*this.scaleY))}},e.onMouseOver=function(t){p.stage.event("showtip",this._toolTip)},e.onMouseOut=function(t){p.stage.event("hidetip",this._toolTip)},e._childChanged=function(t){this.callLater(this.changeSize),i.prototype._childChanged.call(this,t)},h(0,e,"displayWidth",function(){return this.width*this.scaleX}),h(0,e,"width",function(){return this._width?this._width:this.measureWidth},function(t){this._width!=t&&(this._width=t,this.conchModel&&this.conchModel.size(this._width,this._height),this.callLater(this.changeSize),!this._layout.enable||isNaN(this._layout.centerX)&&isNaN(this._layout.right)&&isNaN(this._layout.anchorX)||this.resetLayoutX())}),h(0,e,"measureWidth",function(){var t=0;this.commitMeasure();for(var i=this.numChildren-1;-1<i;i--){var e=this.getChildAt(i);e.visible&&(t=Math.max(e.x+e.width*e.scaleX,t))}return t}),h(0,e,"displayHeight",function(){return this.height*this.scaleY}),h(0,e,"height",function(){return this._height?this._height:this.measureHeight},function(t){this._height!=t&&(this._height=t,this.conchModel&&this.conchModel.size(this._width,this._height),this.callLater(this.changeSize),!this._layout.enable||isNaN(this._layout.centerY)&&isNaN(this._layout.bottom)&&isNaN(this._layout.anchorY)||this.resetLayoutY())}),h(0,e,"dataSource",function(){return this._dataSource},function(t){for(var i in this._dataSource=t,this._dataSource)this.hasOwnProperty(i)&&"function"!=typeof this[i]&&(this[i]=this._dataSource[i])}),h(0,e,"scaleY",i.prototype._$get_scaleY,function(t){p.superGet(b,this,"scaleY")!=t&&(p.superSet(b,this,"scaleY",t),this.callLater(this.changeSize),this._layout.enable&&this.resetLayoutY())}),h(0,e,"measureHeight",function(){var t=0;this.commitMeasure();for(var i=this.numChildren-1;-1<i;i--){var e=this.getChildAt(i);e.visible&&(t=Math.max(e.y+e.height*e.scaleY,t))}return t}),h(0,e,"scaleX",i.prototype._$get_scaleX,function(t){p.superGet(b,this,"scaleX")!=t&&(p.superSet(b,this,"scaleX",t),this.callLater(this.changeSize),this._layout.enable&&this.resetLayoutX())}),h(0,e,"top",function(){return this._layout.top},function(t){t!=this._layout.top&&(this.getLayout().top=t,this._setLayoutEnabled(!0)),this.resetLayoutY()}),h(0,e,"bottom",function(){return this._layout.bottom},function(t){t!=this._layout.bottom&&(this.getLayout().bottom=t,this._setLayoutEnabled(!0)),this.resetLayoutY()}),h(0,e,"left",function(){return this._layout.left},function(t){t!=this._layout.left&&(this.getLayout().left=t,this._setLayoutEnabled(!0)),this.resetLayoutX()}),h(0,e,"right",function(){return this._layout.right},function(t){t!=this._layout.right&&(this.getLayout().right=t,this._setLayoutEnabled(!0)),this.resetLayoutX()}),h(0,e,"centerX",function(){return this._layout.centerX},function(t){t!=this._layout.centerX&&(this.getLayout().centerX=t,this._setLayoutEnabled(!0)),this.resetLayoutX()}),h(0,e,"centerY",function(){return this._layout.centerY},function(t){t!=this._layout.centerY&&(this.getLayout().centerY=t,this._setLayoutEnabled(!0)),this.resetLayoutY()}),h(0,e,"anchorX",function(){return this._layout.anchorX},function(t){t!=this._layout.anchorX&&(this.getLayout().anchorX=t,this._setLayoutEnabled(!0)),this.resetLayoutX()}),h(0,e,"anchorY",function(){return this._layout.anchorY},function(t){t!=this._layout.anchorY&&(this.getLayout().anchorY=t,this._setLayoutEnabled(!0)),this.resetLayoutY()}),h(0,e,"tag",function(){return this._tag},function(t){this._tag=t}),h(0,e,"toolTip",function(){return this._toolTip},function(t){this._toolTip!=t&&(null!=(this._toolTip=t)?(this.on("mouseover",this,this.onMouseOver),this.on("mouseout",this,this.onMouseOut)):(this.off("mouseover",this,this.onMouseOver),this.off("mouseout",this,this.onMouseOut)))}),h(0,e,"comXml",function(){return this._comXml},function(t){this._comXml=t}),h(0,e,"gray",function(){return this._gray},function(t){t!==this._gray&&(this._gray=t,M.gray(this,t))}),h(0,e,"disabled",function(){return this._disabled},function(t){t!==this._disabled&&(this.gray=this._disabled=t,this.mouseEnabled=!t)}),t}(b)),A=function(t){function i(){this.lockLayer=null,this.popupEffect=function(t){t.scale(1,1),w.from(t,{x:p.stage.width/2,y:p.stage.height/2,scaleX:0,scaleY:0},300,l.backOut,d.create(this,this.doOpen,[t]))},this.closeEffect=function(t,i){w.to(t,{x:p.stage.width/2,y:p.stage.height/2,scaleX:0,scaleY:0},300,l.strongOut,d.create(this,this.doClose,[t,i]))},i.__super.call(this),this.maskLayer=new b,this.popupEffectHandler=new d(this,this.popupEffect),this.closeEffectHandler=new d(this,this.closeEffect),this.mouseEnabled=this.maskLayer.mouseEnabled=!0,this.zOrder=1e3,p.stage.addChild(this),p.stage.on("resize",this,this._onResize),z.closeDialogOnSide&&this.maskLayer.on("click",this,this._closeOnSide),this._onResize(null)}n(i,"laya.ui.DialogManager",b);var e=i.prototype;return e._closeOnSide=function(){var t=this.getChildAt(this.numChildren-1);t instanceof laya.ui.Dialog&&t.close("side")},e.setLockView=function(t){this.lockLayer||(this.lockLayer=new N,this.lockLayer.mouseEnabled=!0,this.lockLayer.size(p.stage.width,p.stage.height)),this.lockLayer.removeChildren(),t&&(t.centerX=t.centerY=0,this.lockLayer.addChild(t))},e._onResize=function(t){var i=this.maskLayer.width=p.stage.width,e=this.maskLayer.height=p.stage.height;this.lockLayer&&this.lockLayer.size(i,e),this.maskLayer.graphics.clear(),this.maskLayer.graphics.drawRect(0,0,i,e,z.popupBgColor),this.maskLayer.alpha=z.popupBgAlpha;for(var s=this.numChildren-1;-1<s;s--){var h=this.getChildAt(s);h.popupCenter&&this._centerDialog(h)}},e._centerDialog=function(t){t.x=Math.round((p.stage.width-t.width>>1)+t.pivotX),t.y=Math.round((p.stage.height-t.height>>1)+t.pivotY)},e.open=function(t,i,e){void 0===i&&(i=!1),void 0===e&&(e=!1),i&&this._closeAll(),t.popupCenter&&this._centerDialog(t),this.addChild(t),(t.isModal||this._$P.hasZorder)&&this.timer.callLater(this,this._checkMask),e&&null!=t.popupEffect?t.popupEffect.runWith(t):this.doOpen(t),this.event("open")},e.doOpen=function(t){t.onOpened()},e.lock=function(t){this.lockLayer&&(t?this.addChild(this.lockLayer):this.lockLayer.removeSelf())},e.close=function(t,i,e){void 0===e&&(e=!1),e&&null!=t.closeEffect?t.closeEffect.runWith([t,i]):this.doClose(t,i),this.event("close")},e.doClose=function(t,i){t.removeSelf(),t.isModal&&this._checkMask(),t.closeHandler&&t.closeHandler.runWith(i),t.onClosed(i)},e.closeAll=function(){this._closeAll(),this.event("close")},e._closeAll=function(){for(var t=this.numChildren-1;-1<t;t--){var i=this.getChildAt(t);i&&null!=i.close&&this.doClose(i)}},e.getDialogsByGroup=function(t){for(var i=[],e=this.numChildren-1;-1<e;e--){var s=this.getChildAt(e);s&&s.group===t&&i.push(s)}return i},e.closeByGroup=function(t){for(var i=[],e=this.numChildren-1;-1<e;e--){var s=this.getChildAt(e);s&&s.group===t&&(s.close(),i.push(s))}return i},e._checkMask=function(){this.maskLayer.removeSelf();for(var t=this.numChildren-1;-1<t;t--){var i=this.getChildAt(t);if(i&&i.isModal)return void this.addChildAt(this.maskLayer,t)}},i}(),H=function(i){function e(t){this._bitmap=null,this._skin=null,this._group=null,e.__super.call(this),this.skin=t}n(e,"laya.ui.Image",i);var t=e.prototype;return t.destroy=function(t){void 0===t&&(t=!0),i.prototype.destroy.call(this,!0),this._bitmap&&this._bitmap.destroy(),this._bitmap=null},t.dispose=function(){this.destroy(!0),p.loader.clearRes(this._skin)},t.createChildren=function(){this.graphics=this._bitmap=new T,this._bitmap.autoCacheCmd=!1},t.setSource=function(t,i){t===this._skin&&i&&(this.source=i,this.onCompResize())},h(0,t,"source",function(){return this._bitmap.source},function(t){this._bitmap&&(this._bitmap.source=t,this.event("loaded"),this.repaint())}),h(0,t,"dataSource",i.prototype._$get_dataSource,function(t){"string"==typeof(this._dataSource=t)?this.skin=t:p.superSet(P,this,"dataSource",t)}),h(0,t,"measureHeight",function(){return this._bitmap.height}),h(0,t,"skin",function(){return this._skin},function(t){if(this._skin!=t)if(this._skin=t){var i=m.getRes(t);i?(this.source=i,this.onCompResize()):p.loader.load(this._skin,d.create(this,this.setSource,[this._skin]),null,"image",1,!0,this._group)}else this.source=null}),h(0,t,"group",function(){return this._group},function(t){t&&this._skin&&m.setGroup(this._skin,t),this._group=t}),h(0,t,"sizeGrid",function(){return this._bitmap.sizeGrid?this._bitmap.sizeGrid.join(","):null},function(t){this._bitmap.sizeGrid=M.fillArray(L.defaultSizeGrid,t,Number)}),h(0,t,"measureWidth",function(){return this._bitmap.width}),h(0,t,"width",i.prototype._$get_width,function(t){p.superSet(P,this,"width",t),this._bitmap.width=0==t?1e-7:t}),h(0,t,"height",i.prototype._$get_height,function(t){p.superSet(P,this,"height",t),this._bitmap.height=0==t?1e-7:t}),e}(P),N=function(t){function i(){i.__super.call(this)}n(i,"laya.ui.Box",t);var e=i.prototype;return p.imps(e,{"laya.ui.IBox":!0}),h(0,e,"dataSource",t.prototype._$get_dataSource,function(t){for(var i in this._dataSource=t){var e=this.getChildByName(i);e?e.dataSource=t[i]:this.hasOwnProperty(i)&&"function"!=typeof this[i]&&(this[i]=t[i])}}),i}(P),O=function(i){function e(t,i){this.toggle=!1,this._bitmap=null,this._text=null,this._strokeColors=null,this._state=0,this._selected=!1,this._skin=null,this._autoSize=!0,this._sources=null,this._clickHandler=null,this._stateChanged=!1,e.__super.call(this),this._labelColors=L.buttonLabelColors,this._stateNum=L.buttonStateNum,void 0===i&&(i=""),this.skin=t,this.label=i}n(e,"laya.ui.Button",i);var t=e.prototype;return p.imps(t,{"laya.ui.ISelect":!0}),t.destroy=function(t){void 0===t&&(t=!0),i.prototype.destroy.call(this,t),this._bitmap&&this._bitmap.destroy(),this._text&&this._text.destroy(t),this._bitmap=null,this._text=null,this._clickHandler=null,this._labelColors=this._sources=this._strokeColors=null},t.createChildren=function(){this.graphics=this._bitmap=new T},t.createText=function(){this._text||(this._text=new S,this._text.overflow=S.HIDDEN,this._text.align="center",this._text.valign="middle",this._text.width=this._width,this._text.height=this._height)},t.initialize=function(){1!==this._mouseEnableState&&(this.mouseEnabled=!0,this._setBit(2,!0)),this._createListener("mouseover",this,this.onMouse,null,!1,!1),this._createListener("mouseout",this,this.onMouse,null,!1,!1),this._createListener("mousedown",this,this.onMouse,null,!1,!1),this._createListener("mouseup",this,this.onMouse,null,!1,!1),this._createListener("click",this,this.onMouse,null,!1,!1)},t.onMouse=function(t){if(!1!==this.toggle||!this._selected)return"click"===t.type?(this.toggle&&(this.selected=!this._selected),void(this._clickHandler&&this._clickHandler.run())):void(!this._selected&&(this.state=e.stateMap[t.type]))},t.changeClips=function(){var t=m.getRes(this._skin);if(t){var i=t.sourceWidth,e=t.sourceHeight/this._stateNum;t.$_GID||(t.$_GID=B.getGID());var s=t.$_GID+"-"+this._stateNum,h=k.I.get(s);if(B.isOkTextureList(h)||(h=null),h)this._sources=h;else{if(this._sources=[],1===this._stateNum)this._sources.push(t);else for(var n=0;n<this._stateNum;n++)this._sources.push(x.createFromTexture(t,0,e*n,i,e));k.I.set(s,this._sources)}this._autoSize?(this._bitmap.width=this._width||i,this._bitmap.height=this._height||e,this._text&&(this._text.width=this._bitmap.width,this._text.height=this._bitmap.height)):this._text&&(this._text.x=i)}else console.log("lose skin",this._skin)},t.changeState=function(){this._stateChanged=!1,this.runCallLater(this.changeClips);var t=this._state<this._stateNum?this._state:this._stateNum-1;this._sources&&(this._bitmap.source=this._sources[t]),this.label&&(this._text.color=this._labelColors[t],this._strokeColors&&(this._text.strokeColor=this._strokeColors[t]))},t._setStateChanged=function(){this._stateChanged||(this._stateChanged=!0,this.callLater(this.changeState))},h(0,t,"labelStrokeColor",function(){return this.createText(),this._text.strokeColor},function(t){this.createText(),this._text.strokeColor=t}),h(0,t,"measureHeight",function(){return this.runCallLater(this.changeClips),this._text?Math.max(this._bitmap.height,this._text.height):this._bitmap.height}),h(0,t,"skin",function(){return this._skin},function(t){this._skin!=t&&(this._skin=t,this.callLater(this.changeClips),this._setStateChanged())}),h(0,t,"state",function(){return this._state},function(t){this._state!=t&&(this._state=t,this._setStateChanged())}),h(0,t,"text",function(){return this.createText(),this._text}),h(0,t,"stateNum",function(){return this._stateNum},function(t){"string"==typeof t&&(t=parseInt(t)),this._stateNum!=t&&(this._stateNum=t<1?1:3<t?3:t,this.callLater(this.changeClips))}),h(0,t,"strokeColors",function(){return this._strokeColors?this._strokeColors.join(","):""},function(t){this._strokeColors=M.fillArray(L.buttonLabelColors,t,String),this._setStateChanged()}),h(0,t,"labelColors",function(){return this._labelColors.join(",")},function(t){this._labelColors=M.fillArray(L.buttonLabelColors,t,String),this._setStateChanged()}),h(0,t,"measureWidth",function(){return this.runCallLater(this.changeClips),this._autoSize?this._bitmap.width:(this.runCallLater(this.changeState),this._bitmap.width+(this._text?this._text.width:0))}),h(0,t,"label",function(){return this._text?this._text.text:null},function(t){(this._text||t)&&(this.createText(),this._text.text!=t&&(t&&!this._text.parent&&this.addChild(this._text),this._text.text=(t+"").replace(/\\n/g,"\n"),this._setStateChanged()))}),h(0,t,"selected",function(){return this._selected},function(t){this._selected!=t&&(this._selected=t,this.state=this._selected?2:0,this.event("change"))}),h(0,t,"labelPadding",function(){return this.createText(),this._text.padding.join(",")},function(t){this.createText(),this._text.padding=M.fillArray(L.labelPadding,t,Number)}),h(0,t,"labelSize",function(){return this.createText(),this._text.fontSize},function(t){this.createText(),this._text.fontSize=t}),h(0,t,"labelStroke",function(){return this.createText(),this._text.stroke},function(t){this.createText(),this._text.stroke=t}),h(0,t,"labelBold",function(){return this.createText(),this._text.bold},function(t){this.createText(),this._text.bold=t}),h(0,t,"labelFont",function(){return this.createText(),this._text.font},function(t){this.createText(),this._text.font=t}),h(0,t,"labelAlign",function(){return this.createText(),this._text.align},function(t){this.createText(),this._text.align=t}),h(0,t,"clickHandler",function(){return this._clickHandler},function(t){this._clickHandler=t}),h(0,t,"sizeGrid",function(){return this._bitmap.sizeGrid?this._bitmap.sizeGrid.join(","):null},function(t){this._bitmap.sizeGrid=M.fillArray(L.defaultSizeGrid,t,Number)}),h(0,t,"width",i.prototype._$get_width,function(t){p.superSet(P,this,"width",t),this._autoSize&&(this._bitmap.width=t,this._text&&(this._text.width=t))}),h(0,t,"height",i.prototype._$get_height,function(t){p.superSet(P,this,"height",t),this._autoSize&&(this._bitmap.height=t,this._text&&(this._text.height=t))}),h(0,t,"dataSource",i.prototype._$get_dataSource,function(t){"number"==typeof(this._dataSource=t)||"string"==typeof t?this.label=t+"":p.superSet(P,this,"dataSource",t)}),h(0,t,"iconOffset",function(){return this._bitmap._offset?this._bitmap._offset.join(","):null},function(t){this._bitmap._offset=t?M.fillArray([1,1],t,Number):[]}),s(e,["stateMap",function(){return this.stateMap={mouseup:0,mouseover:1,mousedown:2,mouseout:0}}]),e}(P),Y=function(i){function s(t,i,e){this._sources=null,this._bitmap=null,this._skin=null,this._clipX=1,this._clipY=1,this._clipWidth=0,this._clipHeight=0,this._autoPlay=!1,this._interval=50,this._complete=null,this._isPlaying=!1,this._index=0,this._clipChanged=!1,this._group=null,this._toIndex=-1,s.__super.call(this),void 0===i&&(i=1),void 0===e&&(e=1),this._clipX=i,this._clipY=e,this.skin=t}n(s,"laya.ui.Clip",i);var t=s.prototype;return t.destroy=function(t){void 0===t&&(t=!0),i.prototype.destroy.call(this,!0),this._bitmap&&this._bitmap.destroy(),this._bitmap=null,this._sources=null},t.dispose=function(){this.destroy(!0),p.loader.clearRes(this._skin)},t.createChildren=function(){this.graphics=this._bitmap=new T},t._onDisplay=function(t){this._isPlaying?this._displayedInStage?this.play():this.stop():this._autoPlay&&this.play()},t.changeClip=function(){if(this._clipChanged=!1,this._skin){var t=m.getRes(this._skin);t?this.loadComplete(this._skin,t):p.loader.load(this._skin,d.create(this,this.loadComplete,[this._skin]))}},t.loadComplete=function(t,i){if(t===this._skin&&i){var e=this._clipWidth||Math.ceil(i.sourceWidth/this._clipX),s=this._clipHeight||Math.ceil(i.sourceHeight/this._clipY),h=this._skin+e+s,n=k.I.get(h);if(B.isOkTextureList(n)||(n=null),n)this._sources=n;else{this._sources=[];for(var o=0;o<this._clipY;o++)for(var r=0;r<this._clipX;r++)this._sources.push(x.createFromTexture(i,e*r,s*o,e,s));k.I.set(h,this._sources)}this.index=this._index,this.event("loaded"),this.onCompResize()}},t.play=function(t,i){void 0===t&&(t=0),void 0===i&&(i=-1),this._isPlaying=!0,this.index=t,this._toIndex=i,this._index++,p.timer.loop(this.interval,this,this._loop),this.on("display",this,this._onDisplay),this.on("undisplay",this,this._onDisplay)},t._loop=function(){this._style.visible&&this._sources&&(this._index++,-1<this._toIndex&&this._index>=this._toIndex?this.stop():this._index>=this._sources.length&&(this._index=0),this.index=this._index)},t.stop=function(){this._isPlaying=!1,p.timer.clear(this,this._loop),this.event("complete")},t._setClipChanged=function(){this._clipChanged||(this._clipChanged=!0,this.callLater(this.changeClip))},h(0,t,"interval",function(){return this._interval},function(t){this._interval!=t&&(this._interval=t,this._isPlaying&&this.play())}),h(0,t,"skin",function(){return this._skin},function(t){this._skin!=t&&((this._skin=t)?this._setClipChanged():this._bitmap.source=null)}),h(0,t,"sources",function(){return this._sources},function(t){this._sources=t,this.index=this._index,this.event("loaded")}),h(0,t,"clipX",function(){return this._clipX},function(t){this._clipX=t||1,this._setClipChanged()}),h(0,t,"clipY",function(){return this._clipY},function(t){this._clipY=t||1,this._setClipChanged()}),h(0,t,"total",function(){return this.runCallLater(this.changeClip),this._sources?this._sources.length:0}),h(0,t,"clipWidth",function(){return this._clipWidth},function(t){this._clipWidth=t,this._setClipChanged()}),h(0,t,"sizeGrid",function(){return this._bitmap.sizeGrid?this._bitmap.sizeGrid.join(","):null},function(t){this._bitmap.sizeGrid=M.fillArray(L.defaultSizeGrid,t,Number)}),h(0,t,"group",function(){return this._group},function(t){t&&this._skin&&m.setGroup(this._skin,t),this._group=t}),h(0,t,"clipHeight",function(){return this._clipHeight},function(t){this._clipHeight=t,this._setClipChanged()}),h(0,t,"width",i.prototype._$get_width,function(t){p.superSet(P,this,"width",t),this._bitmap.width=t}),h(0,t,"height",i.prototype._$get_height,function(t){p.superSet(P,this,"height",t),this._bitmap.height=t}),h(0,t,"measureWidth",function(){return this.runCallLater(this.changeClip),this._bitmap.width}),h(0,t,"measureHeight",function(){return this.runCallLater(this.changeClip),this._bitmap.height}),h(0,t,"index",function(){return this._index},function(t){this._index=t,this._bitmap&&this._sources&&(this._bitmap.source=this._sources[t]),this.event("change")}),h(0,t,"autoPlay",function(){return this._autoPlay},function(t){this._autoPlay!=t&&((this._autoPlay=t)?this.play():this.stop())}),h(0,t,"isPlaying",function(){return this._isPlaying},function(t){this._isPlaying=t}),h(0,t,"dataSource",i.prototype._$get_dataSource,function(t){"number"==typeof(this._dataSource=t)&&Math.floor(t)==t||"string"==typeof t?this.index=parseInt(t):p.superSet(P,this,"dataSource",t)}),h(0,t,"bitmap",function(){return this._bitmap}),s}(P),X=function(i){function t(){this.changeHandler=null,this._gridSize=11,this._bgColor="#ffffff",this._borderColor="#000000",this._inputColor="#000000",this._inputBgColor="#efefef",this._colorPanel=null,this._colorTiles=null,this._colorBlock=null,this._colorInput=null,this._colorButton=null,this._colors=[],this._selectedColor="#000000",this._panelChanged=!1,t.__super.call(this)}n(t,"laya.ui.ColorPicker",i);var e=t.prototype;return e.destroy=function(t){void 0===t&&(t=!0),i.prototype.destroy.call(this,t),this._colorPanel&&this._colorPanel.destroy(t),this._colorButton&&this._colorButton.destroy(t),this._colorPanel=null,this._colorTiles=null,this._colorBlock=null,this._colorInput=null,this._colorButton=null,this._colors=null,this.changeHandler=null},e.createChildren=function(){this.addChild(this._colorButton=new O),this._colorPanel=new N,this._colorPanel.size(230,166),this._colorPanel.addChild(this._colorTiles=new b),this._colorPanel.addChild(this._colorBlock=new b),this._colorPanel.addChild(this._colorInput=new f)},e.initialize=function(){this._colorButton.on("click",this,this.onColorButtonClick),this._colorBlock.pos(5,5),this._colorInput.pos(60,5),this._colorInput.size(60,20),this._colorInput.on("change",this,this.onColorInputChange),this._colorInput.on("keydown",this,this.onColorFieldKeyDown),this._colorTiles.pos(5,30),this._colorTiles.on("mousemove",this,this.onColorTilesMouseMove),this._colorTiles.on("click",this,this.onColorTilesClick),this._colorTiles.size(20*this._gridSize,12*this._gridSize),this._colorPanel.on("mousedown",this,this.onPanelMouseDown),this.bgColor=this._bgColor},e.onPanelMouseDown=function(t){t.stopPropagation()},e.changePanel=function(){this._panelChanged=!1;var t=this._colorPanel.graphics;t.clear(),t.drawRect(0,0,230,166,this._bgColor,this._borderColor),this.drawBlock(this._selectedColor),this._colorInput.borderColor=this._borderColor,this._colorInput.bgColor=this._inputBgColor,this._colorInput.color=this._inputColor,(t=this._colorTiles.graphics).clear();for(var i=[0,3355443,6710886,10066329,13421772,16777215,16711680,65280,255,16776960,65535,16711935],e=0;e<12;e++)for(var s=0;s<20;s++){var h=0;h=0===s?i[e]:1===s?0:51*(((3*e+s/6)%3<<0)+3*(e/6<<0))<<16|s%6*51<<8|(e<<0)%6*51;var n=M.toColor(h);this._colors.push(n);var o=s*this._gridSize,r=e*this._gridSize;t.drawRect(o,r,this._gridSize,this._gridSize,n,"#000000")}},e.onColorButtonClick=function(t){this._colorPanel.parent?this.close():this.open()},e.open=function(){var t=this.localToGlobal(new y),i=t.x+this._colorPanel.width<=p.stage.width?t.x:p.stage.width-this._colorPanel.width,e=t.y+this._colorButton.height;e=e+this._colorPanel.height<=p.stage.height?e:t.y-this._colorPanel.height,this._colorPanel.pos(i,e),this._colorPanel.zOrder=1001,p._currentStage.addChild(this._colorPanel),p.stage.on("mousedown",this,this.removeColorBox)},e.close=function(){p.stage.off("mousedown",this,this.removeColorBox),this._colorPanel.removeSelf()},e.removeColorBox=function(t){this.close()},e.onColorFieldKeyDown=function(t){13==t.keyCode&&(this._colorInput.text?this.selectedColor=this._colorInput.text:this.selectedColor=null,this.close(),t.stopPropagation())},e.onColorInputChange=function(t){this._colorInput.text?this.drawBlock(this._colorInput.text):this.drawBlock("#FFFFFF")},e.onColorTilesClick=function(t){this.selectedColor=this.getColorByMouse(),this.close()},e.onColorTilesMouseMove=function(t){this._colorInput.focus=!1;var i=this.getColorByMouse();this._colorInput.text=i,this.drawBlock(i)},e.getColorByMouse=function(){var t=this._colorTiles.getMousePoint(),i=Math.floor(t.x/this._gridSize),e=Math.floor(t.y/this._gridSize);return this._colors[20*e+i]},e.drawBlock=function(t){var i=this._colorBlock.graphics;i.clear();var e=t||"#ffffff";i.drawRect(0,0,50,20,e,this._borderColor),t||i.drawLine(0,0,50,20,"#ff0000")},e.changeColor=function(){var t=this.graphics;t.clear();var i=this._selectedColor||"#000000";t.drawRect(0,0,this._colorButton.width,this._colorButton.height,i)},e._setPanelChanged=function(){this._panelChanged||(this._panelChanged=!0,this.callLater(this.changePanel))},h(0,e,"inputBgColor",function(){return this._inputBgColor},function(t){this._inputBgColor=t,this._setPanelChanged()}),h(0,e,"selectedColor",function(){return this._selectedColor},function(t){this._selectedColor!=t&&(this._selectedColor=this._colorInput.text=t,this.drawBlock(t),this.changeColor(),this.changeHandler&&this.changeHandler.runWith(this._selectedColor),this.event("change",a.EMPTY.setTo("change",this,this)))}),h(0,e,"skin",function(){return this._colorButton.skin},function(t){this._colorButton.skin=t,this.changeColor()}),h(0,e,"bgColor",function(){return this._bgColor},function(t){this._bgColor=t,this._setPanelChanged()}),h(0,e,"borderColor",function(){return this._borderColor},function(t){this._borderColor=t,this._setPanelChanged()}),h(0,e,"inputColor",function(){return this._inputColor},function(t){this._inputColor=t,this._setPanelChanged()}),t}(P),E=function(i){function e(t,i){this._visibleNum=6,this._button=null,this._list=null,this._isOpen=!1,this._itemSize=12,this._labels=[],this._selectedIndex=-1,this._selectHandler=null,this._itemHeight=NaN,this._listHeight=NaN,this._listChanged=!1,this._itemChanged=!1,this._scrollBarSkin=null,this._isCustomList=!1,this.itemRender=null,e.__super.call(this),this._itemColors=L.comboBoxItemColors,this.skin=t,this.labels=i}n(e,"laya.ui.ComboBox",i);var t=e.prototype;return t.destroy=function(t){void 0===t&&(t=!0),i.prototype.destroy.call(this,t),this._button&&this._button.destroy(t),this._list&&this._list.destroy(t),this._button=null,this._list=null,this._itemColors=null,this._labels=null,this._selectHandler=null},t.createChildren=function(){this.addChild(this._button=new O),this._button.text.align="left",this._button.labelPadding="0,0,0,5",this._button.on("mousedown",this,this.onButtonMouseDown)},t._createList=function(){this._list=new j,this._scrollBarSkin&&(this._list.vScrollBarSkin=this._scrollBarSkin),this._setListEvent(this._list)},t._setListEvent=function(t){this._list.selectEnable=!0,this._list.on("mousedown",this,this.onListDown),this._list.mouseHandler=d.create(this,this.onlistItemMouse,null,!1),this._list.scrollBar&&this._list.scrollBar.on("mousedown",this,this.onScrollBarDown)},t.onListDown=function(t){t.stopPropagation()},t.onScrollBarDown=function(t){t.stopPropagation()},t.onButtonMouseDown=function(t){this.callLater(this.switchTo,[!this._isOpen])},t.changeList=function(){this._listChanged=!1;var t=this.width-2,i=this._itemColors[2];this._itemHeight=this._itemSize+6,this._list.itemRender=this.itemRender||{type:"Box",child:[{type:"Label",props:{name:"label",x:1,padding:"3,3,3,3",width:t,height:this._itemHeight,fontSize:this._itemSize,color:i}}]},this._list.repeatY=this._visibleNum,this._list.refresh()},t.onlistItemMouse=function(t,i){var e=t.type;if("mouseover"===e||"mouseout"===e){if(this._isCustomList)return;var s=this._list.getCell(i);if(!s)return;var h=s.getChildByName("label");h&&(h.color="mouseover"===e?(h.bgColor=this._itemColors[0],this._itemColors[1]):(h.bgColor=null,this._itemColors[2]))}else"click"===e&&(this.selectedIndex=i,this.isOpen=!1)},t.switchTo=function(t){this.isOpen=t},t.changeOpen=function(){this.isOpen=!this._isOpen},t.changeItem=function(){if(this._itemChanged=!1,this._listHeight=0<this._labels.length?Math.min(this._visibleNum,this._labels.length)*this._itemHeight:this._itemHeight,!this._isCustomList){var t=this._list.graphics;t.clear(),t.drawRect(0,0,this.width-1,this._listHeight,this._itemColors[4],this._itemColors[3])}for(var i=this._list.array||[],e=i.length=0,s=this._labels.length;e<s;e++)i.push({label:this._labels[e]});this._list.height=this._listHeight,this._list.array=i},t.changeSelected=function(){this._button.label=this.selectedLabel},t._onStageMouseWheel=function(t){this._list&&!this._list.contains(t.target)&&this.removeList(null)},t.removeList=function(t){p.stage.off("mousedown",this,this.removeList),p.stage.off("mousewheel",this,this._onStageMouseWheel),this.isOpen=!1},h(0,t,"selectedIndex",function(){return this._selectedIndex},function(t){this._selectedIndex!=t&&(this._selectedIndex=t,0<this._labels.length?this.changeSelected():this.callLater(this.changeSelected),this.event("change",[a.EMPTY.setTo("change",this,this)]),this._selectHandler&&this._selectHandler.runWith(this._selectedIndex))}),h(0,t,"measureHeight",function(){return this._button.height}),h(0,t,"skin",function(){return this._button.skin},function(t){this._button.skin!=t&&(this._button.skin=t,this._listChanged=!0)}),h(0,t,"measureWidth",function(){return this._button.width}),h(0,t,"width",i.prototype._$get_width,function(t){p.superSet(P,this,"width",t),this._button.width=this._width,this._itemChanged=!0,this._listChanged=!0}),h(0,t,"selectedLabel",function(){return-1<this._selectedIndex&&this._selectedIndex<this._labels.length?this._labels[this._selectedIndex]:null},function(t){this.selectedIndex=this._labels.indexOf(t)}),h(0,t,"labels",function(){return this._labels.join(",")},function(t){0<this._labels.length&&(this.selectedIndex=-1),t?this._labels=t.split(","):this._labels.length=0,this._itemChanged=!0}),h(0,t,"height",i.prototype._$get_height,function(t){p.superSet(P,this,"height",t),this._button.height=this._height}),h(0,t,"selectHandler",function(){return this._selectHandler},function(t){this._selectHandler=t}),h(0,t,"visibleNum",function(){return this._visibleNum},function(t){this._visibleNum=t,this._listChanged=!0}),h(0,t,"labelBold",function(){return this._button.text.bold},function(t){this._button.text.bold=t}),h(0,t,"itemColors",function(){return String(this._itemColors)},function(t){this._itemColors=M.fillArray(this._itemColors,t,String),this._listChanged=!0}),h(0,t,"itemSize",function(){return this._itemSize},function(t){this._itemSize=t,this._listChanged=!0}),h(0,t,"scrollBar",function(){return this.list.scrollBar}),h(0,t,"isOpen",function(){return this._isOpen},function(t){if(this._isOpen!=t)if(this._isOpen=t,this._button.selected=this._isOpen,this._isOpen){this._list||this._createList(),this._listChanged&&!this._isCustomList&&this.changeList(),this._itemChanged&&this.changeItem();var i=this.localToGlobal(y.TEMP.setTo(0,0)),e=i.y+this._button.height;e=e+this._listHeight<=p.stage.height?e:i.y-this._listHeight,this._list.pos(i.x,e),this._list.zOrder=1001,p._currentStage.addChild(this._list),p.stage.once("mousedown",this,this.removeList),p.stage.on("mousewheel",this,this._onStageMouseWheel),this._list.selectedIndex=this._selectedIndex}else this._list&&this._list.removeSelf()}),h(0,t,"scrollBarSkin",function(){return this._scrollBarSkin},function(t){this._scrollBarSkin=t}),h(0,t,"sizeGrid",function(){return this._button.sizeGrid},function(t){this._button.sizeGrid=t}),h(0,t,"button",function(){return this._button}),h(0,t,"list",function(){return this._list||this._createList(),this._list},function(t){t&&(t.removeSelf(),this._isCustomList=!0,this._list=t,this._setListEvent(t),this._itemHeight=t.getCell(0).height+t.spaceY)}),h(0,t,"dataSource",i.prototype._$get_dataSource,function(t){"number"==typeof(this._dataSource=t)&&Math.floor(t)==t||"string"==typeof t?this.selectedIndex=parseInt(t):t instanceof Array?this.labels=t.join(","):p.superSet(P,this,"dataSource",t)}),h(0,t,"labelColors",function(){return this._button.labelColors},function(t){this._button.labelColors!=t&&(this._button.labelColors=t)}),h(0,t,"labelPadding",function(){return this._button.text.padding.join(",")},function(t){this._button.text.padding=M.fillArray(L.labelPadding,t,Number)}),h(0,t,"labelSize",function(){return this._button.text.fontSize},function(t){this._button.text.fontSize=t}),h(0,t,"labelFont",function(){return this._button.text.font},function(t){this._button.text.font=t}),h(0,t,"stateNum",function(){return this._button.stateNum},function(t){this._button.stateNum=t}),e}(P),D=function(i){function e(t){this.rollRatio=.95,this.changeHandler=null,this.scaleBar=!0,this.autoHide=!1,this.elasticDistance=0,this.elasticBackTime=500,this.upButton=null,this.downButton=null,this.slider=null,this._scrollSize=1,this._skin=null,this._thumbPercent=1,this._target=null,this._lastPoint=null,this._lastOffset=0,this._checkElastic=!1,this._isElastic=!1,this._value=NaN,this._hide=!1,this._clickOnly=!0,this._offsets=null,e.__super.call(this),this._showButtons=z.showButtons,this._touchScrollEnable=z.touchScrollEnable,this._mouseWheelEnable=z.mouseWheelEnable,this.skin=t,this.max=1}n(e,"laya.ui.ScrollBar",i);var t=e.prototype;return t.destroy=function(t){void 0===t&&(t=!0),this.stopScroll(),this.target=null,i.prototype.destroy.call(this,t),this.upButton&&this.upButton.destroy(t),this.downButton&&this.downButton.destroy(t),this.slider&&this.slider.destroy(t),this.upButton=this.downButton=null,this.slider=null,this.changeHandler=null,this._offsets=null},t.createChildren=function(){this.addChild(this.slider=new V),this.addChild(this.upButton=new O),this.addChild(this.downButton=new O)},t.initialize=function(){this.slider.showLabel=!1,this.slider.on("change",this,this.onSliderChange),this.slider.setSlider(0,0,0),this.upButton.on("mousedown",this,this.onButtonMouseDown),this.downButton.on("mousedown",this,this.onButtonMouseDown)},t.onSliderChange=function(){this._value!=this.slider.value&&(this.value=this.slider.value)},t.onButtonMouseDown=function(t){var i=t.currentTarget===this.upButton;this.slide(i),p.timer.once(L.scrollBarDelayTime,this,this.startLoop,[i]),p.stage.once("mouseup",this,this.onStageMouseUp)},t.startLoop=function(t){p.timer.frameLoop(1,this,this.slide,[t])},t.slide=function(t){t?this.value-=this._scrollSize:this.value+=this._scrollSize},t.onStageMouseUp=function(t){p.timer.clear(this,this.startLoop),p.timer.clear(this,this.slide)},t.changeScrollBar=function(){this.upButton.visible=this._showButtons,this.downButton.visible=this._showButtons,this._showButtons&&(this.upButton.skin=this._skin.replace(".png","$up.png"),this.downButton.skin=this._skin.replace(".png","$down.png")),this.slider.isVertical?this.slider.y=this._showButtons?this.upButton.height:0:this.slider.x=this._showButtons?this.upButton.width:0,this.resetPositions(),this.repaint()},t.changeSize=function(){i.prototype.changeSize.call(this),this.repaint(),this.resetPositions(),this.event("change"),this.changeHandler&&this.changeHandler.runWith(this.value)},t.resetPositions=function(){this.slider.isVertical?this.slider.height=this.height-(this._showButtons?this.upButton.height+this.downButton.height:0):this.slider.width=this.width-(this._showButtons?this.upButton.width+this.downButton.width:0),this.resetButtonPosition()},t.resetButtonPosition=function(){this.slider.isVertical?this.downButton.y=this.slider.y+this.slider.height:this.downButton.x=this.slider.x+this.slider.width},t.setScroll=function(t,i,e){this.runCallLater(this.changeSize),this.slider.setSlider(t,i,e),this.slider.bar.visible=0<i,!this._hide&&this.autoHide&&(this.visible=!1)},t.onTargetMouseWheel=function(t){this.value-=t.delta*this._scrollSize,this.target=this._target},t.onTargetMouseDown=function(t){this._clickOnly=!0,this._lastOffset=0,this._checkElastic=!1,this._lastPoint||(this._lastPoint=new y),this._lastPoint.setTo(p.stage.mouseX,p.stage.mouseY),p.timer.clear(this,this.tweenMove),w.clearTween(this),p.stage.once("mouseup",this,this.onStageMouseUp2),p.stage.once("mouseout",this,this.onStageMouseUp2),p.timer.frameLoop(1,this,this.loop)},t.loop=function(){var t=p.stage.mouseY,i=p.stage.mouseX;if(this._lastOffset=this.isVertical?t-this._lastPoint.y:i-this._lastPoint.x,this._clickOnly){if(!(1<Math.abs(this._lastOffset*(this.isVertical?p.stage._canvasTransform.getScaleY():p.stage._canvasTransform.getScaleX()))))return;this._clickOnly=!1,this._offsets||(this._offsets=[]),this._offsets.length=0,this._target.mouseEnabled=!1,!this.hide&&this.autoHide&&(this.alpha=1,this.visible=!0),this.event("start")}this._offsets.push(this._lastOffset),this._lastPoint.x=i,this._lastPoint.y=t,0!==this._lastOffset&&(this._checkElastic||(0<this.elasticDistance?this._checkElastic||0==this._lastOffset||(0<this._lastOffset&&this._value<=this.min||this._lastOffset<0&&this._value>=this.max?(this._isElastic=!0,this._checkElastic=!0):this._isElastic=!1):this._checkElastic=!0),this._isElastic?this._value<=this.min?this.value-=this._lastOffset*Math.max(0,1-(this.min-this._value)/this.elasticDistance):this._value>=this.max&&(this.value-=this._lastOffset*Math.max(0,1-(this._value-this.max)/this.elasticDistance)):this.value-=this._lastOffset)},t.onStageMouseUp2=function(t){if(p.stage.off("mouseup",this,this.onStageMouseUp2),p.stage.off("mouseout",this,this.onStageMouseUp2),p.timer.clear(this,this.loop),!(this._clickOnly&&this._value>=this.min&&this._value<=this.max))if(this._target.mouseEnabled=!0,this._isElastic)this._value<this.min?w.to(this,{value:this.min},this.elasticBackTime,l.sineOut,d.create(this,this.elasticOver)):this._value>this.max&&w.to(this,{value:this.max},this.elasticBackTime,l.sineOut,d.create(this,this.elasticOver));else{if(!this._offsets)return;this._offsets.length<1&&(this._offsets[0]=this.isVertical?p.stage.mouseY-this._lastPoint.y:p.stage.mouseX-this._lastPoint.x);for(var i=0,e=Math.min(this._offsets.length,3),s=0;s<e;s++)i+=this._offsets[this._offsets.length-1-s];if(this._lastOffset=i/e,(i=Math.abs(this._lastOffset))<2)return void this.event("end");60<i&&(this._lastOffset=0<this._lastOffset?60:-60);var h=Math.round(Math.abs(this.elasticDistance*(this._lastOffset/240)));p.timer.frameLoop(1,this,this.tweenMove,[h])}},t.elasticOver=function(){this._isElastic=!1,!this.hide&&this.autoHide&&w.to(this,{alpha:0},500),this.event("end")},t.tweenMove=function(t){this._lastOffset*=this.rollRatio;var i=NaN;if(0<t&&(0<this._lastOffset&&this.value<=this.min?(this._isElastic=!0,i=.5*-(this.min-t-this.value),this._lastOffset>i&&(this._lastOffset=i)):this._lastOffset<0&&this.value>=this.max&&(this._isElastic=!0,i=.5*-(this.max+t-this.value),this._lastOffset<i&&(this._lastOffset=i))),this.value-=this._lastOffset,Math.abs(this._lastOffset)<1){if(p.timer.clear(this,this.tweenMove),this._isElastic)return void(this._value<this.min?w.to(this,{value:this.min},this.elasticBackTime,l.sineOut,d.create(this,this.elasticOver)):this._value>this.max?w.to(this,{value:this.max},this.elasticBackTime,l.sineOut,d.create(this,this.elasticOver)):this.elasticOver());this.event("end"),!this.hide&&this.autoHide&&w.to(this,{alpha:0},500)}},t.stopScroll=function(){this.onStageMouseUp2(null),p.timer.clear(this,this.tweenMove),w.clearTween(this)},h(0,t,"measureHeight",function(){return this.slider.isVertical?100:this.slider.height}),h(0,t,"skin",function(){return this._skin},function(t){this._skin!=t&&(this._skin=t,this.slider.skin=this._skin,this.callLater(this.changeScrollBar))}),h(0,t,"max",function(){return this.slider.max},function(t){this.slider.max=t}),h(0,t,"showButtons",function(){return this._showButtons},function(t){this._showButtons=t,this.callLater(this.changeScrollBar)}),h(0,t,"measureWidth",function(){return this.slider.isVertical?this.slider.width:100}),h(0,t,"min",function(){return this.slider.min},function(t){this.slider.min=t}),h(0,t,"value",function(){return this._value},function(t){t!==this._value&&(this._value=t,this._isElastic||(this.slider._value!=t&&(this.slider._value=t,this.slider.changeValue()),this._value=this.slider._value),this.event("change"),this.changeHandler&&this.changeHandler.runWith(this._value))}),h(0,t,"isVertical",function(){return this.slider.isVertical},function(t){this.slider.isVertical=t}),h(0,t,"sizeGrid",function(){return this.slider.sizeGrid},function(t){this.slider.sizeGrid=t}),h(0,t,"scrollSize",function(){return this._scrollSize},function(t){this._scrollSize=t}),h(0,t,"dataSource",i.prototype._$get_dataSource,function(t){"number"==typeof(this._dataSource=t)||"string"==typeof t?this.value=Number(t):p.superSet(P,this,"dataSource",t)}),h(0,t,"thumbPercent",function(){return this._thumbPercent},function(t){this.runCallLater(this.changeScrollBar),this.runCallLater(this.changeSize),t=1<=t?.99:t,this._thumbPercent=t,this.scaleBar&&(this.slider.isVertical?this.slider.bar.height=Math.max(this.slider.height*t,L.scrollBarMinNum):this.slider.bar.width=Math.max(this.slider.width*t,L.scrollBarMinNum))}),h(0,t,"target",function(){return this._target},function(t){this._target&&(this._target.off("mousewheel",this,this.onTargetMouseWheel),this._target.off("mousedown",this,this.onTargetMouseDown)),(this._target=t)&&(this._mouseWheelEnable&&this._target.on("mousewheel",this,this.onTargetMouseWheel),this._touchScrollEnable&&this._target.on("mousedown",this,this.onTargetMouseDown))}),h(0,t,"hide",function(){return this._hide},function(t){this._hide=t,this.visible=!t}),h(0,t,"touchScrollEnable",function(){return this._touchScrollEnable},function(t){this._touchScrollEnable=t,this.target=this._target}),h(0,t,"mouseWheelEnable",function(){return this._mouseWheelEnable},function(t){this._mouseWheelEnable=t,this.target=this._target}),h(0,t,"tick",function(){return this.slider.tick},function(t){this.slider.tick=t}),e}(P),V=function(i){function e(t){this.changeHandler=null,this.isVertical=!0,this.showLabel=!0,this._allowClickBack=!1,this._max=100,this._min=0,this._tick=1,this._value=0,this._skin=null,this._bg=null,this._progress=null,this._bar=null,this._tx=NaN,this._ty=NaN,this._maxMove=NaN,this._globalSacle=null,e.__super.call(this),this.skin=t}n(e,"laya.ui.Slider",i);var t=e.prototype;return t.destroy=function(t){void 0===t&&(t=!0),i.prototype.destroy.call(this,t),this._bg&&this._bg.destroy(t),this._bar&&this._bar.destroy(t),this._progress&&this._progress.destroy(t),this._bg=null,this._bar=null,this._progress=null,this.changeHandler=null},t.createChildren=function(){this.addChild(this._bg=new H),this.addChild(this._bar=new O)},t.initialize=function(){this._bar.on("mousedown",this,this.onBarMouseDown),this._bg.sizeGrid=this._bar.sizeGrid="4,4,4,4,0",this._progress&&(this._progress.sizeGrid=this._bar.sizeGrid),this.allowClickBack=!0},t.onBarMouseDown=function(t){this._globalSacle||(this._globalSacle=new y),this._globalSacle.setTo(this.globalScaleX||.01,this.globalScaleY||.01),this._maxMove=this.isVertical?this.height-this._bar.height:this.width-this._bar.width,this._tx=p.stage.mouseX,this._ty=p.stage.mouseY,p.stage.on("mousemove",this,this.mouseMove),p.stage.once("mouseup",this,this.mouseUp),p.stage.once("mouseout",this,this.mouseUp),this.showValueText()},t.showValueText=function(){if(this.showLabel){var t=laya.ui.Slider.label;this.addChild(t),t.textField.changeText(this._value+""),this.isVertical?(t.x=this._bar.x+20,t.y=.5*(this._bar.height-t.height)+this._bar.y):(t.y=this._bar.y-20,t.x=.5*(this._bar.width-t.width)+this._bar.x)}},t.hideValueText=function(){laya.ui.Slider.label&&laya.ui.Slider.label.removeSelf()},t.mouseUp=function(t){p.stage.off("mousemove",this,this.mouseMove),p.stage.off("mouseup",this,this.mouseUp),p.stage.off("mouseout",this,this.mouseUp),this.sendChangeEvent("changed"),this.hideValueText()},t.mouseMove=function(t){var i=this._value;this.isVertical?(this._bar.y+=(p.stage.mouseY-this._ty)/this._globalSacle.y,this._bar.y>this._maxMove?this._bar.y=this._maxMove:this._bar.y<0&&(this._bar.y=0),this._value=this._bar.y/this._maxMove*(this._max-this._min)+this._min,this._progress&&(this._progress.height=this._bar.y+.5*this._bar.height)):(this._bar.x+=(p.stage.mouseX-this._tx)/this._globalSacle.x,this._bar.x>this._maxMove?this._bar.x=this._maxMove:this._bar.x<0&&(this._bar.x=0),this._value=this._bar.x/this._maxMove*(this._max-this._min)+this._min,this._progress&&(this._progress.width=this._bar.x+.5*this._bar.width)),this._tx=p.stage.mouseX,this._ty=p.stage.mouseY;var e=Math.pow(10,(this._tick+"").length-1);this._value=Math.round(Math.round(this._value/this._tick)*this._tick*e)/e,this._value!=i&&this.sendChangeEvent(),this.showValueText()},t.sendChangeEvent=function(t){void 0===t&&(t="change"),this.event(t),this.changeHandler&&this.changeHandler.runWith(this._value)},t.setBarPoint=function(){this.isVertical?this._bar.x=Math.round(.5*(this._bg.width-this._bar.width)):this._bar.y=Math.round(.5*(this._bg.height-this._bar.height))},t.changeSize=function(){i.prototype.changeSize.call(this),this.isVertical?this._bg.height=this.height:this._bg.width=this.width,this.setBarPoint(),this.changeValue()},t.setSlider=function(t,i,e){this._value=-1,this._min=t,this._max=t<i?i:t,this.value=e<t?t:i<e?i:e},t.changeValue=function(){var t=Math.pow(10,(this._tick+"").length-1);this._value=Math.round(Math.round(this._value/this._tick)*this._tick*t)/t,this._value=this._value>this._max?this._max:this._value<this._min?this._min:this._value;var i=this._max-this._min;0===i&&(i=1),this.isVertical?(this._bar.y=(this._value-this._min)/i*(this.height-this._bar.height),this._progress&&(this._progress.height=this._bar.y+.5*this._bar.height)):(this._bar.x=(this._value-this._min)/i*(this.width-this._bar.width),this._progress&&(this._progress.width=this._bar.x+.5*this._bar.width))},t.onBgMouseDown=function(t){var i=this._bg.getMousePoint();this.isVertical?this.value=i.y/(this.height-this._bar.height)*(this._max-this._min)+this._min:this.value=i.x/(this.width-this._bar.width)*(this._max-this._min)+this._min},h(0,t,"measureHeight",function(){return Math.max(this._bg.height,this._bar.height)}),h(0,t,"skin",function(){return this._skin},function(t){if(this._skin!=t){this._skin=t,this._bg.skin=this._skin,this._bar.skin=this._skin.replace(".png","$bar.png");var i=this._skin.replace(".png","$progress.png");m.getRes(i)&&(this._progress||(this.addChild(this._progress=new H),this._progress.sizeGrid=this._bar.sizeGrid,this.setChildIndex(this._progress,1)),this._progress.skin=i),this.setBarPoint(),this.callLater(this.changeValue)}}),h(0,t,"allowClickBack",function(){return this._allowClickBack},function(t){this._allowClickBack!=t&&((this._allowClickBack=t)?this._bg.on("mousedown",this,this.onBgMouseDown):this._bg.off("mousedown",this,this.onBgMouseDown))}),h(0,t,"max",function(){return this._max},function(t){this._max!=t&&(this._max=t,this.callLater(this.changeValue))}),h(0,t,"measureWidth",function(){return Math.max(this._bg.width,this._bar.width)}),h(0,t,"tick",function(){return this._tick},function(t){this._tick!=t&&(this._tick=t,this.callLater(this.changeValue))}),h(0,t,"sizeGrid",function(){return this._bg.sizeGrid},function(t){this._bg.sizeGrid=t,this._bar.sizeGrid=t,this._progress&&(this._progress.sizeGrid=this._bar.sizeGrid)}),h(0,t,"min",function(){return this._min},function(t){this._min!=t&&(this._min=t,this.callLater(this.changeValue))}),h(0,t,"value",function(){return this._value},function(t){if(this._value!=t){var i=this._value;this._value=t,this.changeValue(),this._value!=i&&this.sendChangeEvent()}}),h(0,t,"dataSource",i.prototype._$get_dataSource,function(t){"number"==typeof(this._dataSource=t)||"string"==typeof t?this.value=Number(t):p.superSet(P,this,"dataSource",t)}),h(0,t,"bar",function(){return this._bar}),s(e,["label",function(){return this.label=new G}]),e}(P),G=function(i){function e(t){this._tf=null,e.__super.call(this),void 0===t&&(t=""),c.defaultColor=L.labelColor,this.text=t}n(e,"laya.ui.Label",i);var t=e.prototype;return t.destroy=function(t){void 0===t&&(t=!0),i.prototype.destroy.call(this,t),this._tf=null},t.createChildren=function(){this.addChild(this._tf=new S)},t.changeText=function(t){this._tf.changeText(t)},h(0,t,"padding",function(){return this._tf.padding.join(",")},function(t){this._tf.padding=M.fillArray(L.labelPadding,t,Number)}),h(0,t,"bold",function(){return this._tf.bold},function(t){this._tf.bold=t}),h(0,t,"align",function(){return this._tf.align},function(t){this._tf.align=t}),h(0,t,"text",function(){return this._tf.text},function(t){this._tf.text!=t&&(t&&(t=M.adptString(t+"")),this._tf.text=t,this.event("change"),this._width&&this._height||this.onCompResize())}),h(0,t,"italic",function(){return this._tf.italic},function(t){this._tf.italic=t}),h(0,t,"wordWrap",function(){return this._tf.wordWrap},function(t){this._tf.wordWrap=t}),h(0,t,"font",function(){return this._tf.font},function(t){this._tf.font=t}),h(0,t,"dataSource",i.prototype._$get_dataSource,function(t){"number"==typeof(this._dataSource=t)||"string"==typeof t?this.text=t+"":p.superSet(P,this,"dataSource",t)}),h(0,t,"color",function(){return this._tf.color},function(t){this._tf.color=t}),h(0,t,"valign",function(){return this._tf.valign},function(t){this._tf.valign=t}),h(0,t,"leading",function(){return this._tf.leading},function(t){this._tf.leading=t}),h(0,t,"fontSize",function(){return this._tf.fontSize},function(t){this._tf.fontSize=t}),h(0,t,"bgColor",function(){return this._tf.bgColor},function(t){this._tf.bgColor=t}),h(0,t,"borderColor",function(){return this._tf.borderColor},function(t){this._tf.borderColor=t}),h(0,t,"stroke",function(){return this._tf.stroke},function(t){this._tf.stroke=t}),h(0,t,"strokeColor",function(){return this._tf.strokeColor},function(t){this._tf.strokeColor=t}),h(0,t,"textField",function(){return this._tf}),h(0,t,"measureWidth",function(){return this._tf.width}),h(0,t,"measureHeight",function(){return this._tf.height}),h(0,t,"width",function(){return this._width||this._tf.text?p.superGet(P,this,"width"):0},function(t){p.superSet(P,this,"width",t),this._tf.width=t}),h(0,t,"height",function(){return this._height||this._tf.text?p.superGet(P,this,"height"):0},function(t){p.superSet(P,this,"height",t),this._tf.height=t}),h(0,t,"overflow",function(){return this._tf.overflow},function(t){this._tf.overflow=t}),h(0,t,"underline",function(){return this._tf.underline},function(t){this._tf.underline=t}),h(0,t,"underlineColor",function(){return this._tf.underlineColor},function(t){this._tf.underlineColor=t}),e}(P),R=function(i){function e(t){this.changeHandler=null,this._bg=null,this._bar=null,this._skin=null,this._value=.5,e.__super.call(this),this.skin=t}n(e,"laya.ui.ProgressBar",i);var t=e.prototype;return t.destroy=function(t){void 0===t&&(t=!0),i.prototype.destroy.call(this,t),this._bg&&this._bg.destroy(t),this._bar&&this._bar.destroy(t),this._bg=this._bar=null,this.changeHandler=null},t.createChildren=function(){this.addChild(this._bg=new H),this.addChild(this._bar=new H),this._bar._bitmap.autoCacheCmd=!1},t.changeValue=function(){if(this.sizeGrid){var t=this.sizeGrid.split(","),i=Number(t[3]),e=Number(t[1]),s=(this.width-i-e)*this._value;this._bar.width=i+e+s,this._bar.visible=this._bar.width>i+e}else this._bar.width=this.width*this._value},h(0,t,"measureHeight",function(){return this._bg.height}),h(0,t,"skin",function(){return this._skin},function(t){this._skin!=t&&(this._skin=t,this._bg.skin=this._skin,this._bar.skin=this._skin.replace(".png","$bar.png"),this.callLater(this.changeValue))}),h(0,t,"measureWidth",function(){return this._bg.width}),h(0,t,"height",i.prototype._$get_height,function(t){p.superSet(P,this,"height",t),this._bg.height=this._height,this._bar.height=this._height}),h(0,t,"bar",function(){return this._bar}),h(0,t,"value",function(){return this._value},function(t){this._value!=t&&(t=1<t?1:t<0?0:t,this._value=t,this.callLater(this.changeValue),this.event("change"),this.changeHandler&&this.changeHandler.runWith(t))}),h(0,t,"bg",function(){return this._bg}),h(0,t,"sizeGrid",function(){return this._bg.sizeGrid},function(t){this._bg.sizeGrid=this._bar.sizeGrid=t}),h(0,t,"width",i.prototype._$get_width,function(t){p.superSet(P,this,"width",t),this._bg.width=this._width,this.callLater(this.changeValue)}),h(0,t,"dataSource",i.prototype._$get_dataSource,function(t){"number"==typeof(this._dataSource=t)||"string"==typeof t?this.value=Number(t):p.superSet(P,this,"dataSource",t)}),e}(P),W=(function(t){function e(){this._tipBox=null,this._tipText=null,this._defaultTipHandler=null,e.__super.call(this),this._tipBox=new P,this._tipBox.addChild(this._tipText=new S),this._tipText.x=this._tipText.y=5,this._tipText.color=e.tipTextColor,this._defaultTipHandler=this._showDefaultTip,p.stage.on("showtip",this,this._onStageShowTip),p.stage.on("hidetip",this,this._onStageHideTip),this.zOrder=1100}n(e,"laya.ui.TipManager",P);var i=e.prototype;i._onStageHideTip=function(t){p.timer.clear(this,this._showTip),this.closeAll(),this.removeSelf()},i._onStageShowTip=function(t){p.timer.once(e.tipDelay,this,this._showTip,[t],!0)},i._showTip=function(t){if("string"==typeof t){var i=String(t);Boolean(i)&&this._defaultTipHandler(i)}else t instanceof laya.utils.Handler?t.run():"function"==typeof t&&t.apply();p.stage.on("mousemove",this,this._onStageMouseMove),p.stage.on("mousedown",this,this._onStageMouseDown),this._onStageMouseMove(null)},i._onStageMouseDown=function(t){this.closeAll()},i._onStageMouseMove=function(t){this._showToStage(this,e.offsetX,e.offsetY)},i._showToStage=function(t,i,e){void 0===i&&(i=0),void 0===e&&(e=0);var s=t.getBounds();t.x=p.stage.mouseX+i,t.y=p.stage.mouseY+e,t.x+s.width>p.stage.width&&(t.x-=s.width+i),t.y+s.height>p.stage.height&&(t.y-=s.height+e)},i.closeAll=function(){p.timer.clear(this,this._showTip),p.stage.off("mousemove",this,this._onStageMouseMove),p.stage.off("mousedown",this,this._onStageMouseDown),this.removeChildren()},i.showDislayTip=function(t){this.addChild(t),this._showToStage(this),p._currentStage.addChild(this)},i._showDefaultTip=function(t){this._tipText.text=t;var i=this._tipBox.graphics;i.clear(),i.drawRect(0,0,this._tipText.width+10,this._tipText.height+10,e.tipBackColor),this.addChild(this._tipBox),this._showToStage(this),p._currentStage.addChild(this)},h(0,i,"defaultTipHandler",function(){return this._defaultTipHandler},function(t){this._defaultTipHandler=t}),e.offsetX=10,e.offsetY=15,e.tipTextColor="#ffffff",e.tipBackColor="#111111",e.tipDelay=200}(),function(i){function e(t){this.advsListArr=[],this.resUrl="https://unioncdn.layabox.com/config/iconlist.json",this._data=[],this._resquestTime=36e4,this._appid=null,this._appCodeImgStr=null,this._playIndex=0,this._lunboTime=5e3,e.__super.call(this),this._http=new o.window.XMLHttpRequest,this.skin=t,this.init(),this.size(120,120)}n(e,"laya.ui.AdvImage",i);var t=e.prototype;t.init=function(){o.onMiniGame&&this.isSupportJump?(p.timer.loop(this._resquestTime,this,this.onGetAdvsListData),this.onGetAdvsListData(),this.initEvent()):this.visible=!1},t.initEvent=function(){this.on("click",this,this.onAdvsImgClick)},t.onAdvsImgClick=function(){this.getCurrentAppidObj()&&this.jumptoGame()},t.revertAdvsData=function(){this.advsListArr[this._playIndex]&&(this.visible=!0,this.skin=this.advsListArr[this._playIndex])},t.jumptoGame=function(){var t=this;o.onMiniGame&&this.isSupportJump&&wx.navigateToMiniProgram({appId:this._appid,path:"",extraData:"",envVersion:"release",success:function(){console.log("-------------跳转成功--------------")},fail:function(){console.log("-------------跳转失败--------------")},complete:function(){console.log("-------------跳转接口调用成功--------------"),t.updateAdvsInfo()}.bind(this)})},t.updateAdvsInfo=function(){this.visible=!1,this.onLunbo(),p.timer.loop(this._lunboTime,this,this.onLunbo)},t.onLunbo=function(){this._playIndex>=this.advsListArr.length-1?this._playIndex=0:this._playIndex+=1,this.visible=!0,this.revertAdvsData()},t.getCurrentAppidObj=function(){return this.advsListArr[this._playIndex]},t.onGetAdvsListData=function(){var i=this,t=this.randRange(1e4,1e6),e=this.resUrl+"?"+t;this._http.open("get",e,!0),this._http.setRequestHeader("Content-Type","application/x-www-form-urlencoded"),this._http.responseType="text",this._http.onerror=function(t){i._onError(t)},this._http.onload=function(t){i._onLoad(t)},this._http.send(null)},t.randRange=function(t,i){return Math.floor(Math.random()*(i-t+1))+t},t._onError=function(t){this.error("Request failed Status:"+this._http.status+" text:"+this._http.statusText)},t._onLoad=function(t){var i=this._http,e=void 0!==i.status?i.status:200;200===e||204===e||0===e?this.complete():this.error("["+i.status+"]"+i.statusText+":"+i.responseURL)},t.error=function(t){this.event("error",t)},t.complete=function(){try{this._data=this._http.response||this._http.responseText,this._data=JSON.parse(this._data),this.advsListArr=this._data.list,this._appid=this._data.appid,this._appCodeImgStr=this._data.qrcode,this.updateAdvsInfo(),this.revertAdvsData()}catch(t){!1,this.error(t.message)}},t.clear=function(){var t=this._http;t.onerror=t.onabort=t.onprogress=t.onload=null},t.destroy=function(t){void 0===t&&(t=!0),i.prototype.destroy.call(this,!0),p.timer.clear(this,this.onLunbo),p.timer.clear(this,this.onGetAdvsListData),this.clear()},h(0,t,"isSupportJump",function(){return!!o.onMiniGame&&"function"==typeof wx.navigateToMiniProgram})}(H),function(t){var d;function f(){this._idMap=null,this._aniList=null,this._watchMap={},f.__super.call(this)}n(f,"laya.ui.View",N);var i=f.prototype;return i.createView=function(t){if(t.animations&&!this._idMap&&(this._idMap={}),f.createComp(t,this,this),t.animations){var i,e,s=[],h=t.animations,n=0,o=h.length;for(n=0;n<o;n++){switch(i=new u,e=h[n],i._setUp(this._idMap,e),(this[e.name]=i)._setControlNode(this),e.action){case 1:i.play(0,!1);break;case 2:i.play(0,!0)}s.push(i)}this._aniList=s}0<this._width&&null==t.props.hitTestPrior&&!this.mouseThrough&&(this.hitTestPrior=!0)},i.onEvent=function(t,i){},i.loadUI=function(t){var i=f.uiMap[t];i&&this.createView(i)},i.destroy=function(t){void 0===t&&(t=!0),this._aniList&&(this._aniList.length=0),this._idMap=null,this._aniList=null,this._watchMap=null,laya.ui.Component.prototype.destroy.call(this,t)},i.changeData=function(t){var i=this._watchMap[t];if(i){console.log("change",t);for(var e=0,s=i.length;e<s;e++){i[e].exe(this)}}},f._regs=function(){for(var t in f.uiClassMap)g.regClass(t,f.uiClassMap[t])},f.createComp=function(t,i,e,s){if(!(i=i||f.getCompInstance(t)))return console.warn("can not create:"+t.type),null;var h=t.child;if(h)for(var n=i instanceof laya.ui.List,o=0,r=h.length;o<r;o++){var l=h[o];if(!i.hasOwnProperty("itemRender")||"render"!=l.props.name&&"render"!==l.props.renderType)if("Graphic"==l.type)g.addGraphicsToSprite(l,i);else if(g.isDrawType(l.type))g.addGraphicToSprite(l,i,!0);else{if(n){var a=[],c=f.createComp(l,null,e,a);a.length&&(c._$bindData=a)}else c=f.createComp(l,null,e,s);"Script"==l.type?"owner"in c?c.owner=i:"target"in c&&(c.target=i):"mask"==l.props.renderType||"mask"==l.props.name?i.mask=c:c instanceof laya.display.Sprite&&i.addChild(c)}else i.itemRender=l}var u=t.props;for(var _ in u){var d=u[_];f.eventDic[_]?d&&e&&i.on(_,e,e.onEvent,[d]):f.setCompValue(i,_,d,e,s)}return p.__typeof(i,"laya.ui.IItem")&&i.initItems(),t.compId&&e&&e._idMap&&(e._idMap[t.compId]=i),i},f.setCompValue=function(t,i,e,s,h){if("string"==typeof e&&-1<e.indexOf("${")){if(f._sheet||(f._sheet=g.getClass("laya.data.Table")),!f._sheet)return void console.warn("Can not find class Sheet");if(h)h.push(t,i,e);else if(s){-1==e.indexOf("].")&&(e=e.replace(".","[0]."));var n,o,r=new d(t,i,e);r.exe(s);for(var l=e.replace(/\[.*?\]\./g,".");null!=(n=f._parseWatchData.exec(l));){for(var a=n[1];null!=(o=f._parseKeyWord.exec(a));){var c=o[0],u=s._watchMap[c]||(s._watchMap[c]=[]);u.push(r),f._sheet.I.notifer.on(c,s,s.changeData,[c])}(u=s._watchMap[a]||(s._watchMap[a]=[])).push(r),f._sheet.I.notifer.on(a,s,s.changeData,[a])}}}else if("var"===i&&s)s[e]=t;else if("onClick"==i){var _=p._runScript("(function(){"+e+"})");t.on("click",s,_)}else t[i]="true"===e||"false"!==e&&e},f.getCompInstance=function(t){var i,e=t.props?t.props.runtime:null;return i=e?f.viewClassMap[e]||f.uiClassMap[e]||p.__classmap[e]:f.uiClassMap[t.type],t.props&&t.props.hasOwnProperty("renderType")&&"instance"==t.props.renderType?i.instance:i?new i:null},f.regComponent=function(t,i){f.uiClassMap[t]=i,g.regClass(t,i)},f.regViewRuntime=function(t,i){f.viewClassMap[t]=i},f.uiMap={},f.viewClassMap={},f._sheet=null,s(f,["uiClassMap",function(){return this.uiClassMap={ViewStack:it,LinkButton:O,TextArea:ct,ColorPicker:X,Box:N,Button:O,CheckBox:$,Clip:Y,ComboBox:E,Component:P,HScrollBar:q,HSlider:Z,Image:H,Label:G,List:j,Panel:K,ProgressBar:R,Radio:Q,RadioGroup:lt,ScrollBar:D,Slider:V,Tab:at,TextInput:st,View:f,VScrollBar:et,VSlider:ht,Tree:tt,HBox:ot,VBox:rt,Sprite:b,Animation:e,Text:S,FontClip:U}},"eventDic",function(){return this.eventDic={mousedown:!0,mouseup:!0,mousemove:!0,mouseover:!0,mouseout:!0,click:!0,doubleclick:!0,rightmousedown:!0,rightmouseup:!0,rightclick:!0}},"_parseWatchData",function(){return this._parseWatchData=/\${(.*?)}/g},"_parseKeyWord",function(){return this._parseKeyWord=/[a-zA-Z_][a-zA-Z0-9_]*(?:(?:\.[a-zA-Z_][a-zA-Z0-9_]*)+)/g}]),f.__init$=function(){f._regs(),d=function(){function t(t,i,e){this.comp=null,this.prop=null,this.value=null,this.comp=t,this.prop=i,this.value=e}return n(t,""),t.prototype.exe=function(t){var i=M.getBindFun(this.value);this.comp[this.prop]=i.call(this,t)},t}()},f}()),$=function(t){function e(t,i){void 0===i&&(i=""),e.__super.call(this,t,i)}n(e,"laya.ui.CheckBox",t);var i=e.prototype;return i.preinitialize=function(){laya.ui.Component.prototype.preinitialize.call(this),this.toggle=!0,this._autoSize=!1},i.initialize=function(){t.prototype.initialize.call(this),this.createText(),this._text.align="left",this._text.valign="top",this._text.width=0},h(0,i,"dataSource",t.prototype._$get_dataSource,function(t){"boolean"==typeof(this._dataSource=t)?this.selected=t:"string"==typeof t?this.selected="true"===t:p.superSet(O,this,"dataSource",t)}),e}(O),F=function(t){function i(){this._space=0,this._align="none",this._itemChanged=!1,i.__super.call(this)}n(i,"laya.ui.LayoutBox",N);var e=i.prototype;return e.addChild=function(t){return t.on("resize",this,this.onResize),this._setItemChanged(),laya.display.Node.prototype.addChild.call(this,t)},e.onResize=function(t){this._setItemChanged()},e.addChildAt=function(t,i){return t.on("resize",this,this.onResize),this._setItemChanged(),laya.display.Node.prototype.addChildAt.call(this,t,i)},e.removeChildAt=function(t){return this.getChildAt(t).off("resize",this,this.onResize),this._setItemChanged(),laya.display.Node.prototype.removeChildAt.call(this,t)},e.refresh=function(){this._setItemChanged()},e.changeItems=function(){this._itemChanged=!1},e.sortItem=function(t){t&&t.sort(function(t,i){return t.y-i.y})},e._setItemChanged=function(){this._itemChanged||(this._itemChanged=!0,this.callLater(this.changeItems))},h(0,e,"space",function(){return this._space},function(t){this._space=t,this._setItemChanged()}),h(0,e,"align",function(){return this._align},function(t){this._align=t,this._setItemChanged()}),i}(),U=function(i){function e(t,i){this._valueArr=null,this._indexMap=null,this._sheet=null,this._direction="horizontal",this._spaceX=0,this._spaceY=0,this._align="left",this._wordsW=0,this._wordsH=0,e.__super.call(this),t&&(this.skin=t),i&&(this.sheet=i)}n(e,"laya.ui.FontClip",i);var t=e.prototype;return t.createChildren=function(){this._bitmap=new T,this.on("loaded",this,this._onClipLoaded)},t._onClipLoaded=function(){this.callLater(this.changeValue)},t.changeValue=function(){var t;if(this._sources&&(this._valueArr&&(this.graphics.clear(!0),t=this._sources[0]))){var i="horizontal"===this._direction;this._wordsH=i?(this._wordsW=this._valueArr.length*(t.sourceWidth+this.spaceX),t.sourceHeight):(this._wordsW=t.sourceWidth,(t.sourceHeight+this.spaceY)*this._valueArr.length);var e=0;if(this._width)switch(this._align){case"center":e=.5*(this._width-this._wordsW);break;case"right":e=this._width-this._wordsW;break;default:e=0}for(var s=0,h=this._valueArr.length;s<h;s++){var n=this._indexMap[this._valueArr.charAt(s)];this.sources[n]&&(t=this.sources[n],i?this.graphics.drawTexture(t,e+s*(t.sourceWidth+this.spaceX),0,t.sourceWidth,t.sourceHeight):this.graphics.drawTexture(t,0+e,s*(t.sourceHeight+this.spaceY),t.sourceWidth,t.sourceHeight))}this._width||(this.resetLayoutX(),this.callLater(this.changeSize)),this._height||(this.resetLayoutY(),this.callLater(this.changeSize))}},t.destroy=function(t){void 0===t&&(t=!0),this._valueArr=null,this._indexMap=null,this.graphics.clear(!0),this.removeSelf(),this.off("loaded",this,this._onClipLoaded),i.prototype.destroy.call(this,t)},h(0,t,"sheet",function(){return this._sheet},function(t){t+="";var i=(this._sheet=t).split(" ");this._clipX=String(i[0]).length,this.clipY=i.length,this._indexMap={};for(var e=0;e<this._clipY;e++)for(var s=i[e].split(""),h=0,n=s.length;h<n;h++)this._indexMap[s[h]]=e*this._clipX+h}),h(0,t,"height",i.prototype._$get_height,function(t){p.superSet(Y,this,"height",t),this.callLater(this.changeValue)}),h(0,t,"direction",function(){return this._direction},function(t){this._direction=t,this.callLater(this.changeValue)}),h(0,t,"value",function(){return this._valueArr?this._valueArr:""},function(t){t+="",this._valueArr=t,this.callLater(this.changeValue)}),h(0,t,"width",i.prototype._$get_width,function(t){p.superSet(Y,this,"width",t),this.callLater(this.changeValue)}),h(0,t,"spaceX",function(){return this._spaceX},function(t){this._spaceX=t,"horizontal"===this._direction&&this.callLater(this.changeValue)}),h(0,t,"spaceY",function(){return this._spaceY},function(t){this._spaceY=t,"horizontal"!==this._direction&&this.callLater(this.changeValue)}),h(0,t,"align",function(){return this._align},function(t){this._align=t,this.callLater(this.changeValue)}),h(0,t,"measureWidth",function(){return this._wordsW}),h(0,t,"measureHeight",function(){return this._wordsH}),e}(Y),j=function(t){function i(){this.selectHandler=null,this.renderHandler=null,this.mouseHandler=null,this.selectEnable=!1,this.totalPage=0,this._content=null,this._scrollBar=null,this._itemRender=null,this._repeatX=0,this._repeatY=0,this._repeatX2=0,this._repeatY2=0,this._spaceX=0,this._spaceY=0,this._array=null,this._startIndex=0,this._selectedIndex=-1,this._page=0,this._isVertical=!0,this._cellSize=20,this._cellOffset=0,this._isMoved=!1,this.cacheContent=!1,this._createdLine=0,this._cellChanged=!1,this._cells=[],this._offset=new y,i.__super.call(this)}n(i,"laya.ui.List",t);var e=i.prototype;return p.imps(e,{"laya.ui.IRender":!0,"laya.ui.IItem":!0}),e.destroy=function(t){void 0===t&&(t=!0),this._content&&this._content.destroy(t),this._scrollBar&&this._scrollBar.destroy(t),laya.ui.Component.prototype.destroy.call(this,t),this._content=null,this._scrollBar=null,this._itemRender=null,this._cells=null,this._array=null,this.selectHandler=this.renderHandler=this.mouseHandler=null},e.createChildren=function(){this.addChild(this._content=new N)},e.onScrollStart=function(){this._$P.cacheAs||(this._$P.cacheAs=p.superGet(N,this,"cacheAs")),p.superSet(N,this,"cacheAs","none"),this._scrollBar.once("end",this,this.onScrollEnd)},e.onScrollEnd=function(){p.superSet(N,this,"cacheAs",this._$P.cacheAs)},e._removePreScrollBar=function(){var t=this.removeChildByName("scrollBar");t&&t.destroy(!0)},e.changeCells=function(){if(this._cellChanged=!1,this._itemRender){this.scrollBar=this.getChildByName("scrollBar");var t=this._getOneCell(),i=t.width+this._spaceX||1,e=t.height+this._spaceY||1;0<this._width&&(this._repeatX2=this._isVertical?Math.round(this._width/i):Math.ceil(this._width/i)),0<this._height&&(this._repeatY2=this._isVertical?Math.ceil(this._height/e):Math.round(this._height/e));var s=this._width?this._width:i*this.repeatX-this._spaceX,h=this._height?this._height:e*this.repeatY-this._spaceY;this._cellSize=this._isVertical?e:i,this._cellOffset=this._isVertical?e*Math.max(this._repeatY2,this._repeatY)-h-this._spaceY:i*Math.max(this._repeatX2,this._repeatX)-s-this._spaceX,this._isVertical&&this._scrollBar?this._scrollBar.height=h:!this._isVertical&&this._scrollBar&&(this._scrollBar.width=s),this.setContentSize(s,h);var n=this._isVertical?this.repeatX:this.repeatY,o=(this._isVertical?this.repeatY:this.repeatX)+(this._scrollBar?1:0);this._createItems(0,n,o),this._createdLine=o,this._array&&(this.array=this._array,this.runCallLater(this.renderItems))}},e._getOneCell=function(){if(0===this._cells.length){var t=this.createItem();if(this._offset.setTo(t.x,t.y),this.cacheContent)return t;this._cells.push(t)}return this._cells[0]},e._createItems=function(t,i,e){var s=this._content,h=this._getOneCell(),n=h.width+this._spaceX,o=h.height+this._spaceY;if(this.cacheContent){var r=new N;r.cacheAsBitmap=!0,r.pos((this._isVertical?0:t)*n,(this._isVertical?t:0)*o),this._content.addChild(r),this._content.optimizeScrollRect=!0,s=r}else{for(var l=[],a=this._cells.length-1;-1<a;a--){var c=this._cells[a];c.removeSelf(),l.push(c)}this._cells.length=0}for(var u=t;u<e;u++)for(var _=0;_<i;_++)(h=l&&l.length?l.pop():this.createItem()).x=(this._isVertical?_:u)*n-s.x,h.y=(this._isVertical?u:_)*o-s.y,h.name="item"+(u*i+_),s.addChild(h),this.addCell(h)},e.createItem=function(){var t=[];if("function"==typeof this._itemRender)var i=new this._itemRender;else i=W.createComp(this._itemRender,null,null,t);if(0==t.length&&i._watchMap){var e=i._watchMap;for(var s in e)for(var h=e[s],n=0;n<h.length;n++){var o=h[n];t.push(o.comp,o.prop,o.value)}}return t.length&&(i._$bindData=t),i},e.addCell=function(t){t.on("click",this,this.onCellMouse),t.on("rightclick",this,this.onCellMouse),t.on("mouseover",this,this.onCellMouse),t.on("mouseout",this,this.onCellMouse),t.on("mousedown",this,this.onCellMouse),t.on("mouseup",this,this.onCellMouse),this._cells.push(t)},e.initItems=function(){if(!this._itemRender&&null!=this.getChildByName("item0")){this.repeatX=1;for(var t=0,i=t=0;i<1e4;i++){var e=this.getChildByName("item"+i);if(!e)break;this.addCell(e),t++}this.repeatY=t}},e.setContentSize=function(t,i){this._content.width=t,this._content.height=i,(this._scrollBar||0!=this._offset.x||0!=this._offset.y)&&(this._content.scrollRect||(this._content.scrollRect=new v),this._content.scrollRect.setTo(-this._offset.x,-this._offset.y,t,i),this._content.scrollRect=this._content.scrollRect),this.event("resize")},e.onCellMouse=function(t){"mousedown"===t.type&&(this._isMoved=!1);var i=t.currentTarget,e=this._startIndex+this._cells.indexOf(i);e<0||("click"===t.type||"rightclick"===t.type?this.selectEnable&&!this._isMoved?this.selectedIndex=e:this.changeCellState(i,!0,0):"mouseover"!==t.type&&"mouseout"!==t.type||this._selectedIndex===e||this.changeCellState(i,"mouseover"===t.type,0),this.mouseHandler&&this.mouseHandler.runWith([t,e]))},e.changeCellState=function(t,i,e){var s=t.getChildByName("selectBox");s&&(this.selectEnable=!0,s.visible=i,s.index=e)},e.changeSize=function(){laya.ui.Component.prototype.changeSize.call(this),this.setContentSize(this.width,this.height),this._scrollBar&&this.callLater(this.onScrollBarChange)},e.onScrollBarChange=function(t){this.runCallLater(this.changeCells);var i=this._scrollBar.value,e=this._isVertical?this.repeatX:this.repeatY,s=this._isVertical?this.repeatY:this.repeatX,h=Math.floor(i/this._cellSize);if(this.cacheContent)o=s+1,this._createdLine-h<o&&(this._createItems(this._createdLine,e,this._createdLine+o),this.renderItems(this._createdLine*e,0),this._createdLine+=o);else{var n=h*e,o=0;if(n>this._startIndex){o=n-this._startIndex;var r=!0,l=this._startIndex+e*(s+1);this._isMoved=!0}else n<this._startIndex&&(o=this._startIndex-n,r=!1,l=this._startIndex-1,this._isMoved=!0);for(var a=0;a<o;a++){if(r){var c=this._cells.shift();this._cells[this._cells.length]=c;var u=l+a}else c=this._cells.pop(),this._cells.unshift(c),u=l-a;var _=Math.floor(u/e)*this._cellSize;this._isVertical?c.y=_:c.x=_,this.renderItem(c,u)}this._startIndex=n,this.changeSelectStatus()}var d=this._content.scrollRect;this._isVertical?(d.y=i-this._offset.y,d.x=-this._offset.x):(d.y=-this._offset.y,d.x=i-this._offset.x),this._content.scrollRect=d},e.posCell=function(t,i){if(this._scrollBar){var e=this._isVertical?this.repeatX:this.repeatY,s=(this._isVertical?this.repeatY:this.repeatX,Math.floor(i/e)*this._cellSize);this._isVertical?t.y=s:t.x=s}},e.changeSelectStatus=function(){for(var t=0,i=this._cells.length;t<i;t++)this.changeCellState(this._cells[t],this._selectedIndex===this._startIndex+t,1)},e.renderItems=function(t,i){void 0===t&&(t=0),void 0===i&&(i=0);for(var e=t,s=i||this._cells.length;e<s;e++)this.renderItem(this._cells[e],this._startIndex+e);this.changeSelectStatus()},e.renderItem=function(t,i){this._array&&0<=i&&i<this._array.length?(t.visible=!0,t._$bindData?(t._dataSource=this._array[i],this._bindData(t,this._array[i])):t.dataSource=this._array[i],this.cacheContent||this.posCell(t,i),this.hasListener("render")&&this.event("render",[t,i]),this.renderHandler&&this.renderHandler.runWith([t,i])):(t.visible=!1,t.dataSource=null)},e._bindData=function(t,i){for(var e=t._$bindData,s=0,h=e.length;s<h;s++){var n=e[s++],o=e[s++],r=e[s],l=M.getBindFun(r);n[o]=l.call(this,i)}},e.refresh=function(){this.array=this._array},e.getItem=function(t){return-1<t&&t<this._array.length?this._array[t]:null},e.changeItem=function(t,i){-1<t&&t<this._array.length&&(this._array[t]=i,t>=this._startIndex&&t<this._startIndex+this._cells.length&&this.renderItem(this.getCell(t),t))},e.setItem=function(t,i){this.changeItem(t,i)},e.addItem=function(t){this._array.push(t),this.array=this._array},e.addItemAt=function(t,i){this._array.splice(i,0,t),this.array=this._array},e.deleteItem=function(t){this._array.splice(t,1),this.array=this._array},e.getCell=function(t){return this.runCallLater(this.changeCells),-1<t&&this._cells?this._cells[(t-this._startIndex)%this._cells.length]:null},e.scrollTo=function(t){if(this._scrollBar){var i=this._isVertical?this.repeatX:this.repeatY;this._scrollBar.value=Math.floor(t/i)*this._cellSize}else this.startIndex=t},e.tweenTo=function(t,i,e){if(void 0===i&&(i=200),this._scrollBar){var s=this._isVertical?this.repeatX:this.repeatY;w.to(this._scrollBar,{value:Math.floor(t/s)*this._cellSize},i,null,e,0,!0)}else this.startIndex=t,e&&e.run()},e._setCellChanged=function(){this._cellChanged||(this._cellChanged=!0,this.callLater(this.changeCells))},e.commitMeasure=function(){this.runCallLater(this.changeCells)},h(0,e,"cacheAs",t.prototype._$get_cacheAs,function(t){p.superSet(N,this,"cacheAs",t),this._scrollBar&&(this._$P.cacheAs=null,"none"!==t?this._scrollBar.on("start",this,this.onScrollStart):this._scrollBar.off("start",this,this.onScrollStart))}),h(0,e,"content",function(){return this._content}),h(0,e,"height",t.prototype._$get_height,function(t){t!=this._height&&(p.superSet(N,this,"height",t),this._setCellChanged())}),h(0,e,"itemRender",function(){return this._itemRender},function(t){if(this._itemRender!=t){this._itemRender=t;for(var i=this._cells.length-1;-1<i;i--)this._cells[i].destroy();this._cells.length=0,this._setCellChanged()}}),h(0,e,"vScrollBarSkin",function(){return this._scrollBar?this._scrollBar.skin:null},function(t){this._removePreScrollBar();var i=new et;i.name="scrollBar",i.right=0,t&&" "!=t&&(i.skin=t),this.scrollBar=i,this.addChild(i),this._setCellChanged()}),h(0,e,"page",function(){return this._page},function(t){this._page=t,this._array&&(this._page=0<t?t:0,this._page=this._page<this.totalPage?this._page:this.totalPage-1,this.startIndex=this._page*this.repeatX*this.repeatY)}),h(0,e,"hScrollBarSkin",function(){return this._scrollBar?this._scrollBar.skin:null},function(t){this._removePreScrollBar();var i=new q;i.name="scrollBar",i.bottom=0,t&&" "!=t&&(i.skin=t),this.scrollBar=i,this.addChild(i),this._setCellChanged()}),h(0,e,"repeatX",function(){return 0<this._repeatX?this._repeatX:0<this._repeatX2?this._repeatX2:1},function(t){this._repeatX=t,this._setCellChanged()}),h(0,e,"scrollBar",function(){return this._scrollBar},function(t){this._scrollBar!=t&&(this._scrollBar=t)&&(this._isVertical=this._scrollBar.isVertical,this.addChild(this._scrollBar),this._scrollBar.on("change",this,this.onScrollBarChange))}),h(0,e,"width",t.prototype._$get_width,function(t){t!=this._width&&(p.superSet(N,this,"width",t),this._setCellChanged())}),h(0,e,"repeatY",function(){return 0<this._repeatY?this._repeatY:0<this._repeatY2?this._repeatY2:1},function(t){this._repeatY=t,this._setCellChanged()}),h(0,e,"spaceX",function(){return this._spaceX},function(t){this._spaceX=t,this._setCellChanged()}),h(0,e,"spaceY",function(){return this._spaceY},function(t){this._spaceY=t,this._setCellChanged()}),h(0,e,"selectedIndex",function(){return this._selectedIndex},function(t){this._selectedIndex!=t&&(this._selectedIndex=t,this.changeSelectStatus(),this.event("change"),this.selectHandler&&this.selectHandler.runWith(t),this.startIndex=this._startIndex)}),h(0,e,"selectedItem",function(){return-1!=this._selectedIndex?this._array[this._selectedIndex]:null},function(t){this.selectedIndex=this._array.indexOf(t)}),h(0,e,"length",function(){return this._array?this._array.length:0}),h(0,e,"selection",function(){return this.getCell(this._selectedIndex)},function(t){this.selectedIndex=this._startIndex+this._cells.indexOf(t)}),h(0,e,"startIndex",function(){return this._startIndex},function(t){this._startIndex=0<t?t:0,this.callLater(this.renderItems)}),h(0,e,"array",function(){return this._array},function(t){this.runCallLater(this.changeCells),this._array=t||[];var i=this._array.length;if(this.totalPage=Math.ceil(i/(this.repeatX*this.repeatY)),this._selectedIndex=this._selectedIndex<i?this._selectedIndex:i-1,this.startIndex=this._startIndex,this._scrollBar){this._scrollBar.stopScroll();var e=this._isVertical?this.repeatX:this.repeatY,s=this._isVertical?this.repeatY:this.repeatX,h=Math.ceil(i/e),n=0<this._cellOffset?this.totalPage+1:this.totalPage;this._scrollBar.target=(1<n?(this._scrollBar.scrollSize=this._cellSize,this._scrollBar.thumbPercent=s/h,this._scrollBar.setScroll(0,(h-s)*this._cellSize+this._cellOffset,this._scrollBar.value)):this._scrollBar.setScroll(0,0,0),this._content)}}),h(0,e,"dataSource",t.prototype._$get_dataSource,function(t){"number"==typeof(this._dataSource=t)&&Math.floor(t)==t||"string"==typeof t?this.selectedIndex=parseInt(t):t instanceof Array?this.array=t:p.superSet(N,this,"dataSource",t)}),h(0,e,"cells",function(){return this.runCallLater(this.changeCells),this._cells}),i}(N),q=function(t){function i(){i.__super.call(this)}return n(i,"laya.ui.HScrollBar",t),i.prototype.initialize=function(){t.prototype.initialize.call(this),this.slider.isVertical=!1},i}(D),K=function(t){function i(){this._content=null,this._vScrollBar=null,this._hScrollBar=null,this._scrollChanged=!1,i.__super.call(this),this.width=this.height=100}n(i,"laya.ui.Panel",t);var e=i.prototype;return e.destroy=function(t){void 0===t&&(t=!0),laya.ui.Component.prototype.destroy.call(this,t),this._content&&this._content.destroy(t),this._vScrollBar&&this._vScrollBar.destroy(t),this._hScrollBar&&this._hScrollBar.destroy(t),this._vScrollBar=null,this._hScrollBar=null,this._content=null},e.destroyChildren=function(){this._content.destroyChildren()},e.createChildren=function(){laya.display.Node.prototype.addChild.call(this,this._content=new N)},e.addChild=function(t){return t.on("resize",this,this.onResize),this._setScrollChanged(),this._content.addChild(t)},e.onResize=function(){this._setScrollChanged()},e.addChildAt=function(t,i){return t.on("resize",this,this.onResize),this._setScrollChanged(),this._content.addChildAt(t,i)},e.removeChild=function(t){return t.off("resize",this,this.onResize),this._setScrollChanged(),this._content.removeChild(t)},e.removeChildAt=function(t){return this.getChildAt(t).off("resize",this,this.onResize),this._setScrollChanged(),this._content.removeChildAt(t)},e.removeChildren=function(t,i){return void 0===t&&(t=0),void 0===i&&(i=2147483647),this._content.removeChildren(t,i),this._setScrollChanged(),this},e.getChildAt=function(t){return this._content.getChildAt(t)},e.getChildByName=function(t){return this._content.getChildByName(t)},e.getChildIndex=function(t){return this._content.getChildIndex(t)},e.changeScroll=function(){this._scrollChanged=!1;var t=this.contentWidth||1,i=this.contentHeight||1,e=this._vScrollBar,s=this._hScrollBar,h=e&&i>this._height,n=s&&t>this._width,o=h?this._width-e.width:this._width,r=n?this._height-s.height:this._height;e&&(e.x=this._width-e.width,e.y=0,e.height=this._height-(n?s.height:0),e.scrollSize=Math.max(.033*this._height,1),e.thumbPercent=r/i,e.setScroll(0,i-r,e.value)),s&&(s.x=0,s.y=this._height-s.height,s.width=this._width-(h?e.width:0),s.scrollSize=Math.max(.033*this._width,1),s.thumbPercent=o/t,s.setScroll(0,t-o,s.value))},e.changeSize=function(){laya.ui.Component.prototype.changeSize.call(this),this.setContentSize(this._width,this._height)},e.setContentSize=function(t,i){var e=this._content;e.width=t,e.height=i,e.scrollRect||(e.scrollRect=new v),e.scrollRect.setTo(0,0,t,i),e.scrollRect=e.scrollRect},e.onScrollBarChange=function(t){var i=this._content.scrollRect;if(i){var e=Math.round(t.value);t.isVertical?i.y=e:i.x=e,this._content.scrollRect=i}},e.scrollTo=function(t,i){void 0===t&&(t=0),void 0===i&&(i=0),this.vScrollBar&&(this.vScrollBar.value=i),this.hScrollBar&&(this.hScrollBar.value=t)},e.refresh=function(){this.changeScroll()},e.onScrollStart=function(){this._$P.cacheAs||(this._$P.cacheAs=p.superGet(N,this,"cacheAs")),p.superSet(N,this,"cacheAs","none"),this._hScrollBar&&this._hScrollBar.once("end",this,this.onScrollEnd),this._vScrollBar&&this._vScrollBar.once("end",this,this.onScrollEnd)},e.onScrollEnd=function(){p.superSet(N,this,"cacheAs",this._$P.cacheAs)},e._setScrollChanged=function(){this._scrollChanged||(this._scrollChanged=!0,this.callLater(this.changeScroll))},h(0,e,"numChildren",function(){return this._content.numChildren}),h(0,e,"hScrollBarSkin",function(){return this._hScrollBar?this._hScrollBar.skin:null},function(t){null==this._hScrollBar&&(laya.display.Node.prototype.addChild.call(this,this._hScrollBar=new q),this._hScrollBar.on("change",this,this.onScrollBarChange,[this._hScrollBar]),this._hScrollBar.target=this._content,this._setScrollChanged()),this._hScrollBar.skin=t}),h(0,e,"contentWidth",function(){for(var t=0,i=this._content.numChildren-1;-1<i;i--){var e=this._content.getChildAt(i);t=Math.max(e.x+e.width*e.scaleX,t)}return t}),h(0,e,"contentHeight",function(){for(var t=0,i=this._content.numChildren-1;-1<i;i--){var e=this._content.getChildAt(i);t=Math.max(e.y+e.height*e.scaleY,t)}return t}),h(0,e,"width",t.prototype._$get_width,function(t){p.superSet(N,this,"width",t),this._setScrollChanged()}),h(0,e,"hScrollBar",function(){return this._hScrollBar}),h(0,e,"content",function(){return this._content}),h(0,e,"height",t.prototype._$get_height,function(t){p.superSet(N,this,"height",t),this._setScrollChanged()}),h(0,e,"vScrollBarSkin",function(){return this._vScrollBar?this._vScrollBar.skin:null},function(t){null==this._vScrollBar&&(laya.display.Node.prototype.addChild.call(this,this._vScrollBar=new et),this._vScrollBar.on("change",this,this.onScrollBarChange,[this._vScrollBar]),this._vScrollBar.target=this._content,this._setScrollChanged()),this._vScrollBar.skin=t}),h(0,e,"vScrollBar",function(){return this._vScrollBar}),h(0,e,"cacheAs",t.prototype._$get_cacheAs,function(t){p.superSet(N,this,"cacheAs",t),this._$P.cacheAs=null,"none"!==t?(this._hScrollBar&&this._hScrollBar.on("start",this,this.onScrollStart),this._vScrollBar&&this._vScrollBar.on("start",this,this.onScrollStart)):(this._hScrollBar&&this._hScrollBar.off("start",this,this.onScrollStart),this._vScrollBar&&this._vScrollBar.off("start",this,this.onScrollStart))}),i}(N),Z=function(t){function i(t){i.__super.call(this,t),this.isVertical=!1}return n(i,"laya.ui.HSlider",V),i}(),J=function(t){function e(t,i){this.selectHandler=null,this._items=null,this._selectedIndex=-1,this._skin=null,this._direction="horizontal",this._space=0,this._labels=null,this._labelColors=null,this._labelFont=null,this._labelStrokeColor=null,this._strokeColors=null,this._labelStroke=NaN,this._labelSize=0,this._labelBold=!1,this._labelPadding=null,this._labelAlign=null,this._stateNum=0,this._labelChanged=!1,e.__super.call(this),this.skin=i,this.labels=t}n(e,"laya.ui.UIGroup",t);var i=e.prototype;return p.imps(i,{"laya.ui.IItem":!0}),i.preinitialize=function(){this.mouseEnabled=!0},i.destroy=function(t){void 0===t&&(t=!0),laya.ui.Component.prototype.destroy.call(this,t),this._items&&(this._items.length=0),this._items=null,this.selectHandler=null},i.addItem=function(t,i){void 0===i&&(i=!0);var e=t,s=this._items.length;if(e.name="item"+s,this.addChild(e),this.initItems(),i&&0<s){var h=this._items[s-1];"horizontal"==this._direction?e.x=h.x+h.width+this._space:e.y=h.y+h.height+this._space}else i&&(e.x=0,e.y=0);return s},i.delItem=function(t,i){void 0===i&&(i=!0);var e=this._items.indexOf(t);if(-1!=e){var s=t;this.removeChild(s);for(var h=e+1,n=this._items.length;h<n;h++){var o=this._items[h];o.name="item"+(h-1),i&&("horizontal"==this._direction?o.x-=s.width+this._space:o.y-=s.height+this._space)}if(this.initItems(),-1<this._selectedIndex){var r;r=this._selectedIndex<this._items.length?this._selectedIndex:this._selectedIndex-1,this._selectedIndex=-1,this.selectedIndex=r}}},i.initItems=function(){this._items||(this._items=[]);for(var t=this._items.length=0;t<1e4;t++){var i=this.getChildByName("item"+t);if(null==i)break;this._items.push(i),i.selected=t===this._selectedIndex,i.clickHandler=d.create(this,this.itemClick,[t],!1)}},i.itemClick=function(t){this.selectedIndex=t},i.setSelect=function(t,i){this._items&&-1<t&&t<this._items.length&&(this._items[t].selected=i)},i.createItem=function(t,i){return null},i.changeLabels=function(){if(this._labelChanged=!1,this._items)for(var t=0,i=0,e=this._items.length;i<e;i++){var s=this._items[i];this._skin&&(s.skin=this._skin),this._labelColors&&(s.labelColors=this._labelColors),this._labelSize&&(s.labelSize=this._labelSize),this._labelStroke&&(s.labelStroke=this._labelStroke),this._labelStrokeColor&&(s.labelStrokeColor=this._labelStrokeColor),this._strokeColors&&(s.strokeColors=this._strokeColors),this._labelBold&&(s.labelBold=this._labelBold),this._labelPadding&&(s.labelPadding=this._labelPadding),this._labelAlign&&(s.labelAlign=this._labelAlign),this._stateNum&&(s.stateNum=this._stateNum),this._labelFont&&(s.labelFont=this._labelFont),"horizontal"===this._direction?(s.y=0,s.x=t,t+=s.width+this._space):(s.x=0,s.y=t,t+=s.height+this._space)}this.changeSize()},i.commitMeasure=function(){this.runCallLater(this.changeLabels)},i._setLabelChanged=function(){this._labelChanged||(this._labelChanged=!0,this.callLater(this.changeLabels))},h(0,i,"labelStrokeColor",function(){return this._labelStrokeColor},function(t){this._labelStrokeColor!=t&&(this._labelStrokeColor=t,this._setLabelChanged())}),h(0,i,"skin",function(){return this._skin},function(t){this._skin!=t&&(this._skin=t,this._setLabelChanged())}),h(0,i,"selectedIndex",function(){return this._selectedIndex},function(t){this._selectedIndex!=t&&(this.setSelect(this._selectedIndex,!1),this._selectedIndex=t,this.setSelect(t,!0),this.event("change"),this.selectHandler&&this.selectHandler.runWith(this._selectedIndex))}),h(0,i,"labels",function(){return this._labels},function(t){if(this._labels!=t){if(this._labels=t,this.removeChildren(),this._setLabelChanged(),this._labels)for(var i=this._labels.split(","),e=0,s=i.length;e<s;e++){var h=this.createItem(this._skin,i[e]);h.name="item"+e,this.addChild(h)}this.initItems()}}),h(0,i,"strokeColors",function(){return this._strokeColors},function(t){this._strokeColors!=t&&(this._strokeColors=t,this._setLabelChanged())}),h(0,i,"labelColors",function(){return this._labelColors},function(t){this._labelColors!=t&&(this._labelColors=t,this._setLabelChanged())}),h(0,i,"labelStroke",function(){return this._labelStroke},function(t){this._labelStroke!=t&&(this._labelStroke=t,this._setLabelChanged())}),h(0,i,"labelSize",function(){return this._labelSize},function(t){this._labelSize!=t&&(this._labelSize=t,this._setLabelChanged())}),h(0,i,"stateNum",function(){return this._stateNum},function(t){this._stateNum!=t&&(this._stateNum=t,this._setLabelChanged())}),h(0,i,"labelBold",function(){return this._labelBold},function(t){this._labelBold!=t&&(this._labelBold=t,this._setLabelChanged())}),h(0,i,"labelFont",function(){return this._labelFont},function(t){this._labelFont!=t&&(this._labelFont=t,this._setLabelChanged())}),h(0,i,"labelPadding",function(){return this._labelPadding},function(t){this._labelPadding!=t&&(this._labelPadding=t,this._setLabelChanged())}),h(0,i,"direction",function(){return this._direction},function(t){this._direction=t,this._setLabelChanged()}),h(0,i,"space",function(){return this._space},function(t){this._space=t,this._setLabelChanged()}),h(0,i,"items",function(){return this._items}),h(0,i,"selection",function(){return-1<this._selectedIndex&&this._selectedIndex<this._items.length?this._items[this._selectedIndex]:null},function(t){this.selectedIndex=this._items.indexOf(t)}),h(0,i,"dataSource",t.prototype._$get_dataSource,function(t){"number"==typeof(this._dataSource=t)&&Math.floor(t)==t||"string"==typeof t?this.selectedIndex=parseInt(t):t instanceof Array?this.labels=t.join(","):p.superSet(N,this,"dataSource",t)}),e}(N),Q=function(i){function e(t,i){this._value=null,void 0===i&&(i=""),e.__super.call(this,t,i)}n(e,"laya.ui.Radio",i);var t=e.prototype;return t.destroy=function(t){void 0===t&&(t=!0),i.prototype.destroy.call(this,t),this._value=null},t.preinitialize=function(){laya.ui.Component.prototype.preinitialize.call(this),this.toggle=!1,this._autoSize=!1},t.initialize=function(){i.prototype.initialize.call(this),this.createText(),this._text.align="left",this._text.valign="top",this._text.width=0,this.on("click",this,this.onClick)},t.onClick=function(t){this.selected=!0},h(0,t,"value",function(){return null!=this._value?this._value:this.label},function(t){this._value=t}),e}(O),tt=function(t){function i(){this._list=null,this._source=null,this._renderHandler=null,this._spaceLeft=10,this._spaceBottom=0,this._keepStatus=!0,i.__super.call(this),this.width=this.height=200}n(i,"laya.ui.Tree",t);var e=i.prototype;return p.imps(e,{"laya.ui.IRender":!0}),e.destroy=function(t){void 0===t&&(t=!0),laya.ui.Component.prototype.destroy.call(this,t),this._list&&this._list.destroy(t),this._list=null,this._source=null,this._renderHandler=null},e.createChildren=function(){this.addChild(this._list=new j),this._list.renderHandler=d.create(this,this.renderItem,null,!1),this._list.repeatX=1,this._list.on("change",this,this.onListChange)},e.onListChange=function(t){this.event("change")},e.getArray=function(){var t,i=[];for(var e in this._source)t=this._source[e],this.getParentOpenStatus(t)&&(t.x=this._spaceLeft*this.getDepth(t),i.push(t));return i},e.getDepth=function(t,i){return void 0===i&&(i=0),null==t.nodeParent?i:this.getDepth(t.nodeParent,i+1)},e.getParentOpenStatus=function(t){var i=t.nodeParent;return null==i||!!i.isOpen&&(null==i.nodeParent||this.getParentOpenStatus(i))},e.renderItem=function(t,i){var e=t.dataSource;if(e){t.left=e.x;var s=t.getChildByName("arrow");s&&(e.hasChild?(s.visible=!0,s.index=e.isOpen?1:0,s.tag=i,s.off("click",this,this.onArrowClick),s.on("click",this,this.onArrowClick)):s.visible=!1);var h=t.getChildByName("folder");h&&(2==h.clipY?h.index=e.isDirectory?0:1:h.index=e.isDirectory?e.isOpen?1:0:2),this._renderHandler&&this._renderHandler.runWith([t,i])}},e.onArrowClick=function(t){var i=t.currentTarget.tag;this._list.array[i].isOpen=!this._list.array[i].isOpen,this.event("open"),this._list.array=this.getArray()},e.setItemState=function(t,i){this._list.array[t]&&(this._list.array[t].isOpen=i,this._list.array=this.getArray())},e.fresh=function(){this._list.array=this.getArray(),this.repaint()},e.parseXml=function(t,i,e,s){var h,n=t.childNodes,o=n.length;if(!s){h={};var r,l=t.attributes;for(var a in l){var c=(r=l[a]).nodeName,u=r.nodeValue;h[c]="true"==u||"false"!=u&&u}h.nodeParent=e,0<o&&(h.isDirectory=!0),h.hasChild=0<o,i.push(h)}for(var _=0;_<o;_++){var d=n[_];this.parseXml(d,i,h,!1)}},e.parseOpenStatus=function(t,i){for(var e=0,s=i.length;e<s;e++){var h=i[e];if(h.isDirectory)for(var n=0,o=t.length;n<o;n++){var r=t[n];if(r.isDirectory&&this.isSameParent(r,h)&&h.label==r.label){h.isOpen=r.isOpen;break}}}},e.isSameParent=function(t,i){return null==t.nodeParent&&null==i.nodeParent||null!=t.nodeParent&&null!=i.nodeParent&&(t.nodeParent.label==i.nodeParent.label&&this.isSameParent(t.nodeParent,i.nodeParent))},e.filter=function(t){if(Boolean(t)){var i=[];this.getFilterSource(this._source,i,t),this._list.array=i}else this._list.array=this.getArray()},e.getFilterSource=function(t,i,e){var s;for(var h in e=e.toLocaleLowerCase(),t)!(s=t[h]).isDirectory&&-1<String(s.label).toLowerCase().indexOf(e)&&(s.x=0,i.push(s)),s.child&&0<s.child.length&&this.getFilterSource(s.child,i,e)},h(0,e,"spaceBottom",function(){return this._list.spaceY},function(t){this._list.spaceY=t}),h(0,e,"keepStatus",function(){return this._keepStatus},function(t){this._keepStatus=t}),h(0,e,"itemRender",function(){return this._list.itemRender},function(t){this._list.itemRender=t}),h(0,e,"array",function(){return this._list.array},function(t){this._keepStatus&&this._list.array&&t&&this.parseOpenStatus(this._list.array,t),this._source=t,this._list.array=this.getArray()}),h(0,e,"mouseHandler",function(){return this._list.mouseHandler},function(t){this._list.mouseHandler=t}),h(0,e,"dataSource",t.prototype._$get_dataSource,function(t){this._dataSource=t,p.superSet(N,this,"dataSource",t)}),h(0,e,"source",function(){return this._source}),h(0,e,"scrollBar",function(){return this._list.scrollBar}),h(0,e,"list",function(){return this._list}),h(0,e,"scrollBarSkin",function(){return this._list.vScrollBarSkin},function(t){this._list.vScrollBarSkin=t}),h(0,e,"renderHandler",function(){return this._renderHandler},function(t){this._renderHandler=t}),h(0,e,"selectedIndex",function(){return this._list.selectedIndex},function(t){this._list.selectedIndex=t}),h(0,e,"spaceLeft",function(){return this._spaceLeft},function(t){this._spaceLeft=t}),h(0,e,"selectedItem",function(){return this._list.selectedItem},function(t){this._list.selectedItem=t}),h(0,e,"width",t.prototype._$get_width,function(t){p.superSet(N,this,"width",t),this._list.width=t}),h(0,e,"height",t.prototype._$get_height,function(t){p.superSet(N,this,"height",t),this._list.height=t}),h(0,e,"xml",null,function(t){var i=[];this.parseXml(t.childNodes[0],i,null,!0),this.array=i}),h(0,e,"selectedPath",function(){return this._list.selectedItem?this._list.selectedItem.path:null}),i}(N),it=function(t){function i(){this._items=null,this._selectedIndex=0,i.__super.call(this),this._setIndexHandler=d.create(this,this.setIndex,null,!1)}n(i,"laya.ui.ViewStack",t);var e=i.prototype;return p.imps(e,{"laya.ui.IItem":!0}),e.setItems=function(t){this.removeChildren();for(var i=0,e=0,s=t.length;e<s;e++){var h=t[e];h&&(h.name="item"+i,this.addChild(h),i++)}this.initItems()},e.addItem=function(t){t.name="item"+this._items.length,this.addChild(t),this.initItems()},e.initItems=function(){this._items=[];for(var t=0;t<1e4;t++){var i=this.getChildByName("item"+t);if(null==i)break;this._items.push(i),i.visible=t==this._selectedIndex}},e.setSelect=function(t,i){this._items&&-1<t&&t<this._items.length&&(this._items[t].visible=i)},e.setIndex=function(t){this.selectedIndex=t},h(0,e,"dataSource",t.prototype._$get_dataSource,function(t){if("number"==typeof(this._dataSource=t)&&Math.floor(t)==t||"string"==typeof t)this.selectedIndex=parseInt(t);else for(var i in this._dataSource)this.hasOwnProperty(i)&&(this[i]=this._dataSource[i])}),h(0,e,"selectedIndex",function(){return this._selectedIndex},function(t){this._selectedIndex!=t&&(this.setSelect(this._selectedIndex,!1),this._selectedIndex=t,this.setSelect(this._selectedIndex,!0))}),h(0,e,"selection",function(){return-1<this._selectedIndex&&this._selectedIndex<this._items.length?this._items[this._selectedIndex]:null},function(t){this.selectedIndex=this._items.indexOf(t)}),h(0,e,"items",function(){return this._items}),h(0,e,"setIndexHandler",function(){return this._setIndexHandler},function(t){this._setIndexHandler=t}),i}(N),et=function(t){function i(){i.__super.call(this)}return n(i,"laya.ui.VScrollBar",D),i}(),st=function(i){function e(t){this._bg=null,this._skin=null,e.__super.call(this),void 0===t&&(t=""),this.text=t,this.skin=this.skin}n(e,"laya.ui.TextInput",i);var t=e.prototype;return t.preinitialize=function(){this.mouseEnabled=!0},t.destroy=function(t){void 0===t&&(t=!0),i.prototype.destroy.call(this,t),this._bg&&this._bg.destroy(),this._bg=null},t.createChildren=function(){this.addChild(this._tf=new f),this._tf.padding=L.inputLabelPadding,this._tf.on("input",this,this._onInput),this._tf.on("enter",this,this._onEnter),this._tf.on("blur",this,this._onBlur),this._tf.on("focus",this,this._onFocus)},t._onFocus=function(){this.event("focus",this)},t._onBlur=function(){this.event("blur",this)},t._onInput=function(){this.event("input",this)},t._onEnter=function(){this.event("enter",this)},t.initialize=function(){this.width=128,this.height=22},t.select=function(){this._tf.select()},t.setSelection=function(t,i){this._tf.setSelection(t,i)},h(0,t,"text",i.prototype._$get_text,function(t){this._tf.text!=t&&(t+="",this._tf.text=t,this.event("change"))}),h(0,t,"bg",function(){return this._bg},function(t){this.graphics=this._bg=t}),h(0,t,"inputElementYAdjuster",function(){return this._tf.inputElementYAdjuster},function(t){this._tf.inputElementYAdjuster=t}),h(0,t,"multiline",function(){return this._tf.multiline},function(t){this._tf.multiline=t}),h(0,t,"skin",function(){return this._skin},function(t){this._skin!=t&&(this._skin=t,this._bg||(this.graphics=this._bg=new T),this._bg.source=m.getRes(this._skin),this._width&&(this._bg.width=this._width),this._height&&(this._bg.height=this._height))}),h(0,t,"sizeGrid",function(){return this._bg&&this._bg.sizeGrid?this._bg.sizeGrid.join(","):null},function(t){this._bg||(this.graphics=this._bg=new T),this._bg.sizeGrid=M.fillArray(L.defaultSizeGrid,t,Number)}),h(0,t,"inputElementXAdjuster",function(){return this._tf.inputElementXAdjuster},function(t){this._tf.inputElementXAdjuster=t}),h(0,t,"width",i.prototype._$get_width,function(t){p.superSet(G,this,"width",t),this._bg&&(this._bg.width=t)}),h(0,t,"height",i.prototype._$get_height,function(t){p.superSet(G,this,"height",t),this._bg&&(this._bg.height=t)}),h(0,t,"editable",function(){return this._tf.editable},function(t){this._tf.editable=t}),h(0,t,"restrict",function(){return this._tf.restrict},function(t){this._tf.restrict=t}),h(0,t,"prompt",function(){return this._tf.prompt},function(t){this._tf.prompt=t}),h(0,t,"promptColor",function(){return this._tf.promptColor},function(t){this._tf.promptColor=t}),h(0,t,"maxChars",function(){return this._tf.maxChars},function(t){this._tf.maxChars=t}),h(0,t,"focus",function(){return this._tf.focus},function(t){this._tf.focus=t}),h(0,t,"type",function(){return this._tf.type},function(t){this._tf.type=t}),h(0,t,"asPassword",function(){return this._tf.asPassword},function(t){this._tf.asPassword=t}),e}(G),ht=function(t){function i(){i.__super.call(this)}return n(i,"laya.ui.VSlider",V),i}(),nt=function(t){function s(){this.popupCenter=!0,this.closeHandler=null,this.popupEffect=null,this.closeEffect=null,this.group=null,this.isModal=!1,this._dragArea=null,s.__super.call(this)}n(s,"laya.ui.Dialog",t);var i=s.prototype;return i.initialize=function(){this.popupEffect=s.manager.popupEffectHandler,this.closeEffect=s.manager.closeEffectHandler,this._dealDragArea(),this.on("click",this,this._onClick)},i._dealDragArea=function(){var t=this.getChildByName("drag");t&&(this.dragArea=t.x+","+t.y+","+t.width+","+t.height,t.removeSelf())},i._onClick=function(t){var i=t.target;if(i)switch(i.name){case"close":case"cancel":case"sure":case"no":case"ok":case"yes":this.close(i.name)}},i.show=function(t,i){void 0===t&&(t=!1),void 0===i&&(i=!0),this._open(!1,t,i)},i.popup=function(t,i){void 0===t&&(t=!1),void 0===i&&(i=!0),this._open(!0,t,i)},i._open=function(t,i,e){s.manager.lock(!1),this.isModal=t,s.manager.open(this,i,e)},i.onOpened=function(){},i.close=function(t,i){void 0===i&&(i=!0),s.manager.close(this,t,i)},i.onClosed=function(t){},i._onMouseDown=function(t){var i=this.getMousePoint();this._dragArea.contains(i.x,i.y)?this.startDrag():this.stopDrag()},h(0,i,"dragArea",function(){return this._dragArea?this._dragArea.toString():null},function(t){if(t){var i=M.fillArray([0,0,0,0],t,Number);this._dragArea=new v(i[0],i[1],i[2],i[3]),this.on("mousedown",this,this._onMouseDown)}else this._dragArea=null,this.off("mousedown",this,this._onMouseDown)}),h(0,i,"isPopup",function(){return null!=this.parent}),h(0,i,"zOrder",t.prototype._$get_zOrder,function(t){p.superSet(W,this,"zOrder",t),s.manager._checkMask()}),h(1,s,"manager",function(){return s._manager=s._manager||new A},function(t){s._manager=t}),s.setLockView=function(t){s.manager.setLockView(t)},s.lock=function(t){s.manager.lock(t)},s.closeAll=function(){s.manager.closeAll()},s.getDialogsByGroup=function(t){return s.manager.getDialogsByGroup(t)},s.closeByGroup=function(t){return s.manager.closeByGroup(t)},s.CLOSE="close",s.CANCEL="cancel",s.SURE="sure",s.NO="no",s.OK="ok",s.YES="yes",s._manager=null,s}(W),ot=function(t){function i(){i.__super.call(this)}n(i,"laya.ui.HBox",t);var e=i.prototype;return e.sortItem=function(t){t&&t.sort(function(t,i){return t.x-i.x})},e.changeItems=function(){this._itemChanged=!1;for(var t=[],i=0,e=0,s=this.numChildren;e<s;e++){var h=this.getChildAt(e);h&&h.layoutEnabled&&(t.push(h),i=this._height?this._height:Math.max(i,h.height*h.scaleY))}this.sortItem(t);var n=0;for(e=0,s=t.length;e<s;e++)(h=t[e]).x=n,n+=h.width*h.scaleX+this._space,"top"==this._align?h.y=0:"middle"==this._align?h.y=.5*(i-h.height*h.scaleY):"bottom"==this._align&&(h.y=i-h.height*h.scaleY);this.changeSize()},h(0,e,"height",t.prototype._$get_height,function(t){this._height!=t&&(p.superSet(F,this,"height",t),this.callLater(this.changeItems))}),i.NONE="none",i.TOP="top",i.MIDDLE="middle",i.BOTTOM="bottom",i}(F),rt=function(t){function i(){i.__super.call(this)}n(i,"laya.ui.VBox",t);var e=i.prototype;return e.changeItems=function(){this._itemChanged=!1;for(var t=[],i=0,e=0,s=this.numChildren;e<s;e++){var h=this.getChildAt(e);h&&h.layoutEnabled&&(t.push(h),i=this._width?this._width:Math.max(i,h.width*h.scaleX))}this.sortItem(t);var n=0;for(e=0,s=t.length;e<s;e++)(h=t[e]).y=n,n+=h.height*h.scaleY+this._space,"left"==this._align?h.x=0:"center"==this._align?h.x=.5*(i-h.width*h.scaleX):"right"==this._align&&(h.x=i-h.width*h.scaleX);this.changeSize()},h(0,e,"width",t.prototype._$get_width,function(t){this._width!=t&&(p.superSet(F,this,"width",t),this.callLater(this.changeItems))}),i.NONE="none",i.LEFT="left",i.CENTER="center",i.RIGHT="right",i}(F),lt=function(t){function i(){i.__super.call(this)}return n(i,"laya.ui.RadioGroup",J),i.prototype.createItem=function(t,i){return new Q(t,i)},i}(),at=function(t){function i(){i.__super.call(this)}return n(i,"laya.ui.Tab",J),i.prototype.createItem=function(t,i){return new O(t,i)},i}(),ct=function(i){function e(t){this._vScrollBar=null,this._hScrollBar=null,void 0===t&&(t=""),e.__super.call(this,t)}n(e,"laya.ui.TextArea",i);var t=e.prototype;return t.destroy=function(t){void 0===t&&(t=!0),i.prototype.destroy.call(this,t),this._vScrollBar&&this._vScrollBar.destroy(),this._hScrollBar&&this._hScrollBar.destroy(),this._vScrollBar=null,this._hScrollBar=null},t.initialize=function(){this.width=180,this.height=150,this._tf.wordWrap=!0,this.multiline=!0},t.onVBarChanged=function(t){this._tf.scrollY!=this._vScrollBar.value&&(this._tf.scrollY=this._vScrollBar.value)},t.onHBarChanged=function(t){this._tf.scrollX!=this._hScrollBar.value&&(this._tf.scrollX=this._hScrollBar.value)},t.changeScroll=function(){var t=this._vScrollBar&&0<this._tf.maxScrollY,i=this._hScrollBar&&0<this._tf.maxScrollX,e=t?this._width-this._vScrollBar.width:this._width,s=i?this._height-this._hScrollBar.height:this._height,h=this._tf.padding||L.labelPadding;this._tf.width=e,this._tf.height=s,this._vScrollBar&&(this._vScrollBar.x=this._width-this._vScrollBar.width-h[2],this._vScrollBar.y=h[1],this._vScrollBar.height=this._height-(i?this._hScrollBar.height:0)-h[1]-h[3],this._vScrollBar.scrollSize=1,this._vScrollBar.thumbPercent=s/Math.max(this._tf.textHeight,s),this._vScrollBar.setScroll(1,this._tf.maxScrollY,this._tf.scrollY),this._vScrollBar.visible=t),this._hScrollBar&&(this._hScrollBar.x=h[0],this._hScrollBar.y=this._height-this._hScrollBar.height-h[3],this._hScrollBar.width=this._width-(t?this._vScrollBar.width:0)-h[0]-h[2],this._hScrollBar.scrollSize=Math.max(.033*e,1),this._hScrollBar.thumbPercent=e/Math.max(this._tf.textWidth,e),this._hScrollBar.setScroll(0,this.maxScrollX,this.scrollX),this._hScrollBar.visible=i)},t.scrollTo=function(t){this.commitMeasure(),this._tf.scrollY=t},h(0,t,"scrollY",function(){return this._tf.scrollY}),h(0,t,"width",i.prototype._$get_width,function(t){p.superSet(st,this,"width",t),this.callLater(this.changeScroll)}),h(0,t,"hScrollBar",function(){return this._hScrollBar}),h(0,t,"height",i.prototype._$get_height,function(t){p.superSet(st,this,"height",t),this.callLater(this.changeScroll)}),h(0,t,"maxScrollX",function(){return this._tf.maxScrollX}),h(0,t,"vScrollBarSkin",function(){return this._vScrollBar?this._vScrollBar.skin:null},function(t){null==this._vScrollBar&&(this.addChild(this._vScrollBar=new et),this._vScrollBar.on("change",this,this.onVBarChanged),this._vScrollBar.target=this._tf,this.callLater(this.changeScroll)),this._vScrollBar.skin=t}),h(0,t,"hScrollBarSkin",function(){return this._hScrollBar?this._hScrollBar.skin:null},function(t){null==this._hScrollBar&&(this.addChild(this._hScrollBar=new q),this._hScrollBar.on("change",this,this.onHBarChanged),this._hScrollBar.mouseWheelEnable=!1,this._hScrollBar.target=this._tf,this.callLater(this.changeScroll)),this._hScrollBar.skin=t}),h(0,t,"vScrollBar",function(){return this._vScrollBar}),h(0,t,"maxScrollY",function(){return this._tf.maxScrollY}),h(0,t,"scrollX",function(){return this._tf.scrollX}),e}(st);!function(t){function i(){this._uiView=null,this.isCloseOther=!1,i.__super.call(this)}n(i,"laya.ui.AsynDialog",nt);var e=i.prototype;e.createView=function(t){this._uiView=t},e._open=function(t,i,e){this.isModal=t,this.isCloseOther=i,nt.manager.lock(!0),this._uiView?this.onCreated():this.onOpen()},e.onCreated=function(){this.createUI(),this.onOpen()},e.createUI=function(){laya.ui.View.prototype.createView.call(this,this._uiView),this._uiView=null,this._dealDragArea()},e.onOpen=function(){nt.manager.open(this,this.isCloseOther),nt.manager.lock(!1)},e.close=function(t,i){void 0===i&&(i=!0),nt.manager.close(this),this.onClose()},e.onClose=function(){},e.destroy=function(t){void 0===t&&(t=!0),laya.ui.View.prototype.destroy.call(this,t),this._uiView=null,this.onDestroy()},e.onDestroy=function(){}}();p.__init([W])}(window,document,Laya),"function"==typeof define&&define.amd&&define("laya.core",["require","exports"],function(t,i){"use strict";for(var e in Object.defineProperty(i,"__esModule",{value:!0}),Laya){var s=Laya[e];s&&s.__isclass&&(i[e]=s)}});
class Token {
    requestCreate(complete) {
        const launchOptions = Laya.Browser.window.wx.getLaunchOptionsSync();
        console.log("@FREEMAN: 启动参数：", launchOptions);
        let channel = "0_" + launchOptions.scene;
        if (launchOptions && launchOptions.query && launchOptions.query.channel) {
            channel = "" + launchOptions.query.channel + "_" + launchOptions.scene;
        }
        if (launchOptions && launchOptions.referrerInfo) {
            if (launchOptions.referrerInfo.extraData && launchOptions.referrerInfo.extraData.channel) {
                channel = "" + launchOptions.referrerInfo.extraData.channel + "_" + launchOptions.scene;
            }
            else {
                if (launchOptions.referrerInfo.appId) {
                    channel = launchOptions.referrerInfo.appId + "_" + launchOptions.scene;
                }
            }
        }
        Laya.Browser.window.wx.login({
            success: function (res) {
                Laya.Browser.window.wx.request({
                    url: PathConfig.AppUrl + 'v1/token/user',
                    method: 'POST',
                    data: {
                        code: res.code,
                        channel
                    },
                    success: function (res1) {
                        const token = res1.data.token;
                        Laya.Browser.window.wx.setStorageSync('token', token);
                        complete && complete.runWith(token);
                    }
                });
            }
        });
    }
    //请求验证
    requestVerify(token, complete) {
        Laya.Browser.window.wx.request({
            url: PathConfig.AppUrl + 'v1/token/verify',
            method: 'POST',
            data: {
                token: token
            },
            success: (res) => {
                const valid = res.data.isValid;
                if (!valid) {
                    this.requestCreate(complete);
                }
                else {
                    complete && complete.runWith(token);
                }
            }
        });
    }
    //验证
    verify(complete) {
        const token = Laya.Browser.window.wx.getStorageSync('token');
        if (token) {
            this.requestVerify(token, complete);
        }
        else {
            this.requestCreate(complete);
        }
    }
}
//# sourceMappingURL=Token.js.map
class NoviceGuide {
    static getSheetByIndex(index) { return NoviceGuide.dataArr[index]; }
    static getSheetById(id) { return NoviceGuide.dataObj[id]; }
    static getSheetByFieldValue(fieldName, value) { const result = []; for (const sheet of NoviceGuide.dataArr) {
        if (typeof value === 'string') {
            if (sheet[this._keys[fieldName]].trim() === value) {
                result.push(sheet);
            }
        }
        else {
            if (sheet[this._keys[fieldName]] === value) {
                result.push(sheet);
            }
        }
    } if (result.length === 1) {
        return result.pop();
    }
    else {
        return result;
    } }
    static initData(data) { const sheetLen = data.length; for (let i = 0; i < sheetLen; i++) {
        NoviceGuide.dataArr[i] = new NoviceGuide();
        for (const key of Object.keys(this._keys)) {
            NoviceGuide.dataArr[i][key] = data[i][this._keys[key]];
        }
        NoviceGuide.dataObj[data[i][this._keys.id]] = NoviceGuide.dataArr[i];
    } }
    get id() { return this.b; }
    set id(value) { this.b = value; }
    get groupId() { return this.c; }
    set groupId(value) { this.c = value; }
    get stepId() { return this.d; }
    set stepId(value) { this.d = value; }
    get completed() { return this.e; }
    set completed(value) { this.e = value; }
    get type() { return this.f; }
    set type(value) { this.f = value; }
    get activateType() { return this.g; }
    set activateType(value) { this.g = value; }
    get activateValue() { return this.h; }
    set activateValue(value) { this.h = value; }
    get eventName() { return this.i; }
    set eventName(value) { this.i = value; }
    get eventParam() { return this.j; }
    set eventParam(value) { this.j = value; }
    get position() { return this.k; }
    set position(value) { this.k = value; }
    get interactPosition() { return this.l; }
    set interactPosition(value) { this.l = value; }
    get fingerPosition() { return this.m; }
    set fingerPosition(value) { this.m = value; }
    get specialInteractArea() { return this.n; }
    set specialInteractArea(value) { this.n = value; }
    get script() { return this.o; }
    set script(value) { this.o = value; }
} // prettier-ignore
NoviceGuide.dataArr = [];
NoviceGuide.dataObj = {};
NoviceGuide._keys = { id: "b", groupId: "c", stepId: "d", completed: "e", type: "f", activateType: "g", activateValue: "h", eventName: "i", eventParam: "j", position: "k", interactPosition: "l", fingerPosition: "m", specialInteractArea: "n", script: "o" };
class Sheet {
    static initSheets(data) { const classInstance = { NoviceGuide }; for (const sheet of data) {
        const sheetClass = classInstance[sheet.sheetName];
        if (!sheetClass) {
            console.error('找不到表{', sheet.sheetName + '}');
            continue;
        }
        sheetClass.initData(sheet.data);
    } }
} // prettier-ignore
//# sourceMappingURL=Sheet.js.map
/*
* 强化;
*/
class StrengthenManager {
    constructor() {
        this.skillArr = [10, 1, 3, 2];
    }
    /** 检查是否需要出现强化红点 */
    checkRedPoint() {
        let self = this;
        let value = false;
        for (let i = 0, len = self.skillArr.length; i < len; i++) {
            let skillId = self.skillArr[i];
            let strengthenLevel = userData.querySkillAddition(skillId);
            let price = SkillManager.Instance.getSkillStrengthenCost(skillId, strengthenLevel + 1);
            if (userData.essence >= price) {
                value = true;
                break;
            }
        }
        if (value) {
            EventsManager.Instance.event(EventsType.STRENGTHEN_RED_POINT, "show");
        }
        else {
            userData.removeStrengthenRedPoint();
        }
    }
    static get Instance() {
        if (StrengthenManager._instance == null) {
            StrengthenManager._instance = new StrengthenManager();
        }
        return StrengthenManager._instance;
    }
}
//# sourceMappingURL=StrengthenManager.js.map
class MoreViewListItemVO {
    constructor() {
        this.avatarUrl = "";
        this.nickName = "";
        this.itemNum = 0;
        this.completeStatus = 0;
    }
}
//# sourceMappingURL=MoreViewListItemVO.js.map
var MoreQuestCompleteStatus;
(function (MoreQuestCompleteStatus) {
    MoreQuestCompleteStatus[MoreQuestCompleteStatus["NOT_YET_PLAY"] = 0] = "NOT_YET_PLAY";
    MoreQuestCompleteStatus[MoreQuestCompleteStatus["PLAYING"] = 1] = "PLAYING";
    MoreQuestCompleteStatus[MoreQuestCompleteStatus["COMPLETE_PLAY"] = 2] = "COMPLETE_PLAY";
    MoreQuestCompleteStatus[MoreQuestCompleteStatus["AWARD_OBTAINED"] = 3] = "AWARD_OBTAINED";
})(MoreQuestCompleteStatus || (MoreQuestCompleteStatus = {}));
//# sourceMappingURL=MoreQuestCompleteStatus.js.map
class MoreEvent {
}
MoreEvent.SUBSCRIBE_STATUS = "SUBSCRIBE_STATUS";
//# sourceMappingURL=MoreEvent.js.map
/*
* name;
*/
class HallModel {
    constructor() {
        /** 游戏关卡 */
        this.passStage = 1;
        /** 游戏章节 */
        this.passSection = 1;
        /** 最大游戏章节 */
        this.maxSection = 10;
        /** 游戏状态 */
        this.gameStatus = 0;
        /** 森林之王等级 */
        this.userKingLevel = 1;
        /** 当前购买类型 */
        this.buyMonsterType = 0;
        /** 最大的怪物数量 */
        this.parkMonsterCount = 20;
        /** 启动加速x2 */
        this.userAcceValue = 1;
        /** 加速时间 */
        this.userAcceTime = 0;
        /** 跑道怪物数量 */
        this.userRunMonsterCount = 0;
        /** 跑道怪物数量最大值 */
        this.userRunMonsterCountMax = 0;
        /** 每秒收益 */
        this.userIncomePerSec = 0;
        /** 额外收益-怪物道满+10% */
        this.userExtraIncome = 1;
        /** 视频广告观看次数上限 */
        this.videoAdMaxTimes = 0;
        /** 定时赠送精灵 */
        this.giveMonsterAllTime = 0;
        /** 赠送怪物的掉落时间 */
        this.dropTime = 5;
        /** 当前最新怪物ID-快捷购怪物按钮 */
        this.curNewMonsterId = 0;
        /** 本地保存兵营怪物 */
        this.monsterStoreKey = "car_store_key";
        /** 怪物列表 */
        this.monsterArray = [];
        /** 未领取的关卡奖励 */
        this.stagePrizeList = [];
        /** 守卫是否可以升级 */
        this.isUpdate = false;
        this.offlineTotalTime = 5 * 60 * 1000;
        this.concurGoldDic = new TSDictionary();
    }
}
//# sourceMappingURL=HallModel.js.map
/*
* TER0803-新手;
*/
class GuideView {
    constructor(_offsetPos = null) {
        // private cMask:Laya.Sprite;
        this.stage = 0; //新手步骤
        this.guideText = [
            "点击招募武将～",
            "移动武将上阵自动战斗",
            "再点击招募武将～",
            "同等级的武将可以合成高一级武将",
            "点击进入商城",
            "使用元宝直接招募更高级的武将"
        ]; //指引文字
        if (_offsetPos) {
            this.offsetPos = _offsetPos;
        }
        else {
            this.offsetPos = new Laya.Point(0, 0);
        }
    }
    setStage(_stage) {
        // console.log("stage",_stage)
        let that = this;
        if (_stage == 1) {
            //购买车
            let rect = new Laya.Rectangle(260, 1240, 220, 110);
            rect.x += that.offsetPos.x;
            rect.y += that.offsetPos.y;
            that.showMask(rect);
            that.showGuideText(0, rect.x + 10, rect.y - 300);
        }
        else if (_stage == 2) {
            //放车到跑道
            let rect = new Laya.Rectangle(5, 810, 150, 150);
            rect.x += that.offsetPos.x;
            rect.y += that.offsetPos.y;
            that.showMask(rect);
            that.showGuideText(1, rect.x + 10, rect.y - 390);
        }
        else if (_stage == 3) {
            //再次购买车
            let rect = new Laya.Rectangle(260, 1240, 220, 110);
            rect.x += that.offsetPos.x;
            rect.y += that.offsetPos.y;
            that.showMask(rect);
            that.showGuideText(2, rect.x + 10, rect.y - 300);
        }
        else if (_stage == 4) {
            //合并车
            let rect = new Laya.Rectangle(5, 810, 290, 150);
            rect.x += that.offsetPos.x;
            rect.y += that.offsetPos.y;
            that.showMask(rect);
            that.showGuideText(3, rect.x, rect.y - 300);
        }
        else if (_stage == 5) {
            //车店
            let rect = new Laya.Rectangle(480, 1240, 265, 110);
            rect.x += that.offsetPos.x;
            rect.y += that.offsetPos.y;
            that.showMask(rect);
            that.showGuideText(4, rect.x - 40, rect.y - 310);
        }
        else if (_stage == 6) {
            //元宝购车
            let rect = new Laya.Rectangle(295, 606, 98, 80);
            rect.x += that.offsetPos.x;
            rect.y += that.offsetPos.y;
            that.showMask(rect);
            that.showGuideText(5, rect.x - 50, rect.y - 300);
        }
        else {
            that.hideMask();
        }
        that.stage = _stage;
    }
    nextStage() {
        let that = this;
        that.setStage(that.stage + 1);
    }
    getStage() {
        return this.stage;
    }
    //显示遮罩
    showMask(_maskRect) {
        let that = this;
        if (that.mainNode == null) {
            that.mainNode = new Laya.View();
            Laya.stage.addChild(that.mainNode);
            that.mainNode.zOrder = 1001;
        }
        else {
            that.mainNode.removeChildren();
        }
        that.bgImg = new Laya.Sprite();
        // //获取图片资源，绘制到画布
        // that.bgImg.graphics.drawTexture(Laya.loader.getRes("images/guide_mask.png"),_maskRect.x-2, _maskRect.y-2,  _maskRect.width+4, _maskRect.height+4);
        // //周边黑色
        // that.bgImg.graphics.drawRect(0, 0, Laya.stage.width, _maskRect.y, "#000");
        // that.bgImg.graphics.drawRect(0, _maskRect.y+_maskRect.height, Laya.stage.width, Laya.stage.height, "#000");
        // that.bgImg.graphics.drawRect(0, _maskRect.y, _maskRect.x, _maskRect.height, "#000");
        // that.bgImg.graphics.drawRect(_maskRect.x+_maskRect.width, _maskRect.y, Laya.stage.width, _maskRect.height, "#000");
        // // //合并绘制结果
        // if (Laya.Browser.onIOS || Laya.Browser.onPC) {
        //     let canvas = that.bgImg.drawToCanvas(Laya.stage.width, Laya.stage.height,0,0);
        //     let rankTexture = new Laya.Texture(canvas);
        //     that.bgImg.graphics.clear();
        //     that.bgImg.graphics.drawTexture(rankTexture, 0, 0, Laya.stage.width, Laya.stage.height);
        // }
        //添加到舞台
        that.mainNode.addChild(that.bgImg);
        that.bgImg.alpha = 0.5;
        that.bgImg.on(Laya.Event.CLICK, that, () => {
            console.log("GuideView click");
            // that.nextStage();
        });
        //点击屏蔽
        let maskRect2 = [
            { x: 0, y: 0, width: Laya.stage.width, height: _maskRect.y },
            { x: 0, y: _maskRect.y + _maskRect.height, width: Laya.stage.width, height: Laya.stage.height },
            { x: 0, y: _maskRect.y, width: _maskRect.x, height: _maskRect.height },
            { x: _maskRect.x + _maskRect.width, y: _maskRect.y, width: Laya.stage.width, height: _maskRect.height },
        ];
        for (var index = 0; index < maskRect2.length; index++) {
            var element = maskRect2[index];
            if (element) {
                let maskView = new Laya.View();
                maskView.pos(element.x, element.y);
                maskView.size(element.width, element.height);
                that.bgImg.addChild(maskView);
                maskView.on(Laya.Event.CLICK, that, () => {
                    console.log("maskview prevent");
                });
                maskView.name = 'maskview_' + index;
            }
        }
        // //创建遮罩对象
        // this.cMask = new Laya.Sprite();
        // //画一个圆形的遮罩区域
        // this.cMask.graphics.drawCircle(80,80,50,"#fff");
        // //圆形所在的位置坐标
        // this.cMask.pos(120,50);
        // this.cMask.alpha = 0.5;
        // //实现img显示对象的遮罩效果
        // this.img.mask = this.cMask;
    }
    hideMask() {
        let that = this;
        if (that.mainNode) {
            that.mainNode.removeSelf();
            that.mainNode = null;
        }
    }
    //显示指引文本
    showGuideText(_guideId, _px, _py) {
        let that = this;
        if (that.mainNode) {
            let content = that.guideText[_guideId];
            let txtBox = new Laya.Sprite();
            that.mainNode.addChild(txtBox);
            txtBox.pos(_px, _py);
            let txtImg = new Laya.Image("images/guide_bhj.png");
            txtBox.addChild(txtImg);
            txtImg.anchorX = 0.2;
            txtImg.anchorY = 1.0;
            txtImg.pos(txtImg.width * txtImg.anchorX, txtImg.height * txtImg.anchorY);
            let timeLine = new Laya.TimeLine();
            timeLine.addLabel("tl1", 0).to(txtImg, { scaleX: 0.98, scaleY: 0.98 }, 800, Laya.Ease.sineInOut)
                .addLabel("tl2", 0).to(txtImg, { scaleX: 1.0, scaleY: 1.0 }, 800);
            timeLine.play(0, true);
            let txtLabel = new Laya.Label(content);
            txtImg.addChild(txtLabel);
            txtLabel.fontSize = 30;
            txtLabel.color = "#FFFFFF";
            txtLabel.width = 360;
            txtLabel.height = 120;
            // txtLabel.bgColor = "#000"
            txtLabel.wordWrap = true;
            txtLabel.valign = "middle";
            txtLabel.pos(txtImg.width * 0.12, txtImg.height * 0.25);
            //文本框缩小
            if (_guideId == 4) {
                timeLine.pause();
                txtImg.scaleX = 0.7;
                txtImg.scaleY = txtImg.scaleX;
                txtLabel.fontSize /= txtImg.scaleX;
            }
            if (_guideId == 0 || _guideId == 2) {
                let pointSp = new Laya.Image("images/shouzhi.png");
                txtBox.addChild(pointSp);
                pointSp.pos(txtImg.width * 0.35, txtImg.height + 20);
                let timeLine = new Laya.TimeLine();
                timeLine.addLabel("tl1", 0).to(pointSp, { x: pointSp.x + 30, y: pointSp.y + 30 }, 800)
                    .addLabel("tl2", 0).to(pointSp, { x: pointSp.x, y: pointSp.y }, 800, Laya.Ease.backInOut);
                timeLine.play(0, true);
            }
            else if (_guideId == 1) {
                let pointSp = new Laya.Image("images/shouzhi.png");
                txtBox.addChild(pointSp);
                pointSp.pos(65, txtImg.height + 150);
                let timeLine = new Laya.TimeLine();
                timeLine.addLabel("tl1", 0).to(pointSp, { x: pointSp.x + 120, y: pointSp.y - 220 }, 1000)
                    .addLabel("tl2", 0).to(pointSp, { x: pointSp.x, y: pointSp.y }, 200);
                timeLine.play(0, true);
            }
            else if (_guideId == 3) {
                // let arrSp = new Laya.Image("images/bhj3.png");
                // txtImg.addChild(arrSp);
                // arrSp.pos(txtImg.width*0.22, txtImg.height +120);
                // arrSp.alpha = 0.9;
                let pointSp = new Laya.Image("images/shouzhi.png");
                txtBox.addChild(pointSp);
                pointSp.pos(txtImg.width * 0.4, txtImg.height + 60);
                let timeLine = new Laya.TimeLine();
                timeLine.addLabel("tl1", 0).to(pointSp, { x: pointSp.x - 120, y: pointSp.y }, 800)
                    .addLabel("tl2", 0).to(pointSp, { x: pointSp.x, y: pointSp.y }, 800, Laya.Ease.backInOut);
                timeLine.play(0, true);
            }
            else if (_guideId == 4) {
                let pointSp = new Laya.Image("images/shouzhi.png");
                txtBox.addChild(pointSp);
                pointSp.pos(txtImg.width * 0.25, txtImg.height + 70);
                let timeLine = new Laya.TimeLine();
                timeLine.addLabel("tl1", 0).to(pointSp, { x: pointSp.x + 30, y: pointSp.y + 30 }, 800)
                    .addLabel("tl2", 0).to(pointSp, { x: pointSp.x, y: pointSp.y }, 800, Laya.Ease.backInOut);
                timeLine.play(0, true);
            }
            else if (_guideId == 5) {
                let pointSp = new Laya.Image("images/shouzhi.png");
                txtBox.addChild(pointSp);
                pointSp.pos(txtImg.width * 0.2, txtImg.height + 40);
                let timeLine = new Laya.TimeLine();
                timeLine.addLabel("tl1", 0).to(pointSp, { x: pointSp.x + 30, y: pointSp.y + 30 }, 800)
                    .addLabel("tl2", 0).to(pointSp, { x: pointSp.x, y: pointSp.y }, 800, Laya.Ease.backInOut);
                timeLine.play(0, true);
            }
        }
    }
    setTouchEnable(_enable = true) {
        let that = this;
        if (that.bgImg) {
            for (var index = 0; index < 4; index++) {
                var element = that.bgImg.getChildByName('maskview_' + index);
                if (element) {
                    element.mouseEnabled = _enable;
                }
            }
        }
    }
}
// module laya  {
// 	import Sprite = Laya.Sprite;
// 	import Stage = Laya.Stage;
// 	import HitArea = Laya.HitArea;
// 	import WebGL = Laya.WebGL;
// 	export class Sprite_Guide 
// 	{
// 		private red:Sprite;
// 		private guideContainer:Sprite;
// 		private tipContainer:Sprite;
// 		private guideSteps:Array<any> = 
// 		[
// 			{ x: 151, y: 575, radius:150, tip:"../../res/guide/help6.png", tipx:200, tipy:250 },
// 			{ x: 883, y: 620, radius:100, tip:"../../res/guide/help4.png", tipx:730, tipy:380 },
// 			{ x: 1128, y: 583, radius:110, tip:"../../res/guide/help3.png", tipx:900, tipy:300 }
// 		];
// 		private guideStep:number = 0;
// 		private hitArea:HitArea;
// 		private interactionArea:Sprite;
// 		constructor() 
// 		{
// 			Laya.init(1285, 727);
// 			Laya.stage.alignH = Stage.ALIGN_CENTER;
// 			Laya.stage.alignV = Stage.ALIGN_MIDDLE;
// 			//绘制一个蓝色方块，不被抠图
// 			var gameContainer:Sprite = new Sprite();
// 			gameContainer.loadImage("../../res/guide/crazy_snowball.png");
// 			Laya.stage.addChild(gameContainer);
// 			// 引导所在容器
// 			this.guideContainer = new Sprite();
// 			// 设置容器为画布缓存
// 			this.guideContainer.cacheAs = "bitmap";
// 			Laya.stage.addChild(this.guideContainer);
// 			gameContainer.on("click", this, this.nextStep);
// 			//绘制遮罩区，含透明度，可见游戏背景
// 			var maskArea:Sprite = new Sprite();
// 			maskArea.alpha = 0.5;
// 			maskArea.graphics.drawRect(0, 0, Laya.stage.width, Laya.stage.height, "#000000");
// 			this.guideContainer.addChild(maskArea);
// 			//绘制一个圆形区域，利用叠加模式，从遮罩区域抠出可交互区
// 			this.interactionArea = new Sprite();
// 			//设置叠加模式
// 			this.interactionArea.blendMode = "destination-out";
// 			this.guideContainer.addChild(this.interactionArea);
// 			this.hitArea = new HitArea();
// 			this.hitArea.hit.drawRect(0, 0, Laya.stage.width, Laya.stage.height, "#000000");
// 			this.guideContainer.hitArea = this.hitArea;
// 			this.guideContainer.mouseEnabled = true;
// 			this.tipContainer = new Sprite();
// 			Laya.stage.addChild(this.tipContainer);
// 			this.nextStep();
// 		}
// 		private nextStep():void
// 		{
// 			if (this.guideStep == this.guideSteps.length)
// 			{
// 				Laya.stage.removeChild(this.guideContainer);
// 				Laya.stage.removeChild(this.tipContainer);
// 			}
// 			else
// 			{
// 				var step:any = this.guideSteps[this.guideStep++];
// 				this.hitArea.unHit.clear();
// 				this.hitArea.unHit.drawCircle(step.x, step.y, step.radius, "#000000");
// 				this.interactionArea.graphics.clear();
// 				this.interactionArea.graphics.drawCircle(step.x, step.y, step.radius, "#000000");
// 				this.tipContainer.graphics.clear();
// 				this.tipContainer.loadImage(step.tip);
// 				this.tipContainer.pos(step.tipx, step.tipy);
// 			}
// 		}
// 	}
// }
// new laya.Sprite_Guide();
//# sourceMappingURL=GuideView.js.map
/*
* 守卫管理类;
*/
class EvolutionManager {
    constructor() {
        /** 守卫升级需要的英雄数量 */
        this.needHeroCount = 3;
    }
    /** 获取守卫升级需要的条件信息 */
    getEvolutionLevelData() {
        return BattleManager.Instance.getMonsterItem(this.getHeroId());
    }
    /** 守卫升级需要的英雄ID */
    getHeroId() {
        return userData.isEvolution() ? (1000 + this.getHeroLevel()) : (100 + this.getHeroLevel());
    }
    /** 获取守卫升级的英雄需要的等级 */
    getHeroLevel() {
        let kingLevel = userData.getKingLevel();
        return userData.isEvolution() ? (((kingLevel - 30) % 60) + 1) : (((kingLevel - 1) % 30) + 1);
    }
    /** 获取守卫升级需要的钻石 */
    getEvolutionLevelDiamond() {
        let kingLevel = userData.getKingLevel();
        let kingVO = GlobleData.getData(GlobleData.KindLevelConfigVO, kingLevel);
        if (!kingVO)
            return 0;
        return MathUtils.parseInt(kingVO.gemxh.toString());
    }
    /** 守卫是否可以升级*/
    getIsEvolutionLevel() {
        let kingLevel = userData.getKingLevel();
        if (kingLevel > 10) {
            return !((userData.diamond < this.getEvolutionLevelDiamond()) || (userData.caculateMonsterCount(this.getHeroLevel()) < this.needHeroCount));
        }
        else {
            return !(userData.diamond < this.getEvolutionLevelDiamond());
        }
    }
    static get Instance() {
        if (EvolutionManager._instance == null) {
            EvolutionManager._instance = new EvolutionManager();
        }
        return EvolutionManager._instance;
    }
}
//# sourceMappingURL=EvolutionManager.js.map
/*
* name;
*/
class ScaleAnimScript {
    constructor() {
        this.isMouseDown = false; //按下
        this.isMouseOut = false; //移除
    }
    set owner(value) {
        this.scaleBox = value;
        //自定义的脚本会有时序问题，所以在此添加一个延时
        this.scaleBox.frameOnce(2, this, this.onLoaded);
    }
    onLoaded() {
        this.scaleOrginValue = new Laya.Point(this.scaleBox.scaleX, this.scaleBox.scaleY);
        this._originAnchor = new Laya.Point((this.scaleBox.anchorX ? this.scaleBox.anchorX : 0), (this.scaleBox.anchorY ? this.scaleBox.anchorY : 0));
        this._originPos = new Laya.Point(this.scaleBox.x, this.scaleBox.y);
        this.scaleBox.on(Laya.Event.MOUSE_DOWN, this, this.mouseDown);
        this.scaleBox.on(Laya.Event.MOUSE_UP, this, this.mouseUp);
        this.scaleBox.on(Laya.Event.MOUSE_OUT, this, this.mouseOut);
        // this.scaleBox.on(Laya.Event.MOUSE_MOVE, this, this.mouseMove);
    }
    mouseDown() {
        this.isMouseDown = true;
        this.isMouseOut = false;
        this.scaleSmall();
    }
    mouseUp() {
        if (this.isMouseDown) {
            this.scaleNormal();
        }
        this.isMouseDown = false;
    }
    mouseOut() {
        if (this.isMouseDown) {
            this.scaleNormal();
        }
        this.isMouseDown = false;
        this.isMouseOut = true;
    }
    mouseMove() {
        if (this.isMouseOut) {
            if (this.isHit(this.scaleBox)) {
                this.scaleSmall();
            }
            else {
                this.scaleNormal();
            }
        }
    }
    scaleSmall() {
        if (this.scaleBox) {
            if (isNaN(this.scaleBox.left) && isNaN(this.scaleBox.right) && isNaN(this.scaleBox.top) &&
                isNaN(this.scaleBox.bottom) && isNaN(this.scaleBox.centerX) && isNaN(this.scaleBox.centerY)) {
                //居中处理
                this.scaleBox.anchorX = 0.5;
                this.scaleBox.anchorY = 0.5;
                this.scaleBox.pos(this.scaleBox.x + this.scaleBox.width * 0.5, this.scaleBox.y + this.scaleBox.height * 0.5);
            }
            this.scaleBox.scale(this.scaleOrginValue.x * 0.95, this.scaleOrginValue.y * 0.95);
            Laya.Tween.to(this.scaleBox, { scaleX: this.scaleOrginValue.x * 0.95, scaleY: this.scaleOrginValue.y * 0.95 }, 60, null, null);
            this.scaleBox.filters = DisplayUtils.createColorFilter(1);
        }
    }
    scaleNormal() {
        if (this.scaleBox) {
            this.scaleBox.scale(this.scaleOrginValue.x, this.scaleOrginValue.y);
            Laya.Tween.to(this.scaleBox, { scaleX: this.scaleOrginValue.x, scaleY: this.scaleOrginValue.y }, 60, null, Laya.Handler.create(null, () => {
                if (isNaN(this.scaleBox.left) && isNaN(this.scaleBox.right) && isNaN(this.scaleBox.top) &&
                    isNaN(this.scaleBox.bottom) && isNaN(this.scaleBox.centerX) && isNaN(this.scaleBox.centerY)) {
                    //居中处理
                    this.scaleBox.anchorX = this._originAnchor.x;
                    this.scaleBox.anchorY = this._originAnchor.y;
                    this.scaleBox.pos(this._originPos.x, this._originPos.y);
                }
            }));
            this.scaleBox.filters = [];
        }
    }
    //点击检测
    isHit(_checkBox, _extW = 0, _extH = 0) {
        if (_checkBox) {
            let touchPos = _checkBox.getMousePoint();
            let touchArea = new Laya.Rectangle(0 - _extW / 2, 0 - _extH / 2, _checkBox.width + _extW, _checkBox.height + _extH);
            return touchArea.contains(touchPos.x, touchPos.y);
        }
        return false;
    }
}
//# sourceMappingURL=ScaleAnimScript.js.map
class LayerEvent {
}
LayerEvent.CHILD_ADDED = "CHILD_ADDED";
LayerEvent.CHILD_REMOVED = "CHILD_REMOVED";
LayerEvent.LAYER_ANIMATION_COMPLETE = "LAYER_ANIMATION_COMPLETE";
//# sourceMappingURL=LayerEvent.js.map
//# sourceMappingURL=ILayer.js.map
class KeyValue {
    constructor(key = null, value = null) {
        this.key = key;
        this.value = value;
    }
}
//# sourceMappingURL=KeyValue.js.map
/*
* name;
*/
class CommonManager {
    constructor() {
    }
    static get Instance() {
        if (!CommonManager._instance) {
            CommonManager._instance = new CommonManager();
        }
        return CommonManager._instance;
    }
}
var DILOG_TYPE;
(function (DILOG_TYPE) {
    /** 英雄 */
    DILOG_TYPE[DILOG_TYPE["PET"] = 0] = "PET";
    /** 加速 */
    DILOG_TYPE[DILOG_TYPE["ACC"] = 1] = "ACC";
})(DILOG_TYPE || (DILOG_TYPE = {}));
//# sourceMappingURL=CommonManager.js.map
/*
* 技能管理类;
*/
class SkillManager {
    constructor() {
    }
    /** 获取对应技能强化消耗 */
    getSkillStrengthenCost(skillId, strengthenLevel) {
        let dataCfg = GlobleData.getData(GlobleData.SkillStrengthenVO, strengthenLevel);
        let cost = 0;
        if (dataCfg) {
            if (skillId == 1) {
                cost = MathUtils.parseInt(dataCfg.boss1Mxh);
            }
            else if (skillId == 2) {
                cost = MathUtils.parseInt(dataCfg.boss2Mxh);
            }
            else if (skillId == 3) {
                cost = MathUtils.parseInt(dataCfg.boss3Mxh);
            }
            else if (skillId == 10) {
                cost = MathUtils.parseInt(dataCfg.gold10jc);
            }
        }
        return cost;
    }
    /** 获取对应技能强化几率 */
    getSkillStrengthenProbability(skillId, strengthenLevel = 0) {
        let dataCfg = GlobleData.getData(GlobleData.SkillConfigVO, skillId);
        let probability = 0;
        if (dataCfg) {
            let qiangHuaSx = MathUtils.parseStringNum(dataCfg.qiangHuaSx);
            probability = Math.min(MathUtils.parseStringNum(dataCfg.qiangHua) * strengthenLevel, qiangHuaSx);
        }
        return probability;
    }
    /** 获取对应技能强化等级几率 */
    getSkillStrengthenLevelProbability(skillId, strengthenLevel = 0) {
        let dataCfg = GlobleData.getData(GlobleData.SkillConfigVO, skillId);
        let probability = 0;
        if (dataCfg) {
            probability = MathUtils.parseStringNum(dataCfg.triggerPro) + SkillManager.Instance.getSkillStrengthenProbability(skillId, strengthenLevel);
            probability += 0.0001; //小数偏差
        }
        return probability;
    }
    static get Instance() {
        if (SkillManager._instance == null) {
            SkillManager._instance = new SkillManager();
        }
        return SkillManager._instance;
    }
}
//# sourceMappingURL=SkillManager.js.map
/*
* name;
*/
class BattleModel {
    constructor() {
        /** 定时上传数据时间 */
        this.saveTime = 0;
        /** 刷新广告时间 */
        this.refreshAdvTime = 0;
        /** 活着的怪物数 */
        this.livingCount = 0;
        /** 活着的怪物数 */
        this.livingIndex = 0;
        /** 暴击加成 */
        this.kingDoubleAdd = 0;
        /** 英雄的伤害值 */
        this.petAttackValue = 0;
        /** 暴击数值范围 */
        this.critRateBuff = 0;
        /** 最大等级 */
        this.monsterMaxLevel = 30;
        /** 钻石初始消费价格 */
        this.monsterBaseDiamondPrice = 36;
    }
}
//# sourceMappingURL=BattleModel.js.map
class BattleEventsConst {
}
/** 战斗通关 */
BattleEventsConst.BATTLE_CLEARANC = "BATTLE_CLEARANC";
/** 战斗没有通关 */
BattleEventsConst.BATTLE_NO_CLEARANC = "BATTLE_NO_CLEARANC";
//# sourceMappingURL=BattleEventsConst.js.map
/*
* 字典;
*/
class TSDictionary {
    constructor() {
        /**
          * 字典这个数据结构，其本质是一个个键值对<key,value>形成的数据集合，
          * 但为了能查找到正确的数据，key值必须保证唯一性。我们可以通过使用
          * Typescript中的两个数组来分别存储key值和value值来模拟实现这种结构。
          * 数据存储时把key和value分别存储在两个数组相同的索引位置，
          * 这样在查找数据时就可以通过这个索引把数据关联起来，找到对应的值。。
          *
          */
        this.keys = [];
        this.values = [];
        this._len = 0;
    }
    toJsonObject() {
        const result = {};
        result.keys = this.keys;
        result.values = this.values;
        return result;
    }
    fromJsonObject(obj) {
        this.keys = obj.keys;
        this.values = obj.values;
    }
    Add(key, value) {
        let self = this;
        self.keys.push(key);
        self.values.push(value);
        self._len++;
    }
    Remove(key) {
        let self = this;
        let index = self.keys.indexOf(key, 0);
        if (index != -1) {
            self.keys.splice(index, 1);
            self.values.splice(index, 1);
            self._len--;
        }
    }
    /**获取字典中对应key的值，不存在则返回null */
    TryGetValue(key) {
        let self = this;
        var index = self.keys.indexOf(key, 0);
        if (index != -1) {
            return self.values[index];
        }
        return null;
    }
    TryGetKey(value) {
        let self = this;
        var index = self.values.indexOf(value, 0);
        if (index != -1) {
            return self.keys[index];
        }
        return null;
    }
    /**
     * 通过判断条件获取相关列表
     * @param value 判断条件例如：
     * this.TryGetListByCondition(function(VT){
     *      if(VT.xx==xx){
     *          return true
     *
     *      return false;
     * });
     * cache.TryGetListByCondition((bean:Type)=>bean.xxx==xxx);
     * 获取列表全部cache.TryGetListByCondition((bean:Type)=>true);
     */
    TryGetListByCondition(value) {
        let self = this;
        let list = [];
        for (let o of self.values) {
            if (value(o)) {
                list[list.length] = o;
            }
        }
        return list;
    }
    TryGetAnyByCondition(value) {
        let self = this;
        let dic = {};
        for (let s of self.keys) {
            var index = self.keys.indexOf(s, 0);
            if (value(self.values[index])) {
                dic[s] = self.values[index];
            }
        }
        return dic;
    }
    /**
     * 通过判断条件获取相关列表
     * @param value 判断条件例如：
     * this.TryGetListByCondition(function(VT){
     *      if(VT.xx==xx){
     *          return true
     *
     *      return false;
     * });
     * cache.TryGetListByCondition((bean:Type)=>bean.xxx==xxx);
     * 获取列表全部cache.TryGetListByCondition((bean:Type)=>true);
     */
    TryGetKeyListByCondition(value) {
        let self = this;
        let list = [];
        for (let i = 0; i < self.keys.length; i++) {
            if (value(self.keys[i])) {
                list[list.length] = self.values[i];
            }
        }
        return list;
    }
    /**判断字典中是否存在对应key的值，返回boolean */
    ContainsKey(key) {
        let self = this;
        let ks = self.keys;
        for (let i = 0; i < ks.length; ++i) {
            if (ks[i] == key) {
                return true;
            }
        }
        return false;
    }
    /**虽然可以通过上面的TryGetValue()函数获取到字典里的引用数据，
     * 再对数据进行修改更新，但当数据是值类型时是无法实现修改保存的。
     * 为了更方便的修改字典里的数据，增加一个修改数据的函数:(并在返回值中返回是否修改成功) */
    SetDicValue(key, value) {
        var index = this.keys.indexOf(key, 0);
        if (index != -1) {
            this.keys[index] = key;
            this.values[index] = value;
            return true;
        }
        this.Add(key, value);
        return true;
    }
    /**key为number的，可以按从小到大的顺序重新排序 */
    SortByKey() {
        let self = this;
        for (let j = self.keys.length - 1; j > 0; j--) {
            for (let i = 0; i < j; i++) {
                if (Number(self.keys[i]) > Number(self.keys[i + 1])) {
                    let temKey = self.keys[i];
                    let temValue = self.values[i];
                    self.keys[i] = self.keys[i + 1];
                    self.values[i] = self.values[i + 1];
                    self.keys[i + 1] = temKey;
                    self.values[i + 1] = temValue;
                }
            }
        }
        return true;
    }
    GetLenght() {
        return this._len;
    }
    getValueByIndex(index) {
        let self = this;
        if (index < 0 || index >= self._len) {
            return;
        }
        let value = self.values[index];
        return value;
    }
    getKeyByIndex(index) {
        let self = this;
        if (index < 0 || index >= self._len) {
            return;
        }
        let value = self.keys[index];
        return value;
    }
    getValues() {
        return this.values;
    }
    getkeys() {
        return this.keys;
    }
    clear() {
        let self = this;
        while (self.keys.length > 0) {
            self.keys.pop();
        }
        while (self.values.length > 0) {
            let vt = self.values.pop();
            vt = null;
        }
        self.keys.length = 0;
        self.values.length = 0;
        self._len = 0;
    }
}
//# sourceMappingURL=TSDictionary.js.map
/**
 * 时间工具类
 */
class TimeUtil {
    /** 获取单一的当前时间 */
    static getTimeCD(times) {
        if (times < 0)
            return;
        let h = Math.floor(times / 1000 / 60 / 60).toString();
        let m = Math.floor(times % (1000 * 3600) / (1000 * 60)).toString();
        let s = Math.floor((times % (1000 * 60)) / 1000).toString();
        if (Number(h) > 0) {
            return h + "h";
        }
        else if (Number(m) > 0) {
            return m + "m";
        }
        else if (Number(s) > 0) {
            return s + "s";
        }
        return "0";
    }
    /**
     * 时间毫秒转成小时
     * @param sec
     * @returns {number}
     * @constructor
     */
    static S2H(times, symbol = ":", isH = true) {
        if (times < 0)
            return;
        let h = Math.floor(times / 1000 / 60 / 60).toString();
        let m = Math.floor(times % (1000 * 3600) / (1000 * 60)).toString();
        let s = Math.floor((times % (1000 * 60)) / 1000).toString();
        if (Number(h) < 10) {
            h = "0" + h;
        }
        if (Number(m) < 10) {
            m = "0" + m;
        }
        if (Number(s) < 10) {
            s = "0" + s;
        }
        if (isH) {
            var restult = h + symbol + m + symbol + s;
        }
        else {
            var restult = m + symbol + s;
        }
        return restult;
    }
    static conversionTime(times) {
        if (times <= 0)
            return "";
        if (times >= 60 * 60 * 24) {
            let day = Math.floor(times / (60 * 60 * 24));
            return day + "天";
        }
        else if (times >= 60 * 60) {
            let h = Math.floor(times / (60 * 60));
            return h + "小时";
        }
        else {
            return this.S2H(times * 1000);
        }
    }
    /** 获取小时 */
    static getHours(times) {
        if (times < 0)
            return;
        return Math.floor(times / 1000 / 60 / 60);
    }
    /**
     * 获取字符串格式化数据
     * @param str
     */
    static fornatStr(str) {
        let arr = str.split("|");
        let obj = {};
        if (arr && arr.length) {
            for (var i = 0; i < arr.length; i++) {
                let data = this.fornatStr1(arr[i]);
                let itemObj = {
                    "id": data[0],
                    "itemtType": data[1],
                    "num": data[2]
                };
                obj[data[0]] = itemObj;
            }
        }
        return obj;
    }
    static fornatStr1(str, symbol = "#") {
        let arr = str.split(symbol);
        return arr;
    }
    /**
     * 获取当前服务器时间
     * @returns {number}
     */
    static getCurServerTime() {
        let time = this._initializeSTime + Math.floor((new Date().getTime()) / 1000) - this._initializeCTime;
        return time;
    }
    /**
     * 获取结束时间
     * @returns {number}
     */
    static getEndTime(cdTime) {
        return this._firstSTime + cdTime;
    }
    /**
     * 获取cd时间
     * @returns {number}
     */
    static getCDTime(time) {
        let endTime = this.getEndTime(time);
        let nowTime = this.getCurServerTime();
        if (nowTime >= endTime) {
            return 0;
        }
        return endTime - nowTime;
    }
    static getCDTimes(endTime) {
        let curTimes = this.getCurServerTime();
        if (endTime <= curTimes) {
            return 0;
        }
        let result = endTime - curTimes;
        return result;
    }
    /**
     * 同步时间
     * @param {number} sTime 服务器时间
     * @param {number} cTime 客户端时间
     */
    static synctime(sTime, cTime) {
        this._initializeCTime = cTime;
        this._initializeSTime = sTime;
        if (!this._isLogin) {
            this._firstSTime = sTime;
            this._isLogin = true;
        }
    }
    /**
     * 时间戳和当前时间相差的毫秒数
     * @param longTypeDate
     */
    static calculationTimestamp(longTypeDate) {
        var datetimeType = "";
        let num = longTypeDate - this.getCurServerTime() * 1000;
        num = Math.floor(num);
        return num;
    }
    /**
     * 时间戳long转成number 返回秒数
     * @param longTypeDate
     */
    static fornateTimestamp(longTypeDate) {
        var datetimeType = "";
        var date = new Date();
        date.setTime(longTypeDate);
        let num = date.getTime();
        num = Math.floor(num / 1000);
        return num;
    }
    /** 获取多少天 */
    static getDay(times) {
        if (times <= 0)
            return;
        let date = new Date();
        date.setTime(times);
        return date.getDate() + "天";
    }
    /** 00:00:00格式时间 */
    static timeFormatStr(_time, _isHour = false) {
        let hour = Math.floor(_time / 3600);
        let minute = Math.floor(_time / 60) % 60;
        let sec = _time % 60;
        if (_isHour) {
            return (hour < 10 ? ('0' + hour) : hour) + ':' + (minute < 10 ? ('0' + minute) : minute) + ':' + (sec < 10 ? ('0' + sec) : sec);
        }
        else {
            return (minute < 10 ? ('0' + minute) : minute) + ':' + (sec < 10 ? ('0' + sec) : sec);
        }
    }
}
TimeUtil._initializeSTime = 0; //初始化服务器时间
TimeUtil._initializeCTime = 0; //初始化客户端时间
TimeUtil._firstSTime = 0; //服务器登录时间
TimeUtil._isLogin = false;
//# sourceMappingURL=TimeUtil.js.map
/**
 * 字符串操作工具类
 */
class StringUtils {
    /**
     * 去掉前后空格
     * @param str
     * @returns {string}
     */
    static trimSpace(str) {
        return str.replace(/^\s*(.*?)[\s\n]*$/g, '$1');
    }
    /**
     * 获取字符串长度，中文为2
     * @param str
     */
    static getStringLength(str) {
        var strArr = str.split("");
        var length = 0;
        for (var i = 0; i < strArr.length; i++) {
            var s = strArr[i];
            if (this.isChinese(s)) {
                length += 2;
            }
            else {
                length += 1;
            }
        }
        return length;
    }
    /**
     * 判断一个字符串是否包含中文
     * @param str
     * @returns {boolean}
     */
    static isChinese(str) {
        var reg = /^.*[\u4E00-\u9FA5]+.*$/;
        return reg.test(str);
    }
    /**
     * 将字符串拆分到数组中，按照给定的层级字符串来分拆，返回的数组中，每个元素均为拆到最低层级的字符串。
     * @param source_str
     * @param lv1_str
     * @param lv2_str
     * @param lv3_str
     * @return
     *
     */
    static splitStringToArr(source_str, lv1_str = ",", lv2_str, lv3_str) {
        let arrlv1;
        let arrlv2s;
        let arrlv3s;
        arrlv1 = source_str.split(lv1_str);
        if (lv2_str) {
            arrlv2s = [];
            let i;
            for (i = 0; i < arrlv1.length; i++) {
                arrlv2s = arrlv2s.concat(arrlv1[i].split(lv2_str));
            }
            if (lv3_str) {
                arrlv3s = [];
                for (i = 0; i < arrlv2s.length; i++) {
                    arrlv3s = arrlv3s.concat(arrlv2s[i].split(lv3_str));
                }
                return arrlv3s;
            }
            else {
                return arrlv2s;
            }
        }
        else {
            return arrlv1;
        }
    }
    /**
     * 将字符串拆分到数组中，数组的每个元素均为键值对象，仅支持含二级或以下分隔符的字符串
     * @param source_str
     * @param lv1_str
     * @param lv2_str
     * @return
     *
     */
    static splitStringToKV(source_str, lv1_str = "|", lv2_str = ",") {
        const arrLv1 = source_str.split(lv1_str);
        const result = [];
        for (const str of arrLv1) {
            const tempArr = str.split(lv2_str);
            result.push(new KeyValue(tempArr[0], tempArr[1]));
        }
        if (result.length === 1) {
            return result.pop();
        }
        return result;
    }
    /** 将字符串拆分到数组中，数组的每个元素均为键值对象，仅支持含二级或以下分隔符的字符串 */
    static splitStringToPoint(source_str, separator = ",") {
        const result = new Laya.Point();
        if (source_str) {
            const arr = StringUtils.splitStringToArr(source_str, separator);
            result.x = parseInt(arr[0], 0);
            result.y = parseInt(arr[1], 0);
        }
        return result;
    }
    /** 将两个数组的内容按照键值对应输出成字符串。输出的格式为{key1:value1, key2:value2, key3:value3, ...} */
    static wrapValueObjects(keys, values) {
        let result = "{";
        for (let i = 0; i < keys.length; i++) {
            result += String(keys[i]) + ":" + String(values[i]) + ", ";
        }
        result = result.substr(0, result.length - 2);
        result += "}";
        return result;
    }
    /** 将给定的时间输出成电子时钟样式的时间字符串，如  01:29:05 */
    // prettier-ignore
    static toTimeShort(date, separator = ":") {
        let result = "";
        const hour = date.getHours();
        const minute = date.getMinutes();
        const second = date.getSeconds();
        result += (hour > 9 ? hour.toString() : "0" + hour.toString()) + separator;
        result += (minute > 9 ? minute.toString() : "0" + minute.toString()) + separator;
        result += second > 9 ? second.toString() : "0" + second.toString();
        return result;
    }
    /**
     * 将给定的秒数输出成电子时钟样式的时间字符串，如  01:29:05，一般用于显示倒计时等, showLevel取值范围{1, 2, 3}，1 - 显示到秒，2 - 显示到分，3 - 显示到小时，默认取值3
     */
    // prettier-ignore
    static toTimeShortWithSec(seconds, separator = ":", showLevel = 3) {
        let result = "";
        let hour;
        let minute;
        let second;
        if (showLevel === 1) {
            result += seconds > 9 ? seconds.toString() : "0" + seconds.toString();
        }
        else if (showLevel === 2) {
            minute = Math.floor(seconds / Time.MIN);
            second = Math.floor((seconds % Time.MIN) / Time.SEC);
            result += (minute > 9 ? minute.toString() : "0" + minute.toString()) + separator;
            result += second > 9 ? second.toString() : "0" + second.toString();
        }
        else if (showLevel === 3) {
            hour = Math.floor(seconds / Time.HOUR);
            minute = Math.floor((seconds % Time.HOUR) / Time.MIN);
            second = Math.floor((seconds % Time.MIN) / Time.SEC);
            result += (hour > 9 ? hour.toString() : "0" + hour.toString()) + separator;
            result += (minute > 9 ? minute.toString() : "0" + minute.toString()) + separator;
            result += second > 9 ? second.toString() : "0" + second.toString();
        }
        return result;
    }
    /** 将给定的秒数输出成电子时钟样式的时间字符串，如  02:05，一般用于显示倒计时等 */
    static toTimeShortWithMinute(seconds, separator = ":") {
        let result = "";
        const minute = Math.floor((seconds % Time.HOUR) / Time.MIN);
        const second = Math.floor((seconds % Time.MIN) / Time.SEC);
        result +=
            (minute > 9 ? minute.toString() : "0" + minute.toString()) + separator;
        result += second > 9 ? second.toString() : "0" + second.toString();
        return result;
    }
    /** 将给定的数值输出成按千位符分隔的 */
    // prettier-ignore
    static toCurrencyString(value, separator = ",") {
        let result = value.toString();
        result = result.replace(/\d{1,3}(?=(\d{3})+$)/g, (s) => {
            return s + separator;
        });
        return result;
    }
    // prettier-ignore
    static toShortCurrencyString(value, radix = 2, units = ",K,M,B,T,A,C,D,E,F,G,H,J,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z") {
        if (!value) {
            console.log("StringTools.toShortCurrencyString => value:", value);
            value = 0;
        }
        const k = 1000;
        let idx = 0;
        while (value > k) {
            value /= k;
            idx++;
        }
        if (value % 1 !== 0) {
            if (value && value.toFixed) {
            }
            else {
                console.log("StringTools.toShortCurrencyString => value:", value);
                return "";
            }
        }
        return (value % 1 === 0 ? value.toString() : value.toFixed(radix)) + units.split(",")[idx];
    }
    /** 格式化字符串，把object对象的各个字段和值转换为Url的query字符串，不带前面的问号 */
    static toUrlQueryString(data) {
        let result = "";
        for (const key of Object.keys(data)) {
            result += key + "=" + data[key];
            result += "&";
        }
        if (result.length > 0) {
            result = result.substr(0, result.length - 1);
        }
        return result;
    }
    /** 格式化字符串，把字符串中{0}、{1}、{2}……等结构替换成@args参数列表中的对应下标的字符串 */
    static formatString(str, ...args) {
        let result = str.concat();
        for (let i = 0; i < args.length; i++) {
            const reg = "{" + i + "}";
            result = result.replace(reg, args[i].toString());
        }
        return result;
    }
    /** 将超出字符长度的字符串裁剪成按长度加上“...”的方式显示 */
    static omitStringByCharLen(str, len = 7, omitSymbol = "...") {
        let result = str.concat();
        if (result.length > len) {
            result = result.substr(0, len - 1) + omitSymbol;
        }
        return result;
    }
    /**
     * 将超出字符存储长度的字符串裁剪成按存储长度加上“...”的方式显示，这里1个中文字符等于3个英文字符的Byte长度，但是一般文本显示的时候一个中文字符一般等于2个英文字符的宽度，故使用此方法时，传入的len参数应该按中文占两位长度来计算。
     */
    static omitStringByByteLen(str, len = 14, omitSymbol = "...") {
        if (!str)
            return str;
        let result = str.concat();
        let resultLen = 0;
        let lastSymbolLen = 0;
        const bytes = new Laya.Byte();
        try {
            bytes.writeUTFBytes(result);
            bytes.pos = 0;
            while (bytes.bytesAvailable) {
                const byte = bytes.readByte();
                if (byte >= 0) {
                    lastSymbolLen = 1;
                    resultLen++;
                }
                else {
                    let loop = 2;
                    lastSymbolLen = 1;
                    while (bytes.bytesAvailable && loop) {
                        bytes.readByte();
                        resultLen++;
                        lastSymbolLen++;
                        loop--;
                    }
                }
                if (resultLen >= len) {
                    break;
                }
            }
            if (bytes.bytesAvailable > 0) {
                const end = bytes.length - bytes.bytesAvailable - lastSymbolLen;
                bytes.pos = 0;
                result = bytes.readUTFBytes(end) + omitSymbol;
            }
        }
        catch (e) {
            console.error("@FREEMAN: StringTools.omitStringByByteLen:", e);
        }
        return result;
    }
}
//# sourceMappingURL=StringUtils.js.map
class ResUtils {
    static loadGroup(group, onComplete, thisObject) {
        Laya.loader.load(this.combGroupList(group), Laya.Handler.create(thisObject, onComplete));
    }
    /** 组合资源组名 */
    static combGroupList(group) {
        let newGroup = [];
        for (let i = 0, len = group.length; i < len; i++) {
            newGroup.push({ url: "res/atlas/" + group[i] + ".atlas", type: Laya.Loader.ATLAS });
        }
        return newGroup;
    }
}
//# sourceMappingURL=ResUtils.js.map
/**
 * 随机数工具类
 */
class RandomUtils {
    /** 生成随机浮点数，随机数范围包含min值，但不包含max值 */
    static range(min, max) {
        return Math.random() * (max - min) + min;
    }
    /** 生成随机整数，随机整数范围包含min值和max值 */
    static rangeInt(min, max) {
        return Math.floor(Math.random() * (max - min + 1) + min);
    }
    /**
     * 获取一个区间的随机数
     * @param $from 最小值
     * @param $end 最大值
     * @returns {number}
     */
    static limit($from, $end) {
        $from = Math.min($from, $end);
        $end = Math.max($from, $end);
        var range = $end - $from;
        return $from + Math.random() * range;
    }
    /**
     * 获取一个区间的随机数(帧数)
     * @param $from 最小值
     * @param $end 最大值
     * @returns {number}
     */
    static limitInteger($from, $end) {
        return Math.round(this.limit($from, $end));
    }
    /**
     * 在一个数组中随机获取一个元素
     * @param arr 数组
     * @returns {any} 随机出来的结果
     */
    static randomArray(arr) {
        var index = Math.floor(Math.random() * arr.length);
        return arr[index];
    }
    /**
     * 在 start 与 stop之间取一个随机整数，可以用step指定间隔， 但不包括较大的端点（start与stop较大的一个）
     * 如
     * Random.randrange(1, 10, 3)
     * 则返回的可能是   1 或  4 或  7  , 注意 这里面不会返回10，因为是10是大端点
     * @return 假设 start < stop,  [start, stop) 区间内的随机整数
     */
    static randrange(start, stop, step = 1) {
        if (step == 0)
            throw new Error('step 不能为 0');
        var width = stop - start;
        if (width == 0)
            throw new Error('没有可用的范围(' + start + ',' + stop + ')');
        if (width < 0)
            width = start - stop;
        var n = Math.floor((width + step - 1) / step);
        return Math.floor(Math.random() * n) * step + Math.min(start, stop);
    }
    /**
     * 返回a 到 b直间的随机整数，包括 a 和 b
     * @param a
     * @param b
     * @return [a, b] 直接的随机整数
     *
     */
    static randint(a, b) {
        if (a > b)
            a++;
        else
            b++;
        return this.randrange(a, b);
    }
}
//# sourceMappingURL=RandomUtils.js.map
class PointUtils {
    /**
     * 按位置取得两个点之间连线上某个点的位置
     * @param startPt 起始点
     * @param endPt 结束点
     * @param position 要取点的位置，<code>position</code>的值越接近0，取出的点越靠近<code>startPt</code>；<code>position</code>的值越接近1，取出的点越靠近<code>endPt</code>；
     * @return
     *
     */
    static interpolate(startPt, endPt, position) {
        return new Point(startPt.x + (endPt.x - startPt.x) * position, startPt.y + (endPt.y - startPt.y) * position);
    }
    /**
     * 计算两个点之间的距离
     * @param p1 第一个点
     * @param p2 第二个点
     * @return 距离
     *
     */
    static distance(p1, p2) {
        return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y));
    }
    /**
     * 计算两组坐标之间的距离
     * @param x1 第一个点的x坐标
     * @param y1 第一个点的y坐标
     * @param x2 第二个点的y坐标
     * @param y2 第二个点的y坐标
     * @return 距离
     *
     */
    static distanceByAxis(x1, y1, x2, y2) {
        return Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));
    }
    /**
     * 获得从p1至p2的朝向，当p1在左侧时返回1，当p1在右侧时返回-1
     * @param p1
     * @param p2
     * @return
     *
     */
    static getDirection(p1, p2) {
        if (p1.x <= p2.x) {
            return 1;
        }
        if (p1.x > p2.x) {
            return -1;
        }
        return 1;
    }
    /**
     * 获得target在LayerManager的全局坐标
     * @param target
     * @param moveRightNow 是否同时把target的位置移到新的位置
     * @return
     *
     */
    static localToGlobal(target, moveRightNow) {
        const pt = new Point(target.x, target.y);
        let parent = target.parent;
        while (parent && !(parent instanceof Layer)) {
            pt.x += parent.x - parent.pivotX - (parent.scrollRect ? parent.scrollRect.x : 0);
            pt.y += parent.y - parent.pivotY - (parent.scrollRect ? parent.scrollRect.y : 0);
            parent = parent.parent;
        }
        if (moveRightNow) {
            target.pos(pt.x, pt.y);
        }
        return pt;
    }
    /**
     * 保持target对象的全局位置不变的情况下，计算target显示对象在新的显示对象容器中的本地坐标位置
     * @param target
     * @param newParent
     * @param moveRightNow
     * @return
     *
     */
    static parentToParent(target, newParent, moveRightNow) {
        const pt = PointUtils.localToGlobal(target);
        const zeroPt = new Point();
        let parent = newParent;
        while (parent && !(parent instanceof Layer)) {
            zeroPt.x += parent.x;
            zeroPt.y += parent.y;
            parent = parent.parent;
        }
        pt.x = pt.x - zeroPt.x;
        pt.y = pt.y - zeroPt.y;
        if (moveRightNow) {
            target.pos(pt.x, pt.y);
        }
        return pt;
    }
}
//# sourceMappingURL=PointUtils.js.map
class PathUtils {
    static CreateBezierPoints(anchorpoints, pointsAmount = 120) {
        const points = [];
        for (let i = 0; i < pointsAmount; i++) {
            const point = this.MultiPointBezier(anchorpoints, i / pointsAmount);
            points.push(point);
        }
        return points;
    }
    static MultiPointBezier(points, t) {
        const len = points.length;
        let x = 0;
        let y = 0;
        for (let i = 0; i < len; i++) {
            const point = points[i];
            x +=
                point.x *
                    Math.pow(1 - t, len - 1 - i) *
                    Math.pow(t, i) *
                    this.erxiangshi(len - 1, i);
            y +=
                point.y *
                    Math.pow(1 - t, len - 1 - i) *
                    Math.pow(t, i) *
                    this.erxiangshi(len - 1, i);
        }
        return new Point(x, y);
    }
    static erxiangshi(start, end) {
        let cs = 1;
        let bcs = 1;
        while (end > 0) {
            cs *= start;
            bcs *= end;
            start--;
            end--;
        }
        return cs / bcs;
    }
}
//# sourceMappingURL=PathUtils.js.map
class ObjectUtils {
    /** 替换数组中的数据 */
    static replaceItemToArray(array, inde, item) {
        array.splice(inde, 1, item);
    }
    /** 把数据转换成一个Point */
    static converToPoint(value, separater = ",") {
        if (value == null)
            return null;
        let sValue = String(value).split(separater);
        return new Laya.Point(parseFloat(sValue[0]), parseFloat(sValue[1]));
    }
    /** 把数据转换成number数组 */
    static splitToNumber(value, sprelator = ",") {
        let result = [];
        let sArray = value.split(sprelator);
        for (let i = 0; i < sArray.length; i++) {
            result.push(parseInt(sArray[i]));
        }
        return result;
    }
    /** 把字符串转换成一个数组 */
    static splitToString(value, sprelator = ",") {
        let result = [];
        let sArray = value.split(sprelator);
        for (let i = 0; i < sArray.length; i++) {
            result.push(sArray[i]);
        }
        return result;
    }
    /** 把数据转换成Point的数组 */
    static splitToPoints(value, separater = "#") {
        if (value == null)
            return [];
        let points = [];
        let sValue = ObjectUtils.splitToString(value);
        for (let i = 0; i < sValue.length; i++) {
            points.push(ObjectUtils.converToPoint(sValue[i]));
        }
        return points;
    }
    /** 移除数组中的指定元素 */
    static removeFromArray(target, array) {
        let index = array.indexOf(target);
        if (index >= 0)
            array.splice(index, 1);
        return array;
    }
    /** 深度复制 */
    static copyDataHandler(obj) {
        var newObj;
        if (obj instanceof Array) {
            newObj = [];
        }
        else if (obj instanceof Object) {
            newObj = {};
        }
        else {
            return obj;
        }
        var keys = Object.keys(obj);
        for (var i = 0, len = keys.length; i < len; i++) {
            var key = keys[i];
            newObj[key] = this.copyDataHandler(obj[key]);
        }
        return newObj;
    }
    /**
     * 拷贝数据
     * @param newObj  需要赋值的对象
     * @param oldData  拥有数据的对象
     */
    static copyData(newObj, oldData) {
        if (oldData == null)
            return;
        for (let key in newObj) {
            if (key == "__class__")
                continue;
            if (key == "__types__")
                continue;
            const attrValue = oldData[key];
            if (attrValue != undefined) {
                newObj[key] = oldData[key];
            }
        }
    }
    static shuffle(arr) {
        let len = arr.length;
        let i = len;
        while (i--) {
            let ran = Math.floor(Math.random() * len);
            if (i != ran) {
                let tem = arr[i];
                arr[i] = arr[ran];
                arr[ran] = tem;
            }
        }
    }
    /** 点是否在区域中 */
    static pointIsInArea(rect, x, y) {
        return rect.contains(x, y);
    }
    /** 是否被点击 */
    static isHit(_checkSprite, _extW = 0, _extH = 0) {
        if (_checkSprite) {
            let touchPos = _checkSprite.getMousePoint();
            let touchArea = new Laya.Rectangle(0 - _extW / 2, 0 - _extH / 2, _checkSprite.width + _extW, _checkSprite.height + _extH);
            return touchArea.contains(touchPos.x, touchPos.y);
        }
        return false;
    }
    /** 求2对象之间的角度 */
    static getAngle(starPos, endPos) {
        let vx = starPos.x - endPos.x;
        let vy = starPos.y - endPos.y;
        let hyp = Math.sqrt(Math.pow(vy, 2) + Math.pow(vx, 2));
        let rad = Math.acos(vy / hyp);
        let deg = 180 / (Math.PI / rad);
        //得到了一个角度“rad”，不过是以弧度为单位的
        //把它转换成角度 
        if (vx < 0) {
            deg = (-deg);
        }
        else if ((vx == 0) && (vy < 0)) {
            deg = 180;
        }
        return 180 - deg;
    }
}
//# sourceMappingURL=ObjectUtils.js.map
/*
* 对象池类;
*/
class ObjectPool {
    /**
     * 构造函数
     */
    constructor() {
        this._objs = new Array();
    }
    /**
     * 放回一个对象
     * @param obj
     */
    pushObj(obj) {
        this._objs.push(obj);
    }
    /**
     * 取出一个对象
     * @returns {*}
     */
    popObj() {
        if (this._objs.length > 0) {
            return this._objs.pop();
        }
        else {
            return null;
        }
    }
    /**
     * 清除所有缓存对象
     */
    clear() {
        while (this._objs.length > 0) {
            this._objs.pop();
        }
    }
    /**
     * 取出一个对象
     * @param classZ Class
     * @return Object
     *
     */
    static pop(classZ, classKey, ...args) {
        if (!ObjectPool._content[classKey]) {
            ObjectPool._content[classKey] = [];
        }
        var list = ObjectPool._content[classKey];
        if (list.length) {
            let item = list.pop();
            if ((item instanceof Laya.Image) && args.length > 0) {
                item.skin = args[0];
            }
            return item;
        }
        else {
            var argsLen = args.length;
            var obj;
            if (argsLen == 0) {
                obj = new classZ();
            }
            else if (argsLen == 1) {
                obj = new classZ(args[0]);
            }
            else if (argsLen == 2) {
                obj = new classZ(args[0], args[1]);
            }
            else if (argsLen == 3) {
                obj = new classZ(args[0], args[1], args[2]);
            }
            else if (argsLen == 4) {
                obj = new classZ(args[0], args[1], args[2], args[3]);
            }
            else if (argsLen == 5) {
                obj = new classZ(args[0], args[1], args[2], args[3], args[4]);
            }
            obj.ObjectPoolKey = classKey;
            return obj;
        }
    }
    /**
     * 取出一个对象
     * @param refKey Class
     * @param extraKey 标识值
     * @returns {any}
     */
    static popWithExtraKey(refKey, extraKey) {
        if (!ObjectPool._content[refKey]) {
            ObjectPool._content[refKey] = [];
        }
        var obj;
        var list = ObjectPool._content[refKey];
        if (list.length) {
            for (var i = 0; i < list.length; i++) {
                if (list[i].extraKey == extraKey) {
                    obj = list[i];
                    list.splice(i, 1);
                    break;
                }
            }
        }
        if (!obj) {
            var classZ = refKey;
            obj = new classZ(extraKey);
            obj.extraKey = extraKey;
            obj.ObjectPoolKey = refKey;
        }
        return obj;
    }
    /**
     * 放入一个对象
     * @param obj
     *
     */
    static push(obj) {
        if (obj == null) {
            return false;
        }
        var refKey = obj.ObjectPoolKey;
        //保证只有pop出来的对象可以放进来，或者是已经清除的无法放入
        if (!ObjectPool._content[refKey]) {
            return false;
        }
        ObjectPool._content[refKey].push(obj);
        return true;
    }
    /**
     * 清除所有对象
     */
    static clear() {
        ObjectPool._content = {};
    }
    /**
     * 清除某一类对象
     * @param classZ Class
     * @param clearFuncName 清除对象需要执行的函数
     */
    static clearClass(classKey, clearFuncName = null) {
        var list = ObjectPool._content[classKey];
        while (list && list.length) {
            var obj = list.pop();
            if (clearFuncName) {
                obj[clearFuncName]();
            }
            obj = null;
        }
        ObjectPool._content[classKey] = null;
        delete ObjectPool._content[classKey];
    }
    /**
     * 缓存中对象统一执行一个函数
     * @param classZ Class
     * @param dealFuncName 要执行的函数名称
     */
    static dealFunc(refKey, dealFuncName) {
        var list = ObjectPool._content[refKey];
        if (list == null) {
            return;
        }
        var i = 0;
        var len = list.length;
        for (i; i < len; i++) {
            list[i][dealFuncName]();
        }
    }
}
ObjectPool._content = {};
//# sourceMappingURL=ObjectPool.js.map
/*
* 消息提示工具类;
*/
class MessageUtils {
    constructor() {
    }
    /**
     * 纯文本飘字 -- 屏幕中间提示
     * @param {string} content
     * @memberof MessageUtils
     */
    static showMsgTips(content) {
        let self = this;
        let msg = ObjectPool.pop(MessageTips, "MessageTips");
        msg.visible = false;
        msg.init(content);
        self._msgs.push(msg);
        AlignUtils.setToScreenGoldenPos(msg);
        LayerMgr.Instance.addToLayer(msg, LAYER_TYPE.ROLL_MSG_LAYER);
        // M.layer.rollMessageLayer.addChild(msg);
        if (self._msgs.length > 0) {
            let time = self._msgTime * 250;
            TimerManager.Instance.doTimer(time, 1, () => {
                msg.visible = true;
                msg.zOrder = 999;
            }, msg);
            Laya.Tween.to(msg, { x: msg.x, y: msg.y - 100, alpha: 0 }, 2500, Laya.Ease.cubicInOut, Laya.Handler.create(self, ($msg) => {
                Laya.Tween.clearTween($msg);
                DisplayUtils.removeFromArray($msg, self._msgs);
                $msg.zOrder = 1;
                ObjectPool.push($msg);
                $msg.removeSelf();
                $msg.alpha = 1;
                if (self._msgs.length <= 0) {
                    self._msgTime = 0;
                }
            }, [msg]), time);
            self._msgTime++;
        }
    }
    /**
     * 根据对象位置来提示
     * @static
     * @param {Laya.Sprite} obj
     * @param {string} content
     * @param {number} [type=-1]
     * @memberof MessageUtils
     */
    static shopMsgByObj(obj, content, type = -1) {
        let label = ObjectPool.pop(Laya.Label, "TipsLabel");
        label.alpha = 1;
        label.text = content;
        label.y = -(obj.height / 2);
        label.fontSize = 30;
        label.color = "#FFFFFF";
        label.stroke = 4;
        label.strokeColor = "#946430";
        if (type != -1) {
            let image = new Laya.Image();
            let hbox = new Laya.HBox();
            let url = "";
            switch (type) {
                case EFFECT_TYPE.GOLD:
                    url = "images/core/coin_40x40.png";
                    break;
                case EFFECT_TYPE.DIAMOND:
                    url = "images/core/diamond.png";
                    break;
                case EFFECT_TYPE.ESSENCE:
                    url = "images/core/essence.png";
                    break;
                default:
                    break;
            }
            image.skin = url;
            hbox.addChild(image);
            hbox.addChild(label);
            hbox.align = "middle";
            const global = PointUtils.localToGlobal(obj);
            hbox.pos(global.x, global.y);
            M.layer.screenEffectLayer.addChild(hbox);
            hbox.x += (obj.width - hbox.width) / 2;
            Laya.Tween.to(hbox, { y: hbox.y - 50, alpha: 0 }, 1000, null, Laya.Handler.create(this, () => {
                Laya.Tween.clearTween(hbox);
                hbox.removeSelf();
            }, null, true));
        }
        else {
            const global = PointUtils.localToGlobal(obj);
            label.pos(global.x, global.y);
            M.layer.screenEffectLayer.addChild(label);
            label.x += (obj.width - label.width) / 2;
            Laya.Tween.to(label, { y: label.y - 50, alpha: 0 }, 1000, null, Laya.Handler.create(this, () => {
                Laya.Tween.clearTween(label);
                label.removeSelf();
                ObjectPool.push(label);
            }, null, true));
        }
    }
}
MessageUtils._msgTime = 0;
MessageUtils._msgs = [];
//# sourceMappingURL=MessageUtils.js.map
/*
* 数值工具类;
*/
class MathUtils {
    //计算两点角度
    static calulatePointAnagle(_startX, _startY, _endX, _endY) {
        //除数不能为0
        let tanAngle = Math.atan(Math.abs((_endY - _startY) / (_endX - _startX))) * 180 / Math.PI;
        if (_endX > _startX && _endY > _startY) { //第一象限
            tanAngle = -tanAngle;
        }
        else if (_endX > _startX && _endY < _startY) { //第二象限
            tanAngle = tanAngle;
        }
        else if (_endX < _startX && _endY > _startY) { //第三象限
            tanAngle = tanAngle - 180;
        }
        else {
            tanAngle = 180 - tanAngle;
        }
        return -tanAngle;
    }
    //字符串转数字
    static parseStringNum(_strNum) {
        let intNum = parseFloat(_strNum);
        if (intNum) {
            return intNum;
        }
        return 0;
    }
    //字符串转整形
    static parseInt(_strNum) {
        let intNum = parseFloat(_strNum);
        if (intNum) {
            return Math.floor(intNum);
        }
        return 0;
    }
    //字符串转数字
    static numToPercent(_num) {
        let perNum = _num * 100;
        let intBit = Math.floor(perNum); //取整数部分
        if (perNum > intBit) {
            return perNum.toFixed(1) + "%";
        }
        return intBit + "%";
    }
    //单位转换
    static bytesToSize(bytes, isBlood = false) {
        if (bytes < 10000) {
            return Math.floor(bytes).toString();
        }
        if (bytes === 0)
            return '0';
        var k = 1000, // or 1024
        sizes = ['', 'K', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y', 'aa', 'bb', 'cc', 'dd', 'ee', 'ff', 'gg', 'hh', 'ii', 'jj', 'kk', 'mm', 'nn', 'pp', 'qq', 'rr', 'ss', 'tt', 'uu', 'vv', 'ww', 'xx', 'zz'], i = Math.floor(Math.log(bytes) / Math.log(k));
        var unit = '';
        if (i < sizes.length) {
            unit = sizes[i];
        }
        else {
            var numLenght = i - sizes.length;
            unit = String.fromCharCode(97 + numLenght % 26);
            for (var index = 0; index < 1 + Math.floor(numLenght / 65); index++) {
                unit = unit + unit;
            }
        }
        if (isBlood) {
            return Math.abs(parseInt((bytes / Math.pow(k, i)).toPrecision(3))) + unit;
        }
        else {
            return (bytes / Math.pow(k, i)).toPrecision(3) + ' ' + unit;
        }
    }
}
//# sourceMappingURL=MathUtils.js.map
/*
* 显示对象工具类;
*/
class DisplayUtils {
    constructor() {
    }
    static mouseEnabled(display, value) {
        display.mouseEnabled = value;
        if (display.numChildren > 0) {
            for (const child of display._childs) {
                this.mouseEnabled(child, value);
            }
        }
    }
    /** 设置滤镜变灰 */
    static setFilters(component) {
        if (component) {
            //颜色矩阵数组
            var colorMatrix = [
                0.3, 0.6, 0, 0, 0,
                0.3, 0.6, 0, 0, 0,
                0.3, 0.6, 0, 0, 0,
                0, 0, 0, 1, 0
            ];
            var colorFlilter = new Laya.ColorFilter(colorMatrix);
            component.filters = [colorFlilter];
        }
    }
    /** 颜色滤镜 */
    static createColorFilter(index = 0) {
        if (index == 1) {
            //变暗
            var colorV = 0.6;
            var colorMat = [
                colorV, 0, 0, 0, 0,
                0, colorV, 0, 0, 0,
                0, 0, colorV, 0, 0,
                0, 0, 0, 1, 0,
            ];
            //创建一个颜色滤镜对象
            var colorFilter = new Laya.ColorFilter(colorMat);
            return [colorFilter];
        }
        else if (index == 2) {
            //变黑
            var colorV = 0.6;
            var colorMat = [
                0, 0, 0, 0, 0,
                0, 0, 0, 0, 0,
                0, 0, 0, 0, 0,
                0, 0, 0, 1, 0,
            ];
            //创建一个颜色滤镜对象
            var colorFilter = new Laya.ColorFilter(colorMat);
            return [colorFilter];
        }
        return [];
    }
    /**
     * 设置文本颜色
     * @param component 字体
     * @param flag true 有钱的颜色  false 没钱的颜色
     */
    static setLabelColor(component, flag) {
        if (component) {
            if (flag) {
                component.color = "#FFFFFF";
            }
            else {
                component.color = "#FF802C";
            }
        }
    }
    static removeFromArray(target, array) {
        let index = array.indexOf(target);
        if (index >= 0)
            array.splice(index, 1);
        return array;
    }
    /**
     * 从父级移除child
     * @param child
     */
    static removeFromParent(child) {
        if (!child)
            return;
        if (child.parent) {
            child.parent.removeChild(child);
        }
        child = null;
    }
    /** 移除所有子对象并回收 */
    static removeAllChildren(container) {
        if (!container)
            return;
        if (container && container.numChildren) {
            while (container.numChildren) {
                var node = container.getChildAt(0);
                if (node) {
                    if (node.parent) {
                        node.parent.removeChild(node);
                        ObjectPool.push(node);
                    }
                    node = null;
                }
            }
        }
    }
}
//# sourceMappingURL=DisplayUtils.js.map
/**
 * Debuf调试工具
 */
class DebugUtils {
    constructor() {
        DebugUtils._startTimes = {};
    }
    /**
     * 设置调试是否开启
     * @param flag
     *
     */
    static isOpen(flag) {
        this._isOpen = flag;
    }
    /**
     * 是否是调试模式
     * @returns {boolean}
     */
    static isDebug() {
        return this._isOpen;
    }
    /**
     * 开始
     * @param key 标识
     * @param minTime 最小时间
     *
     */
    static start(key) {
        if (!this._isOpen) {
            return;
        }
        this._startTimes[key] = new Date().getTime();
    }
    /**
     * 停止
     */
    static stop(key) {
        if (!this._isOpen) {
            return 0;
        }
        if (!this._startTimes[key]) {
            return 0;
        }
        var cha = new Date().getTime() - this._startTimes[key];
        if (cha > this._threshold) {
            // Log.trace(key + ": " + cha);
        }
        return cha;
    }
    /**
     * 设置时间间隔阈值
     * @param value
     */
    static setThreshold(value) {
        this._threshold = value;
    }
}
DebugUtils._threshold = 3;
//# sourceMappingURL=DebugUtils.js.map
/**
 * CSV解析类
 */
class CSVParser {
    //用json替换csv,json解析文件
    static ParseJsonData(infoClass, sourceText) {
        let self = this;
        var result = new TSDictionary();
        sourceText = sourceText.trim();
        let obj = JSON.parse(sourceText);
        var keyList = null;
        var typeList = null;
        var dataList = null;
        var itemList = null;
        keyList = obj.titles;
        if (obj.data == null)
            return result; //空表不做处理
        dataList = obj.data; //数据是从0开始
        typeList = dataList[0];
        var i = 0;
        var dataLen = dataList.length;
        for (i = 0; i < dataLen; i++) {
            var record = new infoClass();
            itemList = dataList[i];
            self.ParseRecord(keyList, itemList, record);
            result.Add(parseInt(itemList[0]), record);
        }
        sourceText = null;
        return result;
    }
    static ParseRecord(keyList, itemList, record) {
        let self = this;
        var n = itemList.length;
        for (var i = 0; i < n; i++) {
            record[keyList[i]] = itemList[i];
        }
    }
}
//# sourceMappingURL=CSVParser.js.map
/*
* 动画工具类;
*/
class AnimationUtils {
    /** 锁定按钮n帧 */
    static lockBtnStage(_btn, _delay = 10) {
        _btn.mouseEnabled = false;
        _btn.frameOnce(_delay, _btn, () => {
            _btn.mouseEnabled = true;
        });
    }
    /** 动画url数组 */
    static aniUrls(_aniName, _frameCount, _url = '', _isReverse = false) {
        let urls = [];
        for (let i = 0; i < _frameCount; i++) {
            //动画资源路径要和动画图集打包前的资源命名对应起来
            urls.push(_url + _aniName + (i + 1) + ".png");
        }
        if (_isReverse) {
            urls = urls.concat([].concat(urls).reverse());
        }
        return urls;
    }
    /** 英雄动画url数组 */
    static heroAniUrls(aniName, startCount, endCount, url = '', isReverse = false) {
        let urls = [];
        //动画资源路径要和动画图集打包前的资源命名对应起来
        for (let i = startCount; i < endCount; i++) {
            urls.push(url + aniName + (i + 1) + ".png");
        }
        if (isReverse) {
            urls = urls.concat([].concat(urls).reverse());
        }
        return urls;
    }
}
//# sourceMappingURL=AnimationUtils.js.map
class AlignUtils {
    /**
     * 把现实对象设置到屏幕水平居中，垂直居中的位置上，使用前请确认<code>sprite</code>宽高不为0
     * @param sprite
     * @param delayFrames
     * @param useRegisterPoint
     *
     */
    static setToScreenCenter(sprite, delayFrames, useRegisterPoint) {
        if (delayFrames) {
            Laya.timer.frameOnce(delayFrames, AlignUtils, AlignUtils.setToScreenCenter, [sprite], false);
        }
        if (useRegisterPoint) {
            sprite.x = LayerManager.stageDesignWidth * 0.5;
            sprite.y = LayerManager.stageDesignHeight * 0.5;
        }
        else {
            sprite.x = (LayerManager.stageDesignWidth - sprite.width) * 0.5;
            sprite.y = (LayerManager.stageDesignHeight - sprite.height) * 0.5;
        }
    }
    /**
     * 把现实对象设置到屏幕水平居中，垂直在0.618的黄金分割点位置上，使用前请确认<code>sprite</code>宽高不为0
     * @param sprite
     * @param delayFrames
     * @param useRegisterPoint
     *
     */
    static setToScreenGoldenPos(sprite, delayFrames, useRegisterPoint) {
        if (delayFrames) {
            Laya.timer.frameOnce(delayFrames, AlignUtils, AlignUtils.setToScreenGoldenPos, [sprite], false);
        }
        if (useRegisterPoint) {
            sprite.x = LayerManager.stageDesignWidth * 0.5;
            sprite.y = LayerManager.stageDesignHeight * 0.382;
        }
        else {
            sprite.x = (LayerManager.stageDesignWidth - sprite.width) * 0.5;
            sprite.y = (LayerManager.stageDesignHeight - sprite.height) * 0.382;
        }
    }
    /**
     * 仅将目标对象target的x坐标和y坐标设置为到ref的中心。（注意，如果ref没有宽高可能会导致意外的问题）
     * @param target
     * @param ref
     *
     */
    static setToSpriteCenter(target, ref) {
        if (!target || !ref) {
            throw new Error("Either target or ref is null.");
        }
        else {
            target.pos(ref.width * 0.5, ref.height * 0.5);
        }
    }
    /**
     * 仅将目标对象target根据对齐方式设置坐标。仅设置x坐标和y坐标，忽略目标对象target的宽高。（注意，如果ref没有宽高可能会导致意外的问题）
     * @param target
     * @param ref
     *
     */
    static setTo(align, target, ref) {
        if (align === Align.CENTER) {
            AlignUtils.setToSpriteCenter(target, ref);
        }
    }
}
//# sourceMappingURL=AlignUtils.js.map
//数据缓存
var requestCache = {};
class HttpRequestHelper {
    constructor(_url) {
        this.baseUrl = null;
        this.baseUrl = _url;
    }
    //http请求
    request(_params, _noToken = false) {
        console.log("http request==>>", _params.url);
        var that = this;
        if (!_params.method) {
            _params.method = 'Get';
        }
        ;
        //仅缓存Get数据
        if (_params.cache && _params.method == 'Get') {
            var res = requestCache[_params.url];
            if (res && _params.success) {
                console.log("cache:" + _params.url);
                _params.success(res);
                return;
            }
            ;
        }
        ;
        var hr = new HttpRequest();
        hr.on(Laya.Event.PROGRESS, that, (e) => {
            console.log(e);
        });
        hr.once(Laya.Event.ERROR, that, (e) => {
            console.log("Laya.Event.ERROR:", e);
            if (e.indexOf('401') > 0) {
                if (!_noToken) {
                    platform.httpToken(that.baseUrl, (_token) => {
                        that.request(_params, true);
                    }, true);
                }
            }
            else {
                var res = hr.data;
                if (_params && _params.fail) {
                    _params.fail(res);
                }
            }
        });
        hr.once(Laya.Event.COMPLETE, that, (e) => {
            // console.log("Laya.Event.COMPLETE:" + hr.data);
            var res = hr.data;
            if (res == '401') {
                if (!_noToken) {
                    platform.httpToken(that.baseUrl, (_token) => {
                        that.request(_params);
                    }, true);
                }
                ;
            }
            else if (res == '500') {
                console.log("request-err: ", _params.url);
            }
            else if (_params.success) {
                var dataJson = res;
                var jsonObj = dataJson;
                // console.log("jsonObj:", jsonObj);
                if (dataJson) {
                    jsonObj = JSON.parse(dataJson);
                }
                requestCache[_params.url] = jsonObj;
                _params.success(jsonObj);
            }
            ;
        });
        var token = platform.httpToken(that.baseUrl, (_token) => {
            // console.log("httpToken:", _token);
        }, false);
        var header = ["Content-Type", "application/x-www-form-urlencoded;charset=utf-8", "token", token];
        if (_params.method == 'Post') {
            // var header = ["Content-Type", "application/x-www-form-urlencoded", "token", token];
            // console.log("header---", header)
            hr.send(that.baseUrl + _params.url, _params.data, 'POST', 'jsonp', header);
        }
        else {
            // var header = ["Content-Type", "application/json", "token", token];
            // console.log("header---", header)
            hr.send(that.baseUrl + _params.url, null, 'GET', 'jsonp', header);
        }
    }
    //文件上传
    uploadFile(_params, _noToken) {
        // var that = this;
        // wx.uploadFile({
        // 	url: that.baseUrl+_params.url,
        // 	header: {
        // 		'Content-Type': 'application/json',
        // 		'token': wx.getStorageSync('token')
        // 	},
        //     filePath: _params.filePath,
        //     name: _params.name,
        //     formData:_params.formData,
        // 	success: function(res) {
        // 		var code = res.statusCode.toString();
        // 		if (code =='401') {
        // 			if (!_noToken) {
        // 				if (vToken) {
        // 					vToken.requestCreate((token)=>{
        // 						that.uploadFile(_params, true)
        // 					})
        // 				};
        // 			};
        // 		} else if (_params.success) {
        // 			_params.success(res)
        // 		};
        // 	}
        // })
    }
}
//# sourceMappingURL=HttpRequestHelper.js.map
/*
* name;
*/
class HttpManager {
    constructor() {
    }
    /** 请求通关奖励 */
    requestStagePrizeDiamond(_stage, _diamond, _essence, _callback) {
        let that = this;
        let dataString = 'stage=' + _stage + '&diamond=' + _diamond + '&essence=' + _essence;
        let HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: 'v1/stage/post',
            method: 'Post',
            data: dataString,
            success: function (res) {
                console.log("requestStagePrizeDiamond", res);
                _callback && _callback(res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 请求奖励未领取的关卡 */
    requestStagePrizeData(_callback = null) {
        var that = this;
        var HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: 'v1/stage/get/info',
            success: function (res) {
                console.log("requestStagePrizeData:", res);
                _callback && _callback(res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 钻石购怪物 */
    requestDiamondBuy(_order_id, _callback) {
        console.log("钻石购怪物", _order_id);
        let that = this;
        let HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: 'v1/diamond/buy_car/' + _order_id,
            success: function (res) {
                console.log("requestDiamondBuy", res);
                _callback && _callback(res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 请求等级奖励钻石 */
    requestLevelPrizeDiamond(_level, _diamond, _callback) {
        let that = this;
        let dataString = 'level=' + _level + '&diamond=' + _diamond;
        let HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: 'v1/userinfo/upgrade_reward_diamond',
            method: 'Post',
            data: dataString,
            success: function (res) {
                console.log("requestLevelPrizeDiamond", res);
                _callback && _callback(res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 钻石购怪物下单 */
    requestDiamondBuyOrder(_diamond, _callback, _kind = 0) {
        console.log("钻石购怪物订单", _diamond);
        let that = this;
        let strKind = 'buy_car';
        if (_kind == 1) {
            strKind = 'diamond_acce';
        }
        let HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: 'v1/diamond/order/' + _diamond + '/' + strKind,
            success: function (res) {
                console.log("requestDiamondBuyOrder", res);
                _callback && _callback(res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 请求钻石升级 */
    requestUpdateKingLevel(_id, _level, _price, _callback = null) {
        let that = this;
        let dataString = 'type=' + _id + '&value=' + _level + '&price=' + _price + '&unit=' + "diamond";
        let HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: 'v1/intensify',
            method: 'Post',
            data: dataString,
            success: function (res) {
                console.log("requestUpdateKingLevel", res);
                _callback && _callback(res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 每日任务 */
    requestDailyTaskData(_taskId) {
        let that = this;
        let HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: 'v1/task/progress/' + _taskId,
            success: function (res) {
                console.log("requestDailyTaskData:", res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 新老版本清理回调 */
    requestVersionClear(_callback) {
        let that = this;
        let HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: 'v1/clear/user_data',
            success: function (res) {
                console.log("requestVersionClear", res);
                _callback && _callback(res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 新老版本更新检测（防止老数据覆盖） */
    requestVersionCheck(_callback) {
        let that = this;
        let HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: 'v1/check/version',
            success: function (res) {
                console.log("requestVersionCheck", res);
                if (res && res.clear_flag) {
                    //清理老数据
                    // that.clearLocalData();
                }
                _callback && _callback(res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 分享广告完成 */
    requestShareAdFinish(_kind, shareId = 0) {
        let that = this;
        let dataString = 'type=' + _kind + '&share_id=' + shareId;
        let HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: 'v1/operational/post_info',
            method: 'Post',
            data: dataString,
            success: function (res) {
                console.log(res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 分享完成 */
    requestShareFinish(_shareId, _encryptedData = '', _iv = '', _callback = null) {
        let that = this;
        let dataString = 'share_id=' + _shareId + '&encryptedData=' + _encryptedData + '&iv=' + _iv;
        let HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: 'v1/share/finish',
            method: 'Post',
            data: dataString,
            success: function (res) {
                console.log(res);
                _callback && _callback(res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 获取分享主题 */
    requestShareSubject(type, _callback) {
        let that = this;
        let HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: 'v1/share/to?type=' + type,
            success: function (res) {
                console.log(res);
                _callback && _callback(res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 通知服务器已领取离线收益 */
    requestNotifyServerPrize() {
        let that = this;
        let HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: 'v1/userinfo/reward',
            success: function (res) {
                console.log("requestNotifyServerPrize:", res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 技能强化 */
    requestSkillAddtionData(_callback) {
        let that = this;
        let HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: 'v1/get/intensify',
            success: function (res) {
                _callback && _callback(res);
            },
            fail: function (res) {
                console.log(res);
                EffectUtils.stopWaitEffect();
                MessageUtils.showMsgTips("网络异常");
            }
        });
    }
    /** 英雄商店数据 */
    requestCarshopData(_callback) {
        let that = this;
        let HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: 'v1/shop/get',
            success: function (res) {
                _callback && _callback(res);
            },
            fail: function (res) {
                console.log(res);
                EffectUtils.stopWaitEffect();
                MessageUtils.showMsgTips("网络异常");
            }
        });
    }
    /** 用户精华碎片 */
    requestEssenceData() {
        let that = this;
        let HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: 'v1/userinfo/get_essence',
            success: function (res) {
                if (res) {
                    userData.essence = MathUtils.parseStringNum(res.essence);
                    if (EventsManager.Instance) {
                        EventsManager.Instance.event(EventsType.ESSENCE_CHANGE, res);
                    }
                }
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 用户钻石 */
    requestDiamondData() {
        let that = this;
        let HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: 'v1/userinfo/get_diamond',
            success: function (res) {
                if (res) {
                    userData.diamond = MathUtils.parseStringNum(res.diamond);
                    if (EventsManager.Instance) {
                        EventsManager.Instance.event(EventsType.DIAMOND_CHANGE, res);
                    }
                }
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 坑位数据 */
    requestCarparkData(_callback) {
        let that = this;
        let HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: 'v1/seat/get',
            success: function (res) {
                console.log("requestCarparkData:", res);
                if (res) {
                    for (var key in userData.parkcarInfoArray) {
                        if (userData.parkcarInfoArray.hasOwnProperty(key)) {
                            var element = res[key];
                            if (element) {
                                userData.parkcarInfoArray[key] = element;
                            }
                        }
                    }
                    _callback && _callback(res);
                }
            },
            fail: function (res) {
                console.log(res);
                EffectUtils.stopWaitEffect();
                MessageUtils.showMsgTips("网络异常");
            }
        });
    }
    /** 分享/广告可点击次数(广告->ad; 分享免费得车->free_car; 买车金币不足得金币->no_money; 加速->acce;) */
    requestShareAdTimes() {
        let that = this;
        let HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: 'v1/operational/get_num',
            success: function (res) {
                userData.shareAdTimes = res;
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 用户信息金币 */
    requestUserinfoData(_callback) {
        let that = this;
        let HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: 'v1/userinfo/get',
            success: function (res) {
                console.log("requestUserinfoData:", res);
                if (res) {
                    // @FREEMAN 金币默认读缓存，如果缓存没有读取成功就按服务器返回的结果
                    if (!userData.hasCache(CacheKey.GOLD)) {
                        userData.setMoneySave(MathUtils.parseStringNum(res.money));
                    }
                    console.log("获取服务器发送过来金币数量：" + userData.gold);
                    userData.carLevel = MathUtils.parseInt(res.car_level);
                    userData.level = MathUtils.parseInt(res.level);
                    userData.diamond = MathUtils.parseStringNum(res.diamond);
                    if (res.hasOwnProperty("essence")) {
                        userData.essence = MathUtils.parseInt(res.essence);
                    }
                    if (res.hasOwnProperty("stage")) {
                        userData.passStage = MathUtils.parseInt(res.stage);
                    }
                    if (res.hasOwnProperty("king_level")) {
                        userData.kingLevel = MathUtils.parseStringNum(res.king_level);
                    }
                    if (res.hasOwnProperty("evolution_level")) {
                        userData.evolutionLevel = MathUtils.parseStringNum(res.evolution_level);
                    }
                    if (res.tutorial) {
                        userData.noviceGroupId = parseInt(res.tutorial);
                    }
                    userData.userId = res.id;
                    console.log("@FREEMAN: UserId = {" + userData.userId + "}");
                    EventsManager.Instance.event(EventsType.UPDATE_HALL_DATA);
                    _callback && _callback(res);
                }
                else {
                    this.requestUserinfoData(_callback);
                }
            },
            fail: function (res) {
                console.log(res);
                EffectUtils.stopWaitEffect();
                MessageUtils.showMsgTips("网络异常");
                this.requestUserinfoData(_callback);
            }
        });
    }
    /** 提交用户名称位置等信息 */
    requestSaveWxUserinfoData(_nickName, _avatarUrl, _city, _gender) {
        let that = this;
        let dataString = 'nickName=' + _nickName + '&avatarUrl=' + _avatarUrl + '&city=' + _city + '&gender=' + _gender;
        console.log("requestSaveWxUserinfoData:", dataString);
        let HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: 'v1/userinfo/update',
            method: 'Post',
            data: dataString,
            success: function (res) {
                console.log("requestSaveWxUserinfoData2", res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 强化数据 */
    requestSaveSkillAdditionData() {
        let dataJson = JSON.stringify(userData.skillAdditionArray);
        let dataString = 'info=' + dataJson;
        console.log("requestSaveSkillAdditionData:", dataString);
        let HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: 'v1/update/intensify',
            method: 'Post',
            data: dataString,
            success: function (res) {
                console.log("requestSaveSkillAdditionData:", res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 用户基础数据 */
    requestSaveUserinfoData() {
        let that = this;
        let dataString = 'money=' + userData.gold + '&car_level=' + userData.carLevel;
        dataString += '&stage=' + userData.getPassStage();
        dataString += '&king_level=' + userData.getKingLevel();
        console.log("requestSaveUserinfoData:", dataString);
        let HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: 'v1/userinfo/post',
            method: 'Post',
            data: dataString,
            success: function (res) {
                console.log("@FREEMAN: 请求心跳保存数据：", res);
                if (res) {
                    if (res.task_flag) {
                        EventsManager.Instance.event(EventsType.TASK_RED_POINT, "show");
                    }
                }
            },
            fail: function (res) {
                console.log("@FREEMAN: 请求心跳保存数据：", res);
            }
        });
    }
    /** 保存坑位数据 */
    requestSaveCarparkData() {
        let that = this;
        let dataJson = JSON.stringify(userData.parkcarInfoArray);
        //非法数据过滤
        if (dataJson == null || dataJson.length < 1 || userData.parkcarInfoArray.length < 1 || userData.carparkJsonRecord == dataJson) {
            return;
        }
        userData.carparkJsonRecord = dataJson;
        let dataString = 'info=' + dataJson;
        let HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: 'v1/seat/post',
            method: 'Post',
            data: dataString,
            success: function (res) {
                console.log("requestSaveCarparkData2:", res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 保存英雄商店数据 */
    requestSaveCarshopData() {
        let that = this;
        let dataJson = JSON.stringify(userData.carBuyRecordArray);
        //非法数据过滤
        if (dataJson == null || dataJson.length < 1 || userData.carBuyRecordArray.length < 1 || userData.carshopJsonRecord == dataJson) {
            return;
        }
        userData.carshopJsonRecord = dataJson;
        let dataString = 'info=' + dataJson;
        let HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: 'v1/shop/post',
            method: 'Post',
            data: dataString,
            success: function (res) {
                console.log("requestSaveCarshopData2:", res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 分享标志 */
    requestShareFlag() {
        let HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: 'v1/share/flag',
            success: function (res) {
                console.log("requestShareFlag", res);
                userData.shareSwitchOpen = res;
                if (EventsManager.Instance) {
                    EventsManager.Instance.event(EventsType.SHARE_SWITCH, res);
                }
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 随机钻石奖励请求 */
    requestShowRandomRewardDiamond(callback) {
        let HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: 'v1/activity/rand/diamond',
            success: function (res) {
                callback && callback(res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 随机钻石奖励请求 */
    requestRandomRewardDiamond(diamond, callback) {
        let HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: 'v1/activity/rand/diamond/reward/' + diamond,
            success: function (res) {
                callback && callback(res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 领取在线奖励 */
    requestGetOffLineReward(callback) {
        let HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: 'v1/activity/online/reward',
            success: function (res) {
                callback && callback(res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 好友互助奖励领取 */
    requestReward(itemId, callback) {
        let HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: 'v1/activity/help/reward/' + itemId,
            success: function (res) {
                callback && callback(res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 请求好友互助列表 */
    requestFriendConcurList(callback) {
        let HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: 'v1/activity/help/list',
            success: function (res) {
                callback && callback(res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 请求是否获取通关奖励 */
    requestClearanceReward(encryptedData, iv, callback) {
        let HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: 'v1/activity/help/list?encryptedData=' + encryptedData + "&iv=" + iv,
            success: function (res) {
                callback && callback(res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 请求好友互助 */
    requestFriendConcur(userId) {
        let HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: "v1/activity/help/click/" + userId,
            success: function (res) {
                console.log(res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 分享礼包 */
    requestShareGift(param) {
        let HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: "v1/share/friend",
            method: "POST",
            data: {
                "userId": param.query.userId,
                "shareId": param.query.shareId,
                "shareType": param.query.shareType
            },
            success: function (res) {
                console.log(res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 公众号 */
    requestPublicAddress(param) {
        let HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: "v1/subscription/attention",
            method: "POST",
            data: {
                "scene": param.scene,
                "appId": param.referrerInfo.appId
            },
            success: function (res) {
                console.log(res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 请求技能强化 */
    requestSkillStrengthen(id, level, price, coinType, callback = null) {
        let dataString = 'type=' + id + '&value=' + level + '&price=' + price + '&unit=' + "essence";
        let HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: 'v1/intensify',
            method: 'Post',
            data: dataString,
            success: function (res) {
                callback && callback(res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    static get Instance() {
        if (HttpManager._instance == null) {
            HttpManager._instance = new HttpManager();
        }
        return HttpManager._instance;
    }
}
//# sourceMappingURL=HttpManager.js.map
class ViewRegisterMgr {
    /** 初始化注册界面 */
    initRegisterView() {
        ViewMgr.Ins.register(ViewConst.FollowRewardView, new FollowRewardView());
        ViewMgr.Ins.register(ViewConst.StrengthenView, new StrengthenView());
    }
    static get Instance() {
        if (!ViewRegisterMgr._instance) {
            ViewRegisterMgr._instance = new ViewRegisterMgr();
        }
        return ViewRegisterMgr._instance;
    }
}
//# sourceMappingURL=ViewRegisterMgr.js.map
class ViewMgr {
    /** 构造函数 */
    constructor() {
        this._views = {};
        this._opens = [];
    }
    /**
   * 面板注册
   * @param key 面板唯一标识
   * @param view 面板
   */
    register(key, view) {
        if (view == null) {
            return;
        }
        if (this._views[key]) {
            return;
        }
        this._views[key] = view;
    }
    /**
     * 面板解除注册
     * @param key
     */
    unregister(key) {
        if (!this._views[key]) {
            return;
        }
        this._views[key] = null;
        delete this._views[key];
    }
    /**
     * 开启面板
     * @param key 面板唯一标识
     * @param param 参数
     */
    open(key, ...param) {
        var view = this.getView(key);
        if (view == null) {
            MessageUtils.showMsgTips(LanguageManager.Instance.getLanguageText("hallScene.label.txt.36"));
            return;
        }
        if (view.isShow()) {
            view.initUI();
            view.open.apply(view, param);
            view.initData();
            return view;
        }
        if (view.isInit()) {
            view.addToParent();
            view.initUI();
            view.addEvents();
            view.open.apply(view, param);
            view.initData();
        }
        else {
            view.loadResource(function () {
                view.setVisible(false);
                view.initUIView();
                view.addToParent();
            }.bind(this), function () {
                view.initUI();
                view.addEvents();
                view.open.apply(view, param);
                view.initData();
                view.setVisible(true);
            }.bind(this));
        }
        this._opens.push(key);
        return view;
    }
    /**
     * 根据唯一标识获取一个UI对象
     * @param key
     * @returns {any}
     */
    getView(key) {
        return this._views[key];
    }
    /**
     * 关闭面板
     * @param key 面板唯一标识
     * @param param 参数
     *
     */
    close(key, ...param) {
        if (!this.isShow(key)) {
            return;
        }
        var view = this.getView(key);
        if (view == null) {
            return;
        }
        var viewIndex = this._opens.indexOf(key);
        if (viewIndex >= 0) {
            this._opens.splice(viewIndex, 1);
        }
        view.removeFromParent();
        view.close.apply(view, param);
    }
    /**
     * 检测一个UI是否开启中
     * @param key
     * @returns {boolean}
     */
    isShow(key) {
        return this._opens.indexOf(key) != -1;
    }
    /** 当前ui打开数量 */
    currOpenNum() {
        return this._opens.length;
    }
    /** 清空处理 */
    clear() {
        this.closeAll();
        this._views = {};
    }
    /** 关闭所有开启中的UI */
    closeAll() {
        while (this._opens.length) {
            this.close(this._opens[0]);
        }
    }
    /**
     * 销毁一个面板
     * @param key 唯一标识
     * @param newView 新面板
     */
    destroy(key, newView = null) {
        var oldView = this.getView(key);
        if (oldView) {
            this.unregister(key);
            oldView.destroy();
            oldView = null;
        }
        this.register(key, newView);
    }
    static get Ins() {
        if (ViewMgr._instance == null) {
            ViewMgr._instance = new ViewMgr();
        }
        return ViewMgr._instance;
    }
}
//# sourceMappingURL=ViewMgr.js.map
var ViewConst;
(function (ViewConst) {
    /** 关注奖励界面 */
    ViewConst[ViewConst["FollowRewardView"] = 10001] = "FollowRewardView";
    /** 强化界面 */
    ViewConst[ViewConst["StrengthenView"] = 10002] = "StrengthenView";
})(ViewConst || (ViewConst = {}));
//# sourceMappingURL=ViewConst.js.map
/*
* 训练时间掉落表;
*/
class TrainDropVO {
}
//# sourceMappingURL=TrainDropVO.js.map
/*
* 技能强化配置;
*/
class SkillStrengthenVO {
}
//# sourceMappingURL=SkillStrengthenVO.js.map
/*
* 技能配置;
*/
class SkillConfigVO {
}
//# sourceMappingURL=SkillConfigVO.js.map
/*
* 怪物模版表;
*/
class MonsterVO {
}
//# sourceMappingURL=MonsterVO.js.map
/*
* 森林王等级配置;
*/
class KindLevelConfigVO {
}
//# sourceMappingURL=KindLevelConfigVO.js.map
/*
* 物品表;
*/
class ItemVO {
}
//# sourceMappingURL=ItemVO.js.map
/*
* 关卡奖励表;
*/
class BarrierRewardVO {
}
//# sourceMappingURL=BarrierRewardVO.js.map
/*
* 关卡配置表;
*/
class BarrierConfigVO {
}
//# sourceMappingURL=BarrierConfigVO.js.map
/*
* terry 2018/7/16;
* 用户数据本地存储
*/
class CacheKey {
}
CacheKey.GOLD = "gold";
CacheKey.SOUND_MUTE = "sound_mute";
/** 好友互助 */
CacheKey.CONCUR = "concur";
class UserData {
    constructor() {
        this._noviceGroupId = 1; // 新手节点
        /** 合成次数 */
        this.synthesisCount = 0;
        /** 金币 */
        this.gold = 2000; //拥有金币
        /** 钻石 */
        this.diamond = 30; //拥有元宝
        /** 精华 */
        this.essence = 0; //精华碎片
        /** 怪物缓存池的名字 */
        this.MONSTER_POOL_NAME = "MONSTER_POOL_NAME";
        /** 怪物子弹 */
        this.MONSTER_BULLET = "MONSTER_BULLET";
        this.ANIMATION_POOL_NAME = "ANIMATION_POOL_NAME";
        this.parkcarInfoArray = []; //车位信息({id: index, carId: 0, isRunning:false})
        this.carBuyRecordArray = []; //车购买记录({carId: 1, buyTimes:0})
        this.skillAdditionArray = []; //技能加成表({skillId: 1, buyTimes:0})
        this.carLevel = 1; //当前车最高等级
        this.level = 2; //玩家等级
        this.kingLevel = 1; //森林王进化等级
        this.evolutionLevel = 1; //商店进化等级
        this.passStage = 1; //通关的游戏关卡
        this.passSection = 1; //通过的游戏章节
        this.s_user_old = 'user_data'; //保存本地v1.0
        this.s_user = "user_storage"; //保存本地
        this.s_offline_time = 's_offline_time'; //离线服务器时间
        this.s_offlinePrize_time = 's_offlinePrize_time'; //离线奖励时间
        this.s_version_clear = 's_version_clear'; //版本清理
        this.s_shopRedPoint_time = 's_shopRedPoint_time'; //商城红点再次检测倒计时启动时间
        this.s_acceLeft_time = 's_acceLeft_time'; //加速剩余时间
        this._isLoadStorage = false; //是否已加载本地数据
        this.cs_time_diff = 0; //客户端与服务器时间差
        this.hasOfflinePrize = false; //是否领取离线奖励
        this.shareSwitchOpen = false; //分享开关打开
        this.userId = 0; //用户id-用于分享奖励
        this.shareAdTimes = {}; //分享广告可点击次数
        /** 在线奖励剩余次数 */
        this.offlineRewardCount = 0;
        this.shareAdStage = {}; //分享或广告状态
        this.hasVideoAd = true; //是否有视频广告
        this.showShareGiftRedPoint = false; //分享礼包红点
        this.showDailySignRedPoint = false; //每日签到红点
        this.showStrengthenRedPoint = false; //强化红点
        this.showTaskRedPoint = false; //任务红点
        this.showLuckPrizeRedPoint = false; //转盘红点
        this.showFollowRedPoint = false; //关注奖励红点
        this.showFriendConcurRedPoint = false; //好友互助红点
        this.isOpenShareAd = false; //打开视频分享
        this.advert = []; //广告
        this.diamond_acce_num = 0; //每日元宝加速次数
        this.shareFailedTimes = 0; //分享失败保底
        this.carparkJsonRecord = ''; //防止提交相同数据给服务器
        this.carshopJsonRecord = ''; //防止提交相同数据给服务器
        this.menuRedPointCount = 0;
        //初始化车位
        for (let index = 0; index < 20; index++) {
            this.parkcarInfoArray[index] = { id: index, carId: 0, isRunning: false };
        }
        //分享广告
        this.shareAdStage[10] = true;
        this.shareAdStage[11] = true;
        this.shareAdStage[12] = true;
    }
    get noviceGroupId() {
        return this._noviceGroupId;
    }
    set noviceGroupId(value) {
        this._noviceGroupId = value;
    }
    get dayGetGoldCount() {
        return PlayerManager.Instance.Info.dayGetGoldCount;
    }
    set dayGetGoldCount(value) {
        PlayerManager.Instance.Info.dayGetGoldCount = value;
    }
    getUserId() {
        let that = this;
        return ("user_" + that.userId);
    }
    saveNovice(groupId) {
        let HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: 'v1/novice/' + groupId,
            success: (res) => {
                console.log("@FREEMAN: saveNovice: success, currGroupId =>", groupId);
            },
            fail: (res) => {
                console.log("@FREEMAN: saveNovice: fail, currGroupId =>", groupId);
            }
        });
        this.noviceGroupId = groupId;
        this.saveLocal();
    }
    /** 刷新购买记录 */
    refreshBuyRecord(_carId, _isDiamond = false) {
        let that = this;
        let mLevel = BattleManager.Instance.getLevel(_carId);
        let isNew = true;
        for (let key in that.carBuyRecordArray) {
            let element = that.carBuyRecordArray[key];
            if (element && element.carId == mLevel) {
                if (_isDiamond) {
                    that.carBuyRecordArray[key].diamondBuyTimes++;
                }
                else {
                    that.carBuyRecordArray[key].buyTimes++;
                }
                isNew = false;
                return;
            }
        }
        if (isNew) {
            if (_isDiamond) {
                that.carBuyRecordArray.push({ carId: mLevel, buyTimes: 0, diamondBuyTimes: 1 });
            }
            else {
                that.carBuyRecordArray.push({ carId: mLevel, buyTimes: 1, diamondBuyTimes: 0 });
            }
        }
        Laya.timer.callLater(that, that.saveLocal, [true, { petShop: true }]);
    }
    /** 查询购买记录 */
    queryBuyRecord(_carId, _isDiamond = false) {
        let that = this;
        let mLevel = BattleManager.Instance.getLevel(_carId);
        for (let key in that.carBuyRecordArray) {
            let element = that.carBuyRecordArray[key];
            if (element) {
                if (element.carId == mLevel) {
                    if (_isDiamond) {
                        return that.carBuyRecordArray[key].diamondBuyTimes;
                    }
                    else {
                        return that.carBuyRecordArray[key].buyTimes;
                    }
                }
            }
        }
        return 0;
    }
    /** 刷新技能加成 */
    refreshSkillAddition(_skillId) {
        let that = this;
        let isNew = true;
        for (let key in that.skillAdditionArray) {
            let element = that.skillAdditionArray[key];
            if (element && element.skillId == _skillId) {
                that.skillAdditionArray[key].buyTimes++;
                isNew = false;
                return;
            }
        }
        if (isNew) {
            that.skillAdditionArray.push({ skillId: _skillId, buyTimes: 1 });
        }
        //保存数据
        // userData.saveLocal();
        Laya.timer.callLater(that, that.saveLocal, [true, { skill: true }]);
    }
    /** 查询技能加成 */
    querySkillAddition(_skillId) {
        let that = this;
        for (let key in that.skillAdditionArray) {
            let element = that.skillAdditionArray[key];
            if (element) {
                if (element.skillId == _skillId) {
                    return that.skillAdditionArray[key].buyTimes;
                }
            }
        }
        return 0;
    }
    /** 获取技能加成或触发几率 */
    getSkillAdditionProbability(_skillId) {
        let that = this;
        let strengthenLevel = that.querySkillAddition(_skillId);
        if (strengthenLevel == 0)
            return 0;
        let probability = SkillManager.Instance.getSkillStrengthenLevelProbability(_skillId, strengthenLevel);
        return probability;
    }
    /** 升级车辆等级 */
    updateCarLevel(_level) {
        let that = this;
        if (that.carLevel < that.carLevelMax()) {
            if (that.carLevel < _level) {
                that.carLevel = _level;
                console.log("等级提升:", that.carLevel);
                //保存数据
                // userData.saveLocal();
                Laya.timer.callLater(that, that.saveLocal, [true]);
                return true;
            }
        }
        else {
            console.log("已达到最高等级");
        }
        return false;
    }
    getCarLevel() {
        return this.carLevel;
    }
    carLevelMax() {
        return BattleManager.Instance.model.monsterMaxLevel;
    }
    resetMonsterLevel() {
        this.carLevel = 1;
    }
    //设置金币并保存
    setGoldSave($gold) {
        this.gold = Math.floor($gold);
        Laya.timer.callLater(this, this.saveLocal);
    }
    /** 设置钻石 */
    setDiamond(_value) {
        this.diamond = Math.floor(_value);
        Laya.timer.callLater(this, this.saveLocal);
    }
    /** 设置精华 */
    setEssence(_value) {
        this.essence = Math.floor(_value);
    }
    /** 升级森林王等级 */
    updateKingLevel(_level) {
        let that = this;
        if (that.kingLevel < that.kingLevelMax()) {
            if (that.kingLevel < _level) {
                that.kingLevel = _level;
                Laya.timer.callLater(that, that.saveLocal, [true]);
                return true;
            }
            if (GlobalConfig.DEBUG) {
                that.kingLevel = _level;
                Laya.timer.callLater(that, that.saveLocal);
            }
        }
        else {
            console.log("已达到最高等级");
        }
        return false;
    }
    getKingLevel() {
        return this.kingLevel;
    }
    kingLevelMax() {
        return 60;
    }
    /** 升级森林王等级 */
    updateEvolutionLevel(_level) {
        let that = this;
        if (that.evolutionLevel < that.evolutionLevelMax()) {
            if (that.evolutionLevel < _level) {
                that.evolutionLevel = _level;
                Laya.timer.callLater(that, that.saveLocal, [true]);
                return true;
            }
        }
        else {
            console.log("已达到最高等级");
        }
        return false;
    }
    getEvolutionLevel() {
        return this.evolutionLevel;
    }
    evolutionLevelMax() {
        return 2;
    }
    //是否已进化
    isEvolution() {
        return (this.evolutionLevel > 1);
    }
    //设置车位并保存
    setCarparkSave(_carParkSp, _carParkSp2 = null) {
        let that = this;
        if (that.parkcarInfoArray) {
            for (let key in that.parkcarInfoArray) {
                let element = that.parkcarInfoArray[key];
                if (_carParkSp) {
                    if (element && element.id == _carParkSp.parkIndex) {
                        element.carId = _carParkSp.monsterId;
                        element.isRunning = _carParkSp.isRunning();
                    }
                }
                //交换车辆
                if (_carParkSp2) {
                    if (element && element.id == _carParkSp2.parkIndex) {
                        element.carId = _carParkSp2.monsterId;
                        element.isRunning = _carParkSp2.isRunning();
                    }
                }
            }
        }
        Laya.timer.callLater(that, that.saveLocal);
        Laya.timer.once(3e3, that, HttpManager.Instance.requestSaveCarparkData);
    }
    //通关的游戏关卡
    updatePassStage(_value) {
        let that = this;
        that.passStage = _value;
        Laya.timer.callLater(that, that.saveLocal, [true]);
    }
    getPassStage() {
        return this.passStage;
    }
    //通过的游戏章节
    updatePassSection(_value) {
        let that = this;
        that.passSection = _value;
        Laya.timer.callLater(that, that.saveLocal, [true]);
    }
    getPassSection() {
        return this.passSection;
    }
    //分享广告可点击次数
    getAdTimes(_kind) {
        let that = this;
        if (that.shareAdTimes && that.hasVideoAd) {
            if (_kind == 10) {
                return that.shareAdTimes.ad_acce_num;
            }
            else if (_kind == 11) {
                return that.shareAdTimes.ad_free_car_num;
            }
            else if (_kind == 12) {
                return that.shareAdTimes.ad_no_money_num;
            }
        }
        return 0;
    }
    getShareTimes(_kind) {
        let that = this;
        if (that.shareAdTimes) {
            if (_kind == 10) {
                return that.shareAdTimes.share_acce_num;
            }
            else if (_kind == 11) {
                return that.shareAdTimes.share_shop_num;
            }
            else if (_kind == 12) {
                return that.shareAdTimes.share_no_money_num;
            }
        }
        return 0;
    }
    //减少分享广告可点击次数
    decreAdTimes(_kind) {
        let that = this;
        if (that.shareAdTimes) {
            if (_kind == 10) {
                that.shareAdTimes.ad_acce_num--;
            }
            else if (_kind == 11) {
                that.shareAdTimes.share_shop_num--;
            }
            else if (_kind == 12) {
                that.shareAdTimes.ad_no_money_num--;
            }
            else {
                that.shareAdTimes.ad_num--;
            }
        }
    }
    decreShareTimes(_kind) {
        let that = this;
        if (that.shareAdTimes) {
            if (_kind == 10) {
                that.shareAdTimes.share_acce_num--;
            }
            else if (_kind == 11) {
                that.shareAdTimes.share_shop_num--;
            }
            else if (_kind == 12) {
                that.shareAdTimes.share_no_money_num--;
            }
        }
        console.log("decreShareTimes", that.shareAdTimes);
    }
    //分享或广告开关
    isAdStage(_kind) {
        let that = this;
        return (that.getAdTimes(_kind) > 0);
    }
    //显示分享礼包红点
    isShowShareGiftRedPoint() {
        return this.showShareGiftRedPoint;
    }
    //移除分享礼包红点
    removeShareGiftRedPoint() {
        this.showShareGiftRedPoint = false;
        if (EventsManager.Instance) {
            EventsManager.Instance.event(EventsType.SHARE_GIFT_RED_POINT, "remove");
        }
    }
    //显示每日签到红点
    isShowDailySignRedPoint() {
        return this.showDailySignRedPoint;
    }
    //移除红点
    removeDailySignRedPoint() {
        this.showDailySignRedPoint = false;
        if (EventsManager.Instance) {
            this.menuRedPointCount--;
            EventsManager.Instance.event(EventsType.DAY_SIGN_RED_POINT, "remove");
        }
    }
    //显示强化红点
    isShowStrengthenRedPoint() {
        return this.showStrengthenRedPoint;
    }
    //移除红点
    removeStrengthenRedPoint() {
        this.showStrengthenRedPoint = false;
        if (EventsManager.Instance) {
            EventsManager.Instance.event(EventsType.STRENGTHEN_RED_POINT, "remove");
        }
    }
    //显示车商店红点
    isShowCarShopRedPoint() {
        let that = this;
        return ((that.getAdTimes(11) + that.getShareTimes(11)) > 0) && (that.carLevel >= 6 && that.carLevel < 30);
    }
    //移除车商店红点
    removeCarShopRedPoin() {
        if (EventsManager.Instance) {
            EventsManager.Instance.event(EventsType.HERO_SHOP_RED_POINT, "remove");
        }
    }
    //显示任务红点
    isShowTaskRedPoint() {
        return this.showTaskRedPoint;
    }
    //移除红点
    removeTaskRedPoint() {
        this.showTaskRedPoint = false;
        if (EventsManager.Instance) {
            EventsManager.Instance.event(EventsType.TASK_RED_POINT, "remove");
        }
    }
    //显示转盘红点
    isShowLuckPrizeRedPoint() {
        return this.showLuckPrizeRedPoint;
    }
    //移除红点
    removeLuckPrizeRedPoint() {
        this.showLuckPrizeRedPoint = false;
        if (EventsManager.Instance) {
            EventsManager.Instance.event(EventsType.LUCK_PRIZED_RED_POINT, "remove");
        }
    }
    //显示关注红点
    isShowFollowRedPoint() {
        return this.showFollowRedPoint;
    }
    //移除红点
    removeFollowRedPoint() {
        this.showFollowRedPoint = false;
        if (EventsManager.Instance) {
            this.menuRedPointCount--;
            EventsManager.Instance.event(EventsType.FOLLOW_RED_POINT, "remove");
        }
    }
    //显示好友互助红点
    isShowFriendConcurRedPoint() {
        return this.showFriendConcurRedPoint;
    }
    //移除好友互助红点
    removeFriendConcurRedPoint() {
        this.showFriendConcurRedPoint = false;
        if (EventsManager.Instance) {
            this.menuRedPointCount--;
            EventsManager.Instance.event(EventsType.FRIEND_CONCUR_RED_POINT, "remove");
        }
    }
    //是否新手
    isGuide() {
        let that = this;
        return false;
    }
    //小程序跳转
    miniCode() {
        let that = this;
        if (that.advert && that.advert[0]) {
            return that.advert[0].url;
        }
        return "wx57ab0ba00d80503a";
    }
    miniPagePath() {
        let that = this;
        if (that.advert && that.advert[0]) {
            return that.advert[0].jump_path;
        }
        return "";
    }
    miniImageUrl() {
        let that = this;
        if (that.advert && that.advert[0]) {
            return that.advert[0].icon;
        }
        return "";
    }
    //每日元宝加速次数
    diamondAcceTimes(_isAdd = false) {
        let that = this;
        let diamondAcceTimes = that.diamond_acce_num;
        if (_isAdd) {
            that.diamond_acce_num++;
        }
        return diamondAcceTimes;
    }
    //保存本地
    saveLocal(_upload = false, saveOptions) {
        let that = this;
        if (that._isLoadStorage == false) {
            console.log("未同步本地/服务器数据");
            return;
        }
        else if (that.isGuide()) {
            console.log("新手引导不保存");
            return;
        }
        let localData = {};
        ["gold", "diamond", "parkcarInfoArray", "carBuyRecordArray", "skillAdditionArray", "kingLevel", "evolutionLevel",
            "carLevel", "level", "exp", "userId", "shareAdStage", "passStage", "noviceGroupId", "dayGetGoldCount"].forEach(element => {
            localData[element] = that[element];
        });
        let dataJson = JSON.stringify(localData);
        if (dataJson) {
            let storage = window.localStorage;
            storage.setItem(M.player.account, dataJson);
        }
        if (_upload) {
            HttpManager.Instance.requestSaveUserinfoData();
            saveOptions && saveOptions.petList && HttpManager.Instance.requestSaveCarparkData();
            saveOptions && saveOptions.petShop && HttpManager.Instance.requestSaveCarshopData();
            saveOptions && saveOptions.skill && HttpManager.Instance.requestSaveSkillAdditionData();
        }
    }
    //取出本地数据
    loadStorage(_callback) {
        let that = this;
        that._isLoadStorage = true;
        if (GlobalConfig.DEBUG) {
            if (GlobalConfig.USER) {
                M.player.account = GlobalConfig.USER;
            }
            if (!Laya.Browser.onMiniGame) {
                _callback && _callback(true);
                return;
            }
        }
        let storage = window.localStorage;
        let dataJson = null; // storage.getItem(M.player.account);
        if (dataJson) {
            let jsonObj = JSON.parse(dataJson);
            if (jsonObj) {
                console.log("@FREEMAN: 本地缓存 {" + M.player.account + "} 读取成功：{", jsonObj, "}");
                for (let key in jsonObj) {
                    if (jsonObj.hasOwnProperty(key)) {
                        // console.log(key, jsonObj[key]);
                        // if (key !="hasOfflinePrize" && key !="diamond" && key !="_isLoadStorage") {
                        //     that[key] = jsonObj[key];
                        // }
                        that[key] = jsonObj[key];
                    }
                }
            }
            _callback && _callback(true);
        }
        //从服务器同步数据
        let serverDataProgress = 4;
        HttpManager.Instance.requestCarparkData((_res) => {
            serverDataProgress--;
            if (serverDataProgress < 1) {
                _callback && _callback(true);
            }
        });
        HttpManager.Instance.requestCarshopData((_res) => {
            if (_res)
                that.carBuyRecordArray = _res;
            serverDataProgress--;
            if (serverDataProgress < 1) {
                _callback && _callback(true);
            }
        });
        HttpManager.Instance.requestUserinfoData((_res) => {
            serverDataProgress--;
            if (serverDataProgress < 1) {
                _callback && _callback(true);
            }
        });
        HttpManager.Instance.requestSkillAddtionData((_res) => {
            if (_res)
                that.skillAdditionArray = _res;
            serverDataProgress--;
            if (serverDataProgress < 1) {
                _callback && _callback(true);
            }
        });
        //超时尝试重新请求
        Laya.stage.timerOnce(12000, that, () => {
            console.log("serverDataProgress:", serverDataProgress);
            if (serverDataProgress > 0) {
                that.loadStorage(_callback);
            }
        });
        //请求分享开关
        HttpManager.Instance.requestShareFlag();
        that.requestUserBaseData();
    }
    isLoadStorage() {
        return this._isLoadStorage;
    }
    clearLocalData() {
        let that = this;
        let storage = window.localStorage;
        if (storage) {
            storage.removeItem(M.player.account);
            console.log("@FREEMAN: 本地缓存{" + M.player.account + "}已清除。");
        }
    }
    //离线奖励
    offlinePrize() {
        let that = this;
        let storage = window.localStorage;
        let dataJson = storage.getItem(that.s_offlinePrize_time);
        let offlineTime = MathUtils.parseInt(dataJson);
        if (offlineTime > 0) {
            storage.removeItem(that.s_offlinePrize_time);
        }
        return offlineTime;
    }
    //保存离线时间
    saveOfflineTime() {
        let that = this;
        let storage = window.localStorage;
        let offlineServerTime = that.serverTime();
        storage.setItem(that.s_offline_time, offlineServerTime.toString());
    }
    //保存加速剩余时间
    saveAcceLeftTime(_acceLeftTime) {
        let that = this;
        let storage = window.localStorage;
        if (_acceLeftTime > 0) {
            storage.setItem(that.s_acceLeft_time, _acceLeftTime.toString());
        }
        else {
            storage.removeItem(that.s_acceLeft_time);
        }
    }
    //获取加速剩余时间
    getAcceLeftTime() {
        let that = this;
        let storage = window.localStorage;
        let dataJson = storage.getItem(that.s_acceLeft_time);
        if (dataJson) {
            let acceLeftTime = MathUtils.parseInt(dataJson);
            storage.removeItem(that.s_acceLeft_time);
            return acceLeftTime;
        }
        return 0;
    }
    //获取本地与服务器时间差(s减c)
    csDiffTime() {
        let that = this;
        return that.cs_time_diff;
    }
    //获取服务器当前时间
    serverTime() {
        let that = this;
        let cur_time = (new Date()).getTime() / 1000;
        return (cur_time + that.csDiffTime());
    }
    //获取上次离线服务器时间
    offlineServerTime() {
        let that = this;
        let storage = window.localStorage;
        let dataJson = storage.getItem(that.s_offline_time);
        console.log("获取上次离线服务器时间:", dataJson);
        if (dataJson) {
            let offlineServerTime = MathUtils.parseInt(dataJson); //上次离线时间
            if (offlineServerTime > 0) {
                return offlineServerTime;
            }
        }
        return 0;
    }
    //保存商城红点开始时间
    saveShopRedpointTime(_checkTime) {
        let that = this;
        let storage = window.localStorage;
        let nextCheckTime = that.serverTime() + _checkTime;
        storage.setItem(that.s_shopRedPoint_time, nextCheckTime.toString());
    }
    shiftShopRedpointTime(_isRemove = true) {
        let that = this;
        let storage = window.localStorage;
        let dataJson = storage.getItem(that.s_shopRedPoint_time);
        let saveServerTime = MathUtils.parseInt(dataJson);
        if (saveServerTime > 0) {
            let leftTime = saveServerTime - that.serverTime();
            if (_isRemove) {
                storage.removeItem(that.s_shopRedPoint_time);
            }
            if (leftTime > 0) {
                return leftTime;
            }
        }
        return 0;
    }
    isShareEnable() {
        return this.shareSwitchOpen;
    }
    //请求分享
    toShare(_callback = null, _isTask = false, _isGroupShare = false, shareType = "share") {
        let that = this;
        let isTask = _isTask;
        let isGroupShare = _isGroupShare;
        HttpManager.Instance.requestShareSubject(shareType, (_res) => {
            if (!_res) {
                MessageUtils.showMsgTips("今日分享次数已用完");
                return;
            }
            let shareCfg = { imageUrl: _res.image, content: _res.describe, id: _res.id };
            let queryData = null;
            if (isTask) {
                queryData = "userId=" + userData.userId + "&shareId=" + shareCfg.id + "&shareType=task";
            }
            else {
                queryData = "userId=" + userData.userId + "&shareId=" + shareCfg.id + "&shareType=" + shareType;
            }
            //重返游戏
            let curTime = (new Date()).getTime() / 1000;
            let isAutoShare = true;
            EventsManager.Instance.once(EventsType.BACK_GAME, that, (_data) => {
                let backTime = (new Date()).getTime() / 1000;
                let leaveTime = backTime - curTime;
                if (isAutoShare && leaveTime > 2.3) {
                    if (true) {
                        that.shareFailedTimes = 0;
                        _callback && _callback(shareCfg.id);
                        HttpManager.Instance.requestShareFinish(shareCfg.id);
                    }
                    else {
                        // that.shareFailedTimes++;
                        // MessageUtils.showMsgTips("分享失败，请尝试重新分享");
                    }
                }
            });
            platform.onShare({
                title: shareCfg.content,
                imageUrl: shareCfg.imageUrl,
                query: queryData,
                isGroupShare: isGroupShare,
                success: function (_res) {
                },
                fail: function () {
                    console.log("转发失败!!!");
                }
            });
            // }))
        });
    }
    //请求分享/视频
    toShareAd(callback = null, type = 0, isTask = false, isGroupShare = false) {
        let self = this;
        if (self.isOpenShareAd)
            return 0;
        self.isOpenShareAd = true;
        Laya.stage.timerOnce(1000, self, () => {
            self.isOpenShareAd = false;
        });
        //是否优先视频广告
        if (self.getAdTimes(type) > 0) {
            SDKManager.Instance.showVideoAd((_res) => {
                // 用户点击了【关闭广告】按钮
                // 小于 2.1.0 的基础库版本，res 是一个 undefined
                if (_res && _res.isEnded || _res === undefined) {
                    // 正常播放结束，可以下发游戏奖励
                    self.decreAdTimes(type);
                    let adKey = "ad";
                    if (type == 10) {
                        adKey = "ad_acce";
                    }
                    else if (type == 11) {
                        adKey = "ad_free_car";
                    }
                    else if (type == 12) {
                        adKey = "ad_no_money";
                    }
                    HttpManager.Instance.requestShareAdFinish(adKey);
                    callback && callback();
                }
            }, () => {
                //无视频回调
                self.hasVideoAd = false;
                self.isOpenShareAd = false;
                self.toShareAd(callback, type, isTask, isGroupShare);
            }, self.isShareEnable());
            return 0;
        }
        switch (type) {
            case 1:
                SDKManager.Instance.showVideoAd((_res) => {
                    if (_res && _res.isEnded || _res === undefined) {
                        callback && callback();
                        HttpManager.Instance.requestShareAdFinish("ad_other", _res);
                    }
                }, () => {
                    //无视频回调
                    self.hasVideoAd = false;
                    self.isOpenShareAd = false;
                    self.toShareAd(callback, 0, isTask, isGroupShare);
                });
                break;
            case 10:
                //加速
                if (self.getShareTimes(type) < 1) {
                    return 1;
                }
                self.toShare((_res) => {
                    self.decreShareTimes(type);
                    HttpManager.Instance.requestShareAdFinish("share_acce", _res);
                    callback && callback();
                }, isTask, isGroupShare);
                break;
            case 11:
                //免费的车
                if (self.getShareTimes(type) < 1) {
                    MessageUtils.showMsgTips("今日分享次数已用完");
                    return 1;
                }
                self.toShare((_res) => {
                    self.decreShareTimes(type);
                    HttpManager.Instance.requestShareAdFinish("share_shop_car", _res);
                    callback && callback();
                }, isTask, isGroupShare);
                break;
            case 12:
                //无金币
                if (self.getShareTimes(type) < 1) {
                    MessageUtils.showMsgTips("今日分享次数已用完");
                    return 1;
                }
                self.toShare((_res) => {
                    MessageUtils.showMsgTips("求助已发出");
                    Laya.timer.once(30000, self, () => {
                        callback && callback();
                    });
                    self.decreShareTimes(type);
                    HttpManager.Instance.requestShareAdFinish("share_no_money", _res);
                }, isTask, isGroupShare);
                break;
            case 13:
                // 天降惊喜礼包分享
                self.toShare((res) => {
                    callback && callback();
                    HttpManager.Instance.requestShareAdFinish("share_sky_drop", res);
                }, isTask, isGroupShare);
                break;
            case 14: //好友互助分享
                self.toShare((res) => {
                    callback && callback();
                    HttpManager.Instance.requestShareAdFinish("share_friend_concur", res);
                }, isTask, isGroupShare, "help");
                break;
            case 15: //通关奖励
                self.toShare((res) => {
                    callback && callback();
                    HttpManager.Instance.requestShareAdFinish("share_clearance_reward", res);
                }, isTask, isGroupShare, "clearanceReward");
                break;
            //分享无限次数
            default: {
                self.toShare((_res) => {
                    callback && callback();
                    HttpManager.Instance.requestShareAdFinish("share_other", _res);
                }, isTask, isGroupShare);
            }
        }
        if (!Laya.Browser.onMiniGame) {
            callback && callback();
        }
        return 0;
    }
    //计算精灵个数
    caculateMonsterCount(_id) {
        let num = 0;
        if (this.parkcarInfoArray) {
            this.parkcarInfoArray.forEach(element => {
                if (element && element.carId == _id) {
                    num++;
                }
            });
        }
        return num;
    }
    //上传腾讯云
    setUserCloudStorage() {
        let that = this;
        //上传微信云
        let money = Math.floor(that.getPassStage()).toString();
        let kvDataList = [{
                key: "score",
                value: money
            }, {
                key: "city",
                value: (PlayerManager.Instance.Info.wxUserInfo ? PlayerManager.Instance.Info.wxUserInfo.city : '火星')
            }, {
                key: "userId",
                value: that.getUserId()
            }];
        platform.setUserCloudStorage(kvDataList);
    }
    //新老版本更新检测（防止老数据覆盖）
    versionCheck(_callback) {
        let that = this;
        let storage = window.localStorage;
        HttpManager.Instance.requestVersionCheck((_res) => {
            if (_res && _res.clear_flag) {
                //清理老数据
                storage.setItem(that.s_version_clear, 'true');
            }
        });
        //上一次记录清理
        let dataJson = storage.getItem(that.s_version_clear);
        if (dataJson) {
            //需要清理数据
            HttpManager.Instance.requestVersionClear((_res) => {
                storage.removeItem(that.s_version_clear);
                that.clearLocalData();
                _callback && _callback();
            });
        }
        else {
            _callback && _callback();
        }
    }
    //用户基础数据
    requestUserBaseData(_callback = null) {
        let self = this;
        let HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: 'v1/user/info',
            success: function (res) {
                console.log("requestUserBaseData:", res);
                if (res) {
                    self.offlineRewardCount = res.remain_online_num;
                    self.shareAdTimes = res.operation;
                    PlayerManager.Instance.Info.dayGetGoldCount = self.shareAdTimes.share_no_money_num;
                    self.showShareGiftRedPoint = res.share_reward_flag;
                    self.showDailySignRedPoint = res.sign_flag;
                    self.showTaskRedPoint = res.task_flag;
                    self.showLuckPrizeRedPoint = res.roulette_flag;
                    self.showFollowRedPoint = res.subscribe_flag;
                    self.showFriendConcurRedPoint = res.friend_help_flag;
                    self.advert = res.advert;
                    self.diamond_acce_num = res.diamond_acce_num;
                    if (EventsManager.Instance) {
                        if (self.isShowShareGiftRedPoint()) {
                            EventsManager.Instance.event(EventsType.SHARE_GIFT_RED_POINT, "show");
                        }
                        if (self.isShowDailySignRedPoint()) {
                            self.menuRedPointCount++;
                            EventsManager.Instance.event(EventsType.DAY_SIGN_RED_POINT, "show");
                        }
                        if (self.isShowCarShopRedPoint()) {
                            EventsManager.Instance.event(EventsType.HERO_SHOP_RED_POINT, "show");
                        }
                        if (self.isShowTaskRedPoint()) {
                            EventsManager.Instance.event(EventsType.TASK_RED_POINT, "show");
                        }
                        if (self.isShowLuckPrizeRedPoint()) {
                            EventsManager.Instance.event(EventsType.LUCK_PRIZED_RED_POINT, "show");
                        }
                        if (self.isShowFollowRedPoint()) {
                            self.menuRedPointCount++;
                            EventsManager.Instance.event(EventsType.FOLLOW_RED_POINT, "show");
                        }
                        if (self.isShowFriendConcurRedPoint()) {
                            self.menuRedPointCount++;
                            EventsManager.Instance.event(EventsType.FRIEND_CONCUR_RED_POINT, "show");
                        }
                        EventsManager.Instance.event(EventsType.ACCE_CHANGE, "refresh");
                    }
                }
                _callback && _callback(res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    //查询离线奖励
    requestOfflinePrizeData() {
        let that = this;
        let HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: 'v1/login',
            success: function (res) {
                let offlineTime = MathUtils.parseInt(res.time); //离线时长
                let login_time = MathUtils.parseInt(res.login_time); //登录当前服务器时间
                let cur_time = (new Date()).getTime() / 1000;
                that.cs_time_diff = login_time - cur_time;
                let storage = window.localStorage;
                let dataJson = storage.getItem(that.s_offline_time);
                console.log("读取本地离线:", dataJson);
                if (dataJson) {
                    offlineTime = 0;
                    let last_logout_time = MathUtils.parseInt(dataJson); //上次离线时间
                    console.log(login_time, cur_time, last_logout_time, (login_time - last_logout_time), that.cs_time_diff);
                    if (!isNaN(last_logout_time) && login_time > last_logout_time) {
                        offlineTime = login_time - last_logout_time;
                    }
                    storage.removeItem(that.s_offline_time);
                }
                if (offlineTime > 0) {
                    storage.setItem(that.s_offlinePrize_time, offlineTime.toString());
                    if (EventsManager.Instance) {
                        EventsManager.Instance.event(EventsType.OFFLINE, true);
                    }
                }
                HttpManager.Instance.requestNotifyServerPrize();
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    setCache(key, value) {
        this._cache[key] = value;
        const storage = window.localStorage;
        if (storage) {
            storage.setItem("F_" + M.player.account, JSON.stringify(this._cache));
        }
    }
    getCache(key) {
        return this._cache[key];
    }
    hasCache(key) {
        return this._cache.hasOwnProperty(key);
    }
    loadCache() {
        GameEnterManager.Instance.init();
        LanguageManager.Instance.loadLanguage();
        const storage = window.localStorage;
        if (storage) {
            const jsonStr = storage.getItem("F_" + M.player.account);
            if (jsonStr) {
                if (jsonStr) {
                    const cache = JSON.parse(jsonStr);
                    if (cache) {
                        this._cache = cache;
                        // 有缓存才赋值
                        cache.hasOwnProperty(CacheKey.GOLD) && (this.gold = cache[CacheKey.GOLD]);
                        cache.hasOwnProperty(CacheKey.CONCUR) && (HallManager.Instance.hallData.concurGoldDic.fromJsonObject(cache[CacheKey.CONCUR]));
                        // 不管有没有缓存都需要赋值
                        M.more.model.mute = cache.hasOwnProperty(CacheKey.SOUND_MUTE) ? cache[CacheKey.SOUND_MUTE] : false;
                    }
                }
            }
        }
        if (!this._cache) {
            console.log("@FREEMAN: 缓存数据为空或有异常，缓存：{ " + "F_" + M.player.account + " }");
            this._cache = {};
        }
    }
    clearCache() {
        this._cache = {};
        const storage = window.localStorage;
        if (storage) {
            storage.removeItem("F_" + M.player.account);
            console.log("@FREEMAN: 本地缓存{" + "F_" + M.player.account + "}已清除。");
        }
    }
    //设置金币并保存
    setMoneySave(money) {
        this.gold = Math.floor(money);
        this.setCache(CacheKey.GOLD, money);
        Laya.timer.callLater(this, this.saveLocal);
    }
}
//# sourceMappingURL=UserData.js.map
/*
* name;
*/
class PlayerInfo {
    constructor() {
        /** 拥有金币 */
        this.userMoney = 0;
        /** 拥有钻石 */
        this.userDiamond = 0;
        /** 拥有精华碎片 */
        this.userEssence = 0;
        /** 用户等级 */
        this.userLevel = 0;
        /** 用户经验 */
        this.userExp = 0;
        /** 等级增长的收益 */
        this.userLevelExtraIncome = 1;
        /** 每天可以领取金币最多10次 */
        this.dayGetGoldCount = 10;
        /** 关卡开放等级 */
        this.levelOffect = 2;
    }
}
//# sourceMappingURL=PlayerInfo.js.map
/**
 * Timer管理类
 */
class TimerManager {
    /**
     * 构造函数
     */
    constructor() {
        let self = this;
        self._handlers = new Array();
        self._delHandlers = new Array();
        self._currTime = new Date().getTime();
        self._currFrame = 0;
        self._count = 0;
        self._timeScale = 1;
        Laya.timer.frameLoop(1, self, self.onEnterFrame);
    }
    /**
     * 设置时间参数
     * @param timeScale
     */
    setTimeScale(timeScale) {
        this._timeScale = timeScale;
    }
    /**
     * 每帧执行函数
     * @param frameTime
     */
    onEnterFrame() {
        this._currFrame++;
        this._currTime = new Date().getTime();
        for (var i = 0; i < this._count; i++) {
            var handler = this._handlers[i];
            var t = handler.userFrame ? this._currFrame : this._currTime;
            if (t >= handler.exeTime) {
                handler.method.call(handler.handerObj, (this._currTime - handler.dealTime) * this._timeScale);
                handler.dealTime = this._currTime;
                handler.exeTime += handler.delay;
                if (!handler.repeat) {
                    if (handler.repeatCount > 1) {
                        handler.repeatCount--;
                    }
                    else {
                        if (handler.complateMethod) {
                            handler.complateMethod.apply(handler.complateMethodObj);
                        }
                        this._delHandlers.push(handler);
                    }
                }
            }
        }
        while (this._delHandlers.length) {
            var handler = this._delHandlers.pop();
            this.remove(handler.method, handler.handerObj);
        }
    }
    create(useFrame, delay, repeatCount, method, methodObj, complateMethod, complateMethodObj) {
        //参数监测
        if (delay < 0 || repeatCount < 0 || method == null) {
            return;
        }
        //先删除相同函数的计时
        this.remove(method, methodObj);
        //创建
        var handler = Laya.Pool.getItemByClass("TimerHandlers", TimerHandlers);
        handler.userFrame = useFrame;
        handler.repeat = repeatCount == 0;
        handler.repeatCount = repeatCount;
        handler.delay = delay;
        handler.method = method;
        handler.handerObj = methodObj;
        handler.complateMethod = complateMethod;
        handler.complateMethodObj = complateMethodObj;
        handler.exeTime = delay + (useFrame ? this._currFrame : this._currTime);
        handler.dealTime = this._currTime;
        this._handlers.push(handler);
        this._count++;
    }
    /**
     *
     * 定时执行
     * @param delay 执行间隔:毫秒
     * @param repeatCount 执行次数, 0为无限次
     * @param method 执行函数
     * @param methodObj 执行函数所属对象
     * @param complateMethod 完成执行函数
     * @param complateMethodObj 完成执行函数所属对象
     *
     */
    doTimer(delay, repeatCount, method, methodObj, complateMethod = null, complateMethodObj = null) {
        this.create(false, delay, repeatCount, method, methodObj, complateMethod, complateMethodObj);
    }
    /**
     *
     * 定时执行
     * @param delay 执行间隔:帧频
     * @param repeatCount 执行次数, 0为无限次
     * @param method 执行函数
     * @param methodObj 执行函数所属对象
     * @param complateMethod 完成执行函数
     * @param complateMethodObj 完成执行函数所属对象
     *
     */
    doFrame(delay, repeatCount, method, methodObj, complateMethod = null, complateMethodObj = null) {
        this.create(true, delay, repeatCount, method, methodObj, complateMethod, complateMethodObj);
    }
    /**
     * 定时器执行数量
     * @return
     *
     */
    get count() {
        return this._count;
    }
    /**
     * 清理
     * @param method 要移除的函数
     * @param methodObj 要移除的函数对应的对象
     */
    remove(method, methodObj) {
        for (var i = 0; i < this._count; i++) {
            var handler = this._handlers[i];
            if (handler.method == method && handler.handerObj == methodObj) {
                this._handlers.splice(i, 1);
                Laya.Pool.recover("TimerHandlers", handler);
                this._count--;
                break;
            }
        }
    }
    /**
     * 清理
     * @param methodObj 要移除的函数对应的对象
     */
    removeAll(methodObj) {
        for (var i = 0; i < this._count; i++) {
            var handler = this._handlers[i];
            if (handler.handerObj == methodObj) {
                this._handlers.splice(i, 1);
                Laya.Pool.recover("TimerHandlers", handler);
                this._count--;
                i--;
            }
        }
    }
    /**
     * 检测是否已经存在
     * @param method
     * @param methodObj
     *
     */
    isExists(method, methodObj) {
        for (var i = 0; i < this._count; i++) {
            var handler = this._handlers[i];
            if (handler.method == method && handler.handerObj == methodObj) {
                return true;
            }
        }
        return false;
    }
    static get Instance() {
        if (!this._instance) {
            this._instance = new TimerManager();
        }
        return this._instance;
    }
}
//# sourceMappingURL=TimerManager.js.map
class TimerHandlers {
    constructor() {
        /**执行间隔*/
        this.delay = 0;
        /**重复执行次数*/
        this.repeatCount = 0;
        /**执行时间*/
        this.exeTime = 0;
        /**上次的执行时间*/
        this.dealTime = 0;
    }
    /**清理*/
    clear() {
        this.method = null;
        this.handerObj = null;
        this.complateMethod = null;
        this.complateMethodObj = null;
    }
}
//# sourceMappingURL=TimerHandlers.js.map
/*
* SDK;
*/
class SDKManager {
    constructor() {
    }
    initWX() {
        platform.onShow(function (data) {
            console.log("@David onShow", data);
            SDKManager.Instance.handlerShareType(data);
            SDKManager.Instance.handlerSceneValue(data);
            EventsManager.Instance.event(EventsType.BACK_GAME);
            M.more.applyMute();
            if (platform.isSharing())
                return;
            //离线收益
            if (userData && userData.isLoadStorage()) {
                userData.requestOfflinePrizeData();
            }
        });
        platform.onHide(function () {
            if (platform.isSharing())
                return;
            try {
                //保存数据
                if (userData && userData.isLoadStorage()) {
                    userData.saveLocal(true, { petList: true, petShop: true, skill: true });
                    userData.saveOfflineTime();
                    //上传腾讯云
                    userData.setUserCloudStorage();
                }
            }
            catch (e) {
                console.log("@FREEMAN: 在保存离线数据期间发生了错误：", e);
            }
        });
    }
    /**
     * 显示banner广告
     * @param {boolean} [force=false]
     * @param {number} [offsetY=0]
     * @returns {*}
     * @memberof SDKManager
     */
    showBannerAd(force = false, offsetY = 0) {
        let self = this;
        if (self._isForbidBannerAd && force == false) {
            return;
        }
        self.createBanner();
        return self._bannerAd;
    }
    /**
     *  关闭banner广告
     * @param {boolean} [forbid=false]
     * @memberof SDKManager
     */
    closeBannerAd(forbid = false) {
        let self = this;
        if (forbid) {
            self._isForbidBannerAd = true;
        }
        self.createBanner(false);
    }
    createBanner(isShow = true) {
        let self = this;
        if (isShow && self._bannerAd) {
            self._bannerAd.show();
            return;
        }
        else if (!isShow || !self._bannerAd) {
            self._bannerAd && self._bannerAd.destroy();
            self._bannerAd = platform.createBannerAd({
                adUnitId: 'adunit-439fc3b5508c60cc',
                top: LayerManager.clientTop
            });
        }
        if (self._bannerAd) {
            self._bannerAd.onError(err => {
                console.log(err);
            });
            if (isShow) {
                self._bannerAd.show();
            }
            else {
                self._bannerAd.hide();
            }
        }
    }
    /**
     *  观看视频
     * @param {*} callback
     * @param {*} [noAdCallback=null]
     * @param {boolean} [shareEnabled=true]
     * @returns {void}
     * @memberof SDKManager
     */
    showVideoAd(callback, noAdCallback = null, shareEnabled = true) {
        let self = this;
        if (self._videoAd)
            return;
        let videoAd = platform.createRewardedVideoAd({
            adUnitId: 'adunit-d2cf9b98a2801c37'
        });
        if (videoAd) {
            self._videoAd = videoAd;
            videoAd.load().then(() => videoAd.show());
            let closeCallback = (res) => {
                callback && callback(res);
                videoAd.offClose(closeCallback);
                self._isForbidBannerAd = false;
                self._videoAd = null;
            };
            videoAd.onClose(closeCallback);
            let errCallback = (err) => {
                console.log(err);
                //无视频可看弹窗
                let hintDialog = new ui.common.view.VideoAdViewUI();
                AlignUtils.setToScreenGoldenPos(hintDialog);
                M.layer.subFrameLayer.addChildWithMaskCall(hintDialog, hintDialog.removeSelf);
                let imgBg = hintDialog.getChildByName("imgBg");
                if (imgBg) {
                    let btnExit = imgBg.getChildByName("btnExit");
                    if (btnExit) {
                        btnExit.on(Laya.Event.CLICK, btnExit, () => {
                            hintDialog.removeSelf();
                        });
                    }
                    let btnShare = imgBg.getChildByName("btnShare");
                    if (btnShare) {
                        btnShare.offAll(Laya.Event.CLICK);
                        btnShare.on(Laya.Event.CLICK, btnShare, () => {
                            hintDialog.removeSelf();
                            if (noAdCallback) {
                                noAdCallback();
                            }
                            else {
                                userData.toShareAd();
                            }
                        });
                        //不开启分享
                        btnShare.visible = shareEnabled;
                    }
                    hintDialog.once(Laya.Event.REMOVED, hintDialog, () => {
                        videoAd.offError(errCallback);
                        self._videoAd = null;
                    });
                }
            };
            videoAd.onError(errCallback);
            self._isForbidBannerAd = true;
        }
        if (!Laya.Browser.onMiniGame) {
            callback && callback();
        }
    }
    /**
     * 跳转小程序
     * @param {string} appId
     * @memberof SDKManager
     */
    navigateToMiniProgram(appId) {
        platform.navigateToMiniProgram({
            appId: appId,
            path: userData.miniPagePath(),
            success(res) {
                console.log("小程序跳转成功", res);
            }
        });
        //小程序跳转次数统计
        HttpManager.Instance.requestShareAdFinish("minipro_" + appId);
    }
    /** 处理分享类型 */
    handlerShareType(data) {
        if (!data)
            return;
        switch (data.query.shareType) {
            case "help":
                console.log("好友互助UID:", data.query.userId);
                HttpManager.Instance.requestFriendConcur(data.query.userId);
                break;
            case "clearanceReward":
                this.checkIsGetClearanceReward(data.shareTicket);
                break;
            default:
                HttpManager.Instance.requestShareGift(data);
                break;
        }
    }
    /** 处理场景值 */
    handlerSceneValue(data) {
        switch (Math.floor(data.scene)) {
            case 1020:
            case 1035:
            case 1043:
                if (data.referrerInfo && data.referrerInfo.appId) {
                    HttpManager.Instance.requestPublicAddress(data);
                }
                break;
            case 1044:
                this.handlerShareType(data);
                break;
        }
    }
    /** 检查时候可以领取通关奖励 */
    checkIsGetClearanceReward(shareTicket) {
        platform.getShareInfo(shareTicket, (res) => {
            HttpManager.Instance.requestClearanceReward(res.encryptedData, res.iv, (res) => {
                if (res) { //成功
                    HallManager.Instance.showClearanceRewardView();
                }
                else { //失败
                    MessageUtils.showMsgTips(LanguageManager.Instance.getLanguageText("hallScene.label.txt.35"));
                }
            });
        }, () => {
            console.error("@David checkIsGetClearanceReward - platform.getShareInfo 获取数据失败...");
        });
    }
    static get Instance() {
        if (!SDKManager._instance) {
            SDKManager._instance = new SDKManager();
        }
        return SDKManager._instance;
    }
}
//# sourceMappingURL=SDKManager.js.map
class PoolManager {
    static getInstance() {
        if (!this._instance) {
            this._instance = new PoolManager();
        }
        return this._instance;
    }
    constructor() {
        this._instances = new TSDictionary();
    }
    get(classDefinition, name) {
        if (!name) {
            name = classDefinition.__className;
        }
        let instances = this._instances.TryGetValue(name);
        if (!instances) {
            instances = [];
            this._instances.SetDicValue(name, instances);
        }
        if (instances.length > 0) {
            return instances.pop();
        }
        return new classDefinition();
    }
    return(instance, name) {
        if (!name) {
            name = instance.__proto__.__className;
        }
        let instances = this._instances.TryGetValue(name);
        if (!instances) {
            instances = [];
            this._instances.SetDicValue(name, instances);
        }
        instances.push(instance);
        return instance;
    }
}
//# sourceMappingURL=PoolManager.js.map
/*
* name;
*/
class LanguageManager {
    constructor() {
        this._languageMap = new TSDictionary();
        this._reg = new RegExp("\\{(\\d+)\\}");
    }
    /** 加载语言包配置文件 */
    loadLanguage() {
        let self = this;
        Laya.loader.load(PathConfig.Language, Laya.Handler.create(self, () => {
            self.init(Laya.Loader.getRes(PathConfig.Language));
        }, null, true), null, Laya.Loader.TEXT);
    }
    /**
     * 初始化数据
     */
    init(data) {
        let self = this;
        let languageArr = String(data).split("\r\n");
        if (languageArr.length) {
            for (var i = 0; i < languageArr.length; i++) {
                var obj = languageArr[i];
                if (obj == "#" || obj == "") {
                    continue;
                }
                else {
                    let strArr = obj.split(":");
                    if (self._languageMap.ContainsKey(strArr[0])) {
                        self._languageMap.Remove(strArr[0]);
                    }
                    if (strArr.length <= 2) {
                        self._languageMap.Add(strArr[0], strArr[1]);
                    }
                    else {
                        self._languageMap.Add(strArr[0], strArr.slice(1).join(""));
                    }
                }
            }
            LanguageManager.isLanguageLoadComplete = true;
        }
    }
    getLanguageMapData() {
        let self = this;
        return self._languageMap.getValues();
    }
    getLanguageById(key) {
        let self = this;
        return self._languageMap.TryGetValue(key);
    }
    /**
     * 设置容器语言
     * @param {Laya.Node} node
     */
    setModuleLanguage(node) {
        let self = this;
        if (!node || node && !node.numChildren || !LanguageManager.isOpenLanguage)
            return;
        self.SearchAndModifyNodeLanguage(node);
    }
    SearchAndModifyNodeLanguage(node) {
        for (var i = 0; i < node.numChildren; i++) {
            var child = node.getChildAt(i);
            if (child instanceof Laya.Node) {
                this.SearchAndModifyNodeLanguage(child);
            }
            if (child instanceof Laya.Label) {
                if (child.name != "") {
                    var name = child.name.split("@")[1];
                    if (name) {
                        child.text = this.getLanguageById(name);
                    }
                }
            }
            else if (child instanceof Laya.Button) {
                if (child.name != "") {
                    var name = child.name.split("@")[1];
                    if (name) {
                        child.label = this.getLanguageById(name);
                    }
                }
            }
        }
    }
    /**
    * 获取文本内容
    * @param {string} key
    * @returns {string}
    */
    getLanguageText(key, ...arg) {
        let self = this;
        return self.getTranslationWithArray(key, arg);
    }
    getTranslationWithArray(key, argsArr) {
        let self = this;
        if (self._languageMap.ContainsKey(key)) {
            return self.replaceStr(self._languageMap.TryGetValue(key), argsArr);
        }
    }
    languageReplace(str, args) {
        let self = this;
        return self.replaceStr(str, args);
    }
    /**
     * 根据正则表达式去替换内容
     */
    replaceStr(repContent, argsArr) {
        let self = this;
        if (argsArr && argsArr.length > 0) {
            let data = self._reg.exec(repContent);
            while (data && argsArr.length > 0) {
                let id = Number(data[1]);
                let str = String(argsArr[id]);
                if (id >= 0 && id < argsArr.length) {
                    var idx = str.indexOf("$");
                    if (idx > -1) {
                        str = str.slice(0, idx) + "$" + str.slice(idx);
                    }
                    repContent = repContent.replace(self._reg, str);
                }
                else {
                    repContent = repContent.replace(self._reg, "{}");
                }
                data = self._reg.exec(repContent);
            }
        }
        return repContent;
    }
    static get Instance() {
        let self = this;
        if (LanguageManager._instance == null) {
            LanguageManager._instance = new LanguageManager();
        }
        return LanguageManager._instance;
    }
}
/** 语言包数据是否加载完毕 */
LanguageManager.isLanguageLoadComplete = false;
LanguageManager.isOpenLanguage = true;
//# sourceMappingURL=LanguageManager.js.map
/*
* Manager初始化类
*/
class GameEnterManager {
    init() {
        ViewRegisterMgr.Instance.initRegisterView();
        HallManager.Instance.setup();
        PlayerManager.Instance.setup();
        BattleManager.Instance.setup();
    }
    static get Instance() {
        if (!GameEnterManager._instance) {
            GameEnterManager._instance = new GameEnterManager();
        }
        return GameEnterManager._instance;
    }
}
//# sourceMappingURL=GameEnterManager.js.map
/*
* 事件类型;
*/
class EventsType {
}
EventsType.OFFLINE = "OFFLINE";
EventsType.SHARE_SWITCH = "SHARE_SWITCH";
EventsType.GLOD_CHANGE = "GLOD_CHANGE";
EventsType.DIAMOND_CHANGE = "DIAMOND_CHANGE";
EventsType.ESSENCE_CHANGE = "ESSENCE_CHANGE";
EventsType.SHARE_GIFT_RED_POINT = "SHARE_GIFT_RED_POINT";
EventsType.DAY_SIGN_RED_POINT = "DAY_SIGN_RED_POINT";
EventsType.STRENGTHEN_RED_POINT = "STRENGTHEN_RED_POINT";
EventsType.HERO_SHOP_RED_POINT = "HERO_SHOP_RED_POINT";
EventsType.ACCE_CHANGE = "ACCE_CHANGE";
EventsType.LUCK_PRIZE = "LUCK_PRIZE";
EventsType.BACK_GAME = "BACK_GAME"; //重返游戏
EventsType.TASK_RED_POINT = "TASK_RED_POINT";
EventsType.LUCK_PRIZED_RED_POINT = "LUCK_PRIZED_RED_POINT";
EventsType.FOLLOW_RED_POINT = "FOLLOW_RED_POINT";
EventsType.FRIEND_CONCUR_RED_POINT = "FRIEND_CONCUR_RED_POINT";
EventsType.UPDATE_HALL_DATA = "UPDATE_HALL_DATA";
/** 好友助力领奖 */
EventsType.FRIEND_CONCUR_GET_REWARD = "FRIEND_CONCUR_GET_REWARD";
//# sourceMappingURL=EventsType.js.map
class Time {
}
/**
 * 以秒为单位时，表示1秒的值，即1
 */
Time.SEC = 1;
/**
 * 以秒为单位时，表示1分钟的值，即60
 */
Time.MIN = 60;
/**
 * 以秒为单位时，表示1小时的值，即60 x 60
 */
Time.HOUR = 60 * 60;
/**
 * 以毫秒为单位时，表示1秒的值，即1000
 */
Time.SEC_IN_MILI = 1000;
/**
 * 以毫秒为单位时，表示1分钟的值，即1000 x 60
 */
Time.MIN_IN_MILI = 1000 * 60;
/**
 * 以毫秒为单位时，表示1小时的值，即1000 x 60 x 60
 */
Time.HOUR_IN_MILI = 1000 * 60 * 60;
//# sourceMappingURL=Time.js.map
class Color {
}
Color.WHITE = "#FFFFFF";
Color.BLACK = "#000000";
//# sourceMappingURL=Color.js.map
class Align {
}
Align.CENTER = "center";
//# sourceMappingURL=Align.js.map
/*
* 路径配置;
*/
class PathConfig {
}
PathConfig.Language = "config/language.txt";
PathConfig.AppUrl = "https://pokemon.vuggame.com/api/";
PathConfig.AppResUrl = "https://miniapp.vuggame.com/pokemon_vuggame_com_single/";
PathConfig.MonsterUrl = PathConfig.AppResUrl + "images/anim/{0}.atlas";
PathConfig.GameResUrl = "images/{0}.png";
PathConfig.EffectUrl = "images/effect/{0}.atlas";
PathConfig.ItemUrl = "images/core/{0}.png";
//# sourceMappingURL=PathConfig.js.map
var Point = Laya.Point;
var Sprite = Laya.Sprite;
var Handler = Laya.Handler;
var EventDispatcher = Laya.EventDispatcher;
var HttpRequest = Laya.HttpRequest;
var Rectangle = Laya.Rectangle;
//# sourceMappingURL=Imports.js.map
class GlobalConfig {
    static get DEBUG() {
        if (Laya.Browser.onPC
            || Laya.Browser.onFreeman
            || Laya.Browser.onDavid
            || Laya.Browser.onSong
            || Laya.Browser.onMing) {
            return true;
        }
        return false;
    }
    ;
    static get NEW_ACCOUNT() {
        return false;
    }
    static get USER() {
        return "DAVID";
        // return "FREEMAN";
        // return null;
    }
}
//# sourceMappingURL=GlobalConfig.js.map
/*
* 派发类;
*/
class EventsManager extends Laya.EventDispatcher {
    constructor() {
        super();
    }
    static get Instance() {
        if (!EventsManager._instance) {
            EventsManager._instance = new EventsManager();
        }
        return EventsManager._instance;
    }
}
//# sourceMappingURL=EventsManager.js.map
class BuffController extends Laya.EventDispatcher {
    constructor() {
        super(...arguments);
        this._buffValueList = [];
    }
    static getInstance() {
        if (!this._instance) {
            this._instance = new BuffController();
        }
        return this._instance;
    }
    init(parent) {
        this._container = parent;
        this._container.mouseThrough = true;
        this._buffContainer = new ui.hall.BuffIconListUI();
        this._container.addChild(this._buffContainer);
        this._buffIconList = [];
        this._buffIconList[BuffSheet.ATTACK_SPEED_INCREASE] = new Laya.Image("images/buff_1.png");
        this._buffIconList[BuffSheet.ATTACK_VALUE_INCREASE] = new Laya.Image("images/buff_2.png");
        this._buffIconList[BuffSheet.CRIT_RATE_INCREASE] = new Laya.Image("images/buff_3.png");
        this._buffIconList[BuffSheet.COIN_OBTAIN_INCREASE] = new Laya.Image("images/buff_4.png");
        this._buffValueList = [0, 0, 0, 0];
    }
    addBuffFromSkyDrop(sheet) {
        let skillUrl = "";
        switch (sheet.id) {
            case SkyDropSheet.ATTACK_SPEED_INCREASE: {
                this.activateBuff(BuffSheet.ATTACK_SPEED_INCREASE, sheet);
                skillUrl = "images/buff_1.png";
                break;
            }
            case SkyDropSheet.ATTACK_VALUE_INCREASE: {
                this.activateBuff(BuffSheet.ATTACK_VALUE_INCREASE, sheet);
                skillUrl = "images/buff_2.png";
                break;
            }
            case SkyDropSheet.CRIT_RATE_INCREASE: {
                this.activateBuff(BuffSheet.CRIT_RATE_INCREASE, sheet);
                skillUrl = "images/buff_3.png";
                break;
            }
            case SkyDropSheet.COIN_OBTAIN_INCREASE: {
                this.activateBuff(BuffSheet.COIN_OBTAIN_INCREASE, sheet);
                skillUrl = "images/buff_4.png";
                break;
            }
        }
        let skill = new SkillItem();
        skill.initSkill(skillUrl);
        this.setSkillTime(skill, sheet.duration);
        this._buffContainer.boxBuffList.addChild(skill);
    }
    setSkillTime(skillItem, time) {
        let skillTime = time;
        let timeInt = setInterval(() => {
            skillTime -= 1000;
            skillItem.updateTime(TimeUtil.getTimeCD(skillTime));
            if (skillTime <= 0) {
                clearInterval(timeInt);
                skillItem.removeSelf();
                skillItem = null;
            }
        }, 1000);
    }
    getBuffValueById(id) {
        if (!this._buffValueList[id]) {
            this._buffValueList[id] = 0;
        }
        return this._buffValueList[id];
    }
    hasBuff() {
        const num = this._buffValueList.reduce((pre, curr, idx, arr) => {
            return pre + curr;
        });
        console.log("@FREEMAN: Activated Buff Num:", num);
        return num > 0;
    }
    activateBuff(id, sheet) {
        this._buffValueList[id] = sheet.num;
        // this._buffContainer.boxBuffList.addChild(this._buffIconList[id]);
        Laya.timer.once(sheet.duration, this, () => {
            this._buffValueList[id] = 0;
            // this._buffIconList[id].removeSelf();
        });
    }
}
class BuffSheet {
}
/** 攻击速度按百分比增加 */
BuffSheet.ATTACK_SPEED_INCREASE = 0;
/** 攻击力按百分比增加 */
BuffSheet.ATTACK_VALUE_INCREASE = 1;
/** 暴击率按百分比增加 */
BuffSheet.CRIT_RATE_INCREASE = 2;
/** 金币获得按百分比增加 */
BuffSheet.COIN_OBTAIN_INCREASE = 3;
//# sourceMappingURL=BuffController.js.map
class LayerManager extends EventDispatcher {
    constructor() {
        super();
        this._layers = [];
    }
    get layers() {
        return this._layers;
    }
    /** 当前的鼠标位置 X */
    static get mouseX() {
        return Laya.stage.mouseX / LayerManager.adaptScaleX;
    }
    /** 当前的鼠标位置 Y */
    static get mouseY() {
        return Laya.stage.mouseY / LayerManager.adaptScaleY;
    }
    /** 获取对象的实际舞台变形数据 */
    static getRealStageRect(target) {
        const loc = PointUtils.localToGlobal(target);
        const rect = new Rectangle(loc.x * LayerManager.adaptScale + this.left, loc.y * LayerManager.adaptScale + this.top, target.width * LayerManager.adaptScale, target.height * LayerManager.adaptScale);
        // const scaleFactor: number = LayerManager.stageDesignWidth / LayerManager.clientWidth;
        const scaleFactor = Laya.stage.designWidth / Laya.Browser.clientWidth;
        rect.x = Math.round(rect.x / scaleFactor);
        rect.y = Math.round(rect.y / scaleFactor);
        rect.width = Math.round(rect.width / scaleFactor);
        rect.height = Math.round(rect.height / scaleFactor);
        return rect;
    }
    static getInstance() {
        if (!this._instance) {
            this._instance = new LayerManager();
        }
        return this._instance;
    }
    // prettier-ignore
    initLayer(container, designWidth, designHeight) {
        const pixelRatio = Laya.Browser.pixelRatio;
        const clientWidth = Laya.Browser.clientWidth * pixelRatio;
        const clientHeight = Laya.Browser.clientHeight * pixelRatio;
        const adaptScaleX = clientWidth / designWidth;
        const adaptScaleY = clientHeight / designHeight;
        const adaptScale = Math.min(adaptScaleX, adaptScaleY);
        const stageWidth = designWidth * adaptScaleX;
        const stageHeight = designHeight * adaptScaleY;
        let top = 0;
        let left = 0;
        if (adaptScale === adaptScaleX) {
            top = (stageHeight - designHeight * adaptScale) * 0.5;
        }
        else {
            left = (stageWidth - designWidth * adaptScale) * 0.5;
        }
        container.width = stageWidth;
        container.height = stageHeight;
        LayerManager.stageDesignWidth = designWidth;
        LayerManager.stageDesignHeight = designHeight;
        LayerManager.clientWidth = Laya.Browser.clientWidth;
        LayerManager.clientHeight = Laya.Browser.clientHeight;
        LayerManager.adaptScaleX = adaptScaleX;
        LayerManager.adaptScaleY = adaptScaleY;
        LayerManager.adaptScale = adaptScale;
        LayerManager.pixelRatio = pixelRatio;
        LayerManager.top = top;
        LayerManager.left = left;
        LayerManager.clientTop = (top / pixelRatio);
        LayerManager.clientLeft = (left / pixelRatio);
        // console.log(StringTools.wrapValueObjects(["designWidth", "designHeight"],[designWidth, designHeight]));
        // console.log(StringTools.wrapValueObjects(["clientWidth", "clientHeight"],[clientWidth, clientHeight]));
        // console.log(StringTools.wrapValueObjects(["adaptScaleX", "adaptScaleY", "pixelRatio"],[adaptScaleX, adaptScaleY, pixelRatio]));
        // console.log(StringTools.wrapValueObjects(["top", "left"], [top, left]));
        let idx = 0;
        this.renderLayer = this.createLayer(idx++, "renderLayer", container);
        this.navLayer = this.createLayer(idx++, "navLayer", container);
        this.frameLayer = this.createMaskLayer(idx++, "frameLayer", container);
        this.subFrameLayer = this.createMaskLayer(idx++, "subFrameLayer", container);
        this.alertLayer = this.createMaskLayer(idx++, "alertLayer", container);
        this.screenEffectLayer = this.createLayer(idx++, "screenEffectLayer", container);
        this.rollMessageLayer = this.createLayer(idx++, "rollMessageLayer", container);
        this.guideLayer = this.createMaskLayer(idx++, "guideLayer", container);
        this.smallLoadingLayer = this.createMaskLayer(idx++, "smallLoadingLayer", container);
        this.noteLayer = this.createLayer(idx++, "noteLayer", container);
        this.debugLayer = this.createLayer(idx++, "debugLayer", container);
        for (const layer of this._layers) {
            layer.pos(left, top);
            layer.scale(adaptScale, adaptScale);
        }
    }
    createLayer(index, name, container) {
        this._layers.push(container.addChild(new Layer(index, name)));
        return this._layers[this._layers.length - 1];
    }
    createMaskLayer(index, name, container) {
        this._layers.push(container.addChild(new MaskLayer(index, name)));
        return this._layers[this._layers.length - 1];
    }
}
/** Laya.stage 的设计宽度，一般为人为设定 */
LayerManager.stageDesignWidth = 0;
/** Laya.stage 的设计高度，一般为人为设定 */
LayerManager.stageDesignHeight = 0;
/** Laya.stage 的设备宽度，一般根据机器自动设定 */
LayerManager.clientWidth = 0;
/** Laya.stage 的设备高度，一般根据机器自动设定 */
LayerManager.clientHeight = 0;
/** Laya.stage.width 针对设备的适应倍数 */
LayerManager.adaptScaleX = 0;
/** Laya.stage.height 针对设备的适应倍数 */
LayerManager.adaptScaleY = 0;
/** LayerManager._layers 针对设备的适应倍数 */
LayerManager.adaptScale = 0;
/** 设备像素倍率 */
LayerManager.pixelRatio = 1;
/** 对设备适应后，LayerManager._layers 距离屏幕顶部的距离 */
LayerManager.top = 0;
/** 对设备适应后，LayerManager._layers 距离屏幕左侧的距离 */
LayerManager.left = 0;
/** 设备Top，距离屏幕顶部的真实屏幕距离 */
LayerManager.clientTop = 0;
/** 设备Left，距离屏幕左侧的真实屏幕距离 */
LayerManager.clientLeft = 0;
//# sourceMappingURL=LayerManager.js.map
/*
* 玩家信息数据管理;
*/
class PlayerManager extends Laya.EventDispatcher {
    constructor() {
        super();
        this.account = "default_player";
    }
    setup() {
        let self = this;
        self._info = new PlayerInfo();
    }
    set Info(value) { this._info = value; }
    /** 玩家数据 */
    get Info() { return this._info; }
    static get Instance() {
        if (!PlayerManager._instance) {
            PlayerManager._instance = new PlayerManager();
        }
        return PlayerManager._instance;
    }
}
//# sourceMappingURL=PlayerManager.js.map
class SkyDropController extends Laya.EventDispatcher {
    static getInstance() {
        if (!this._instance) {
            this._instance = new SkyDropController();
        }
        return this._instance;
    }
    init(parent) {
        this._container = parent;
        this._container.mouseThrough = true;
        this._package = new Laya.Image("images/sk_package.png");
        this._package.pivot(34, 42);
        this._awardType = -1;
        // this.dropPackage(1);
        Laya.timer.once(5 * 1000, this, this.requestSkyDropPackage);
    }
    dropPackage(awardType) {
        this._awardType = awardType;
        this._package.pos(153, -80);
        if (this._container) {
            this._container.addChild(this._package);
            this.dropTween();
        }
    }
    retrievePackage() {
        this._awardType = -1;
        this._package.removeSelf();
        Laya.Tween.clearTween(this._package);
    }
    get packageOnScreen() {
        return Boolean(this._package.parent);
    }
    dropTween() {
        if (this._package) {
            Laya.Tween.to(this._package, { y: 430 }, 800, Laya.Ease.quadIn, Handler.create(this, this.onDropTweenComplete));
        }
    }
    onDropTweenComplete() {
        this._package.on(Laya.Event.CLICK, this, this.onPackageClick);
        Laya.Tween.clearTween(this._package);
        this.bouncingUp();
    }
    bouncingDown() {
        Laya.Tween.to(this._package, { scaleX: 1.1, scaleY: 0.85, y: 430 }, 400, Laya.Ease.quadIn, Handler.create(this, this.bouncingUp));
    }
    bouncingUp() {
        Laya.Tween.to(this._package, { scaleX: 0.9, scaleY: 1.1, y: 400 }, 400, Laya.Ease.quadOut, Handler.create(this, this.bouncingDown));
    }
    onPackageClick() {
        if (this._awardType < 100) {
            const sheet = SkyDropSheet.getSheetById(this._awardType);
            if (!this._skyDropFrame) {
                this._skyDropFrame = new SkyDropView();
                this._skyDropFrame.renew(sheet);
            }
            M.layer.subFrameLayer.addChildWithMaskCall(this._skyDropFrame, this._skyDropFrame.removeSelf);
        }
        else {
            if (!this._skyDropObtainFrame) {
                this._skyDropObtainFrame = new SkyDropObtainView();
                this._skyDropObtainFrame.renew("images/core/diamond_icon.png", LanguageManager.Instance.getLanguageText("hallScene.label.txt.10", Math.round(Math.random() * 30)));
            }
            this._container.addChild(this._skyDropObtainFrame);
        }
    }
    activatePackageAward() {
        const sheet = SkyDropSheet.getSheetById(this._awardType);
        BuffController.getInstance().addBuffFromSkyDrop(sheet);
        this.retrievePackage();
        BuffTipsView.Create(sheet);
    }
    requestSkyDropPackage() {
        let that = this;
        let HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: 'v1/skyDropPackage/status',
            success: function (res) {
                const bool = res.isShowPackage;
                if (bool) {
                    that.dropPackage(res.type);
                }
                else {
                    const timeSpan = res.nextPackageTimeSpan;
                    if (timeSpan > 0) {
                        Laya.timer.once(timeSpan * 1000, that, that.requestSkyDropPackage);
                    }
                    else {
                        Laya.timer.clear(that, that.requestSkyDropPackage);
                    }
                }
                console.log("@FREEMAN: 请求天降礼包数据:", res);
            },
            fail: (res) => {
                console.log("@FREEMAN: getSkyDropPackage: fail =>", res);
            }
        });
    }
    postSkyDropPackage() {
        let that = this;
        let HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: 'v1/skyDropPackage/open/' + this._awardType,
            success: ({ legal }) => {
                if (legal) {
                    that.activatePackageAward();
                    Laya.timer.once(10 * 1000, that, that.requestSkyDropPackage);
                }
                else {
                    console.log("@FREEMAN: postSkyDropPackage:", "领取时间无效，您暂时无法领取天降惊喜礼包！");
                }
                console.log("@FREEMAN: postSkyDropPackage: legal =>", legal);
            },
            fail: (res) => {
                console.log("@FREEMAN: postSkyDropPackage: fail =>", res);
            }
        });
    }
}
class SkyDropSheet {
    constructor(id, num, duration) {
        this.id = id;
        this.num = num;
        this.duration = duration;
    }
    static getSheetById(id) {
        for (const sheet of this.sheets) {
            if (sheet.id === id) {
                return sheet;
            }
        }
        return null;
    }
}
/** 攻击速度按百分比增加 */
SkyDropSheet.ATTACK_SPEED_INCREASE = 0;
/** 攻击力按百分比增加 */
SkyDropSheet.ATTACK_VALUE_INCREASE = 1;
/** 暴击率按百分比增加 */
SkyDropSheet.CRIT_RATE_INCREASE = 2;
/** 金币获得按百分比增加 */
SkyDropSheet.COIN_OBTAIN_INCREASE = 3;
SkyDropSheet.sheets = [
    new SkyDropSheet(0, 0.5, 60 * 1000),
    new SkyDropSheet(1, 1, 30 * 1000),
    new SkyDropSheet(2, 0.5, 30 * 1000),
    new SkyDropSheet(3, 1, 120 * 1000),
];
class SkyDropView extends Laya.View {
    constructor() {
        super();
        this.init();
    }
    init() {
        this.ui = new ui.common.view.SkyDropViewUI();
        this.addChild(this.ui);
        this.ui.imgCloseBtn.on(Laya.Event.CLICK, this, this.removeSelf);
        this.ui.btnHelp.on(Laya.Event.CLICK, this, this.onHelpBtnClick);
        this.ui.btnVideo.on(Laya.Event.CLICK, this, this.onVideoBtnClick);
    }
    renew(sheet) {
        this.sheet = sheet;
        switch (sheet.id) {
            case SkyDropSheet.ATTACK_SPEED_INCREASE: {
                this.ui.lblDesc.text = LanguageManager.Instance.getLanguageText("hallScene.label.txt.11");
                break;
            }
            case SkyDropSheet.ATTACK_VALUE_INCREASE: {
                this.ui.lblDesc.text = LanguageManager.Instance.getLanguageText("hallScene.label.txt.12");
                break;
            }
            case SkyDropSheet.CRIT_RATE_INCREASE: {
                this.ui.lblDesc.text = LanguageManager.Instance.getLanguageText("hallScene.label.txt.13");
                break;
            }
            case SkyDropSheet.COIN_OBTAIN_INCREASE: {
                this.ui.lblDesc.text = LanguageManager.Instance.getLanguageText("hallScene.label.txt.14");
                break;
            }
        }
        const numStr = (sheet.num * 100).toString() + "%";
        this.ui.lblNum.text = numStr;
        this.ui.lblDuration.text = (sheet.duration * 0.001).toString();
        this.ui.hbox1.refresh();
        this.ui.hbox2.refresh();
    }
    onHelpBtnClick() {
        if (GlobalConfig.DEBUG) {
            this.success();
        }
        else {
            userData.toShareAd(() => {
                this.success();
            });
        }
    }
    onVideoBtnClick() {
        SDKManager.Instance.showVideoAd(() => {
            this.success();
        }, () => {
            MessageUtils.showMsgTips(LanguageManager.Instance.getLanguageText("hallScene.label.txt.15"));
        }, false);
    }
    success() {
        this.removeSelf();
        SkyDropController.getInstance().postSkyDropPackage();
    }
}
class SkyDropObtainView extends SkyDropView {
    init() {
        this.ui = new ui.common.view.SkyDropObtainViewUI();
        this.addChild(this.ui);
        this.ui.imgCloseBtn.on(Laya.Event.CLICK, this, this.removeSelf);
        this.ui.btnHelp.on(Laya.Event.CLICK, this, this.onHelpBtnClick);
        this.ui.btnVideo.on(Laya.Event.CLICK, this, this.onVideoBtnClick);
    }
    // @ts-ignore
    renew(iconStr, desc) {
        this.ui.imgIcon.skin = iconStr;
        this.ui.lblDesc.text = desc;
    }
}
//# sourceMappingURL=SkyDropController.js.map
/*
* 子弹
*/
class Bullet extends Laya.Sprite {
    constructor() {
        super(...arguments);
        this._skillId = 0; //类型
    }
    //设置子弹类型
    setBulletType(monster) {
        let self = this;
        self._skillId = RandomUtils.rangeInt(1, 3);
        self._bulletImg = new Laya.Image();
        if (monster && monster.monsterInfo) {
            self._bulletImg.skin = PathConfig.GameResUrl.replace("{0}", monster.monsterInfo.buttleName);
        }
        else {
            self._bulletImg.skin = "images/effect_water001.png";
        }
        self.addChild(self._bulletImg);
    }
    //攻击目标
    attackTarget(_targetSp, _collionCallback = null) {
        let that = this;
        let effectSp = that;
        let targetPos = null;
        if (_targetSp.calcuteNextMovePosFun) {
            targetPos = _targetSp.calcuteNextMovePosFun();
        }
        else {
            targetPos = new Laya.Point(_targetSp.x, _targetSp.y);
        }
        //动画
        let timeLine = new Laya.TimeLine();
        timeLine.addLabel("tl1", 0).to(effectSp, { x: targetPos.x - 30, y: targetPos.y - 80 }, 300, Laya.Ease.linearNone);
        if (!timeLine.hasListener(Laya.Event.COMPLETE)) {
            let timeLineHandler = () => {
                //创建动画实例
                let aniData = Bullet.aniTable[that._skillId - 1];
                if (aniData && effectSp.parent) {
                    let effectAni = new Laya.Animation();
                    effectSp.parent.addChild(effectAni);
                    effectAni.zOrder = effectSp.zOrder;
                    // 加载动画图集,加载成功后执行回调方法
                    let aniPath = aniData.aniPath;
                    let aniKey = aniData.aniKey;
                    let aniAtlas = PathConfig.EffectUrl.replace("{0}", aniPath);
                    let aniInterval = 50;
                    let frameCount = aniData.frameCount;
                    effectAni.loadAtlas(aniAtlas, Handler.create(that, () => {
                        //创建动画模板dizziness
                        Laya.Animation.createFrames(AnimationUtils.aniUrls(aniKey, frameCount, aniPath + '/', true), aniPath);
                        //设置坐标
                        let aniGraphics = effectAni.frames[1];
                        if (aniGraphics) {
                            let aniBounds = aniGraphics.getBounds();
                            effectAni.pos(effectSp.x + (effectSp.width - aniBounds.width) / 2 + 20, effectSp.y + (effectSp.height - aniBounds.width) / 2 + 40);
                        }
                        effectAni.interval = aniInterval;
                        effectAni.play(0, false, aniPath);
                    }));
                    effectAni.timerOnce(aniInterval * frameCount, that, () => {
                        effectAni.removeSelf();
                    });
                }
                ;
                effectSp.removeChildren();
                if (_collionCallback && _collionCallback(that._skillId)) {
                    effectSp.removeSelf();
                }
                else {
                    effectSp.removeSelf();
                }
                ObjectPool.push(effectSp);
                timeLine.destroy();
                timeLine = null;
            };
            timeLine.once(Laya.Event.COMPLETE, effectSp, timeLineHandler);
            timeLine.play(0, false);
        }
    }
    //连接目标（雷电专用）
    joinTarget(_targetPos, _collionCallback = null) {
        let that = this;
        let effectSp = that;
        effectSp.loadImage("images/effect_electric002.png");
        effectSp.pivotX = 8;
        effectSp.pivotY = effectSp.height / 2;
        effectSp.rotation = MathUtils.calulatePointAnagle(effectSp.x, effectSp.y, _targetPos.x, _targetPos.y);
        effectSp.scaleX = _targetPos.distance(effectSp.x, effectSp.y) / 100 + 0.1;
        //动画
        let timeLine = new Laya.TimeLine();
        timeLine.addLabel("tl1", 0).to(effectSp, { scaleY: -1 }, 50, Laya.Ease.linearNone)
            .addLabel("tl2", 0).to(effectSp, { scaleY: 1 }, 50, Laya.Ease.linearNone)
            .addLabel("tl3", 0).to(effectSp, { alpha: 0 }, 100, Laya.Ease.linearNone);
        timeLine.once(Laya.Event.COMPLETE, effectSp, () => {
            effectSp.removeChildren();
            if (_collionCallback && _collionCallback(that._skillId)) {
                effectSp.removeSelf();
            }
            else {
                effectSp.removeSelf();
            }
            timeLine.destroy();
            timeLine = null;
        });
        timeLine.play(0, false);
    }
}
Bullet.aniTable = [
    {
        aniPath: "ice",
        aniKey: "s_",
        frameCount: 4
    },
    {
        aniPath: "electric",
        aniKey: "dian_",
        frameCount: 5
    },
    {
        aniPath: "drug",
        aniKey: "du_",
        frameCount: 4
    },
    {
        aniPath: "fireball",
        aniKey: "sw_jz",
        frameCount: 5
    }
];
//# sourceMappingURL=Bullet.js.map
/*
 * terry 2018/10/24;
 * 怪物精灵
 */
class MonsterSprite extends Laya.Sprite {
    constructor() {
        super();
        this.monsterId = 0;
        this.monsterStage = 0; //0未停车/1在车位/2在跑道/3拖动/4宝箱
        this.parkIndex = -1; //车位编号
        this._boxEffectNode = null; //宝箱掉落效果
        this._isLock = false; //是否上锁
        this._isLight = false; //是否高亮
        this.animPreKey = ''; //独立动作名前缀
        this._state = -1; //默认0步行，1为攻击
        this._moveLoopFun = null; //移动函数
        this._moveSpeedRatio = 1; //移动速度倍率
        this._moveAccelerate = 1; //移动速度加速
        this._moveBaseSpeed = 1; //基础移动速度
        this._atkAccelerate = 1; //攻击加速
        this._aniStandFrameStart = 0; //站立
        this.yun_key = "yun_img"; //缓存池管理
        this.yun_key_acce = "yun_img_acce"; //加速度
        this.bornDelayFun = null; //出生延迟函数
        this.curBlood = 1; //当前血量
        this.maxBlood = 1; //最大血量
        this.preHurtBlood = 0; //预扣血量，攻击时恢复为当前血量
        this._isDeath = false; //是否死亡
        this.money = 0; //可掉落金钱
        this.atkValue = 1; //攻击力
        this.atkSpeedValue = 1; //攻击速度
        this.skillId = 0; //技能id
        this._isAtkEnabled = true; //是否有攻击能力
        this.dropMoneyFun = null; //掉落金币回调
        this.calcuteNextMovePosFun = null; //计算下一步移动坐标
        this._level = [12, 14, 16, 18, 20, 22, 24, 26, 28, 30];
        this._isLoadComplete = false;
    }
    //出生
    setBornDelayFun(parentNode, _delayTime, _callback) {
        let that = this;
        if (that.bornDelayFun == null) {
            that._parentNode = parentNode;
            that.bornDelayFun = () => {
                _callback && _callback();
                if (that.bornDelayFun) {
                    that.bornDelayFun = null;
                }
            };
            that.timerOnce(_delayTime, that, that.bornDelayFun);
        }
    }
    clearBornDelayFun() {
        let that = this;
        if (that.bornDelayFun) {
            that.clearTimer(that, that.bornDelayFun);
            that.bornDelayFun = null;
        }
    }
    //设置车类型
    setKind(id, $index = -1) {
        let self = this;
        if (self.isLock())
            return;
        self.monsterId = id;
        if (BattleManager.Instance.getLevel(self.monsterId) > 70) {
            return;
        }
        if ($index >= 0) {
            self.parkIndex = $index; //-1默认不设置
        }
        self._monsterInfo = BattleManager.Instance.getMonsterItem(this.monsterId);
        if (self._monsterInfo) {
            //属性设置
            self.atkValue = MathUtils.parseStringNum(self._monsterInfo.atk);
            self.atkSpeedValue = self._monsterInfo.ias;
            self.skillId = self._monsterInfo.ability;
            self._moveBaseSpeed = self._monsterInfo.mMoveSpeed;
            let aniPath = self._monsterInfo.modelImgUrl;
            let aniFrameKey = self._monsterInfo.modelImgKey;
            self.animPreKey = aniPath + "/" + aniFrameKey;
            let anim = self.getChildByName(MonsterSprite.roleKey);
            if (anim == null) {
                //创建动画实例
                anim = Laya.Pool.getItemByClass(userData.ANIMATION_POOL_NAME, Laya.Animation);
                anim.name = MonsterSprite.roleKey;
                anim.pivot(self._monsterInfo.pivotX, self._monsterInfo.pivotY);
                self.addChild(anim);
            }
            // 加载动画图集,加载成功后执行回调方法
            let aniAtlas = PathConfig.MonsterUrl.replace("{0}", aniPath);
            self._isLoadComplete = false;
            anim.loadAtlas(aniAtlas, Handler.create(self, () => {
                //创建动画模板dizziness
                self._aniStandFrameStart = self._monsterInfo.modelImgWait - (self._monsterInfo.modelImgWait - self._monsterInfo.modelImgAtk);
                if (self._monsterInfo.type == MONSTER_TYPE.MONSTER || self._monsterInfo.type == MONSTER_TYPE.BOSS) {
                    self._aniStandFrameStart = 0;
                }
                Laya.Animation.createFrames(AnimationUtils.heroAniUrls(aniFrameKey, self._aniStandFrameStart, self._monsterInfo.modelImgWait, aniPath + '/', true), (self.animPreKey + MonsterSprite.standAnimKey));
                Laya.Animation.createFrames(AnimationUtils.heroAniUrls(aniFrameKey, 0, self._monsterInfo.modelImgAtk, aniPath + '/'), (self.animPreKey + MonsterSprite.atkAnimKey));
                //设置坐标
                if (anim.frames) {
                    let aniGraphics = anim.frames[1];
                    if (aniGraphics) {
                        let aniBounds = aniGraphics.getBounds();
                        if (self._monsterInfo.type == MONSTER_TYPE.HERO || self._monsterInfo.type == MONSTER_TYPE.SUPER_HERO) { //英雄
                            anim.scaleX = -1;
                            let heroPos = self.getChildByName('heroPos');
                            if (heroPos) {
                                anim.pos(heroPos.x, heroPos.y);
                            }
                        }
                        else if (self._monsterInfo.type == MONSTER_TYPE.BOSS_HERO) { //守护
                            anim.pos((self.width - aniBounds.width) / 2, (self.height - aniBounds.width) / 2 - 60);
                        }
                        else { //敌人
                            anim.pos(0, 0);
                        }
                    }
                }
                self._isLoadComplete = true;
                //重置状态
                self._state = -1;
                //播放站立动画
                self.playAnimation(0);
            }));
        }
        if (self.monsterId > 0) {
            self.setStage(1);
        }
        else {
            self.setStage(0);
        }
    }
    //状态
    playAnimation(state = 0, hero = null, monster = null, attackValue = 0) {
        let self = this;
        if (self._state == state || !self._isLoadComplete) {
            return;
        }
        self._state = state;
        let animName = (self.animPreKey + MonsterSprite.standAnimKey);
        let isLoop = true;
        let aniInterval = 100 * self._atkAccelerate;
        if (self._state == 1) {
            animName = (self.animPreKey + MonsterSprite.atkAnimKey);
            isLoop = false;
            aniInterval = aniInterval / 4;
            //自动复位站立
            if (hero) {
                self.timerOnce(aniInterval * hero.monsterInfo.modelImgAtk, self, () => {
                    self.playAnimation(0);
                });
                //攻击回调
                self.timerOnce(aniInterval * 10, self, self.onAttack, [hero, monster, attackValue]);
            }
            //暂停攻击能力
            if (self.atkSpeedValue > 0) {
                self._isAtkEnabled = false;
                const buff = 1 / (1 + BuffController.getInstance().getBuffValueById(BuffSheet.ATTACK_SPEED_INCREASE));
                self.timerOnce(self.atkSpeedValue * 1000 * (self._atkAccelerate * buff), self, () => {
                    //恢复攻击能力
                    self._isAtkEnabled = true;
                });
            }
        }
        //英雄
        let roleAni = self.getChildByName(MonsterSprite.roleKey);
        if (roleAni) {
            roleAni.interval = aniInterval;
            if (animName == (self.animPreKey + MonsterSprite.standAnimKey)) {
                roleAni.play(self._aniStandFrameStart, isLoop, animName);
            }
            else {
                roleAni.play(0, isLoop, animName);
            }
        }
    }
    onAttack(hero, monster, attackValue) {
        BattleManager.Instance.doPetAttack(hero, monster, attackValue);
        Laya.SoundManager.playSound("musics/atk.mp3");
    }
    //设置车状态(0未停车/1在车位/2在跑道/3拖动)
    setStage(_stage) {
        let that = this;
        if (that.isLock())
            return;
        let imgCar = that.getChildByName('imgCar');
        if (imgCar) {
            imgCar.alpha = 1;
        }
        //carId
        let imgLevel = that.getChildByName('imgLevel');
        if (imgLevel) {
            imgLevel.visible = true;
            imgLevel.zOrder = 10;
            let txtLevel = imgLevel.getChildByName('txtLevel');
            if (txtLevel) {
                txtLevel.changeText('' + BattleManager.Instance.getLevel(that.monsterId));
            }
        }
        that.showCar(true);
        //状态处理
        if (_stage == 1) {
            if (that.monsterStage == 2) {
                // that.removeRunwayCar();
            }
        }
        else if (_stage == 2) {
            let imgCar = that.getChildByName('imgCar');
            if (imgCar) {
                imgCar.alpha = 0.6;
            }
        }
        else if (_stage == 3) {
            let imgCar = that.getChildByName('imgCar');
            if (imgCar) {
                imgCar.alpha = 0.4;
            }
        }
        else if (_stage == 4) {
            //宝箱
            that.showCar(false);
        }
        else {
            that.showCar(false);
        }
        that.monsterStage = _stage;
    }
    //显示或隐藏车
    showCar(_show = true) {
        this.visible = _show;
    }
    //已放入跑道
    isRunning() {
        return (this.monsterStage == 2);
    }
    //可使用
    isEnabled() {
        return (this.monsterStage == 1);
    }
    //是否空车位
    isEmpty() {
        return (this.monsterStage < 1);
    }
    //是否顶级
    isMaxLevel() {
        let that = this;
        return BattleManager.Instance.getLevel(that.monsterId) >= BattleManager.Instance.model.monsterMaxLevel;
    }
    //宝箱(不可交换/合并)
    isBox() {
        return (this.monsterStage == 4);
    }
    //设置锁
    setLock(_lock, index) {
        let that = this;
        let imgLock = that.getChildByName('imgLock');
        if (imgLock) {
            let unlockImg = that.getChildByName('txt_openLevel');
            imgLock.visible = unlockImg.visible = _lock;
            if (imgLock.visible) {
                if (unlockImg && index >= 10) {
                    unlockImg.text = that._level[index - 10] + "关";
                }
            }
        }
        that._isLock = _lock;
    }
    //是否上锁
    isLock() {
        return this._isLock;
    }
    //设置锁
    setLight(_light) {
        let that = this;
        let imgLight = that.getChildByName('imgLight');
        if (imgLight) {
            imgLight.visible = _light;
        }
        that._isLight = _light;
    }
    //是否上锁
    isLight() {
        return this._isLight;
    }
    //播放两车合并效果
    playMergeEffetc(_parentNode, _carId) {
        var that = this;
        //基础节点
        let effectNode = new Laya.Sprite();
        _parentNode.addChild(effectNode);
        let pos = that.localToGlobal(new Laya.Point(that.width / 2, that.height / 2));
        pos = _parentNode.globalToLocal(pos);
        effectNode.pos(pos.x, pos.y);
        that.showCar(false);
        let offsetX = 70;
        let parkcarLeftSp = ObjectPool.pop(MonsterSprite, "NewMonsterSprite");
        effectNode.addChild(parkcarLeftSp);
        parkcarLeftSp.setKind(_carId);
        parkcarLeftSp.anim.pos(0, 0);
        parkcarLeftSp.pos(0, 0);
        Laya.Tween.to(parkcarLeftSp, {
            x: -offsetX
        }, 300, Laya.Ease.elasticOut, Laya.Handler.create(that, () => {
            Laya.Tween.to(parkcarLeftSp, {
                x: 0
            }, 100, Laya.Ease.linearIn, Laya.Handler.create(that, () => {
                effectNode.removeChildren();
                EffectUtils.playCoinEffect(effectNode, 'images/star2.png', {
                    x: 0,
                    y: 0
                }, () => {
                    effectNode.removeSelf();
                });
                if (that.monsterId > 0) {
                    that.showCar(true);
                }
                Laya.Tween.clearTween(parkcarLeftSp);
                ObjectPool.push(parkcarLeftSp);
                parkcarLeftSp.removeSelf();
            }, null, true));
        }));
        //复制品
        let parkcarCopy = ObjectPool.pop(MonsterSprite, "NewMonsterSprite");
        parkcarLeftSp.addChild(parkcarCopy);
        parkcarCopy.setKind(_carId);
        parkcarCopy.anim.pos(0, 0);
        parkcarCopy.pos(0, 0);
        parkcarCopy.anim.scaleX = -1;
        Laya.Tween.to(parkcarCopy, {
            x: offsetX * 2
        }, 300, Laya.Ease.elasticOut, Laya.Handler.create(that, () => {
            Laya.Tween.to(parkcarCopy, {
                x: 0
            }, 100, Laya.Ease.linearIn, Laya.Handler.create(that, () => {
                Laya.Tween.clearTween(parkcarCopy);
                ObjectPool.push(parkcarCopy);
                parkcarCopy.removeSelf();
            }, null, true));
        }));
    }
    //掉落宝箱
    dropBoxEffect(_parentNode) {
        var that = this;
        //基础节点
        let effectNode = new Laya.Sprite();
        _parentNode.addChild(effectNode);
        let pos = that.localToGlobal(new Laya.Point(0, 0));
        pos = _parentNode.globalToLocal(pos);
        effectNode.pos(pos.x + that.width / 2, pos.y + that.height / 2 - 2);
        that.setStage(4);
        let parkcarSp = new MonsterSprite();
        effectNode.addChild(parkcarSp);
        parkcarSp.loadImage("images/drop_box.png", 0, 0, 60, 60);
        parkcarSp.pivot(parkcarSp.width / 2, parkcarSp.height / 2);
        EffectUtils.playBoxDropEffect(effectNode, () => {
            parkcarSp.frameOnce(60, that, () => {
                that.openBoxEffect();
            });
        });
        that._boxEffectNode = effectNode;
    }
    //打开宝箱
    openBoxEffect() {
        var that = this;
        var effectNode = that._boxEffectNode;
        if (effectNode) {
            EffectUtils.playBoxShakeEffect(effectNode, () => {
                effectNode.removeChildren();
                EffectUtils.playCoinEffect(effectNode, 'images/star2.png', {
                    x: 0,
                    y: 0
                }, () => {
                    effectNode.removeChildren();
                    effectNode.removeSelf();
                });
                that.setStage(1);
            });
            that._boxEffectNode = null;
        }
    }
    //获取车配置信息
    getBuyPrice() {
        let carInfo = BattleManager.Instance.getMonsterItem(this.monsterId);
        if (carInfo) {
            return carInfo.buyPrice;
        }
        return 0;
    }
    getSellPrice() {
        return this.getBuyPrice() * 0.8;
    }
    getIncomePerSecond() {
        // let carInfo = BattleManager.Instance.getMonsterItem(this.monsterId);
        // if (carInfo) {
        //     return carInfo.PerSecCoin;
        // }
        return 0;
    }
    //是否相同等级
    isSameLevel(_carId) {
        let that = this;
        let mLevel = BattleManager.Instance.getLevel(that.monsterId);
        if (mLevel > 0) {
            return mLevel == BattleManager.Instance.getLevel(_carId);
        }
        return false;
    }
    //显示血量(_hurtBlood:伤害血量, _maxBlood:总血量)
    updateBlood(_hurtBlood, _maxBlood = 0, _isDoubleHurt = false) {
        let self = this;
        let hurtBlood = _hurtBlood;
        if (_isDoubleHurt) {
            hurtBlood *= 2;
        }
        if (_maxBlood > 0) {
            self.maxBlood = _maxBlood;
            self.curBlood = self.maxBlood;
        }
        else {
            self.curBlood -= hurtBlood;
            if (self.curBlood < 0) {
                self.curBlood = 0;
            }
        }
        self.resetLeftBlood();
        let bloodBarKey = "bloodBar";
        let bloodBar = self.getChildByName(bloodBarKey);
        if (bloodBar == null) {
            bloodBar = new Laya.ProgressBar("images/game_blood.png");
            bloodBar.name = bloodBarKey;
            self.addChild(bloodBar);
            bloodBar.pos(-76 / 2, -200 / 2);
            bloodBar.width *= 0.8;
        }
        bloodBar.value = self.curBlood / self.maxBlood;
        bloodBar.visible = self.curBlood < self.maxBlood;
        let isDeath = self.curBlood <= 0;
        if (self._isDeath == false && isDeath) {
            //死亡状态切换
            self._isDeath = isDeath;
            self.stopMoveAction();
            self.clearBornDelayFun();
            self.showCar(false);
            DisplayUtils.removeFromArray(self, HallManager.Instance.hallData.monsterArray);
            self.dropMoneyFun && self.dropMoneyFun(self.money);
        }
        //飘数字
        if (hurtBlood > 0) {
            EffectUtils.playBloodTextEffect(self._parentNode, "-" + MathUtils.bytesToSize(hurtBlood, true), new Laya.Point(self.x, self.y - 60), _isDoubleHurt);
        }
        //被击效果
        // that.playBehitEffect();
    }
    //预扣血量,判断是否有剩余
    isLeftBlood(_hurtBlood) {
        let that = this;
        if (that.preHurtBlood > 0) {
            that.preHurtBlood -= _hurtBlood;
            return true;
        }
        return false;
    }
    resetLeftBlood() {
        let that = this;
        that.preHurtBlood = that.curBlood;
    }
    //显示冰冻减速
    reduceMoveSpeed(_ratio, _keepTime = 1) {
        let that = this;
        if (that._moveSpeedRatio < 1) {
            return;
        }
        that._moveSpeedRatio = _ratio;
        let effectKey = "iceKey";
        let effectSp = that.getChildByName(effectKey);
        if (effectSp == null) {
            effectSp = Laya.Pool.getItemByClass("layaImage", Laya.Image);
            effectSp.skin = "images/effect_water002.png";
            effectSp.name = effectKey;
            that.addChild(effectSp);
            effectSp.pos(-110 / 2, -120 / 2);
            effectSp.zOrder = -1;
        }
        effectSp.timerOnce(_keepTime * 1000, that, () => {
            Laya.Pool.recover("layaImage", effectSp);
            effectSp.removeSelf();
            that._moveSpeedRatio = 1;
        });
    }
    //显示中毒效果
    showDrug(_hurtValue, _hurtTimes) {
        let that = this;
        let effectKey = "drugKey";
        let effectSp = that.getChildByName(effectKey);
        if (effectSp == null) {
            effectSp = Laya.Pool.getItemByClass("layaImage", Laya.Image);
            effectSp.skin = "images/effect_drug002.png";
            effectSp.name = effectKey;
            that.addChild(effectSp);
            effectSp.pos(-75 / 2, -170 / 2);
            //特效
            let actionSp = effectSp;
            if (actionSp) {
                let timeLine = Laya.Pool.getItemByClass("timeLine", Laya.TimeLine);
                timeLine.addLabel("tl1", 0).to(actionSp, {
                    alpha: 0.8
                }, 100, Laya.Ease.linearNone)
                    .addLabel("tl2", 100).to(actionSp, {
                    alpha: 1
                }, 200, Laya.Ease.linearNone);
                timeLine.once(Laya.Event.COMPLETE, actionSp, () => {
                    timeLine.destroy();
                    timeLine = null;
                });
                timeLine.play(0, true);
            }
        }
        effectSp.timerOnce(1000, that, (_hurtTimes2) => {
            that.updateBlood(_hurtValue);
            Laya.Pool.recover("layaImage", effectSp);
            effectSp.removeSelf();
            if (_hurtTimes2 > 1) {
                that.showDrug(_hurtValue, _hurtTimes2);
            }
        }, [_hurtTimes - 1]);
    }
    //被击效果
    playBehitEffect() {
        let that = this;
        //特效
        let actionSp = that;
        if (actionSp) {
            let timeLine = Laya.Pool.getItemByClass("timeLine", Laya.TimeLine);
            timeLine.addLabel("tl1", 0).to(actionSp, {
                scaleX: 0.9
            }, 100, Laya.Ease.linearNone)
                .addLabel("tl2", 100).to(actionSp, {
                scaleX: 1
            }, 200, Laya.Ease.linearNone);
            timeLine.once(Laya.Event.COMPLETE, actionSp, () => {
                // actionSp.removeSelf();
            });
            timeLine.play(0, false);
        }
    }
    //是否活着
    isLiving() {
        let that = this;
        return (that.monsterId > 0) && (that.isDeath() == false);
    }
    //是否死亡
    isDeath() {
        let that = this;
        return that._isDeath;
    }
    getBloodValue() {
        let that = this;
        return that.curBlood;
    }
    getAtkValue() {
        let that = this;
        return that.atkValue;
    }
    isAtkEnabled() {
        let that = this;
        return (that.monsterId > 0 && that._isAtkEnabled);
    }
    getSkillId() {
        let that = this;
        return that.skillId;
    }
    //重置攻击频率
    setAtkSpeedValue(_value) {
        let that = this;
        that.atkSpeedValue = _value;
    }
    //清空状态数据
    clearStage() {
        this.setKind(0);
        this.setStage(0);
        this.showCar(false);
    }
    //设置拖动
    onStartDrag(_isUpRemove = false) {
        this.startDrag();
        if (_isUpRemove) {
            this.on(Laya.Event.MOUSE_UP, this, (e = null) => {
                this.removeSelf();
            });
        }
    }
    //移动
    playMoveAction() {
        let that = this;
        let spPos = {
            x: that.x,
            y: that.y
        };
        let targetPosArray = [{
                x: spPos.x + 140,
                y: spPos.y
            },
            {
                x: spPos.x + 140,
                y: spPos.y + 470
            },
            {
                x: spPos.x + 700,
                y: spPos.y + 470
            },
            {
                x: spPos.x + 700,
                y: spPos.y - 230
            },
            {
                x: spPos.x + 300,
                y: spPos.y - 230
            },
            {
                x: spPos.x + 270,
                y: spPos.y - 400
            }
        ];
        //移动速度
        let moveSpeed = that._moveBaseSpeed * 0.04;
        that._targetIndex = 0;
        let zOrderTime = 60; //层刷新时间
        let moveTime = zOrderTime - 1; //移动时间
        that._moveLoopFun = () => {
            if (that._targetIndex >= targetPosArray.length)
                return;
            let targetPos = targetPosArray[that._targetIndex];
            let curPos = new Laya.Point(that.x, that.y);
            let disX = targetPos.x - curPos.x;
            let disY = targetPos.y - curPos.y;
            let distance = curPos.distance(targetPos.x, targetPos.y);
            let ratio = moveSpeed / distance * that._moveSpeedRatio * that._moveAccelerate;
            if (distance < (ratio + 1)) {
                that._targetIndex++;
                return;
            }
            switch (that._targetIndex) {
                case 0:
                case 1:
                case 2:
                    that.scaleX = -1;
                    that.changeBloodBarDir();
                    break;
                default:
                    that.scaleX = 1;
                    break;
            }
            let movePosX = disX * ratio;
            let movePosY = disY * ratio;
            that.pos(curPos.x + movePosX, curPos.y + movePosY);
            //zorder
            if (moveTime > zOrderTime) {
                moveTime = 0;
                that.zOrder = Math.floor(curPos.y);
            }
            else {
                moveTime++;
            }
        };
        that.timerLoop(10, that, that._moveLoopFun);
        //计算下一步移动坐标
        that.calcuteNextMovePosFun = () => {
            if (that._targetIndex >= targetPosArray.length) {
                return new Laya.Point(that.x, that.y);
            }
            let targetPos = targetPosArray[that._targetIndex];
            let curPos = new Laya.Point(that.x, that.y);
            let disX = targetPos.x - curPos.x;
            let disY = targetPos.y - curPos.y;
            let distance = curPos.distance(targetPos.x, targetPos.y);
            let ratio = moveSpeed / distance * that._moveSpeedRatio * that._moveAccelerate;
            let movePosX = disX * ratio;
            let movePosY = disY * ratio;
            return new Laya.Point(curPos.x + movePosX, curPos.y + movePosY);
        };
    }
    /** 更改血量的方向 */
    changeBloodBarDir() {
        let that = this;
        let bloodBar = that.getChildByName("bloodBar");
        bloodBar.scaleX = -1;
        bloodBar.x = (-76 / 2) + bloodBar.width;
    }
    //停止移动
    stopMoveAction() {
        let that = this;
        if (that._moveLoopFun) {
            that.clearTimer(that, that._moveLoopFun);
            that._moveLoopFun = null;
        }
        Laya.Pool.clearBySign(that.yun_key);
        Laya.Pool.clearBySign(that.yun_key_acce);
    }
    setMoveSpeedRatio(_value) {
        this._moveSpeedRatio = _value * 0.13;
    }
    setMoveAccelerate(_value) {
        let that = this;
        that._moveAccelerate = _value;
    }
    setAtkAccelerate(_value) {
        let that = this;
        that._atkAccelerate = 1.0 / _value;
    }
    setDropMoneyFun(_fun) {
        this.dropMoneyFun = _fun;
    }
    setDropMoney(_money) {
        this.money = _money;
    }
    get monsterInfo() {
        return this._monsterInfo;
    }
    get anim() {
        return this.getChildByName(MonsterSprite.roleKey);
    }
    set anim(value) {
        let heroAnim = this.getChildByName(MonsterSprite.roleKey);
        heroAnim = value;
    }
    get targetIndex() {
        return this._targetIndex;
    }
    set targetIndex(value) {
        this._targetIndex = value;
    }
    //##贝塞尔曲线#################################
    // 以控制点cp计算曲线点
    CalculateBeizer(cp, numOfPoints) {
        var t = 1.0 / (numOfPoints - 1);
        var curve = [];
        for (var i = 0; i < numOfPoints; i++) {
            curve[i] = this.PointOnCubicBezier(cp, i * t);
        }
        return curve;
    }
    // 参数1: 4个点坐标(起点，控制点1，控制点2，终点)  
    // 参数2: 0 <= t <= 1   
    PointOnCubicBezier(cp, t) {
        var tPoint_x = this.MetaComputing(cp[0].x, cp[1].x, cp[2].x, cp[3].x, t);
        var tPoint_y = this.MetaComputing(cp[0].y, cp[1].y, cp[2].y, cp[3].y, t);
        return {
            x: tPoint_x,
            y: tPoint_y
        };
    }
    MetaComputing(p0, p1, p2, p3, t) {
        // 方法一:  
        var a, b, c;
        var tSquare, tCube;
        // 计算多项式系数
        c = 3.0 * (p1 - p0);
        b = 3.0 * (p2 - p1) - c;
        a = p3 - b - c - p0;
        // 计算t位置的点
        tSquare = t * t;
        tCube = t * tSquare;
        return (a * tCube) + (b * tSquare) + (c * t) + p0;
        // 方法二: 原始的三次方公式
        //  number n = 1.0 - t;
        //  return n*n*n*p0 + 3.0*p1*t*n*n + 3.0*p2*t*t*n + p3*t*t*t;
    }
}
//模型
MonsterSprite.roleKey = "role_key";
MonsterSprite.standAnimKey = 'stand'; //站立动画key
MonsterSprite.atkAnimKey = 'attack'; //攻击动画key
var MONSTER_TYPE;
(function (MONSTER_TYPE) {
    MONSTER_TYPE[MONSTER_TYPE["HERO"] = 1] = "HERO";
    MONSTER_TYPE[MONSTER_TYPE["SUPER_HERO"] = 2] = "SUPER_HERO";
    MONSTER_TYPE[MONSTER_TYPE["MONSTER"] = 3] = "MONSTER";
    MONSTER_TYPE[MONSTER_TYPE["BOSS"] = 4] = "BOSS";
    MONSTER_TYPE[MONSTER_TYPE["BOSS_HERO"] = 5] = "BOSS_HERO";
})(MONSTER_TYPE || (MONSTER_TYPE = {}));
//# sourceMappingURL=Monster.js.map
/**
 * json数据解析类
 */
class GlobleData extends Laya.EventDispatcher {
    constructor() {
        super();
        /** json数据是否全部解析完毕 */
        this._hasParasComplete = false;
        this._needParseCount = 0;
        this._currParseCount = 0;
        this._jsonCount = 0;
    }
    setup(callback) {
        let self = this;
        self._callBack = callback;
        self._totalStepCsvList = new TSDictionary();
        GlobleData.AllCacheData = new TSDictionary();
        self.initModel();
        self.initStep();
    }
    initModel() {
        let self = this;
        self._totalStepCsvList.Add(GlobleData.MonsterVO, MonsterVO);
        self._totalStepCsvList.Add(GlobleData.BarrierRewardVO, BarrierRewardVO);
        self._totalStepCsvList.Add(GlobleData.BarrierConfigVO, BarrierConfigVO);
        self._totalStepCsvList.Add(GlobleData.KindLevelConfigVO, KindLevelConfigVO);
        self._totalStepCsvList.Add(GlobleData.SkillConfigVO, SkillConfigVO);
        self._totalStepCsvList.Add(GlobleData.SkillStrengthenVO, SkillStrengthenVO);
        self._totalStepCsvList.Add(GlobleData.TrainDropVO, TrainDropVO);
        self._totalStepCsvList.Add(GlobleData.ItemVO, ItemVO);
    }
    // 解析初始数据表
    initStep() {
        let self = this;
        self._needParseCount = self._totalStepCsvList.GetLenght();
        TimerManager.Instance.doFrame(1, 0, self.onEnterFrameLoader, self);
    }
    onEnterFrameLoader() {
        let self = this;
        if (self._currParseCount >= self._needParseCount) {
            TimerManager.Instance.remove(self.onEnterFrameLoader, self);
            this._hasParasComplete = true;
            if (self._callBack)
                self._callBack();
        }
        else {
            //一次解析两个文件
            self.getCsvFile();
            // self.getCsvFile();
        }
    }
    /** 开始逐个逐个解析JSON文件 */
    getCsvFile() {
        let self = this;
        if (self._jsonCount < self._needParseCount) {
            let key = self._totalStepCsvList.getKeyByIndex(self._jsonCount);
            key = "config/csvJson/" + key;
            key = key.replace('_', '.');
            Laya.loader.load(key, Laya.Handler.create(self, self.onLoaded, [key]), null, Laya.Loader.TEXT);
            self._jsonCount++;
        }
    }
    onLoaded(key) {
        let self = this;
        //替换一个看不见的特殊字符
        let data = Laya.loader.getRes(key);
        // data = data.replace(/[\ufeff]/, "");
        let data_json = JSON.parse(data);
        let csvStr = JSON.stringify(data_json);
        self.starSingleParse(csvStr);
    }
    starSingleParse(csvStr) {
        let self = this;
        let key = self._totalStepCsvList.getKeyByIndex(self._currParseCount);
        let DataClass = self._totalStepCsvList.getValueByIndex(self._currParseCount);
        let dic = CSVParser.ParseJsonData(DataClass, csvStr);
        GlobleData.AllCacheData.Add(key, dic);
        self._currParseCount++;
    }
    /** 获取对应表的指定某条数据 */
    static getData(type, key) {
        let dic = GlobleData.AllCacheData.TryGetValue(type);
        return dic.TryGetValue(key);
    }
    /**
     * 获取对应表的某条数据中指定名字下的数据
     * @param type 那张表
     * @param filterType 某一项名字
     * @param filterValue 值
     * 例如：parseInt(GlobleVOData.getDataByFilter(GlobleVOData.ServerConfigVO, "id", "MAX_MAP_COUNT")[0].value)
     */
    static getDataByFilter(type, filterType, filterValue) {
        let dic = GlobleData.AllCacheData.TryGetValue(type);
        let filterd = dic.TryGetListByCondition((bean) => bean[filterType] == filterValue);
        return filterd;
    }
    /** 获取对应表的所有数据 */
    static getAllValue(type) {
        let dic = GlobleData.AllCacheData.TryGetValue(type);
        return dic.getValues();
    }
    /**
     * 查找对应条件的数据
     */
    static getDataByCondition(type, value) {
        let dic = GlobleData.AllCacheData.TryGetValue(type);
        let arr = dic.TryGetListByCondition(value);
        return arr;
    }
    /** json数据是否全部解析完毕 */
    get hasParasComplete() {
        return this._hasParasComplete;
    }
    static get Instance() {
        if (!this._instance) {
            this._instance = new GlobleData();
        }
        return this._instance;
    }
}
/** 怪物表 */
GlobleData.MonsterVO = "Monster_json";
/** 关卡奖励表 */
GlobleData.BarrierRewardVO = "BarrierReward_json";
/** 关卡配置表 */
GlobleData.BarrierConfigVO = "BarrierConfig_json";
/** 森林王等级配置 */
GlobleData.KindLevelConfigVO = "KindLevelConfig_json";
/** 技能配置 */
GlobleData.SkillConfigVO = "SkillConfig_json";
/** 技能强化配置 */
GlobleData.SkillStrengthenVO = "SkillStrengthen_json";
/** 训练时间掉落表 */
GlobleData.TrainDropVO = "TrainDrop_json";
/** 物品表 */
GlobleData.ItemVO = "Item_json";
//# sourceMappingURL=GlobleData.js.map
class LayerMgr extends EventDispatcher {
    constructor() {
        super(...arguments);
        this._layerCount = 11;
        this._layers = [];
    }
    initLayer(container, designWidth, designHeight) {
        const pixelRatio = Laya.Browser.pixelRatio;
        const clientWidth = Laya.Browser.clientWidth * pixelRatio;
        const clientHeight = Laya.Browser.clientHeight * pixelRatio;
        const adaptScaleX = clientWidth / designWidth;
        const adaptScaleY = clientHeight / designHeight;
        const adaptScale = Math.min(adaptScaleX, adaptScaleY);
        const stageWidth = designWidth * adaptScaleX;
        const stageHeight = designHeight * adaptScaleY;
        let top = 0;
        let left = 0;
        if (adaptScale === adaptScaleX) {
            top = (stageHeight - designHeight * adaptScale) * 0.5;
        }
        else {
            left = (stageWidth - designWidth * adaptScale) * 0.5;
        }
        container.width = stageWidth;
        container.height = stageHeight;
        LayerManager.stageDesignWidth = designWidth;
        LayerManager.stageDesignHeight = designHeight;
        LayerManager.clientWidth = Laya.Browser.clientWidth;
        LayerManager.clientHeight = Laya.Browser.clientHeight;
        LayerManager.adaptScaleX = adaptScaleX;
        LayerManager.adaptScaleY = adaptScaleY;
        LayerManager.adaptScale = adaptScale;
        LayerManager.pixelRatio = pixelRatio;
        LayerManager.top = top;
        LayerManager.left = left;
        LayerManager.clientTop = (top / pixelRatio);
        LayerManager.clientLeft = (left / pixelRatio);
        this.createAllLayers();
        container.addChild(this.getLayerByType(LAYER_TYPE.RENDER_LAYER));
        container.addChild(this.getLayerByType(LAYER_TYPE.NAV_LAYER));
        container.addChild(this.getLayerByType(LAYER_TYPE.FRAME_LAYER));
        container.addChild(this.getLayerByType(LAYER_TYPE.SUB_FRAME_LAYER));
        container.addChild(this.getLayerByType(LAYER_TYPE.ALERT_LAYER));
        container.addChild(this.getLayerByType(LAYER_TYPE.SCREEN_EFFECT_LAYER));
        container.addChild(this.getLayerByType(LAYER_TYPE.ROLL_MSG_LAYER));
        container.addChild(this.getLayerByType(LAYER_TYPE.GUIDE_LAYER));
        container.addChild(this.getLayerByType(LAYER_TYPE.SMALL_LOADING_LAYER));
        container.addChild(this.getLayerByType(LAYER_TYPE.NOTE_LAYER));
        container.addChild(this.getLayerByType(LAYER_TYPE.DEBUG_LAYER));
        for (const layer of this._layers) {
            layer.pos(left, top);
            layer.scale(adaptScale, adaptScale);
        }
    }
    createAllLayers() {
        for (let i = 0; i < this._layerCount; i++) {
            this._layers.push(this.createOnLayer(i));
        }
    }
    createOnLayer(layerType) {
        let layer = new MaskLayer(layerType);
        return layer;
    }
    addToLayer(display, layerType) {
        let layer = this.getLayerByType(layerType);
        layer.maskEnabled = false;
        layer.addChild(display);
    }
    getLayerByType(layerType) {
        for (let i = 0; i < this._layers.length; i++) {
            if (this._layers[i].layerId == layerType) {
                return this._layers[i];
            }
        }
    }
    static get Instance() {
        if (LayerMgr._instance == null) {
            LayerMgr._instance = new LayerMgr();
        }
        return LayerMgr._instance;
    }
}
var LAYER_TYPE;
(function (LAYER_TYPE) {
    LAYER_TYPE[LAYER_TYPE["RENDER_LAYER"] = 0] = "RENDER_LAYER";
    LAYER_TYPE[LAYER_TYPE["NAV_LAYER"] = 1] = "NAV_LAYER";
    LAYER_TYPE[LAYER_TYPE["FRAME_LAYER"] = 2] = "FRAME_LAYER";
    LAYER_TYPE[LAYER_TYPE["SUB_FRAME_LAYER"] = 3] = "SUB_FRAME_LAYER";
    LAYER_TYPE[LAYER_TYPE["ALERT_LAYER"] = 4] = "ALERT_LAYER";
    LAYER_TYPE[LAYER_TYPE["SCREEN_EFFECT_LAYER"] = 5] = "SCREEN_EFFECT_LAYER";
    LAYER_TYPE[LAYER_TYPE["ROLL_MSG_LAYER"] = 6] = "ROLL_MSG_LAYER";
    LAYER_TYPE[LAYER_TYPE["GUIDE_LAYER"] = 7] = "GUIDE_LAYER";
    LAYER_TYPE[LAYER_TYPE["SMALL_LOADING_LAYER"] = 8] = "SMALL_LOADING_LAYER";
    LAYER_TYPE[LAYER_TYPE["NOTE_LAYER"] = 9] = "NOTE_LAYER";
    LAYER_TYPE[LAYER_TYPE["DEBUG_LAYER"] = 10] = "DEBUG_LAYER";
})(LAYER_TYPE || (LAYER_TYPE = {}));
//# sourceMappingURL=LayerMgr.js.map
//# sourceMappingURL=IBaseView.js.map
/**
 *  View基类，继承自Laya.Component
 */
class BaseView extends Laya.View {
    /** 构造函数 */
    constructor($layer, $class, isShowMask = true) {
        super();
        this._resources = null;
        this._myParent = LayerMgr.Instance.getLayerByType($layer);
        this._isInit = false;
        this._isShowMask = isShowMask;
        this._ui = $class;
    }
    /** 获取我的父级 */
    get myParent() {
        return this._myParent;
    }
    /** 添加到父级 */
    addToParent() {
        AlignUtils.setToScreenGoldenPos(this);
        if (this._isShowMask) {
            this._myParent.addChildWithMaskCall(this, null);
        }
        else {
            this._myParent.maskEnabled = false;
            this._myParent.addChild(this);
        }
    }
    /** 初始化UI界面 */
    initUIView() {
        try {
            this._ui = new this._ui();
        }
        catch (error) {
        }
        finally {
            this.addChild(this._ui);
            this.size(this.ui.width, this.ui.height);
        }
    }
    /** 从父级移除 */
    removeFromParent() {
        DisplayUtils.removeFromParent(this);
    }
    /** 对面板进行显示初始化，用于子类继承 */
    initUI() {
        this._isInit = true;
    }
    /** 对面板数据的初始化，用于子类继承 */
    initData() { }
    /** 添加监听事件 */
    addEvents() { }
    /** 移除监听事件 */
    removeEvents() { }
    /** 是否已经初始化 */
    isInit() {
        return this._isInit;
    }
    /** 面板是否显示 */
    isShow() {
        return this.stage != null && this.visible && this._myParent.contains(this);
    }
    /** 面板开启执行函数，用于子类继承 */
    open(...param) { }
    /** 设置是否隐藏 */
    setVisible(value) {
        this.visible = value;
    }
    /** 设置初始加载资源 */
    setResources(resources) {
        this._resources = resources;
    }
    /** 加载面板所需资源 */
    loadResource(loadComplete, initComplete) {
        if (this._resources && this._resources.length > 0) {
            ResUtils.loadGroup(this._resources, () => {
                loadComplete && loadComplete();
                initComplete && initComplete();
            }, this);
        }
        else {
            loadComplete && loadComplete();
            initComplete && initComplete();
        }
    }
    /** 面板关闭执行函数，用于子类继承 */
    close(...param) {
        this.removeEvents();
        SDKManager.Instance.closeBannerAd(true);
    }
    /** 销毁 */
    destroy() {
        this.removeEvents();
        this._myParent = null;
        this._ui.removeSelf();
        this._ui = null;
        SDKManager.Instance.closeBannerAd(true);
    }
    get ui() { return this._ui; }
    set ui(value) { this._ui = value; }
}
//# sourceMappingURL=BaseView.js.map
/*
* 特效工具类;
*/
class EffectUtils extends Laya.Sprite {
    /** 显示训练时间到了的特效 */
    static showTrainingTimeEffect(parentNode) {
        let self = this;
        let img = new Laya.Image("images/gameLastTimeTip.png");
        M.layer.screenEffectLayer.addChild(img);
        img.pos(0 - img.width, (LayerManager.stageDesignHeight - 260) / 2);
        Laya.Tween.to(img, { x: (LayerManager.stageDesignWidth - 260) / 2 }, 250, null, Laya.Handler.create(self, () => {
            Laya.Tween.clearTween(img);
            Laya.Tween.to(img, { x: LayerManager.stageDesignWidth + 260 }, 250, null, Laya.Handler.create(self, () => {
                Laya.Tween.clearTween(img);
                img.removeSelf();
                img = null;
            }, null, true), 850);
        }, null, true));
    }
    /** 对象360°旋转 */
    static objectRotate(parentNode) {
        let rotation = 0;
        if (parentNode.rotation >= 0) {
            rotation = parentNode.rotation + 360;
        }
        return Laya.Tween.to(parentNode, {
            rotation: rotation,
            complete: Handler.create(this, this.objectRotate, [parentNode]),
        }, 1800);
    }
    /** 界面缩放再展开 */
    static viewScaleShow(obj) {
        obj.anchorX = 0.5;
        obj.anchorY = 0.5;
        obj.x = obj.x + obj.width / 2;
        obj.y = obj.y + obj.height / 2;
        Laya.Tween.from(obj, { scaleX: 0.8, scaleY: 0.8 }, 300, Laya.Ease.sineIn, Laya.Handler.create(this, () => {
            Laya.Tween.clearTween(obj);
        }, null, true));
    }
    static playCoinEffect(_parentNode, _imgUrl, _offset = { x: 0, y: 0 }, _callback = null) {
        //飘金币
        for (var index = 0; index < 15; index++) {
            let coinSp = Laya.Pool.getItemByClass("p_coin", Laya.Image);
            coinSp.mouseEnabled = false;
            coinSp.mouseThrough = false;
            coinSp.graphics.clear();
            coinSp.loadImage(_imgUrl);
            coinSp.scale(1, 1);
            coinSp.alpha = 1;
            coinSp.pivot(coinSp.width / 2, coinSp.height / 2);
            _parentNode.addChild(coinSp);
            var randX = Math.random() - 0.5;
            var randY = Math.random() - 0.5;
            var cicleX = 10 * Math.cos(index * Math.PI / 7) + 10 * randX;
            var cicleY = 10 * Math.sin(index * Math.PI / 7) + 10 * randY;
            coinSp.pos(_parentNode.width / 2 + cicleX + _offset.x, _parentNode.height / 2 + cicleY + _offset.y);
            var coinPos = { x: (coinSp.x + cicleX * 5), y: (coinSp.y + cicleY * 5) };
            Laya.Tween.to(coinSp, { x: coinPos.x, y: coinPos.y, scaleX: 0.8, scaleY: 0.8, rotation: (randX + randY) * 360 }, 500, Laya.Ease.expoOut);
            coinSp.frameOnce(5, this, (_coinSp, _coinPos) => {
                Laya.Tween.to(_coinSp, { scaleX: 0, scaleY: 0, alpha: 0.2, rotation: (randX + randY) * 360 }, 1000, Laya.Ease.linearNone, Laya.Handler.create(this, (_coinSp) => {
                    _coinSp.removeSelf();
                    _callback && _callback();
                    Laya.Pool.recover("p_coin", _coinSp);
                    Laya.Tween.clearTween(_coinSp);
                }, [_coinSp]));
            }, [coinSp, coinPos]);
        }
    }
    /** 文本上飘特效 */
    static playTextEffect(_parentNode, _content, _pos = null, _fontColor = "#fff1ba") {
        //飘文字
        var coinLabel = ObjectPool.pop(Laya.Label, "LabelColor");
        coinLabel.text = _content;
        coinLabel.fontSize = 30;
        coinLabel.color = _fontColor;
        coinLabel.anchorX = 0.5;
        coinLabel.anchorY = 0.5;
        _parentNode.addChild(coinLabel);
        if (_pos) {
            coinLabel.pos(_pos.x, _pos.y);
        }
        else {
            coinLabel.pos(_parentNode.width / 2, -_parentNode.height / 2);
        }
        Laya.Tween.to(coinLabel, { x: coinLabel.x, y: (coinLabel.y - 70), alpha: 0 }, 2000, Laya.Ease.cubicInOut, Laya.Handler.create(this, (_coinLabel) => {
            ObjectPool.push(_coinLabel);
            _coinLabel.removeSelf();
            Laya.Tween.clearTween(_coinLabel);
        }, [coinLabel]));
    }
    /** 血量特效 */
    static playBloodTextEffect(_parentNode, _content, _pos = null, _isDoubleHurt = false) {
        //飘文字
        if (Math.random() < 0.6)
            return;
        let bloodClip = ObjectPool.pop(Laya.FontClip, "BloodFontClip");
        bloodClip.mouseEnabled = bloodClip.mouseThrough = false;
        bloodClip.skin = "images/blood_num.png";
        bloodClip.sheet = "0123456789ABCDEFGHIJKLMNOPQRSTUVWSYZT";
        bloodClip.alpha = 1;
        bloodClip.value = _content;
        bloodClip.zOrder = _parentNode.zOrder + 1;
        if (_pos) {
            bloodClip.pos(_pos.x - 40, _pos.y);
        }
        else {
            bloodClip.pos(_parentNode.width / 2, -_parentNode.height / 2);
        }
        PointUtils.parentToParent(bloodClip, _parentNode, true);
        _parentNode.addChild(bloodClip);
        if (_isDoubleHurt) {
            bloodClip.skin = "images/crit_num.png";
            //缩放一下
            let timeLine = new Laya.TimeLine();
            timeLine.addLabel("tl1", 0).from(bloodClip, { scaleX: 1.5, scaleY: 1.2 }, 200, Laya.Ease.linearNone)
                .addLabel("tl2", 200).to(bloodClip, { caleX: 1, scaleY: 1, alpha: 0 }, 500, Laya.Ease.cubicInOut);
            timeLine.on(Laya.Event.COMPLETE, bloodClip, () => {
                bloodClip.removeSelf();
                ObjectPool.push(bloodClip);
                timeLine.destroy();
                timeLine = null;
            });
            timeLine.play(0, false);
        }
        else {
            Laya.Tween.to(bloodClip, { y: (bloodClip.y - 70), alpha: 0 }, 2000, Laya.Ease.cubicInOut, Laya.Handler.create(this, (_bloodClip) => {
                _bloodClip.removeSelf();
                ObjectPool.push(_bloodClip);
                Laya.Tween.clearTween(_bloodClip);
            }, [bloodClip]));
        }
    }
    /** 图片+文本上飘的特效 */
    static playImageTextEffect(_parentNode, _imgUrl, _content, _pos = null, _zOrder = 0) {
        //图片
        let coinImg = ObjectPool.pop(Laya.Image, "Image", _imgUrl);
        coinImg.alpha = 1;
        coinImg.anchorX = 0.5;
        coinImg.anchorY = 0.5;
        _parentNode.addChild(coinImg);
        if (_pos) {
            coinImg.pos(_pos.x, _pos.y);
        }
        else {
            coinImg.pos(_parentNode.width / 2, -_parentNode.height / 2);
        }
        if (_zOrder > 0) {
            coinImg.zOrder = _zOrder;
        }
        //飘文字
        var coinLabel = ObjectPool.pop(Laya.Label, "LabelEffect");
        coinLabel.text = _content;
        coinLabel.fontSize = 30;
        coinLabel.color = "#552233";
        coinLabel.anchorY = 0.5;
        coinImg.addChild(coinLabel);
        coinLabel.pos(coinImg.width, coinImg.height * 0.5);
        //动画
        let timeLine = new Laya.TimeLine();
        timeLine.addLabel("tl1", 0).from(coinImg, { scaleX: 0, scaleY: 0, y: (coinImg.y + 30) }, 300, Laya.Ease.linearNone)
            .addLabel("tl2", 500).to(coinImg, { x: coinImg.x, y: (coinImg.y - 50), alpha: 0 }, 1200, Laya.Ease.cubicInOut);
        timeLine.on(Laya.Event.COMPLETE, coinImg, () => {
            ObjectPool.push(coinLabel);
            coinImg.removeChildren();
            coinImg.removeSelf();
            ObjectPool.push(coinImg);
            timeLine.destroy();
            timeLine = null;
        });
        timeLine.play(0, false);
    }
    /** 人物自白弹框效果 */
    static playDialogueEffect(_parentNode, _imgUrl, _content, _pos = null, _zOrder = 0, _isFlipX = false) {
        //图片
        let coinImg = ObjectPool.pop(Laya.Image, "Image", _imgUrl);
        coinImg.alpha = 1;
        coinImg.anchorX = 0;
        coinImg.anchorY = 1;
        _parentNode.addChild(coinImg);
        if (_pos) {
            coinImg.pos(_pos.x, _pos.y);
        }
        else {
            coinImg.pos(_parentNode.width / 2, -_parentNode.height / 2);
        }
        if (_zOrder > 0) {
            coinImg.zOrder = _zOrder;
        }
        //飘文字
        var coinLabel = new Laya.Label();
        coinLabel.text = _content;
        coinLabel.fontSize = 22;
        coinLabel.color = "#000000";
        coinLabel.anchorX = 0.5;
        coinLabel.anchorY = 0.5;
        coinLabel.width = 220;
        coinLabel.height = 100;
        coinLabel.wordWrap = true;
        coinLabel.valign = "middle";
        coinImg.addChild(coinLabel);
        coinLabel.pos(coinImg.width * 0.5, coinImg.height * 0.46);
        //镜像
        if (_isFlipX) {
            coinImg.scaleX = -1;
            coinLabel.scaleX = -1;
        }
        //动画
        let timeLine = new Laya.TimeLine();
        timeLine.addLabel("tl1", 0).from(coinImg, { scaleX: 0, scaleY: 0 }, 300, Laya.Ease.linearNone)
            .addLabel("tl2", 300).to(coinImg, { alpha: 1 }, 1200, Laya.Ease.linearNone)
            .addLabel("tl3", 1500).to(coinImg, { alpha: 0 }, 1000, Laya.Ease.cubicInOut);
        timeLine.on(Laya.Event.COMPLETE, coinImg, () => {
            ObjectPool.push(coinImg);
            coinImg.removeSelf();
            timeLine.destroy();
            timeLine = null;
        });
        timeLine.play(0, false);
    }
    /** 金币雨 */
    static playCoinRainEffect(_imgUrl) {
        for (var index = 0; index < 5; index++) {
            Laya.timer.frameOnce(5, this, () => {
                let coinSp = Laya.Pool.getItemByClass("p_coin_rain", Laya.Image);
                coinSp.graphics.clear();
                coinSp.loadImage(_imgUrl);
                coinSp.pivot(coinSp.width / 2, coinSp.height / 2);
                LayerManager.getInstance().screenEffectLayer.addChild(coinSp);
                coinSp.pos(Math.random() * 8 * (LayerManager.stageDesignWidth / 8) + Math.random() * 100, Math.random() * 500 - 300);
                Laya.Tween.to(coinSp, { x: coinSp.x, y: LayerManager.stageDesignHeight + 300 }, 3000, Laya.Ease.linearNone, Handler.create(this, (_coinSp) => {
                    _coinSp.removeSelf();
                    Laya.Pool.recover("p_coin_rain", _coinSp);
                }, [coinSp]));
            });
        }
    }
    //宝箱掉落动效
    static playBoxDropEffect(_effectNode, _callback = null) {
        let boxAnimation = (target, onEvtFinish) => {
            let timeLine = new Laya.TimeLine();
            let nodePos = { x: _effectNode.x, y: _effectNode.y };
            timeLine.addLabel("tl1", 0).from(target, { y: nodePos.y - 1000 }, 1000, Laya.Ease.cubicIn)
                .addLabel("tl2", 1100).to(target, { y: nodePos.y - 80 }, 100, Laya.Ease.circOut)
                .addLabel("tl3", 2100).to(target, { y: nodePos.y }, 500, Laya.Ease.bounceOut);
            if (onEvtFinish != null) {
                timeLine.on(Laya.Event.COMPLETE, target, () => {
                    onEvtFinish();
                    timeLine.destroy();
                    timeLine = null;
                });
            }
            timeLine.play(0, false);
        };
        boxAnimation(_effectNode, _callback);
    }
    //宝箱缩放效果
    static playBoxScaleEffect(_effectNode, _callback = null) {
        let boxAnimation = (target, onEvtFinish) => {
            let timeLine = new Laya.TimeLine();
            let dtime = 80;
            timeLine.addLabel("tl1", 0).to(target, { scaleX: 1.5, scaleY: 0.9 }, dtime, Laya.Ease.backInOut)
                .addLabel("tl2", 100).to(target, { scaleX: 1.1, scaleY: 1.0 }, dtime, Laya.Ease.backInOut)
                .addLabel("tl3", 200).to(target, { scaleX: 1.3, scaleY: 0.95 }, dtime, Laya.Ease.backInOut)
                .addLabel("tl4", 300).to(target, { scaleX: 1.0, scaleY: 1.0 }, dtime, Laya.Ease.backInOut);
            if (onEvtFinish != null) {
                timeLine.on(Laya.Event.COMPLETE, target, () => {
                    onEvtFinish();
                    timeLine.destroy();
                    timeLine = null;
                });
            }
            timeLine.play(0, false);
        };
        boxAnimation(_effectNode, _callback);
    }
    //宝箱抖动效果
    static playBoxShakeEffect(_effectNode, _callback = null) {
        let boxAnimation = (target, onEvtFinish) => {
            let timeLine = new Laya.TimeLine();
            let nodePos = { x: _effectNode.x, y: _effectNode.y };
            let dtime = 50;
            timeLine.addLabel("tl1", 0).to(target, { x: nodePos.x + 8, y: nodePos.y + 2 }, dtime, Laya.Ease.bounceInOut)
                .addLabel("tl2", dtime).to(target, { x: nodePos.x - 8, y: nodePos.y - 1 }, dtime, Laya.Ease.bounceInOut)
                .addLabel("tl3", 2 * dtime).to(target, { x: nodePos.x + 8, y: nodePos.y + 1 }, dtime, Laya.Ease.bounceInOut)
                .addLabel("tl4", 3 * dtime).to(target, { x: nodePos.x, y: nodePos.y }, dtime, Laya.Ease.bounceInOut)
                .addLabel("tl5", 4 * dtime).to(target, { x: nodePos.x, y: nodePos.y }, dtime, Laya.Ease.bounceInOut)
                .addLabel("hide1", 5 * dtime).to(target, { alpha: 0 }, dtime)
                .addLabel("show1", 6 * dtime).to(target, { alpha: 100 }, dtime);
            if (onEvtFinish != null) {
                timeLine.on(Laya.Event.COMPLETE, target, () => {
                    onEvtFinish();
                    timeLine.destroy();
                    timeLine = null;
                });
            }
            timeLine.play(0, false);
        };
        boxAnimation(_effectNode, _callback);
    }
    /** 闪烁效果 */
    static playTwinkleEffect(_effectNode, _callback = null, _loop = false) {
        let boxAnimation = (target, onEvtFinish) => {
            let timeLine = new Laya.TimeLine();
            timeLine.addLabel("hide1", 0).to(target, { alpha: 0 }, 100)
                .addLabel("show1", 100).to(target, { alpha: 100 }, 100)
                .addLabel("hide2", 200).to(target, { alpha: 0 }, 100)
                .addLabel("show2", 300).to(target, { alpha: 100 }, 100);
            if (onEvtFinish != null) {
                timeLine.on(Laya.Event.COMPLETE, target, () => {
                    onEvtFinish();
                    timeLine.destroy();
                    timeLine = null;
                });
            }
            timeLine.play(0, _loop);
        };
        boxAnimation(_effectNode, _callback);
    }
    //加载效果
    static showWaitEffect(content, useMask) {
        EffectUtils.stopWaitEffect();
        let waitNode = new Laya.View();
        waitNode.name = EffectUtils.waitEffectName;
        //定时自动移除
        waitNode.timerOnce(12000, this, EffectUtils.stopWaitEffect);
        //车
        let waittingBgSp = new Laya.Image("loading/loading02.png");
        waittingBgSp.visible = false;
        waittingBgSp.anchorX = 0.5;
        waittingBgSp.anchorY = 0.5;
        waitNode.addChild(waittingBgSp);
        waitNode.width = Math.max(waitNode.width, waittingBgSp.displayWidth);
        waitNode.height = Math.max(waitNode.height, waittingBgSp.displayHeight);
        //圈
        let waittingSp = new Laya.Image("loading/loading01.png");
        waittingSp.anchorX = 0.5;
        waittingSp.anchorY = 0.5;
        let timeLine = new Laya.TimeLine();
        timeLine.addLabel("tl1", 0).to(waittingSp, { rotation: 360 }, 800);
        timeLine.play(0, true);
        waitNode.addChild(waittingSp);
        waitNode.width = Math.max(waitNode.width, waittingSp.displayWidth);
        waitNode.height = Math.max(waitNode.height, waittingSp.displayHeight);
        //字
        if (content) {
            let txtLabel = new Laya.Label(content);
            txtLabel.fontSize = 32;
            txtLabel.color = "#FFFFFF";
            txtLabel.width = 320;
            txtLabel.height = 80;
            txtLabel.wordWrap = true;
            txtLabel.pos(waittingSp.x - txtLabel.width * 0.5, waittingSp.y + waittingSp.height * 0.5);
            txtLabel.align = "center";
            txtLabel.valign = "middle";
            waitNode.addChild(txtLabel);
        }
        AlignUtils.setToScreenGoldenPos(waitNode, 0, true);
        M.layer.smallLoadingLayer.maskAlpha = useMask ? MaskLayer.DEFAULT_MASK_ALPHA : 0;
        M.layer.smallLoadingLayer.addChild(waitNode);
    }
    static stopWaitEffect() {
        let waittingSp = M.layer.smallLoadingLayer.getChildByName(EffectUtils.waitEffectName);
        if (waittingSp) {
            waittingSp.clearTimer(this, EffectUtils.stopWaitEffect);
            waittingSp.removeSelf();
        }
    }
}
EffectUtils.waitEffectName = "waitEffect";
var EFFECT_TYPE;
(function (EFFECT_TYPE) {
    /** 金币 */
    EFFECT_TYPE[EFFECT_TYPE["GOLD"] = 0] = "GOLD";
    /** 钻石 */
    EFFECT_TYPE[EFFECT_TYPE["DIAMOND"] = 1] = "DIAMOND";
    /** 精华 */
    EFFECT_TYPE[EFFECT_TYPE["ESSENCE"] = 2] = "ESSENCE";
})(EFFECT_TYPE || (EFFECT_TYPE = {}));
//# sourceMappingURL=EffectUtils.js.map
/**
 * 物品飞入特效
 */
class FlyEffect extends Sprite {
    constructor() {
        super();
        this._animationName = "rollingCoin";
        this._anims = [];
    }
    play(animationName, fromX, fromY, toX = 38, toY = 42) {
        this._animNum = 0;
        this._animLen = 7;
        this._animationName = animationName;
        this.createAnim(fromX, fromY, toX, toY);
        Laya.timer.frameLoop(1, this, this.onLoop);
        return this;
    }
    createAnim(fromX, fromY, toX, toY) {
        this._animNum++;
        let anim = ObjectPool.pop(Laya.Animation, "FLY_ANIMATION"); // PoolManager.getInstance().get(Laya.Animation, this._animationName);
        // @ts-ignore
        // if (!anim.url_loaded) {
        // @ts-ignore
        // anim.url_loaded = true;
        anim.loadAtlas("images/effect/" + this._animationName + ".json");
        anim.interval = 25;
        // }
        const scale = Math.random() * 0.15 + 0.65;
        anim.pivot(30, 30).pos(fromX + RandomUtils.rangeInt(5, 10), fromY + RandomUtils.rangeInt(5, 10)).scale(scale, scale);
        anim.play(0, true);
        anim.alpha = 1;
        const iX = fromX + Math.random() * (toX - fromX);
        const iY = fromY + Math.random() * (toY - fromY);
        const points = [];
        points.push(new Point(anim.x, anim.y));
        points.push(new Point(iX, iY));
        points.push(new Point(toX, toY));
        // prettier-ignore
        const path = PathUtils.CreateBezierPoints(points, RandomUtils.rangeInt(25, 40));
        // @ts-ignore
        anim.path = path;
        // @ts-ignore
        anim.pathLength = path.length - 1;
        // @ts-ignore
        anim.pathIndex = 0;
        this.addChild(anim);
        this._anims.push(anim);
        if (this._animNum < this._animLen) {
            // prettier-ignore
            Laya.timer.frameOnce(RandomUtils.rangeInt(4, 12), this, this.createAnim, [fromX, fromY, toX, toY]);
        }
    }
    onLoop() {
        let len = this._anims.length;
        for (let i = 0; i < len; i++) {
            const anim = this._anims[i];
            // @ts-ignore
            const idx = anim.pathIndex++;
            // @ts-ignore
            if (idx === anim.pathLength) {
                this._anims.splice(i, 1);
                this.onAnimComplete(anim);
                i--;
                len--;
            }
            else {
                // @ts-ignore
                const point = anim.path[idx];
                anim.pos(point.x, point.y);
            }
        }
    }
    onAnimComplete(anim) {
        if (anim) {
            anim.stop();
            anim.removeSelf();
            ObjectPool.push(anim);
            // PoolManager.getInstance().return(anim, this._animationName);
        }
        if (this.numChildren <= 0) {
            Laya.timer.clear(this, this.onLoop);
            this.destroy(true);
        }
    }
}
//# sourceMappingURL=FlyEffect.js.map
/*
* 战斗管理类;
*/
class BattleManager extends Laya.EventDispatcher {
    constructor() {
        super(...arguments);
        this._maxSection = 10;
        /** 最大关卡 */
        this._maxBarrier = 120;
    }
    setup() {
        let self = this;
        self._model = new BattleModel();
        self._model.attackValueBuff = BuffController.getInstance().getBuffValueById(BuffSheet.ATTACK_VALUE_INCREASE);
        self._model.critRateBuff = BuffController.getInstance().getBuffValueById(BuffSheet.CRIT_RATE_INCREASE);
    }
    startBattle() {
        let self = this;
        if (!TimerManager.Instance.isExists(self.onEnterFrame, self)) {
            TimerManager.Instance.doFrame(2, 0, self.onEnterFrame, self);
        }
    }
    onEnterFrame() {
        let self = this;
        //怪物状态
        self.doMonsterState();
        //森林王状态
        self.doKingPetState();
        //执行当场游戏的状态
        self.doGameState();
        //上传数据
        self.doDataToServerAndSave();
        //刷新广告
        self.doRefreshAdv();
    }
    /** 怪物当前状态 */
    doMonsterState() {
        let self = this;
        petLoop: for (let index = 0; index < HallManager.Instance.hallData.parkMonsterCount; index++) {
            let element = self._hallScene.carparkList.getCell(index);
            if (element) {
                let hero = element.getChildByName('car');
                if (hero && hero.isAtkEnabled()) {
                    hero.setAtkAccelerate(HallManager.Instance.hallData.userAcceValue); //是否启动加速
                    if (HallManager.Instance.hallData.gameStatus > 0) {
                        const originAttakValue = hero.getAtkValue();
                        let heroAttackValue = originAttakValue * (1 + self._model.attackValueBuff);
                        //森林王加成
                        let kingLevel = userData.getKingLevel();
                        let kingVO = GlobleData.getData(GlobleData.KindLevelConfigVO, kingLevel);
                        self._model.kingDoubleAdd = 0;
                        if (kingVO) {
                            let atkAdd = kingVO.shatk * kingLevel;
                            self._model.kingDoubleAdd = kingVO.crit * kingLevel;
                            heroAttackValue += originAttakValue * (atkAdd);
                        }
                        let random = Math.random();
                        self._model.livingIndex = 0;
                        for (let mIndex = 0; mIndex < HallManager.Instance.hallData.monsterArray.length; mIndex++) {
                            let monsterSp = HallManager.Instance.hallData.monsterArray[HallManager.Instance.hallData.monsterArray.length - 1 - mIndex];
                            let curRate = 1;
                            if (monsterSp && monsterSp.isLiving()) {
                                self._model.livingIndex++;
                                if (self._model.livingCount > 0 && self._model.livingIndex > 0) {
                                    curRate = Math.pow(self._model.livingIndex, 3) / Math.pow(self._model.livingCount, 3);
                                }
                                if (random <= curRate) {
                                    if (hero) {
                                        if (hero.anim && monsterSp) {
                                            hero.anim.scaleX = monsterSp.targetIndex == 4 ? -1 : monsterSp.scaleX;
                                        }
                                        hero.playAnimation(1, hero, monsterSp, heroAttackValue);
                                        break petLoop;
                                    }
                                }
                            }
                        }
                        ;
                    }
                }
            }
        }
    }
    /** 英雄攻击 */
    doPetAttack(pet, monster, attackValue) {
        let self = this;
        //触发攻击技能
        let petButtle = ObjectPool.pop(Bullet, "Buttle");
        petButtle.alpha = 1;
        petButtle.scaleX = petButtle.scaleY = 0.6;
        self._hallScene.roadView.addChild(petButtle);
        petButtle.zOrder = monster.zOrder + 1;
        petButtle.setBulletType(pet);
        let effectPos = self._hallScene.roadView.globalToLocal(pet.localToGlobal(new Laya.Point(0, 0)));
        petButtle.pos(effectPos.x + 20, effectPos.y + 30);
        petButtle.rotation = ObjectUtils.getAngle(effectPos, new Laya.Point(monster.x, monster.y));
        petButtle.attackTarget(monster, (_skillId) => {
            let skillCfg = null;
            let isDoubleHurt = false;
            let isSkillTrigger = false;
            if (_skillId > 0) {
                skillCfg = GlobleData.getData(GlobleData.SkillConfigVO, _skillId);
                if (skillCfg) {
                    const critRate = (skillCfg.triggerPro + self._model.kingDoubleAdd) * (1 + self._model.critRateBuff);
                    isDoubleHurt = Math.random() < critRate;
                    isSkillTrigger = Math.random() < userData.getSkillAdditionProbability(_skillId);
                }
            }
            //击中回调
            monster.updateBlood(attackValue, 0, isDoubleHurt);
            //是否buff效果
            self.doMonsterBuff(skillCfg, monster, isSkillTrigger, attackValue);
        });
    }
    /** 怪物BUFF效果 */
    doMonsterBuff(skillCfg, monster, isSkillTrigger, attackValue) {
        let self = this;
        if (skillCfg && isSkillTrigger) {
            if (skillCfg.reduceSpeed > 0) { //减速
                monster.reduceMoveSpeed(skillCfg.reduceSpeed, skillCfg.reduceSpeedTime);
            }
            if (skillCfg.twoInjury > 0) { //二次伤害
                monster.showDrug(attackValue, skillCfg.twoInjury);
            }
            if (skillCfg.attackTwo > 0) { //雷电连击
                let lineNum = 0;
                for (let k = 0; k < HallManager.Instance.hallData.monsterArray.length; k++) {
                    let monsterItem = HallManager.Instance.hallData.monsterArray[k];
                    if (monster == monsterItem) {
                        lineNum = skillCfg.attackTwo;
                    }
                    else if (monsterItem && lineNum > 0 && monsterItem.isLiving()) {
                        lineNum--;
                        let effectSp2 = Laya.Pool.getItemByClass(userData.MONSTER_BULLET, Bullet);
                        self._hallScene.roadView.addChild(effectSp2);
                        effectSp2.zOrder = monster.zOrder;
                        effectSp2.pos(monster.x, monster.y - 30);
                        effectSp2.joinTarget(new Laya.Point(monsterItem.x, monsterItem.y - 30));
                        monsterItem.updateBlood(attackValue);
                        monster = monsterItem;
                    }
                }
            }
        }
    }
    /** 森林王英雄的攻击处理 */
    doKingPetState() {
        let self = this;
        if (HallManager.Instance.hallData.gameStatus > 0) {
            let kingPet = self._hallScene.spMountGuard;
            if (kingPet && kingPet.isAtkEnabled()) {
                kingPet.setAtkAccelerate(HallManager.Instance.hallData.userAcceValue); //是否启动加速
                if (HallManager.Instance.hallData.monsterArray && HallManager.Instance.hallData.gameStatus > 0) {
                    let atkValue = kingPet.getAtkValue();
                    //森林王专属
                    let kingLevel = userData.getKingLevel();
                    let kingVO = GlobleData.getData(GlobleData.KindLevelConfigVO, kingLevel);
                    if (kingVO) {
                        atkValue = kingVO.attack;
                        kingPet.setAtkSpeedValue(kingVO.interval);
                    }
                    let random = Math.random();
                    for (var mIndex = 0, len = HallManager.Instance.hallData.monsterArray.length; mIndex < len; mIndex++) {
                        let monsterSp = HallManager.Instance.hallData.monsterArray[len - 1 - mIndex];
                        let curRate = 1;
                        if (monsterSp && monsterSp.isLiving()) {
                            self._model.livingIndex++;
                            if (self._model.livingCount > 0 && self._model.livingIndex > 0) {
                                curRate = Math.pow(self._model.livingIndex, 3) / Math.pow(self._model.livingCount, 3);
                            }
                            if (random <= curRate) {
                                kingPet.playAnimation(1, kingPet, monsterSp, atkValue);
                                break;
                            }
                        }
                    }
                    ;
                }
            }
        }
    }
    /** 执行当场游戏的状态 */
    doGameState() {
        let self = this;
        if (HallManager.Instance.hallData.gameStatus > 0) {
            let imgDest = self._hallScene.imgDestination;
            let isAllDeath = true; //是否所有怪物已被消灭
            self._model.livingCount = 0;
            if (HallManager.Instance.hallData.monsterArray && imgDest) {
                let sprintArea = new Laya.Rectangle(imgDest.x, imgDest.y, imgDest.width, imgDest.height);
                for (let index = 0; index < HallManager.Instance.hallData.monsterArray.length; index++) {
                    let monsterSp = HallManager.Instance.hallData.monsterArray[index];
                    if (HallManager.Instance.hallData.gameStatus > 0 && monsterSp) {
                        if (!monsterSp.isDeath()) {
                            isAllDeath = false;
                            self._model.livingCount++;
                            monsterSp.setMoveAccelerate(HallManager.Instance.hallData.userAcceValue); //是否启动加速
                            if (sprintArea.contains(monsterSp.x + 30, monsterSp.y - 10)) {
                                HallManager.Instance.hallData.gameStatus = 0;
                                //停止并移除所有怪物
                                self.removeAllMonster();
                                BattleManager.Instance.event(BattleEventsConst.BATTLE_NO_CLEARANC);
                                break;
                            }
                        }
                    }
                }
                ;
            }
            //消灭所有怪物，通关
            if (isAllDeath && HallManager.Instance.hallData.monsterArray.length <= 0) {
                HallManager.Instance.hallData.gameStatus = 0;
                //停止并移除所有怪物
                self.removeAllMonster();
                BattleManager.Instance.event(BattleEventsConst.BATTLE_CLEARANC);
            }
        }
    }
    /** 保存缓存数据并上传服务器 */
    doDataToServerAndSave() {
        let self = this;
        if (self._model.saveTime > 1000) {
            self._model.saveTime = 0;
            if (userData) {
                userData.saveLocal(true);
            }
        }
        self._model.saveTime++;
    }
    /** 刷新广告Banner */
    doRefreshAdv() {
        let self = this;
        if (self._model.refreshAdvTime > 60 * 180) {
            self._model.refreshAdvTime = 0;
            // CommonFun.showBannerAd(false, self.mainView.y);
        }
        self._model.refreshAdvTime++;
    }
    /** 创建英雄 */
    createPet(iKind, isBackward = false) {
        let self = this;
        if (self.hallScene.carparkList) {
            return HallManager.Instance.createPet(self.hallScene.carparkList, iKind, isBackward);
        }
        return null;
    }
    /** 英雄加速 */
    doPetAccelerate(petList) {
        if (!petList)
            return;
        for (let index = 0; index < HallManager.Instance.hallData.parkMonsterCount; index++) {
            let element = petList.getCell(index);
            if (element) {
                let carParkSp = element.getChildByName('car');
                if (carParkSp && carParkSp.isLiving()) {
                    carParkSp.setAtkAccelerate(HallManager.Instance.hallData.userAcceValue);
                }
            }
        }
    }
    /** 怪物加速 */
    doMonsterAccelerate() {
        if (HallManager.Instance.hallData.monsterArray) {
            for (var index = 0; index < HallManager.Instance.hallData.monsterArray.length; index++) {
                var monsterSp = HallManager.Instance.hallData.monsterArray[index];
                if (monsterSp && monsterSp.isLiving()) {
                    monsterSp.setMoveAccelerate(HallManager.Instance.hallData.userAcceValue);
                }
            }
        }
    }
    /** 检查土地是否开放 */
    checkLandIsOpen(list, lockIndex) {
        if (!list)
            return;
        for (var index = 0; index < HallManager.Instance.hallData.parkMonsterCount; index++) {
            var element = list.getCell(index);
            if (element) {
                let carParkSp = element.getChildByName('car');
                if (carParkSp) {
                    carParkSp.setLock(index >= lockIndex, index);
                }
            }
        }
    }
    /** 移除所有怪物 */
    removeAllMonster() {
        let self = this;
        for (let i = 0; i < HallManager.Instance.hallData.monsterArray.length; i++) {
            let monsterItem = HallManager.Instance.hallData.monsterArray[i];
            monsterItem.stopMoveAction();
            monsterItem.clearBornDelayFun();
            if (monsterItem.parent) {
                monsterItem.timerOnce(900, self, () => {
                    monsterItem.removeSelf();
                });
            }
        }
        HallManager.Instance.hallData.monsterArray = [];
    }
    /** 获取需要开始加载的英雄数据 */
    getStartLoadPetData() {
        let self = this;
        let resList = [];
        let oldIdDic = new TSDictionary();
        for (let i = 0, len = userData.parkcarInfoArray.length; i < len; i++) {
            let item = userData.parkcarInfoArray[i];
            if (item && item.carId !== 0 && !oldIdDic.ContainsKey(item.carId)) {
                oldIdDic.Add(item.carId, item.carId);
                let pet = self.getMonsterItem(item.carId);
                if (pet) {
                    let resUrl = PathConfig.MonsterUrl.replace("{0}", pet.modelImgUrl);
                    resList.push({ url: resUrl, type: Laya.Loader.ATLAS });
                }
            }
        }
        //第一次进入游戏第一波的怪物数据
        let monsters = self.getPreloadingMonsters(self.getBarrierSectionConfig(self.getStoragePassStage, self.getStroageSection));
        if (monsters && monsters.length > 0) {
            resList = resList.concat(monsters);
        }
        oldIdDic.clear();
        oldIdDic = null;
        return resList;
    }
    /** 获取需要预加载关卡的怪物数据 */
    getPreloadingMonsters(stageSectionCfg) {
        let self = this;
        let resList = [];
        if (stageSectionCfg) {
            if (!self._oldMonsterDic) {
                self._oldMonsterDic = new TSDictionary();
            }
            for (let i = 1; i < 3; i++) {
                let pet = self.getMonsterItem(stageSectionCfg["mId" + i]);
                if (pet && !self._oldMonsterDic.ContainsKey(pet.id)) {
                    let resUrl = PathConfig.MonsterUrl.replace("{0}", pet.modelImgUrl);
                    resList.push({ url: resUrl, type: Laya.Loader.ATLAS });
                    self._oldMonsterDic.Add(pet.id, pet.id);
                }
            }
        }
        return resList;
    }
    /** 预加载下一关卡怪物 */
    preloadingNextMonsters(level, section, callback = null) {
        let self = this;
        if (!self._oldMonsters) {
            self._oldMonsters = {};
            self._oldMonsters.level = level;
            self._oldMonsters.section = section;
        }
        else { //防止加载重复的章节
            if (self._oldMonsters.level == level && self._oldMonsters.section == section) {
                return;
            }
        }
        if (section > 6) { //如果是当前章节是最大，那么就预加载下一关的第一章怪物
            section = 1;
            level += 1;
        }
        self._oldMonsters.level = level;
        self._oldMonsters.section = section;
        let monstersData = self.getBarrierSectionConfig(level, section);
        let monsters = self.getPreloadingMonsters(monstersData);
        if (!monsters || monsters.length < 1)
            return;
        Laya.loader.load(monsters, Handler.create(null, (_res) => {
            callback && callback();
        }));
    }
    /** 获取缓存中的关卡 */
    get getStoragePassStage() {
        let self = this;
        let level = Math.min(userData.getPassStage(), self._maxBarrier);
        if (level > self._maxBarrier)
            level = 1;
        return level;
    }
    /** 获取缓存中的章节 */
    get getStroageSection() {
        let self = this;
        let section = userData.getPassSection();
        if (section > self._maxSection) {
            section = self._maxSection;
        }
        return section;
    }
    /** 获取类型(怪物配置) */
    getType(_cardId) {
        let typeRadix = 100;
        if (_cardId > 0) {
            let mType = Math.floor(_cardId / typeRadix);
            return mType;
        }
        return 0;
    }
    /** 获取级别(怪物配置) */
    getLevel(_cardId) {
        let typeRadix = 100;
        if (_cardId > typeRadix) {
            let mNo = _cardId - this.getType(_cardId) * typeRadix;
            return mNo;
        }
        return 0;
    }
    /** 获取单个数据 */
    getMonsterItem(monsterId) {
        return GlobleData.getData(GlobleData.MonsterVO, monsterId);
    }
    /** 根据类型来获取所有数据 */
    getAllMonsterByType(type) {
        return GlobleData.getDataByCondition(GlobleData.MonsterVO, (item) => {
            return item.type == type;
        });
    }
    /** 获取最新可解锁英雄 */
    getUnLockMonster(type, unlockId) {
        let self = this;
        let allMonster = self.getAllMonsterByType(type);
        let monster = null;
        for (let i = 0, len = allMonster.length; i < len; i++) {
            let item = allMonster[i];
            if (unlockId < item.unLockId)
                break;
            monster = item;
        }
        return monster;
    }
    /** 获取最新开锁(可购买)的前后n个精灵配置 */
    getPreMonster(monsterId, index) {
        let self = this;
        let monsterType = BattleManager.Instance.getType(monsterId);
        let unlockMonsterLevel = BattleManager.Instance.getLevel(monsterId);
        let unlockMonster = BattleManager.Instance.getUnLockMonster(monsterType, unlockMonsterLevel);
        let monsterCfg = null;
        if (unlockMonster) {
            let monsterLevel = BattleManager.Instance.getLevel(unlockMonster.id) + index;
            if (monsterLevel > BattleManager.Instance.model.monsterMaxLevel) {
                monsterLevel = BattleManager.Instance.model.monsterMaxLevel;
            }
            else if (monsterLevel < 0) {
                monsterLevel = 0;
            }
            let newMonsterId = monsterType * 100 + monsterLevel;
            monsterCfg = self.getMonsterItem(newMonsterId);
        }
        return monsterCfg;
    }
    /** 获取英雄价格 */
    getMonsterPrice(price, buyTimes) {
        if (buyTimes > 0) {
            return price * Math.pow(1.175, buyTimes);
        }
        return price;
    }
    /** 获取钻石价格 */
    getMonsterDiamondPrice(monsterId, buyTimes) {
        let self = this;
        let monsterLevel = BattleManager.Instance.getLevel(monsterId);
        if (monsterLevel < 1) {
            return self._model.monsterBaseDiamondPrice;
        }
        if (monsterId > 1000) {
            monsterLevel += 30; //进化后的
        }
        let monsterPrice = self._model.monsterBaseDiamondPrice;
        ;
        // 31级前：买的次数递增：=原价*1.25^(n-1)；成本递增：上一级车*1.085。
        // 31级后（含31级）：买的次数递增：=原价*1.25^(n-1)；成本递增：上一级车*1.045
        let foreLevel = 30;
        if (monsterLevel > foreLevel) {
            monsterPrice = monsterPrice * Math.pow(1.085, (monsterLevel - 1)) * Math.pow(1.045, (monsterLevel - foreLevel));
        }
        else {
            monsterPrice = monsterPrice * Math.pow(1.085, (monsterLevel - 1));
        }
        if (buyTimes > 0) {
            monsterPrice = monsterPrice * Math.pow(1.25, buyTimes);
        }
        monsterPrice = Math.ceil(monsterPrice); //四舍五入
        return monsterPrice;
    }
    /** 获取关卡配置信息 */
    getBarrierSectionConfig(id, sectionId = 0) {
        let self = this;
        let barrierSectionId = id.toString();
        let barrierArr = null;
        if (sectionId > 0) {
            barrierSectionId = barrierSectionId + '_' + sectionId;
        }
        else {
            barrierArr = [];
        }
        if (!self._model.barrierConfigDic) {
            self._model.barrierConfigDic = new TSDictionary();
        }
        else if (self._model.barrierConfigDic.ContainsKey(barrierSectionId)) {
            return self._model.barrierConfigDic.TryGetValue(barrierSectionId);
        }
        let barrierConfigs = GlobleData.getAllValue(GlobleData.BarrierConfigVO);
        for (let i = 0, len = barrierConfigs.length; i < len; i++) {
            let barrier = barrierConfigs[i];
            if (sectionId > 0) {
                if (barrier.id == barrierSectionId) { //关卡章节
                    self._model.barrierConfigDic.Add(barrier.id, barrier);
                    return barrier;
                }
            }
            else if (barrier.id) {
                let stageId = barrier.id; //关卡
                stageId = stageId.substr(0, stageId.indexOf('_')); //取出关卡id
                if (stageId == barrierSectionId) {
                    barrierArr.push(barrier);
                }
            }
        }
        if (barrierArr && barrierArr.length > 0) {
            self._model.barrierConfigDic.Add(barrierSectionId, barrierArr);
            return barrierArr;
        }
        return null;
    }
    /** 获取每关最大收益 */
    getBarrierIncome(id) {
        let self = this;
        if (!self._model.barrierIncomeReordDic) {
            self._model.barrierIncomeReordDic = new TSDictionary();
        }
        else if (self._model.barrierIncomeReordDic.ContainsKey(id)) {
            return self._model.barrierIncomeReordDic.TryGetValue(id);
        }
        let income = 0;
        let barriers = self.getBarrierSectionConfig(id);
        if (barriers) {
            barriers.forEach(element => {
                income += element.earnings * 10;
            });
        }
        self._model.barrierIncomeReordDic.Add(id, income);
        return income;
    }
    /** 获取每关对应的解锁坑位 */
    getBarrierSeatNum(id) {
        let self = this;
        let barrierConfigVO = self.getBarrierSectionConfig(id, 1);
        if (barrierConfigVO && barrierConfigVO.seatNum) {
            return barrierConfigVO.seatNum;
        }
        return 3;
    }
    /** 关卡奖励金币换算 */
    getBarrierRewardToGold(stage, gold) {
        return gold * this.getBarrierIncome(stage) * 0.04;
    }
    set hallScene(value) { this._hallScene = value; }
    get hallScene() { return this._hallScene; }
    ;
    get model() {
        return this._model;
    }
    set model(value) {
        this._model = value;
    }
    /** 最大关卡 */
    get maxBarrier() {
        return this._maxBarrier;
    }
    set maxBarrier(value) {
        this._maxBarrier = value;
    }
    static get Instance() {
        if (BattleManager._instance == null) {
            BattleManager._instance = new BattleManager();
        }
        return BattleManager._instance;
    }
}
//# sourceMappingURL=BattleManager.js.map
var View = laya.ui.View;
var Dialog = laya.ui.Dialog;
var ui;
(function (ui) {
    var buff;
    (function (buff) {
        class BuffTipsViewUI extends View {
            constructor() { super(); }
            createChildren() {
                super.createChildren();
                this.createView(ui.buff.BuffTipsViewUI.uiView);
            }
        }
        BuffTipsViewUI.uiView = { "type": "View", "props": { "width": 713, "height": 628 }, "child": [{ "type": "Box", "props": { "y": 0, "x": 0, "width": 713, "height": 628 }, "child": [{ "type": "Image", "props": { "y": 70, "x": 0, "width": 716, "skin": "images/component/frame_9calce_01.png", "height": 565, "sizeGrid": "168,65,62,82" } }, { "type": "Image", "props": { "y": 66, "x": 632, "skin": "images/component/frame_close_btn.png" } }, { "type": "Image", "props": { "y": 267, "x": 281, "var": "imgIcon", "skin": "images/buff/buff_1.png" } }, { "type": "Label", "props": { "y": 452, "x": 51, "width": 613, "var": "txt_des", "text": "恭喜您获得暴击加成", "height": 35, "fontSize": 35, "font": "SimHei", "color": "#884a00", "bold": true, "align": "center" } }, { "type": "HBox", "props": { "y": 518, "x": 356, "anchorY": 0.5, "anchorX": 0.5, "align": "middle" }, "child": [{ "type": "Label", "props": { "y": 2, "x": 196, "text": "秒", "fontSize": 35, "font": "SimHei", "color": "#884a00", "bold": true } }, { "type": "Label", "props": { "text": "持续", "fontSize": 35, "font": "SimHei", "color": "#884a00", "bold": true } }, { "type": "Label", "props": { "y": 0, "x": 81.5625, "var": "txt_time", "text": "180", "fontSize": 35, "font": "SimHei", "color": "#eb6626", "bold": true, "align": "center" } }] }, { "type": "Label", "props": { "y": 635, "x": 267, "text": "点击空白处关闭", "fontSize": 26, "color": "#ffffff", "align": "center" } }, { "type": "Image", "props": { "y": -1, "x": 60, "skin": "images/buff/buff_title_bg.png" } }] }] };
        buff.BuffTipsViewUI = BuffTipsViewUI;
    })(buff = ui.buff || (ui.buff = {}));
})(ui || (ui = {}));
(function (ui) {
    var buff;
    (function (buff) {
        class SkillItemUI extends View {
            constructor() { super(); }
            createChildren() {
                super.createChildren();
                this.createView(ui.buff.SkillItemUI.uiView);
            }
        }
        SkillItemUI.uiView = { "type": "View", "props": { "width": 54, "height": 68 }, "child": [{ "type": "Box", "props": { "y": 0, "x": 0, "width": 55, "height": 69 }, "child": [{ "type": "Image", "props": { "y": 23, "x": 27, "var": "imgIcon", "skin": "images/buff_1.png", "anchorY": 0.5, "anchorX": 0.5 } }, { "type": "Image", "props": { "y": 42, "x": -3, "skin": "images/component/skill_bg.png" } }, { "type": "Label", "props": { "y": 45, "x": 5, "width": 43, "var": "txt_time", "text": "30", "fontSize": 20, "color": "#ffffff", "bold": true, "align": "center" } }] }] };
        buff.SkillItemUI = SkillItemUI;
    })(buff = ui.buff || (ui.buff = {}));
})(ui || (ui = {}));
(function (ui) {
    var common;
    (function (common) {
        var item;
        (function (item) {
            class RewardItemUI extends View {
                constructor() { super(); }
                createChildren() {
                    super.createChildren();
                    this.createView(ui.common.item.RewardItemUI.uiView);
                }
            }
            RewardItemUI.uiView = { "type": "View", "props": { "width": 130, "height": 130 }, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "skin": "images/component/frame_9calce_03.png", "sizeGrid": "26,31,23,28" } }, { "type": "Image", "props": { "y": 65, "x": 65, "width": 100, "var": "itemImg", "height": 100, "anchorY": 0.5, "anchorX": 0.5 } }, { "type": "Label", "props": { "y": 92, "x": 11, "width": 109, "var": "txt_count", "text": "x1", "strokeColor": "#9e2d00", "stroke": 4, "height": 28, "fontSize": 26, "color": "#ffffff", "align": "right" } }] };
            item.RewardItemUI = RewardItemUI;
        })(item = common.item || (common.item = {}));
    })(common = ui.common || (ui.common = {}));
})(ui || (ui = {}));
(function (ui) {
    var common;
    (function (common) {
        var view;
        (function (view) {
            class DebugViewUI extends View {
                constructor() { super(); }
                createChildren() {
                    super.createChildren();
                    this.createView(ui.common.view.DebugViewUI.uiView);
                }
            }
            DebugViewUI.uiView = { "type": "View", "props": { "mouseThrough": true, "mouseEnabled": true }, "child": [{ "type": "View", "props": { "y": 0, "x": 0, "width": 787, "var": "viewBtnContainer", "mouseThrough": true, "mouseEnabled": true, "height": 1094 }, "child": [{ "type": "Box", "props": { "y": 680, "x": 605, "alpha": 0.5 }, "child": [{ "type": "Rect", "props": { "width": 178, "lineWidth": 1, "height": 414, "fillColor": "#000000" } }] }, { "type": "Button", "props": { "y": 697, "x": 620, "width": 130, "var": "btnUid", "labelSize": 26, "labelFont": "SimHei", "labelColors": "#FFFFFF", "labelBold": true, "labelAlign": "center", "label": "UID: ", "height": 26 } }, { "type": "Button", "props": { "y": 747, "x": 620, "width": 130, "var": "btnShowStats", "labelSize": 26, "labelFont": "SimHei", "labelColors": "#FFFFFF", "labelBold": true, "labelAlign": "center", "label": "运行数据", "height": 26 } }, { "type": "Button", "props": { "y": 797, "x": 620, "width": 130, "var": "btnCompleteNovice", "labelSize": 26, "labelFont": "SimHei", "labelColors": "#FFFFFF", "labelBold": true, "labelAlign": "center", "label": "跳过新手", "height": 26 } }, { "type": "Button", "props": { "y": 847, "x": 620, "width": 130, "var": "btnResetKingLevel", "labelSize": 26, "labelFont": "SimHei", "labelColors": "#FFFFFF", "labelBold": true, "labelAlign": "center", "label": "重置王座", "height": 26 } }, { "type": "Button", "props": { "y": 897, "x": 620, "width": 130, "var": "btnAddGold", "labelSize": 26, "labelFont": "SimHei", "labelColors": "#FFFFFF", "labelBold": true, "labelAlign": "center", "label": "添加金币", "height": 26 } }, { "type": "Button", "props": { "y": 947, "x": 620, "width": 130, "var": "btnAddDiamond", "labelSize": 26, "labelFont": "SimHei", "labelColors": "#FFFFFF", "labelBold": true, "labelAlign": "center", "label": "添加钻石", "height": 26 } }, { "type": "Button", "props": { "y": 997, "x": 620, "width": 130, "var": "btnCrearStorage", "labelSize": 26, "labelFont": "SimHei", "labelColors": "#FFFFFF", "labelBold": true, "labelAlign": "center", "label": "清空缓存", "height": 26 } }, { "type": "Button", "props": { "y": 1047, "x": 620, "width": 130, "var": "btnExitGame", "labelSize": 26, "labelFont": "SimHei", "labelColors": "#FFFFFF", "labelBold": true, "labelAlign": "center", "label": "退出游戏", "height": 26 } }] }, { "type": "ViewStack", "props": { "y": 1101, "x": 633, "var": "viewStackArrow" }, "child": [{ "type": "Button", "props": { "y": 6, "x": 17, "width": 130, "name": "item0", "labelSize": 26, "labelFont": "SimHei", "labelColors": "#FFFFFF", "labelBold": true, "labelAlign": "center", "label": "▶▶", "height": 26 } }, { "type": "Button", "props": { "y": 6, "x": 17, "width": 130, "name": "item1", "labelSize": 26, "labelFont": "SimHei", "labelColors": "#FFFFFF", "labelBold": true, "labelAlign": "center", "label": "◀◀", "height": 26 } }] }] };
            view.DebugViewUI = DebugViewUI;
        })(view = common.view || (common.view = {}));
    })(common = ui.common || (ui.common = {}));
})(ui || (ui = {}));
(function (ui) {
    var common;
    (function (common) {
        var view;
        (function (view) {
            class DiamondBuyViewUI extends View {
                constructor() { super(); }
                createChildren() {
                    View.regComponent("ScaleAnimScript", ScaleAnimScript);
                    super.createChildren();
                    this.createView(ui.common.view.DiamondBuyViewUI.uiView);
                }
            }
            DiamondBuyViewUI.uiView = { "type": "View", "props": { "width": 600, "height": 400 }, "child": [{ "type": "Image", "props": { "y": -50, "x": -25, "width": 650, "skin": "images/component/frame_9calce_04.png", "name": "imgBg", "height": 500 }, "child": [{ "type": "Image", "props": { "y": 26, "x": 223, "var": "petTitleImg", "skin": "images/buy_title.png", "name": "imgBg2" } }, { "type": "Image", "props": { "y": 297, "x": 277, "skin": "images/core/diamond.png" } }, { "type": "Image", "props": { "y": 143, "x": 252, "skin": "images/component/frame_9calce_03.png", "sizeGrid": "26,31,23,28" } }, { "type": "Image", "props": { "y": 162, "x": 282, "var": "imgMonster", "skin": "images/carImg/hero_d1_18.png", "name": "imgMonster" } }, { "type": "Image", "props": { "y": 31, "x": 227, "var": "accTitleImg", "skin": "images/accelerate_title.png" } }, { "type": "Image", "props": { "y": 159, "x": 267, "var": "accIcon", "skin": "images/accelerate_icon.png" } }, { "type": "Label", "props": { "y": 295, "x": 319, "var": "txtDiamond", "text": "0", "name": "txtDiamond", "fontSize": 40, "color": "#731d0e", "align": "left" } }, { "type": "Label", "props": { "y": 496, "x": 234, "text": "点击空白处关闭", "fontSize": 26, "color": "#ffffff", "align": "center" } }, { "type": "Button", "props": { "y": 344, "x": 162, "var": "btnBuy", "stateNum": 1, "skin": "images/component/yellow_btn.png", "name": "btnBuy" }, "child": [{ "type": "Label", "props": { "y": 35, "x": 83, "text": "点击购买", "strokeColor": "#825321", "stroke": 2, "fontSize": 40, "color": "#ffffff", "align": "center" } }, { "type": "Script", "props": { "y": 0, "x": 0, "runtime": "ScaleAnimScript" } }] }, { "type": "Button", "props": { "y": -8, "x": 564, "var": "btnExit", "stateNum": 1, "skin": "images/component/frame_close_btn.png", "name": "btnExit" }, "child": [{ "type": "Script", "props": { "y": 0, "x": 0, "runtime": "ScaleAnimScript" } }] }] }] };
            view.DiamondBuyViewUI = DiamondBuyViewUI;
        })(view = common.view || (common.view = {}));
    })(common = ui.common || (ui.common = {}));
})(ui || (ui = {}));
(function (ui) {
    var common;
    (function (common) {
        var view;
        (function (view) {
            class FreeGetPetViewUI extends View {
                constructor() { super(); }
                createChildren() {
                    View.regComponent("ScaleAnimScript", ScaleAnimScript);
                    super.createChildren();
                    this.createView(ui.common.view.FreeGetPetViewUI.uiView);
                }
            }
            FreeGetPetViewUI.uiView = { "type": "View", "props": {}, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "width": 650, "skin": "images/component/frame_9calce_04.png", "name": "imgBg", "height": 500 }, "child": [{ "type": "Image", "props": { "y": 26, "x": 175, "skin": "images/getFreePet_title.png" } }, { "type": "Image", "props": { "y": 213, "x": 260, "skin": "images/component/frame_9calce_03.png", "sizeGrid": "26,31,23,28" } }, { "type": "Image", "props": { "y": 332, "x": 325, "var": "imgPet", "skin": "images/carImg/hero_d1_18.png", "anchorY": 1, "anchorX": 0.5 } }, { "type": "Label", "props": { "y": 496, "x": 234, "text": "点击空白处关闭", "fontSize": 26, "color": "#ffffff", "align": "center" } }, { "type": "Button", "props": { "y": -8, "x": 564, "var": "btnExit", "stateNum": 1, "skin": "images/component/frame_close_btn.png", "name": "btnExit" }, "child": [{ "type": "Script", "props": { "y": 0, "x": 0, "runtime": "ScaleAnimScript" } }] }] }] };
            view.FreeGetPetViewUI = FreeGetPetViewUI;
        })(view = common.view || (common.view = {}));
    })(common = ui.common || (ui.common = {}));
})(ui || (ui = {}));
(function (ui) {
    var common;
    (function (common) {
        var view;
        (function (view) {
            class MessageTipsUI extends View {
                constructor() { super(); }
                createChildren() {
                    super.createChildren();
                    this.createView(ui.common.view.MessageTipsUI.uiView);
                }
            }
            MessageTipsUI.uiView = { "type": "View", "props": {}, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "var": "bg", "skin": "images/component/frame_tips_bg.png", "sizeGrid": "34,62,36,71" } }, { "type": "HBox", "props": { "y": 18, "x": 19, "var": "hbox" }, "child": [{ "type": "Image", "props": { "skin": "images/core/core_tips_icon.png" } }, { "type": "Label", "props": { "y": 2, "x": 38, "var": "txt_content", "text": "消息提示", "fontSize": 30, "color": "#ffffff", "bold": true, "align": "left" } }] }] };
            view.MessageTipsUI = MessageTipsUI;
        })(view = common.view || (common.view = {}));
    })(common = ui.common || (ui.common = {}));
})(ui || (ui = {}));
(function (ui) {
    var common;
    (function (common) {
        var view;
        (function (view) {
            class OfflineRewardsViewUI extends View {
                constructor() { super(); }
                createChildren() {
                    View.regComponent("ScaleAnimScript", ScaleAnimScript);
                    super.createChildren();
                    this.createView(ui.common.view.OfflineRewardsViewUI.uiView);
                }
            }
            OfflineRewardsViewUI.uiView = { "type": "View", "props": { "width": 724, "height": 654 }, "child": [{ "type": "Box", "props": { "y": 87, "x": 0 }, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "width": 716, "skin": "images/component/frame_9calce_01.png", "height": 567, "sizeGrid": "168,65,62,82" } }, { "type": "Image", "props": { "y": 231, "x": 351, "var": "lightImg", "skin": "images/core/light_01.png", "anchorY": 0.5, "anchorX": 0.5 } }, { "type": "Image", "props": { "y": -59, "x": 63, "skin": "images/offlineReward/title.png" } }, { "type": "Image", "props": { "y": 164, "x": 290, "width": 146, "skin": "images/component/frame_9calce_03.png", "height": 145, "sizeGrid": "26,31,23,28" } }, { "type": "Label", "props": { "y": 502, "x": 224, "text": "离线收益最多两个小时", "fontSize": 28, "color": "#f1774e", "bold": true } }, { "type": "Image", "props": { "y": 181, "x": 307, "var": "imgMoney", "skin": "images/core/coin_stack_01.png", "name": "imgMoney" }, "child": [{ "type": "Label", "props": { "y": 150, "x": -196, "width": 500, "var": "txtMoney", "text": "264.78M", "strokeColor": "#a86c42", "stroke": 4, "name": "txtMoney", "fontSize": 50, "color": "#fff4e1", "bold": true, "align": "center" } }] }, { "type": "Button", "props": { "y": 390, "x": 208, "var": "btnShare", "stateNum": 1, "skin": "images/component/normal_btn.png", "name": "btnShare" }, "child": [{ "type": "Script", "props": { "runtime": "ScaleAnimScript" } }, { "type": "Label", "props": { "y": 28, "x": 2, "width": 304, "text": "免费领取x2", "strokeColor": "#946430", "stroke": 5, "height": 40, "fontSize": 40, "color": "#fff4e1", "bold": true, "align": "center" } }] }, { "type": "Button", "props": { "y": 389, "x": 209, "var": "btnVideo", "stateNum": 1, "skin": "images/component/normal_btn.png", "name": "btnVideo" }, "child": [{ "type": "Script", "props": { "runtime": "ScaleAnimScript" } }, { "type": "Label", "props": { "y": 28, "x": 2, "width": 262, "text": "视频领取x2", "strokeColor": "#946430", "stroke": 5, "height": 40, "fontSize": 40, "color": "#fff4e1", "bold": true, "align": "center" } }, { "type": "Image", "props": { "y": 28, "x": 246, "skin": "images/core/video_icon.png" } }] }, { "type": "Button", "props": { "y": 0, "x": 631, "var": "btnExit", "stateNum": 1, "skin": "images/component/frame_close_btn.png", "name": "btnExit" }, "child": [{ "type": "Script", "props": { "runtime": "ScaleAnimScript" } }] }] }] };
            view.OfflineRewardsViewUI = OfflineRewardsViewUI;
        })(view = common.view || (common.view = {}));
    })(common = ui.common || (ui.common = {}));
})(ui || (ui = {}));
(function (ui) {
    var common;
    (function (common) {
        var view;
        (function (view) {
            class RewardGetViewUI extends View {
                constructor() { super(); }
                createChildren() {
                    View.regComponent("ScaleAnimScript", ScaleAnimScript);
                    super.createChildren();
                    this.createView(ui.common.view.RewardGetViewUI.uiView);
                }
            }
            RewardGetViewUI.uiView = { "type": "View", "props": {}, "child": [{ "type": "Box", "props": { "y": 10, "x": 10, "width": 587, "height": 614 }, "child": [{ "type": "Image", "props": { "y": 334, "x": 292, "var": "imgLight", "skin": "images/core/light_01.png", "anchorY": 0.5, "anchorX": 0.5 } }, { "type": "Image", "props": { "skin": "images/hall/reward_get_title.png" } }, { "type": "Label", "props": { "y": 621, "x": 188, "text": "点击空白处关闭", "fontSize": 30, "color": "#ffffff" } }, { "type": "Button", "props": { "y": 492, "x": 129, "var": "btn_get", "stateNum": 1, "skin": "images/component/yellow_btn.png", "labelStrokeColor": "#946430", "labelStroke": 2, "labelSize": 40, "labelColors": "#FFFFFF,#FFFFFF,#FFFFFF,#FFFFFF", "labelBold": true, "label": "领取" }, "child": [{ "type": "Script", "props": { "runtime": "ScaleAnimScript" } }] }, { "type": "HBox", "props": { "y": 330, "x": 293, "var": "hbox", "space": 5, "height": 130, "anchorY": 0.5, "anchorX": 0.5, "align": "middle" } }] }] };
            view.RewardGetViewUI = RewardGetViewUI;
        })(view = common.view || (common.view = {}));
    })(common = ui.common || (ui.common = {}));
})(ui || (ui = {}));
(function (ui) {
    var common;
    (function (common) {
        var view;
        (function (view) {
            class RewardGoldViewUI extends View {
                constructor() { super(); }
                createChildren() {
                    View.regComponent("ScaleAnimScript", ScaleAnimScript);
                    super.createChildren();
                    this.createView(ui.common.view.RewardGoldViewUI.uiView);
                }
            }
            RewardGoldViewUI.uiView = { "type": "View", "props": { "width": 723, "height": 600 }, "child": [{ "type": "Box", "props": { "y": 0, "x": 0 }, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "width": 718, "skin": "images/component/frame_9calce_04.png", "sizeGrid": "178,120,101,152", "name": "imgBg", "height": 564 } }, { "type": "Image", "props": { "y": 30, "x": 256, "skin": "images/rewardGold/rewardGold_title.png", "name": "imgBg2" } }, { "type": "Image", "props": { "y": 148, "x": 288, "skin": "images/component/frame_9calce_03.png", "sizeGrid": "26,31,23,28" } }, { "type": "Image", "props": { "y": 160, "x": 299, "skin": "images/core/coin_stack_01.png" } }, { "type": "Image", "props": { "y": 309, "x": 269, "skin": "images/core/coin_big.png" } }, { "type": "Image", "props": { "y": 375, "x": 25, "width": 665, "skin": "images/component/frame_line_01.png" } }, { "type": "Label", "props": { "y": 313, "x": 337, "var": "txt_gold", "text": "0", "fontSize": 50, "color": "#884a00", "bold": true, "align": "left" } }, { "type": "Label", "props": { "y": 563, "x": 271, "text": "点击空白处关闭", "fontSize": 26, "color": "#ffffff", "align": "center" } }, { "type": "Label", "props": { "y": 502, "x": 268, "var": "txt_lastCount", "text": "今天剩余10次", "fontSize": 30, "color": "#d20000", "bold": true } }, { "type": "Button", "props": { "y": 388, "x": 198, "var": "btn_free", "stateNum": 1, "skin": "images/component/yellow_btn.png" }, "child": [{ "type": "Label", "props": { "y": 32, "x": 71, "var": "txt_share", "text": "免费领取", "strokeColor": "#825321", "stroke": 4, "fontSize": 45, "color": "#ffffff", "bold": true, "align": "center" } }, { "type": "Script", "props": { "y": 0, "x": 0, "runtime": "ScaleAnimScript" } }, { "type": "Box", "props": { "y": 34, "x": 33, "var": "advBox" }, "child": [{ "type": "Label", "props": { "text": "看视频领取", "strokeColor": "#825321", "stroke": 4, "fontSize": 40, "color": "#ffffff", "bold": true, "align": "center" } }, { "type": "Image", "props": { "y": 2, "x": 220, "skin": "images/core/video_icon.png" } }] }] }, { "type": "Button", "props": { "y": -11, "x": 630, "var": "btnExit", "stateNum": 1, "skin": "images/component/frame_close_btn.png" }, "child": [{ "type": "Script", "props": { "y": 0, "x": 0, "runtime": "ScaleAnimScript" } }] }] }] };
            view.RewardGoldViewUI = RewardGoldViewUI;
        })(view = common.view || (common.view = {}));
    })(common = ui.common || (ui.common = {}));
})(ui || (ui = {}));
(function (ui) {
    var common;
    (function (common) {
        var view;
        (function (view) {
            class SkillExplainViewUI extends View {
                constructor() { super(); }
                createChildren() {
                    View.regComponent("ScaleAnimScript", ScaleAnimScript);
                    super.createChildren();
                    this.createView(ui.common.view.SkillExplainViewUI.uiView);
                }
            }
            SkillExplainViewUI.uiView = { "type": "View", "props": { "width": 600, "height": 400 }, "child": [{ "type": "Box", "props": { "y": -20, "x": -62 }, "child": [{ "type": "Image", "props": { "y": 0, "width": 718, "skin": "images/component/frame_9calce_04.png", "sizeGrid": "178,120,101,152", "height": 589 } }, { "type": "Image", "props": { "y": 29, "x": 256, "skin": "images/skill_title_icon.png" } }, { "type": "Image", "props": { "y": 142, "x": 34, "width": 653, "skin": "images/component/frame_9calce_02.png", "sizeGrid": "25,32,32,36", "height": 407 } }, { "type": "Image", "props": { "y": 169, "x": 61, "skin": "images/core/skill_01.png", "scaleY": 0.65, "scaleX": 0.65 } }, { "type": "Image", "props": { "y": 293, "x": 61, "skin": "images/core/skill_02.png", "scaleY": 0.65, "scaleX": 0.65 } }, { "type": "Image", "props": { "y": 418, "x": 61, "skin": "images/core/skill_03.png", "scaleY": 0.65, "scaleX": 0.65 } }, { "type": "Label", "props": { "y": 587, "x": 272, "text": "点击空白处关闭", "fontSize": 26, "color": "#ffffff", "align": "center" } }, { "type": "Label", "props": { "y": 175, "x": 180, "text": "雷神之怒：", "fontSize": 28, "color": "#9a2525" } }, { "type": "Label", "props": { "y": 215, "x": 180, "text": "攻击时有几率同时攻击2个怪物", "fontSize": 24, "color": "#8b6107", "align": "left" } }, { "type": "Label", "props": { "y": 300, "x": 180, "text": "冰冻之触：", "fontSize": 28, "color": "#9a2525" } }, { "type": "Label", "props": { "y": 340, "x": 180, "text": "攻击时有几率造成20%减速效果持续5秒", "fontSize": 24, "color": "#8b6107", "align": "left" } }, { "type": "Label", "props": { "y": 426, "x": 180, "text": "幽冥毒液：", "fontSize": 28, "color": "#9a2525" } }, { "type": "Label", "props": { "y": 466, "x": 180, "wordWrap": true, "width": 429, "text": "攻击时有一定几率造成中毒效果对怪物造成单体持续性伤害", "height": 54, "fontSize": 24, "color": "#8b6107", "align": "left" } }, { "type": "Button", "props": { "y": -7, "x": 634, "var": "btnExit", "stateNum": 1, "skin": "images/component/frame_close_btn.png" }, "child": [{ "type": "Script", "props": { "y": 0, "x": 0, "runtime": "ScaleAnimScript" } }] }] }] };
            view.SkillExplainViewUI = SkillExplainViewUI;
        })(view = common.view || (common.view = {}));
    })(common = ui.common || (ui.common = {}));
})(ui || (ui = {}));
(function (ui) {
    var common;
    (function (common) {
        var view;
        (function (view) {
            class SkyDropObtainViewUI extends View {
                constructor() { super(); }
                createChildren() {
                    super.createChildren();
                    this.createView(ui.common.view.SkyDropObtainViewUI.uiView);
                }
            }
            SkyDropObtainViewUI.uiView = { "type": "View", "props": {}, "child": [{ "type": "Image", "props": { "var": "imgMask", "top": 0, "skin": "images/core/black.jpg", "right": 0, "left": 0, "bottom": 0, "alpha": 0.7 }, "child": [{ "type": "Label", "props": { "y": 940, "x": 265, "text": "点击空白处关闭", "fontSize": 30, "font": "SimHei", "color": "#ffffff" } }] }, { "type": "Image", "props": { "y": 368, "x": 32, "width": 687, "skin": "images/component/frame_9calce_01.png", "height": 624, "sizeGrid": "168,65,62,82" } }, { "type": "Image", "props": { "y": 320, "x": 621, "var": "imgCloseBtn", "skin": "images/component/frame_close_btn.png" } }, { "type": "Image", "props": { "y": 292, "x": 100, "skin": "images/skyDrop/title.png" } }, { "type": "Image", "props": { "y": 565, "x": 309, "skin": "images/component/frame_9calce_03.png", "sizeGrid": "26,31,23,28" } }, { "type": "Image", "props": { "y": 628, "x": 376, "var": "imgIcon", "anchorY": 0.5, "anchorX": 0.5 } }, { "type": "Image", "props": { "y": 835, "x": 125, "var": "imgHelp", "skin": "images/wx_help.png" } }, { "type": "Image", "props": { "y": 835, "x": 426, "var": "imgVideo", "skin": "images/wx_video.png" } }, { "type": "Label", "props": { "y": 746, "x": 93, "width": 574, "var": "lblDesc", "text": "免费获得英雄一只", "height": 63, "fontSize": 36, "font": "SimHei", "color": "#762706", "bold": true, "align": "center" } }] };
            view.SkyDropObtainViewUI = SkyDropObtainViewUI;
        })(view = common.view || (common.view = {}));
    })(common = ui.common || (ui.common = {}));
})(ui || (ui = {}));
(function (ui) {
    var common;
    (function (common) {
        var view;
        (function (view) {
            class SkyDropViewUI extends View {
                constructor() { super(); }
                createChildren() {
                    super.createChildren();
                    this.createView(ui.common.view.SkyDropViewUI.uiView);
                }
            }
            SkyDropViewUI.uiView = { "type": "View", "props": {}, "child": [{ "type": "Image", "props": { "y": 359, "x": 17, "width": 716, "skin": "images/component/frame_9calce_01.png", "height": 565, "sizeGrid": "168,65,62,82" } }, { "type": "Image", "props": { "y": 355, "x": 649, "var": "imgCloseBtn", "skin": "images/component/frame_close_btn.png" } }, { "type": "Image", "props": { "y": 290, "x": 80, "skin": "images/skyDrop/title.png" } }, { "type": "Button", "props": { "y": 785, "x": 448, "width": 182, "var": "btnHelp", "stateNum": 1, "skin": "images/component/frame_btn_small_blue.png", "labelStrokeColor": "#306294", "labelStroke": 4, "labelSize": 32, "labelColors": "#FFFFFF", "labelBold": true, "label": "求助", "height": 62, "sizeGrid": "0,32,0,34" } }, { "type": "Button", "props": { "y": 785, "x": 133, "var": "btnVideo", "stateNum": 1, "skin": "images/component/frame_btn_small_yellow.png", "labelStrokeColor": "#825321", "labelStroke": 4, "labelSize": 32, "labelColors": "#FFFFFF", "labelBold": true, "label": "领取" } }, { "type": "HBox", "props": { "y": 691, "x": 379, "var": "hbox2", "anchorY": 0.5, "anchorX": 0.5, "align": "middle" }, "child": [{ "type": "Label", "props": { "y": 2, "x": 196, "text": "秒", "fontSize": 40, "font": "SimHei", "color": "#884a00", "bold": true } }, { "type": "Label", "props": { "text": "持续", "fontSize": 40, "font": "SimHei", "color": "#884a00", "bold": true } }, { "type": "Label", "props": { "y": 0, "x": 81.5625, "width": 68.578125, "var": "lblDuration", "text": "180", "height": 44, "fontSize": 44, "font": "SimHei", "color": "#eb6626", "bold": true, "align": "center" } }] }, { "type": "HBox", "props": { "y": 604, "x": 379, "var": "hbox1", "anchorY": 0.5, "anchorX": 0.5, "align": "middle" }, "child": [{ "type": "Label", "props": { "var": "lblDesc", "text": "英雄攻击力增加", "fontSize": 40, "font": "SimHei", "color": "#884a00", "bold": true, "align": "right" } }, { "type": "Label", "props": { "y": 3, "x": 294, "var": "lblNum", "text": "50%", "fontSize": 44, "font": "SimHei", "color": "#eb6626", "bold": true } }] }] };
            view.SkyDropViewUI = SkyDropViewUI;
        })(view = common.view || (common.view = {}));
    })(common = ui.common || (ui.common = {}));
})(ui || (ui = {}));
(function (ui) {
    var common;
    (function (common) {
        var view;
        (function (view) {
            class VideoAdViewUI extends View {
                constructor() { super(); }
                createChildren() {
                    View.regComponent("ScaleAnimScript", ScaleAnimScript);
                    super.createChildren();
                    this.createView(ui.common.view.VideoAdViewUI.uiView);
                }
            }
            VideoAdViewUI.uiView = { "type": "View", "props": { "width": 723, "height": 569 }, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "skin": "images/component/frame_9calce_04.png", "name": "imgBg" }, "child": [{ "type": "Label", "props": { "y": 266, "x": 320, "wordWrap": true, "text": "当前", "fontSize": 40, "color": "#6c4419", "align": "center" } }, { "type": "Button", "props": { "y": -3, "x": 630, "stateNum": 1, "skin": "images/component/frame_close_btn.png", "name": "btnExit" }, "child": [{ "type": "Script", "props": { "y": 0, "x": 0, "runtime": "ScaleAnimScript" } }] }, { "type": "Label", "props": { "y": 327, "x": 200, "text": "没有可观看的视频", "fontSize": 40, "color": "#6c4419", "align": "center" } }, { "type": "Label", "props": { "y": 564, "x": 262, "text": "点击空白处关闭", "fontSize": 28, "color": "#ffffff", "align": "center" } }, { "type": "Image", "props": { "y": 33, "x": 309, "skin": "images/zhagao_title.png" } }] }] };
            view.VideoAdViewUI = VideoAdViewUI;
        })(view = common.view || (common.view = {}));
    })(common = ui.common || (ui.common = {}));
})(ui || (ui = {}));
(function (ui) {
    var daySign;
    (function (daySign) {
        class DaySignViewUI extends View {
            constructor() { super(); }
            createChildren() {
                View.regComponent("ScaleAnimScript", ScaleAnimScript);
                super.createChildren();
                this.createView(ui.daySign.DaySignViewUI.uiView);
            }
        }
        DaySignViewUI.uiView = { "type": "View", "props": { "y": 0, "x": 0 }, "child": [{ "type": "View", "props": { "y": 0, "x": 0, "width": 714, "visible": true, "var": "mainView", "name": "mainView", "height": 1019 }, "child": [{ "type": "Image", "props": { "y": 5, "x": 0, "width": 716, "skin": "images/component/frame_9calce_01.png", "rotation": 0, "height": 1014, "sizeGrid": "168,65,62,82" }, "child": [{ "type": "Image", "props": { "y": 36, "x": 250, "skin": "images/dailySign/title.png" } }, { "type": "List", "props": { "y": 124, "x": 37, "width": 641, "var": "signItemList", "spaceY": 8, "spaceX": -12, "repeatY": 2, "repeatX": 3, "mouseEnabled": false, "height": 506 }, "child": [{ "type": "Box", "props": { "y": 26, "x": 0, "width": 223, "renderType": "render", "height": 228, "cacheAs": "bitmap" }, "child": [{ "type": "Button", "props": { "y": 0, "x": 0, "stateNum": 1, "skin": "images/dailySign/item_bg_normal.png", "name": "btnBox", "mouseEnabled": false }, "child": [{ "type": "Script", "props": { "y": 10, "x": 10, "runtime": "ScaleAnimScript" } }] }, { "type": "Image", "props": { "y": 111, "x": 110, "skin": "images/dailySign/icon_day_1.png", "name": "imgIcon", "anchorY": 0.5, "anchorX": 0.5 } }, { "type": "Label", "props": { "y": 19, "x": 21, "width": 178, "text": "第七天", "strokeColor": "#946430", "stroke": 4, "name": "txtTitle", "height": 36, "fontSize": 28, "color": "#fff6e3", "align": "center" } }, { "type": "Label", "props": { "y": 162, "x": 44, "width": 135, "text": "钻石x20", "name": "txtDiamond", "height": 30, "fontSize": 30, "color": "#fe774e", "bold": true, "align": "center" } }, { "type": "Image", "props": { "y": 0, "x": 0, "width": 220, "visible": false, "skin": "images/dailySign/mask.png", "name": "imgMask", "height": 230, "sizeGrid": "48,53,56,56" } }, { "type": "Image", "props": { "y": 105, "x": 63, "visible": false, "skin": "images/dailySign/obtained_mark.png", "name": "imgObtainedMark" } }] }] }, { "type": "Box", "props": { "y": 627, "x": 36, "width": 628, "var": "lastItemBox", "renderType": "render", "height": 216, "cacheAs": "bitmap" }, "child": [{ "type": "Button", "props": { "y": 0, "x": 0, "stateNum": 1, "skin": "images/dailySign/item_bg_7th_day.png", "name": "btnBox", "mouseEnabled": false }, "child": [{ "type": "Script", "props": { "y": 10, "x": 10, "runtime": "ScaleAnimScript" } }] }, { "type": "Label", "props": { "y": 15, "x": 17, "width": 614, "text": "第七天", "strokeColor": "#946430", "stroke": 4, "name": "txtTitle", "height": 34, "fontSize": 34, "color": "#fff6e3", "align": "center" } }, { "type": "Label", "props": { "y": 161, "x": 182, "width": 61, "text": "300", "name": "txtDiamond", "height": 32, "fontSize": 28, "color": "#f1774e", "bold": true, "align": "left" } }, { "type": "Label", "props": { "y": 161, "x": 97, "width": 93, "text": "钻石x", "height": 32, "fontSize": 28, "color": "#f1774e", "bold": true, "align": "left" } }, { "type": "Image", "props": { "y": 38, "x": 39, "skin": "images/dailySign/desc_7days.png" } }, { "type": "Image", "props": { "y": 68, "x": 461, "skin": "images/dailySign/icon_day_7.png" } }, { "type": "Image", "props": { "y": 78, "x": 312, "skin": "images/dailySign/icon_day_6.png" } }, { "type": "Label", "props": { "y": 127, "x": 227, "width": 47, "text": "8", "name": "lblEssence", "height": 32, "fontSize": 28, "color": "#f1774e", "bold": true, "align": "left" } }, { "type": "Label", "props": { "y": 127, "x": 86, "width": 146, "text": "精华碎片x", "height": 32, "fontSize": 28, "color": "#f1774e", "bold": true, "align": "left" } }, { "type": "Image", "props": { "y": -2, "x": -4, "width": 648, "visible": false, "skin": "images/dailySign/mask.png", "name": "imgMask", "height": 230, "sizeGrid": "48,53,56,56" } }, { "type": "Image", "props": { "y": 60, "x": 278, "visible": false, "skin": "images/dailySign/obtained_mark.png", "name": "imgObtainedMark" } }] }] }, { "type": "Button", "props": { "y": 0, "x": 631, "var": "btnExit", "stateNum": 1, "skin": "images/component/frame_close_btn.png", "name": "btnExit" }, "child": [{ "type": "Script", "props": { "runtime": "ScaleAnimScript" } }] }, { "type": "Button", "props": { "y": 875, "x": 205, "var": "btnGet", "stateNum": 1, "skin": "images/component/normal_btn.png", "name": "btnGet" }, "child": [{ "type": "Script", "props": { "runtime": "ScaleAnimScript" } }, { "type": "Label", "props": { "y": 22, "x": 2, "width": 305, "text": "领取", "strokeColor": "#946430", "stroke": 4, "height": 59, "fontSize": 50, "color": "#fff6e3", "bold": true, "align": "center" } }] }, { "type": "Image", "props": { "y": 94, "x": 654, "skin": "images/dailySign/left_link.png" } }, { "type": "Image", "props": { "y": 94, "x": 46, "skin": "images/dailySign/right_link.png" } }] }] };
        daySign.DaySignViewUI = DaySignViewUI;
    })(daySign = ui.daySign || (ui.daySign = {}));
})(ui || (ui = {}));
(function (ui) {
    var evolution;
    (function (evolution) {
        class EvolutionAdvancedViewUI extends View {
            constructor() { super(); }
            createChildren() {
                View.regComponent("ScaleAnimScript", ScaleAnimScript);
                super.createChildren();
                this.createView(ui.evolution.EvolutionAdvancedViewUI.uiView);
            }
        }
        EvolutionAdvancedViewUI.uiView = { "type": "View", "props": { "width": 715, "height": 1014 }, "child": [{ "type": "View", "props": { "y": 0, "width": 715, "var": "mainView", "name": "mainView", "height": 1014, "centerX": 0 }, "child": [{ "type": "Label", "props": { "y": 848, "x": 270, "text": "点击空白处关闭", "name": "txtExit", "fontSize": 30, "color": "#ffffff" } }, { "type": "Image", "props": { "y": 0, "x": 0, "width": 715, "skin": "images/component/frame_9calce_01.png", "sizeGrid": "158,62,69,62", "name": "imgBg", "height": 1014 }, "child": [{ "type": "Image", "props": { "y": 32, "x": 259, "skin": "images/evolution_shop_title.png" } }, { "type": "Image", "props": { "y": 587, "x": 36, "skin": "images/component/frame_line_01.png" } }, { "type": "Image", "props": { "y": 216, "x": 36, "skin": "images/component/frame_line_01.png" } }, { "type": "Image", "props": { "y": 627, "x": 32, "skin": "images/component/frame_9calce_05.png" } }, { "type": "Image", "props": { "y": 286, "x": 61, "skin": "images/component/frame_9calce_03.png", "sizeGrid": "26,31,23,28" } }, { "type": "Image", "props": { "y": 285, "x": 295, "skin": "images/component/frame_9calce_03.png", "sizeGrid": "26,31,23,28" } }, { "type": "Image", "props": { "y": 285, "x": 520, "skin": "images/component/frame_9calce_03.png", "sizeGrid": "26,31,23,28" } }, { "type": "Image", "props": { "y": 305, "x": 94, "skin": "images/carImg/hero_d1_18.png" } }, { "type": "Image", "props": { "y": 301, "x": 537, "skin": "images/luckLottery/luck_prize_5.png" } }, { "type": "Image", "props": { "y": 310, "x": 310, "skin": "images/luckLottery/luck_prize_6.png" } }, { "type": "Label", "props": { "y": 437, "x": 543, "text": "精华碎片", "fontSize": 24, "color": "#886300", "align": "right" } }, { "type": "Label", "props": { "y": 437, "x": 338, "text": "钻石", "fontSize": 24, "color": "#886300", "align": "right" } }, { "type": "Label", "props": { "y": 437, "x": 79, "text": "强•狄安娜", "fontSize": 24, "color": "#886300", "align": "right" } }, { "type": "Label", "props": { "y": 541, "x": 68, "text": "进化条件", "fontSize": 32, "color": "#c83d33", "align": "left" } }, { "type": "Label", "props": { "y": 925, "x": 177, "text": "注：进化后系统将收回未进化英雄", "fontSize": 24, "color": "#712f0f", "align": "left" } }, { "type": "Label", "props": { "y": 169, "x": 68, "text": "进化后获得", "fontSize": 32, "color": "#c83d33", "align": "left" } }, { "type": "Label", "props": { "y": 373, "x": 588, "var": "txtItemPrize3", "text": "x30", "strokeColor": "#946430", "stroke": 3, "name": "txtItemPrize3", "fontSize": 30, "color": "#ffffff", "align": "right" } }, { "type": "Label", "props": { "y": 373, "x": 149, "var": "txtItemPrize1", "text": "x3", "strokeColor": "#946430", "stroke": 3, "name": "txtItemPrize1", "fontSize": 30, "color": "#ffffff", "align": "right" } }, { "type": "Label", "props": { "y": 373, "x": 347, "var": "txtItemPrize2", "text": "x500", "strokeColor": "#946430", "stroke": 3, "name": "txtItemPrize2", "fontSize": 30, "color": "#ffffff", "align": "right" } }, { "type": "Label", "props": { "y": 639, "x": 222, "var": "txtNeedItem1", "text": "0/1", "name": "txtNeedItem1", "fontSize": 28, "color": "#9a8d00", "align": "left" } }, { "type": "Label", "props": { "y": 636, "x": 42, "var": "txtItemName1", "text": "希芙 Lv30:", "name": "txtItemName1", "fontSize": 30, "color": "#9a2525", "align": "left" } }, { "type": "Button", "props": { "y": -4, "x": 633, "stateNum": 1, "skin": "images/component/frame_close_btn.png", "name": "btnExit" }, "child": [{ "type": "Script", "props": { "y": 0, "x": 0, "runtime": "ScaleAnimScript" } }] }, { "type": "Button", "props": { "y": 768, "x": 194, "stateNum": 1, "skin": "images/component/yellow_btn.png", "name": "btnUpdate", "labelStrokeColor": "#946430", "labelStroke": 2, "labelSize": 60, "labelColors": "#ffffff", "labelBold": true, "label": "进化", "disabled": true }, "child": [{ "type": "Script", "props": { "y": 0, "x": 0, "runtime": "ScaleAnimScript" } }] }] }] }] };
        evolution.EvolutionAdvancedViewUI = EvolutionAdvancedViewUI;
    })(evolution = ui.evolution || (ui.evolution = {}));
})(ui || (ui = {}));
(function (ui) {
    var evolution;
    (function (evolution) {
        class EvolutionViewUI extends View {
            constructor() { super(); }
            createChildren() {
                View.regComponent("ScaleAnimScript", ScaleAnimScript);
                super.createChildren();
                this.createView(ui.evolution.EvolutionViewUI.uiView);
            }
        }
        EvolutionViewUI.uiView = { "type": "View", "props": {}, "child": [{ "type": "View", "props": { "y": 190, "x": 0, "width": 750, "var": "mainView", "name": "mainView", "height": 826 }, "child": [{ "type": "Image", "props": { "y": -88, "x": 18, "width": 715, "skin": "images/component/frame_9calce_01.png", "sizeGrid": "158,62,69,62", "name": "imgBg", "height": 1014 }, "child": [{ "type": "Image", "props": { "y": 33, "x": 259, "skin": "images/king_title_icon.png" } }, { "type": "Image", "props": { "y": 494, "x": 36, "skin": "images/component/frame_line_01.png" } }, { "type": "Label", "props": { "y": 449, "x": 66, "text": "升级条件:", "fontSize": 32, "color": "#c83d33", "align": "left" } }, { "type": "Button", "props": { "y": -8, "x": 634, "var": "btnExit", "stateNum": 1, "skin": "images/component/frame_close_btn.png" }, "child": [{ "type": "Script", "props": { "y": 0, "x": 0, "runtime": "ScaleAnimScript" } }] }, { "type": "Button", "props": { "y": 796, "x": 197, "var": "btnUpdate", "stateNum": 1, "skin": "images/component/yellow_btn.png", "labelStrokeColor": "#946430", "labelStroke": 2, "labelSize": 50, "labelColors": "#ffffff", "labelBold": true, "label": "升级", "disabled": true }, "child": [{ "type": "Script", "props": { "y": 0, "x": 0, "runtime": "ScaleAnimScript" } }] }, { "type": "Box", "props": { "y": 507, "x": 32, "var": "heroBox" }, "child": [{ "type": "Image", "props": { "skin": "images/component/frame_9calce_05.png" } }, { "type": "HBox", "props": { "y": 11, "x": 32, "var": "nameHbox", "space": 5, "align": "middle" }, "child": [{ "type": "Label", "props": { "y": 2, "x": 179, "var": "txtNeedItem", "text": "0/1", "fontSize": 28, "color": "#9a8d00", "align": "left" } }, { "type": "Label", "props": { "var": "txtItemName", "text": "刺王龙 Lv11:", "fontSize": 30, "color": "#9a2525", "align": "left" } }] }] }, { "type": "Box", "props": { "y": 558, "x": 32, "var": "diamondBox" }, "child": [{ "type": "Image", "props": { "skin": "images/component/frame_9calce_05.png" } }, { "type": "Image", "props": { "y": 13, "x": 32, "skin": "images/core/diamond_icon.png", "scaleY": 0.6, "scaleX": 0.6 } }, { "type": "Label", "props": { "y": 13, "x": 156, "var": "txtNeedDiamond", "text": "0/50", "fontSize": 28, "color": "#9a8d00", "align": "left" } }, { "type": "Label", "props": { "y": 11, "x": 73, "var": "txtDiamondName", "text": "钻石:", "fontSize": 30, "color": "#9a2525", "align": "left" } }] }, { "type": "Box", "props": { "y": 140, "x": 33 }, "child": [{ "type": "Image", "props": { "width": 649, "skin": "images/component/frame_9calce_02.png", "sizeGrid": "25,27,32,27", "height": 270 } }, { "type": "Image", "props": { "y": 90, "x": 97, "skin": "images/component/frame_9calce_06.png" } }, { "type": "Image", "props": { "y": 30, "x": 97, "skin": "images/component/frame_9calce_07.png", "sizeGrid": "0,31,0,33" } }, { "type": "Image", "props": { "y": 148, "x": 97, "skin": "images/component/frame_9calce_06.png" } }, { "type": "Image", "props": { "y": 90, "x": 429, "skin": "images/component/frame_9calce_06.png" } }, { "type": "Image", "props": { "y": 148, "x": 429, "skin": "images/component/frame_9calce_06.png" } }, { "type": "Label", "props": { "y": 35, "x": 33, "text": "等级:", "fontSize": 28, "color": "#9a2525" } }, { "type": "Label", "props": { "y": 95, "x": 33, "text": "攻击:", "fontSize": 28, "color": "#9a2525" } }, { "type": "Label", "props": { "y": 154, "x": 33, "text": "速度:", "fontSize": 28, "color": "#9a2525" } }, { "type": "Label", "props": { "y": 95, "x": 306, "text": "攻击加成:", "fontSize": 28, "color": "#9a2525" } }, { "type": "Label", "props": { "y": 154, "x": 306, "text": "暴击加成:", "fontSize": 28, "color": "#9a2525" } }, { "type": "Label", "props": { "y": 215, "x": 33, "text": "技能效果:", "fontSize": 28, "color": "#9a2525" } }, { "type": "Label", "props": { "y": 154, "x": 449, "var": "txtDoubleAdd", "text": "0.8%", "fontSize": 30, "color": "#ffffff", "bold": true, "align": "left" } }, { "type": "Label", "props": { "y": 154, "x": 114, "var": "txtAtkSpeed", "text": "0.3s", "fontSize": 30, "color": "#ffffff", "bold": true, "align": "left" } }, { "type": "Label", "props": { "y": 95, "x": 449, "var": "txtAtkAdd", "text": "1.5%", "fontSize": 30, "color": "#ffffff", "bold": true, "align": "left" } }, { "type": "Label", "props": { "y": 96, "x": 114, "var": "txtAtk", "text": "10", "fontSize": 30, "color": "#ffffff", "bold": true, "align": "left" } }, { "type": "Label", "props": { "y": 35, "x": 114, "var": "txtKingLevel", "text": "1", "fontSize": 30, "color": "#ffffff", "bold": true, "align": "left" } }, { "type": "Label", "props": { "y": 215, "x": 162, "width": 400, "var": "txtSkillDes", "text": "增加所有上阵英雄的攻击和暴击", "fontSize": 28, "color": "#8b6107", "align": "left" } }] }] }] }] };
        evolution.EvolutionViewUI = EvolutionViewUI;
    })(evolution = ui.evolution || (ui.evolution = {}));
})(ui || (ui = {}));
(function (ui) {
    var evolution;
    (function (evolution) {
        class LevelHeroViewUI extends View {
            constructor() { super(); }
            createChildren() {
                View.regComponent("ScaleAnimScript", ScaleAnimScript);
                super.createChildren();
                this.createView(ui.evolution.LevelHeroViewUI.uiView);
            }
        }
        LevelHeroViewUI.uiView = { "type": "View", "props": { "width": 714, "height": 562 }, "child": [{ "type": "Box", "props": { "y": 0, "x": 0, "width": 714, "height": 562 }, "child": [{ "type": "Image", "props": { "y": 4, "width": 716, "skin": "images/component/frame_9calce_01.png", "height": 565, "sizeGrid": "168,65,62,82" } }, { "type": "Image", "props": { "y": 35, "x": 119, "skin": "images/levelHero/levelHero_titel.png" } }, { "type": "Image", "props": { "y": 172, "x": 317, "skin": "images/levelHero/levelHero_arrow.png" } }, { "type": "Image", "props": { "y": 139, "x": 186, "skin": "images/levelHero/levelHero_level_icon.png" } }, { "type": "Image", "props": { "y": 378, "x": 25, "skin": "images/component/frame_line_02.png" } }, { "type": "Image", "props": { "y": 259, "x": 33, "skin": "images/component/frame_9calce_05.png" } }, { "type": "Image", "props": { "y": 317, "x": 33, "skin": "images/component/frame_9calce_05.png" } }, { "type": "Image", "props": { "y": 324, "x": 168, "skin": "images/core/diamond.png", "scaleY": 0.9, "scaleX": 0.9 } }, { "type": "Image", "props": { "y": 268, "x": 172, "width": 182, "skin": "images/levelHero/levelHero_name_bg.png", "sizeGrid": "13,42,13,36", "height": 34 } }, { "type": "Image", "props": { "y": 139, "x": 422, "skin": "images/levelHero/levelHero_level_icon.png" } }, { "type": "Label", "props": { "y": 178, "x": 196, "width": 88, "var": "txt_level", "text": "Lv8", "height": 32, "fontSize": 32, "color": "#886300", "align": "center" } }, { "type": "Label", "props": { "y": 178, "x": 433, "width": 88, "var": "txt_uplevel", "text": "Lv8", "height": 32, "fontSize": 32, "color": "#886300", "align": "center" } }, { "type": "Label", "props": { "y": 273, "x": 44, "text": "升级条件：", "fontSize": 26, "color": "#9a2525", "bold": true, "align": "center" } }, { "type": "Label", "props": { "y": 328, "x": 44, "text": "升级消耗：", "fontSize": 26, "color": "#9a2525", "bold": true, "align": "center" } }, { "type": "Label", "props": { "y": 271, "x": 172, "width": 182, "var": "txt_name", "text": "强•克瑞翁Lv30", "height": 26, "fontSize": 26, "color": "#ad1c1c", "bold": true, "align": "center" } }, { "type": "Label", "props": { "y": 271, "x": 357, "var": "txt_count", "text": "x3", "fontSize": 26, "color": "#9a8d00", "align": "center" } }, { "type": "Label", "props": { "y": 327, "x": 213, "var": "txt_diamond", "text": "0/0", "fontSize": 26, "color": "#9a8d00", "align": "left" } }, { "type": "Label", "props": { "y": 570, "x": 268, "text": "点击空白处关闭", "fontSize": 26, "color": "#ffffff", "align": "center" } }, { "type": "Button", "props": { "x": 632, "var": "btn_exit", "stateNum": 1, "skin": "images/component/frame_close_btn.png" } }, { "type": "Button", "props": { "y": 433, "x": 389, "var": "btn_sure", "stateNum": 1, "skin": "images/component/frame_btn_small_yellow.png", "labelStrokeColor": "#825321", "labelStroke": 2, "labelSize": 28, "labelColors": "#ffffff,#ffffff,#ffffff,#ffffff", "label": "确定" }, "child": [{ "type": "Script", "props": { "runtime": "ScaleAnimScript" } }] }, { "type": "Button", "props": { "y": 433, "x": 142, "width": 182, "var": "btn_next", "stateNum": 1, "skin": "images/component/frame_btn_small_blue.png", "labelStrokeColor": "#306294", "labelStroke": 2, "labelSize": 28, "labelColors": "#ffffff,#ffffff,#ffffff,#ffffff", "label": "下次", "height": 62, "sizeGrid": "0,32,0,34" }, "child": [{ "type": "Script", "props": { "runtime": "ScaleAnimScript" } }] }] }] };
        evolution.LevelHeroViewUI = LevelHeroViewUI;
    })(evolution = ui.evolution || (ui.evolution = {}));
})(ui || (ui = {}));
(function (ui) {
    var follow;
    (function (follow) {
        class FollowRewardViewUI extends View {
            constructor() { super(); }
            createChildren() {
                View.regComponent("ScaleAnimScript", ScaleAnimScript);
                super.createChildren();
                this.createView(ui.follow.FollowRewardViewUI.uiView);
            }
        }
        FollowRewardViewUI.uiView = { "type": "View", "props": { "width": 750, "height": 1334 }, "child": [{ "type": "View", "props": { "y": 0, "x": 0, "width": 750, "var": "mainView", "name": "mainView", "height": 1334 }, "child": [{ "type": "Image", "props": { "y": 294, "x": 300, "width": 750, "var": "imgBg", "skin": "images/followReward/followReward_bg.jpg", "rotation": 0, "pivotY": 294, "pivotX": 300, "height": 1334 } }, { "type": "Button", "props": { "y": 139, "x": 587, "var": "btnExit", "stateNum": 1, "skin": "images/component/frame_close_btn.png", "name": "btnExit" }, "child": [{ "type": "Script", "props": { "runtime": "ScaleAnimScript" } }] }, { "type": "Button", "props": { "y": 556, "x": 212, "var": "btnGet", "stateNum": 1, "skin": "images/followReward/followReward_btn.png", "name": "btnGet" }, "child": [{ "type": "Script", "props": { "runtime": "ScaleAnimScript" } }] }] }] };
        follow.FollowRewardViewUI = FollowRewardViewUI;
    })(follow = ui.follow || (ui.follow = {}));
})(ui || (ui = {}));
(function (ui) {
    var friendConcur;
    (function (friendConcur) {
        class FriendConcurUI extends View {
            constructor() { super(); }
            createChildren() {
                View.regComponent("ScaleAnimScript", ScaleAnimScript);
                super.createChildren();
                this.createView(ui.friendConcur.FriendConcurUI.uiView);
            }
        }
        FriendConcurUI.uiView = { "type": "View", "props": {}, "child": [{ "type": "Box", "props": { "y": 0, "x": 0 }, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "width": 715, "skin": "images/component/frame_9calce_01.png", "height": 1015, "sizeGrid": "168,65,62,82" } }, { "type": "Image", "props": { "y": 35, "x": 258, "skin": "images/friendConcur/friendConcur_title.png" } }, { "type": "Image", "props": { "y": 137, "x": 35, "width": 646, "skin": "images/component/frame_9calce_02.png", "height": 668, "sizeGrid": "25,32,32,36" } }, { "type": "Button", "props": { "y": -6, "x": 633, "var": "btn_exit", "stateNum": 1, "skin": "images/component/frame_close_btn.png" } }, { "type": "Button", "props": { "y": 823, "x": 200, "var": "btn_send", "stateNum": 1, "skin": "images/component/yellow_btn.png", "labelStrokeColor": "#946430", "labelStroke": 2, "labelSize": 40, "labelColors": "#FFFFFF,#FFFFFF,#FFFFFF,#FFFFFF", "labelBold": true, "label": "发起好友互助" }, "child": [{ "type": "Script", "props": { "runtime": "ScaleAnimScript" } }] }, { "type": "Label", "props": { "y": 942, "x": 116, "text": "好友点开互助链接，双方都能获得金币奖励", "fontSize": 26, "color": "#ff0000" } }, { "type": "List", "props": { "y": 149, "x": 49, "width": 617, "var": "rewardList", "spaceY": 5, "repeatY": 1, "repeatX": 1, "height": 636 } }] }] };
        friendConcur.FriendConcurUI = FriendConcurUI;
    })(friendConcur = ui.friendConcur || (ui.friendConcur = {}));
})(ui || (ui = {}));
(function (ui) {
    var friendConcur;
    (function (friendConcur) {
        class FriendConcurItemUI extends View {
            constructor() { super(); }
            createChildren() {
                View.regComponent("ScaleAnimScript", ScaleAnimScript);
                super.createChildren();
                this.createView(ui.friendConcur.FriendConcurItemUI.uiView);
            }
        }
        FriendConcurItemUI.uiView = { "type": "View", "props": { "width": 617, "height": 140 }, "child": [{ "type": "Box", "props": { "y": 0, "x": 0, "renderType": "render" }, "child": [{ "type": "Image", "props": { "x": 1, "skin": "images/friendConcur/friendConcur_bg.png" } }, { "type": "Image", "props": { "y": 7, "skin": "images/friendConcur/friendConcur_time_bg.png" } }, { "type": "Label", "props": { "y": 12, "x": 35, "width": 227, "var": "txt_time", "text": "2018-11-20 16:40", "height": 22, "fontSize": 22, "color": "#ffffff" } }, { "type": "Image", "props": { "y": 85, "x": 46, "width": 132, "skin": "images/component/frame_9scale_12.png", "name": "imgGold", "height": 36 }, "child": [{ "type": "Image", "props": { "y": -3, "x": -13, "skin": "images/core/coin_40x40.png", "name": "imgIcon" } }, { "type": "Label", "props": { "y": 3, "x": 30, "var": "txt_gold", "text": "0", "strokeColor": "#946430", "stroke": 4, "fontSize": 26, "color": "#ffffff", "bold": true, "align": "left" } }] }, { "type": "HBox", "props": { "y": 84, "x": 184, "var": "diamondBox", "space": 2 }, "child": [{ "type": "Label", "props": { "y": 3, "text": "额外奖励", "fontSize": 24, "color": "#ff0000" } }, { "type": "Image", "props": { "x": 101, "skin": "images/core/diamond.png", "scaleY": 0.8, "scaleX": 0.8 } }, { "type": "Label", "props": { "y": 3, "x": 135, "var": "txt_diamond", "text": "+0", "fontSize": 24, "color": "#ff931f" } }] }, { "type": "Button", "props": { "y": 39, "x": 419, "var": "btn_get", "stateNum": 1, "skin": "images/component/frame_btn_small_yellow.png", "labelStrokeColor": "#946430", "labelStroke": 2, "labelSize": 32, "labelColors": "#FFFFFF,#FFFFFF,#FFFFFF,#FFFFFF", "label": "领取" }, "child": [{ "type": "Script", "props": { "runtime": "ScaleAnimScript" } }] }, { "type": "HBox", "props": { "y": 49, "x": 29, "var": "hbox", "align": "middle" }, "child": [{ "type": "Label", "props": { "y": 1, "var": "txt_des0", "text": "您点击了", "fontSize": 22, "color": "#946430", "align": "left" } }, { "type": "Label", "props": { "y": 1, "x": 89, "var": "txt_des1", "text": "您点击了", "fontSize": 22, "color": "#6e9be0", "align": "left" } }, { "type": "Label", "props": { "x": 178, "var": "txt_des2", "text": "您点击了", "fontSize": 22, "color": "#946430", "align": "left" } }] }] }] };
        friendConcur.FriendConcurItemUI = FriendConcurItemUI;
    })(friendConcur = ui.friendConcur || (ui.friendConcur = {}));
})(ui || (ui = {}));
(function (ui) {
    var guide;
    (function (guide) {
        class NoviceViewUI extends View {
            constructor() { super(); }
            createChildren() {
                View.regComponent("ScaleAnimScript", ScaleAnimScript);
                super.createChildren();
                this.createView(ui.guide.NoviceViewUI.uiView);
            }
        }
        NoviceViewUI.uiView = { "type": "View", "props": { "name": "NoviceViewUI", "mouseThrough": true, "mouseEnabled": true }, "child": [{ "type": "View", "props": { "y": 0, "x": 0, "width": 750, "visible": false, "var": "viewInteract", "name": "ViewInteract", "mouseThrough": true, "mouseEnabled": true, "height": 1334 }, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "width": 750, "var": "imgTop", "skin": "images/core/blank.png", "mouseEnabled": true, "height": 400 } }, { "type": "Image", "props": { "y": 400, "x": 420, "width": 330, "var": "imgRight", "skin": "images/core/blank.png", "mouseEnabled": true, "height": 100 } }, { "type": "Image", "props": { "y": 500, "x": 0, "width": 750, "var": "imgBottom", "skin": "images/core/blank.png", "mouseEnabled": true, "height": 834 } }, { "type": "Image", "props": { "y": 400, "x": 0, "width": 200, "var": "imgLeft", "skin": "images/core/blank.png", "mouseEnabled": true, "height": 100 } }] }, { "type": "ViewStack", "props": { "var": "viewStackNovice", "selectedIndex": 0, "name": "viewStackNovice" }, "child": [{ "type": "View", "props": { "y": 0, "x": 0, "width": 750, "name": "item0", "height": 1334 }, "child": [{ "type": "Image", "props": { "y": 791, "x": 10, "var": "imgDialogCharacter", "skin": "images/novice/character.png" }, "child": [{ "type": "Label", "props": { "y": 176, "x": 236, "wordWrap": true, "width": 300, "var": "lblDialogScript", "text": "文本文本文本文本文本文本文本文本文本文本文本文本文本文本文本文本", "overflow": "scroll", "leading": 10, "height": 103, "fontSize": 26, "color": "#a17338" } }, { "type": "Button", "props": { "y": 98, "x": 409, "var": "btnReturnNovice1", "stateNum": 1, "skin": "images/component/frame_btn_small_blue.png", "labelStrokeColor": "#a17338", "labelStroke": 2, "labelSize": 26, "labelColors": "#ffffff,#ffffff,#ffffff,#ffffff", "labelBold": true, "label": "跳过", "sizeGrid": "0,32,0,34" }, "child": [{ "type": "Script", "props": { "runtime": "ScaleAnimScript" } }] }] }] }, { "type": "View", "props": { "width": 750, "name": "item1", "height": 1334 }, "child": [{ "type": "View", "props": { "y": 1256, "x": 263, "var": "viewInteractArea", "name": "ViewInteractArea" }, "child": [{ "type": "View", "props": { "y": 0, "x": 0, "name": "ViewMASK", "alpha": 0.5 }, "child": [{ "type": "Rect", "props": { "y": -1299, "x": -750, "width": 1500, "lineWidth": 1, "height": 1155, "fillColor": "#000000" } }, { "type": "Rect", "props": { "y": 126, "x": -750, "width": 1500, "lineWidth": 1, "height": 1155, "fillColor": "#000000" } }, { "type": "Rect", "props": { "y": -144, "x": -750, "width": 615, "lineWidth": 1, "height": 270, "fillColor": "#000000" } }, { "type": "Rect", "props": { "y": -144, "x": 135, "width": 615, "lineWidth": 1, "height": 270, "fillColor": "#000000" } }, { "type": "Image", "props": { "y": -144, "x": -135, "width": 270, "skin": "images/novice/interact_circle.png", "height": 270 } }] }, { "type": "View", "props": { "y": 0, "x": 0, "var": "viewClickTargetContainer", "name": "viewClickTargetContainer" } }, { "type": "Image", "props": { "y": 30, "x": 30, "var": "imgFinger", "skin": "images/novice/finger.png" } }] }, { "type": "Image", "props": { "y": 773, "x": 88, "var": "imgClickCharacter", "skin": "images/novice/character.png" }, "child": [{ "type": "Label", "props": { "y": 171, "x": 225, "wordWrap": true, "width": 300, "var": "lblClickScript", "text": "文本文本文本文本文本文本文本文本文本文本文本文本文本文本文本文本", "overflow": "scroll", "leading": 10, "height": 103, "fontSize": 26, "color": "#a17338" } }, { "type": "Button", "props": { "y": 96, "x": 407, "var": "btnReturnNovice2", "stateNum": 1, "skin": "images/component/frame_btn_small_blue.png", "labelStrokeColor": "#a17338", "labelStroke": 2, "labelSize": 26, "labelColors": "#ffffff,#ffffff,#ffffff,#ffffff", "labelBold": true, "label": "跳过", "sizeGrid": "0,32,0,34" }, "child": [{ "type": "Script", "props": { "runtime": "ScaleAnimScript" } }] }] }] }] }] };
        guide.NoviceViewUI = NoviceViewUI;
    })(guide = ui.guide || (ui.guide = {}));
})(ui || (ui = {}));
(function (ui) {
    var hall;
    (function (hall) {
        class BuffIconListUI extends View {
            constructor() { super(); }
            createChildren() {
                super.createChildren();
                this.createView(ui.hall.BuffIconListUI.uiView);
            }
        }
        BuffIconListUI.uiView = { "type": "View", "props": {}, "child": [{ "type": "HBox", "props": { "y": 69, "x": 313, "var": "boxBuffList" } }] };
        hall.BuffIconListUI = BuffIconListUI;
    })(hall = ui.hall || (ui.hall = {}));
})(ui || (ui = {}));
(function (ui) {
    var hall;
    (function (hall) {
        class HallSceneUI extends View {
            constructor() { super(); }
            createChildren() {
                View.regComponent("MonsterSprite", MonsterSprite);
                View.regComponent("ScaleAnimScript", ScaleAnimScript);
                super.createChildren();
                this.createView(ui.hall.HallSceneUI.uiView);
            }
        }
        HallSceneUI.uiView = { "type": "View", "props": { "y": 0, "x": 0, "width": 750, "height": 1334 }, "child": [{ "type": "View", "props": { "width": 750, "var": "mainView", "name": "mainView", "height": 1334, "centerY": 0, "centerX": 0 }, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "skin": "images/bg.jpg", "cacheAs": "bitmap" }, "child": [{ "type": "Image", "props": { "y": 68, "x": 140, "skin": "images/effect/uiElectric/electric_4.png" }, "compId": 356 }] }, { "type": "Image", "props": { "y": 0, "x": 375, "width": 1, "var": "imgUserInfo", "name": "imgUserInfo", "height": 1 }, "child": [{ "type": "ProgressBar", "props": { "y": 31, "x": -120, "var": "progressBarExp", "value": 0, "skin": "images/game_exp_pro.png", "name": "progressBarExp" } }, { "type": "Image", "props": { "y": 13, "x": -161, "skin": "images/core/game_exp_pro_head.png" }, "child": [{ "type": "Image", "props": { "y": -4, "x": 275, "skin": "images/gicon_boss.png" } }] }, { "type": "Label", "props": { "y": 38, "x": -52, "width": 100, "var": "txtSection", "text": "1/10", "strokeColor": "#946430", "stroke": 3, "name": "txtSection", "fontSize": 24, "color": "#ffffff", "align": "center" } }, { "type": "Label", "props": { "y": 32, "x": -198, "width": 150, "var": "txtLevel", "text": 1, "strokeColor": "#946430", "stroke": 3, "name": "txtLevel", "fontSize": 30, "color": "#ffffff", "bold": true, "align": "center" } }, { "type": "Image", "props": { "y": 17, "x": -347, "skin": "images/coin_frame.png", "name": "imgMoney" }, "child": [{ "type": "Image", "props": { "y": 25, "x": 10, "var": "imgMoney", "skin": "images/core/coin_big.png", "name": "imgMoney", "anchorY": 0.5, "anchorX": 0.5 }, "child": [{ "type": "Label", "props": { "y": 15, "x": 63, "width": 200, "var": "txtMoney", "text": 1000, "name": "txtMoney", "fontSize": 30, "color": "#ffffff", "bold": true, "align": "left" } }] }] }, { "type": "Image", "props": { "y": 76, "x": -341, "var": "imgDiamond", "skin": "images/coin_frame.png", "name": "imgDiamond" }, "child": [{ "type": "Image", "props": { "y": -5, "x": -22, "skin": "images/core/diamond_icon.png" } }, { "type": "Label", "props": { "y": 10, "x": 43, "width": 107, "var": "txtDiamond", "text": 0, "name": "txtDiamond", "height": 30, "fontSize": 30, "color": "#ffffff", "align": "left" } }] }, { "type": "Label", "props": { "y": 208, "x": 160, "width": 80, "var": "txtKingLevel", "text": 1, "strokeColor": "#946430", "stroke": 3, "skewY": -10, "name": "txtKingLevel", "fontSize": 26, "color": "#ffffff", "bold": true, "align": "center" } }, { "type": "Image", "props": { "y": 1083, "x": -90, "var": "imgTrain", "skin": "images/component/frame_9calce_08.png", "name": "imgTrain" }, "child": [{ "type": "Label", "props": { "y": 21, "x": 31, "text": "训练中...", "strokeColor": "#946430", "stroke": 3, "name": "txtTrain", "fontSize": 30, "color": "#ffffff", "bold": true, "alpha": 0.8, "align": "center" } }] }, { "type": "Image", "props": { "y": 126, "x": -145, "var": "gameTimebg", "skin": "images/hall_time_bg.png" } }, { "type": "Label", "props": { "y": 145, "x": -135, "width": 80, "var": "txtGameTime", "text": "00:00", "strokeColor": "#ffffff", "stroke": 2, "name": "txtGameTime", "fontSize": 26, "color": "#3568fd", "bold": true, "alpha": 1, "align": "center" } }, { "type": "Image", "props": { "y": 102, "x": -162, "var": "gameTimeImg", "skin": "images/game_gameLasttime.png", "sizeGrid": "29,48,27,42" } }] }, { "type": "Image", "props": { "y": 550, "x": 1, "width": 110, "visible": false, "var": "imgBorn", "name": "imgBorn", "mouseEnabled": false, "height": 90, "cacheAs": "bitmap", "anchorY": 0.5, "anchorX": 0.5, "alpha": 0.5 } }, { "type": "Image", "props": { "y": 112, "x": 220, "width": 110, "visible": false, "var": "imgDestination", "name": "imgDestination", "mouseEnabled": false, "height": 90, "alpha": 0.5 } }, { "type": "Image", "props": { "y": 211, "x": 240, "var": "btnDelete", "skin": "images/huishou_icon_0.png", "name": "btnDelete" } }, { "type": "List", "props": { "y": 320, "width": 572, "var": "carparkList", "spaceY": 16, "spaceX": 10, "repeatY": 5, "repeatX": 4, "name": "carparkList", "mouseEnabled": false, "height": 700, "centerX": 45 }, "child": [{ "type": "Box", "props": { "y": 80, "x": 67, "width": 100, "visible": false, "renderType": "render", "height": 100 }, "child": [{ "type": "Sprite", "props": { "y": -14, "x": -14, "width": 128, "runtime": "MonsterSprite", "name": "car", "height": 128 }, "child": [{ "type": "Image", "props": { "y": 75, "x": 64, "width": 100, "visible": false, "skin": "images/game_select_light.png", "name": "imgLight", "height": 50, "anchorY": 0.5, "anchorX": 0.5 } }, { "type": "Image", "props": { "y": 64, "x": 64, "visible": false, "skin": "images/game_lockIcon.png", "name": "imgLock", "anchorY": 0.5, "anchorX": 0.5 } }, { "type": "Image", "props": { "y": 87, "x": 79, "width": 31, "visible": false, "skin": "images/lv_001.png", "sizeGrid": "10,9,11,8", "name": "imgLevel", "height": 25 }, "child": [{ "type": "Label", "props": { "y": 3, "x": 4, "width": 23, "text": "0", "name": "txtLevel", "height": 18, "fontSize": 18, "color": "#ffffff", "align": "center" } }] }, { "type": "Label", "props": { "y": 24, "x": 34, "width": 53, "text": "18关", "strokeColor": "#83551a", "stroke": 2, "name": "txt_openLevel", "height": 18, "fontSize": 18, "color": "#ffffff", "align": "center" } }, { "type": "Sprite", "props": { "y": 74, "x": 62, "width": 1, "name": "heroPos", "height": 1 } }] }] }] }, { "type": "Sprite", "props": { "y": 170, "x": 535, "width": 32, "var": "spMountGuard", "runtime": "MonsterSprite", "name": "spMountGuard", "height": 32 } }, { "type": "View", "props": { "y": 0, "x": 0, "var": "roadView", "name": "roadView" } }, { "type": "View", "props": { "y": 10, "x": 10, "name": "effectView" } }, { "type": "View", "props": { "y": 1, "x": 0, "var": "menuView", "name": "menuView", "cacheAs": "bitmap" }, "child": [{ "type": "Button", "props": { "y": 1093, "x": 30, "var": "btnAcce", "stateNum": 1, "skin": "images/gbtn_acce.png", "scaleY": 1, "scaleX": 1, "name": "btnAcce" }, "compId": 11, "child": [{ "type": "Script", "props": { "runtime": "ScaleAnimScript" } }, { "type": "Image", "props": { "y": 60, "x": 75, "visible": false, "skin": "images/core/video_icon.png", "name": "imgAd" } }, { "type": "Image", "props": { "y": -16, "x": 0, "visible": false, "skin": "images/daojishi_di.png", "name": "imgAcce" }, "child": [{ "type": "Label", "props": { "y": 8, "x": 8, "width": 80, "text": "00:00", "name": "txtAcceTime", "fontSize": 28, "color": "#ffffff", "align": "center" } }] }] }, { "type": "Button", "props": { "y": 1163, "x": 183, "var": "btnShopShortcut", "stateNum": 1, "skin": "images/gbtn_shop.png", "name": "btnShopShortcut" }, "child": [{ "type": "Script", "props": { "runtime": "ScaleAnimScript" } }, { "type": "Image", "props": { "y": 109, "x": 30, "skin": "images/core/coin_40x40.png", "name": "imgPrice", "anchorY": 0.5, "anchorX": 0.5 }, "child": [{ "type": "Label", "props": { "y": 4, "x": 45, "width": 150, "text": 1000, "strokeColor": "#946430", "stroke": 3, "name": "txtPrice", "height": 32, "fontSize": 30, "color": "#ffffff", "bold": true, "align": "left" } }] }, { "type": "Label", "props": { "y": 33, "x": 13, "width": 150, "text": "英雄 Lv1", "strokeColor": "#ffe7b0", "stroke": 3, "name": "txtLevel", "fontSize": 28, "color": "#98592e", "bold": true, "align": "center" } }] }, { "type": "Button", "props": { "y": 1163, "x": 400, "var": "btnShop", "stateNum": 1, "skin": "images/gbtn_shop.png", "name": "btnShop" }, "child": [{ "type": "Script", "props": { "runtime": "ScaleAnimScript" } }, { "type": "Image", "props": { "y": -12, "x": 41, "skin": "images/shop_btn_icon.png" } }, { "type": "Label", "props": { "y": 91, "x": 13, "width": 150, "text": "酒馆", "strokeColor": "#946430", "stroke": 3, "name": "txtPrice", "fontSize": 34, "color": "#ffffff", "bold": true, "align": "center" } }, { "type": "Image", "props": { "y": -3, "x": 136, "visible": false, "skin": "images/core/red_dot_hint.png", "name": "imgRedPoint" } }] }, { "type": "Button", "props": { "y": 809, "x": -3, "var": "btn_online", "stateNum": 1, "skin": "images/hall/hall_online_reward.png" }, "child": [{ "type": "Script", "props": { "runtime": "ScaleAnimScript" } }, { "type": "Label", "props": { "y": 60, "x": 2, "width": 86, "var": "txt_diamondTime", "text": "05:00", "strokeColor": "#8d5d2e", "stroke": 2, "height": 26, "fontSize": 22, "color": "#ffffff", "bold": true, "align": "center" } }] }, { "type": "Button", "props": { "y": 273, "x": 2, "var": "btnTask", "stateNum": 1, "skin": "images/gbtn_task.png", "name": "btnTask" }, "child": [{ "type": "Script", "props": { "runtime": "ScaleAnimScript" } }, { "type": "Image", "props": { "y": 4, "x": 86, "visible": false, "skin": "images/core/red_dot_hint.png", "name": "imgRedPoint" } }, { "type": "Image", "props": { "y": -56, "x": 35, "skin": "images/effect/uiBird/niao_1.png" }, "compId": 355 }] }, { "type": "Button", "props": { "y": 563, "x": -15, "var": "btnLuckPrize", "stateNum": 1, "skin": "images/gbtn_luck.png", "name": "btnLuckPrize" }, "child": [{ "type": "Script", "props": { "runtime": "ScaleAnimScript" } }, { "type": "Image", "props": { "y": 10, "x": 82, "visible": false, "skin": "images/core/red_dot_hint.png", "name": "imgRedPoint" } }, { "type": "Image", "props": { "y": -4, "x": -2, "skin": "images/effect/uiLight/dx_zpd_3.png" }, "compId": 357 }] }, { "type": "Button", "props": { "y": 898, "x": -3, "var": "btnFeedback", "stateNum": 1, "skin": "images/gbtn_feedback.png", "name": "btnFeedback" }, "child": [{ "type": "Script", "props": { "runtime": "ScaleAnimScript" } }] }, { "type": "Button", "props": { "y": 988, "x": -3, "var": "btnMore", "stateNum": 1, "skin": "images/more_icon.png", "name": "btnMore" }, "child": [{ "type": "Script", "props": { "runtime": "ScaleAnimScript" } }, { "type": "Image", "props": { "y": 3, "x": 59, "visible": false, "var": "followRedPoint", "skin": "images/core/red_dot_hint.png", "name": "followRedPoint" } }] }, { "type": "Button", "props": { "y": 1095, "x": 606, "var": "btnStrengthen", "stateNum": 1, "skin": "images/gbtn_strengthen.png", "name": "btnStrengthen" }, "child": [{ "type": "Script", "props": { "runtime": "ScaleAnimScript" } }, { "type": "Image", "props": { "y": 0, "x": 71, "visible": false, "var": "strengthenRedPoint", "skin": "images/core/red_dot_hint.png", "name": "strengthenRedPoint" } }] }, { "type": "Button", "props": { "y": 1079, "x": 590, "visible": false, "var": "btnPower", "stateNum": 1, "skin": "images/gbtn_fire.png", "name": "btnPower" }, "child": [{ "type": "Script", "props": { "runtime": "ScaleAnimScript" } }] }, { "type": "Button", "props": { "y": 132, "x": 497, "width": 100, "var": "btnEvolution", "name": "btnEvolution", "height": 100 }, "child": [{ "type": "Script", "props": { "runtime": "ScaleAnimScript" } }, { "type": "Image", "props": { "y": 1, "x": 86, "skin": "images/evolution_hint_frame.png" }, "child": [{ "type": "Image", "props": { "y": 10, "x": 57, "visible": false, "skin": "" } }, { "type": "Label", "props": { "y": 28, "x": -3, "width": 80, "text": "守卫", "skewY": -20, "name": "txtKingLevel", "height": 30, "fontSize": 26, "color": "#4f8d2d", "bold": true, "align": "center" } }] }, { "type": "Image", "props": { "y": 12, "x": 140, "var": "kingUpdateImg", "skin": "images/core/red_dot_hint.png" } }] }, { "type": "Button", "props": { "y": 700, "x": 0, "width": 88, "visible": false, "var": "btnStagePrize", "name": "btnStagePrize", "labelSize": 30, "height": 106 }, "child": [{ "type": "Script", "props": { "runtime": "ScaleAnimScript" } }] }, { "type": "Button", "props": { "y": 1200, "x": 30, "var": "btn_fly", "stateNum": 1, "skin": "images/core/core_fly_icon.png", "rotation": 0 }, "compId": 392 }, { "type": "Button", "props": { "y": 1200, "x": 604, "var": "btn_eliminate", "stateNum": 1, "skin": "images/core/core_eliminate_icon.png", "rotation": 0 }, "compId": 393 }, { "type": "Button", "props": { "y": 266, "x": 638, "var": "btn_block", "stateNum": 1, "skin": "images/core/core_block_icon.png", "rotation": 0 }, "compId": 394 }, { "type": "Box", "props": { "y": 127, "width": 457, "var": "menuBox", "left": 0, "height": 109 }, "child": [{ "type": "Image", "props": { "width": 457, "skin": "images/hall/hall_suofang_bg.png", "sizeGrid": "45,44,50,0", "mouseThrough": false, "mouseEnabled": false, "height": 109 } }, { "type": "Button", "props": { "y": 54, "x": 420, "var": "btn_arrow", "stateNum": 1, "skin": "images/hall/hall_arrow.png", "scaleX": 1, "anchorY": 0.5, "anchorX": 0.5 } }, { "type": "Button", "props": { "y": 11, "x": 6, "var": "btn_ranking", "stateNum": 1, "skin": "images/hall/hall_rankBtn.png" }, "child": [{ "type": "Script", "props": { "runtime": "ScaleAnimScript" } }] }, { "type": "Button", "props": { "y": 10, "x": 101, "var": "btn_follow", "stateNum": 1, "skin": "images/hall/hall_followBtn.png" }, "child": [{ "type": "Script", "props": { "runtime": "ScaleAnimScript" } }, { "type": "Image", "props": { "y": 3, "x": 57, "visible": false, "skin": "images/core/red_dot_hint.png", "name": "imgRedPoint" } }] }, { "type": "Button", "props": { "y": 11, "x": 196, "var": "btn_concur", "stateNum": 1, "skin": "images/hall/hall_concurBtn.png" }, "child": [{ "type": "Script", "props": { "runtime": "ScaleAnimScript" } }, { "type": "Image", "props": { "y": 3, "x": 57, "visible": false, "skin": "images/core/red_dot_hint.png", "name": "imgRedPoint" } }] }, { "type": "Button", "props": { "y": 9, "x": 291, "var": "btn_sign", "stateNum": 1, "skin": "images/hall/hall_dailySingBtn.png" }, "child": [{ "type": "Script", "props": { "runtime": "ScaleAnimScript" } }, { "type": "Image", "props": { "y": 2, "x": 59, "visible": false, "skin": "images/core/red_dot_hint.png", "name": "imgRedPoint" } }] }, { "type": "Image", "props": { "y": -7, "x": 425, "visible": false, "var": "menuRedPoint", "skin": "images/core/red_dot_hint.png" } }] }] }, { "type": "View", "props": { "y": 987, "x": -63, "width": 157, "visible": false, "var": "settingView", "rotation": 0, "name": "settingView", "height": 120 }, "child": [{ "type": "Image", "props": { "y": 9, "x": 0, "skin": "images/game_menu2.png" } }, { "type": "Button", "props": { "y": 55, "x": 88, "stateNum": 1, "skin": "images/game_menu1.png", "name": "menuBtn", "mouseEnabled": false, "anchorY": 0.5, "anchorX": 0.5 }, "child": [{ "type": "Script", "props": { "y": 0, "x": 0, "runtime": "ScaleAnimScript" } }] }, { "type": "Button", "props": { "y": 30, "x": 4, "stateNum": 1, "skin": "images/home_menu_server.png", "name": "menuServerBtn", "mouseEnabled": false }, "child": [{ "type": "Script", "props": { "y": 0, "x": 0, "runtime": "ScaleAnimScript" } }] }, { "type": "Button", "props": { "y": 103, "x": 4, "stateNum": 1, "skin": "images/home_menu_music1.png", "name": "menuMusicBtn", "mouseEnabled": false }, "child": [{ "type": "Script", "props": { "y": 0, "x": 0, "runtime": "ScaleAnimScript" } }] }] }, { "type": "Button", "props": { "y": 1269, "x": 654, "width": 84, "visible": false, "var": "btnMiniProgram", "stateNum": 1, "skin": "images/miniProgram_icon.png", "name": "btnMiniProgram", "labelSize": 30, "height": 61, "anchorY": 0.5, "anchorX": 0.5 }, "child": [{ "type": "Script", "props": { "runtime": "ScaleAnimScript" } }] }, { "type": "Button", "props": { "y": 410, "x": 4, "visible": false, "var": "btnCarStore", "stateNum": 1, "skin": "images/box_001.png", "name": "btnCarStore", "labelSize": 30 }, "child": [{ "type": "Script", "props": { "runtime": "ScaleAnimScript" } }] }, { "type": "Image", "props": { "y": 1201, "x": 725, "visible": false, "var": "imgPowerBg", "skin": "images/gpro_powerBg.png", "name": "imgPowerBg", "anchorY": 1, "anchorX": 0.5 }, "child": [{ "type": "ProgressBar", "props": { "y": 90, "x": 11, "var": "progressBarPower", "value": 0, "skin": "images/gpro_power.png", "rotation": -90, "name": "progressBarPower", "anchorY": 0.5 } }, { "type": "Image", "props": { "y": 80, "x": 11, "visible": false, "var": "imgPowerCar", "skin": "images/core/coin_40x40.png", "name": "imgPowerCar", "anchorY": 0.5, "anchorX": 0.5, "alpha": 0.9 } }] }, { "type": "View", "props": { "y": 110, "x": 654, "width": 96, "visible": false, "var": "surpassView", "name": "surpassView", "height": 160 } }] }, { "type": "View", "props": { "y": 10, "x": 10, "var": "viewBuffContainer" } }, { "type": "View", "props": { "y": 0, "x": 0, "var": "viewSkyDropContainer" } }, { "type": "View", "props": { "width": 750, "visible": false, "var": "acceEffectView", "name": "acceEffectView", "height": 1334, "centerY": 0, "centerX": 0 }, "child": [{ "type": "Image", "props": { "y": 565, "x": 375, "skin": "images/acce_effect.png", "anchorY": 0.5, "anchorX": 0.5 }, "compId": 127 }] }, { "type": "View", "props": { "y": 10, "x": 10, "var": "viewNoviceContainer" } }], "animations": [{ "nodes": [{ "target": 11, "keyframes": { "scaleY": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 11, "key": "scaleY", "index": 0 }, { "value": 0.96, "tweenMethod": "linearNone", "tween": true, "target": 11, "key": "scaleY", "index": 15 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 11, "key": "scaleY", "index": 30 }], "scaleX": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 11, "key": "scaleX", "index": 0 }, { "value": 0.96, "tweenMethod": "linearNone", "tween": true, "target": 11, "key": "scaleX", "index": 15 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 11, "key": "scaleX", "index": 30 }] } }], "name": "ani1", "id": 1, "frameRate": 24, "action": 0 }, { "nodes": [{ "target": 127, "keyframes": { "y": [{ "value": 1500, "tweenMethod": "backOut", "tween": true, "target": 127, "key": "y", "index": 0 }, { "value": 600, "tweenMethod": "linearNone", "tween": true, "target": 127, "key": "y", "index": 10 }, { "value": 610, "tweenMethod": "backIn", "tween": true, "target": 127, "key": "y", "index": 20 }, { "value": -150, "tweenMethod": "linearNone", "tween": true, "target": 127, "key": "y", "index": 35 }] } }], "name": "ani2", "id": 2, "frameRate": 24, "action": 0 }, { "nodes": [], "name": "ani3", "id": 3, "frameRate": 24, "action": 2 }, { "nodes": [{ "target": 355, "keyframes": { "skin": [{ "value": "images/effect/uiBird/niao_1.png", "tweenMethod": "linearNone", "tween": false, "target": 355, "key": "skin", "index": 0 }, { "value": "images/effect/uiBird/niao_2.png", "tweenMethod": "linearNone", "tween": false, "target": 355, "key": "skin", "index": 3 }, { "value": "images/effect/uiBird/niao_3.png", "tweenMethod": "linearNone", "tween": false, "target": 355, "key": "skin", "index": 6 }, { "value": "images/effect/uiBird/niao_4.png", "tweenMethod": "linearNone", "tween": false, "target": 355, "key": "skin", "index": 9 }, { "value": "images/effect/uiBird/niao_5.png", "tweenMethod": "linearNone", "tween": false, "target": 355, "key": "skin", "index": 12 }, { "value": "images/effect/uiBird/niao_6.png", "tweenMethod": "linearNone", "tween": false, "target": 355, "key": "skin", "index": 15 }, { "value": "images/effect/uiBird/niao_7.png", "tweenMethod": "linearNone", "tween": false, "target": 355, "key": "skin", "index": 18 }, { "value": "images/effect/uiBird/niao_1.png", "tweenMethod": "linearNone", "tween": false, "target": 355, "key": "skin", "index": 35 }] } }, { "target": 356, "keyframes": { "skin": [{ "value": "images/effect/uiElectric/electric_1.png", "tweenMethod": "linearNone", "tween": false, "target": 356, "key": "skin", "index": 0 }, { "value": "images/effect/uiElectric/electric_2.png", "tweenMethod": "linearNone", "tween": false, "target": 356, "key": "skin", "index": 5 }, { "value": "images/effect/uiElectric/electric_3.png", "tweenMethod": "linearNone", "tween": false, "target": 356, "key": "skin", "index": 10 }, { "value": "images/effect/uiElectric/electric_4.png", "tweenMethod": "linearNone", "tween": false, "target": 356, "key": "skin", "index": 15 }, { "value": "images/effect/uiElectric/electric_1.png", "tweenMethod": "linearNone", "tween": false, "target": 356, "key": "skin", "index": 20 }, { "value": "images/effect/uiElectric/electric_2.png", "tweenMethod": "linearNone", "tween": false, "target": 356, "key": "skin", "index": 25 }, { "value": "images/effect/uiElectric/electric_3.png", "tweenMethod": "linearNone", "tween": false, "target": 356, "key": "skin", "index": 30 }, { "value": "images/effect/uiElectric/electric_4.png", "tweenMethod": "linearNone", "tween": false, "target": 356, "key": "skin", "index": 35 }] } }, { "target": 357, "keyframes": { "skin": [{ "value": "images/effect/uiLight/dx_zpd_1.png", "tweenMethod": "linearNone", "tween": false, "target": 357, "key": "skin", "index": 0 }, { "value": "images/effect/uiLight/dx_zpd_2.png", "tweenMethod": "linearNone", "tween": false, "target": 357, "key": "skin", "index": 12 }, { "value": "images/effect/uiLight/dx_zpd_3.png", "tweenMethod": "linearNone", "tween": false, "target": 357, "key": "skin", "index": 25 }] } }], "name": "ani4", "id": 4, "frameRate": 24, "action": 2 }, { "nodes": [{ "target": 394, "keyframes": { "rotation": [{ "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 394, "key": "rotation", "index": 0 }, { "value": 12, "tweenMethod": "linearNone", "tween": true, "target": 394, "key": "rotation", "index": 3 }, { "value": -12, "tweenMethod": "linearNone", "tween": true, "target": 394, "key": "rotation", "index": 9 }, { "value": 8, "tweenMethod": "linearNone", "tween": true, "target": 394, "key": "rotation", "index": 15 }, { "value": -8, "tweenMethod": "linearNone", "tween": true, "target": 394, "key": "rotation", "index": 21 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 394, "key": "rotation", "index": 24 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 394, "key": "rotation", "index": 70 }] } }, { "target": 392, "keyframes": { "rotation": [{ "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 392, "key": "rotation", "index": 0 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 392, "key": "rotation", "index": 20 }, { "value": 12, "tweenMethod": "linearNone", "tween": true, "target": 392, "key": "rotation", "index": 23 }, { "value": -12, "tweenMethod": "linearNone", "tween": true, "target": 392, "key": "rotation", "index": 29 }, { "value": 8, "tweenMethod": "linearNone", "tween": true, "target": 392, "key": "rotation", "index": 35 }, { "value": -8, "tweenMethod": "linearNone", "tween": true, "target": 392, "key": "rotation", "index": 41 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 392, "key": "rotation", "index": 44 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 392, "key": "rotation", "index": 70 }] } }, { "target": 393, "keyframes": { "rotation": [{ "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 393, "key": "rotation", "index": 0 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 393, "key": "rotation", "index": 70 }, { "value": 12, "tweenMethod": "linearNone", "tween": true, "target": 393, "key": "rotation", "index": 73 }, { "value": -12, "tweenMethod": "linearNone", "tween": true, "target": 393, "key": "rotation", "index": 79 }, { "value": 8, "tweenMethod": "linearNone", "tween": true, "target": 393, "key": "rotation", "index": 85 }, { "value": -8, "tweenMethod": "linearNone", "tween": true, "target": 393, "key": "rotation", "index": 91 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 393, "key": "rotation", "index": 94 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 393, "key": "rotation", "index": 210 }] } }], "name": "navToMiniAni", "id": 5, "frameRate": 24, "action": 0 }] };
        hall.HallSceneUI = HallSceneUI;
    })(hall = ui.hall || (ui.hall = {}));
})(ui || (ui = {}));
(function (ui) {
    var login;
    (function (login) {
        class LoginUI extends View {
            constructor() { super(); }
            createChildren() {
                super.createChildren();
                this.createView(ui.login.LoginUI.uiView);
            }
        }
        LoginUI.uiView = { "type": "View", "props": { "width": 750, "height": 1334 }, "child": [{ "type": "Label", "props": { "y": 516, "x": 209, "width": 84, "text": "帐号：", "height": 32, "fontSize": 32, "color": "#ffffff" } }, { "type": "Rect", "props": { "y": 512, "x": 296, "width": 240, "lineWidth": 2, "lineColor": "#ffffff", "height": 40, "fillColor": "#000000" } }, { "type": "TextInput", "props": { "y": 512, "x": 306, "width": 220, "var": "inputAccount", "valign": "middle", "type": "text", "promptColor": "#9a9a9a", "prompt": "输入帐号", "height": 40, "fontSize": 24, "color": "#ffffff" } }, { "type": "Button", "props": { "y": 652, "x": 311, "width": 144, "var": "btnSubmit", "labelSize": 24, "labelColors": "#000000,#0000FF", "label": "登  录", "height": 32 }, "child": [{ "type": "Rect", "props": { "y": 0, "x": 0, "width": 144, "lineWidth": 1, "height": 32, "fillColor": "#ffffff" } }] }, { "type": "Label", "props": { "y": 576, "x": 209, "width": 84, "text": "密码：", "height": 32, "fontSize": 32, "color": "#ffffff" } }, { "type": "Rect", "props": { "y": 572, "x": 296, "width": 240, "lineWidth": 2, "lineColor": "#ffffff", "height": 40, "fillColor": "#000000" } }, { "type": "TextInput", "props": { "y": 572, "x": 306, "width": 220, "var": "inputPwd", "valign": "middle", "type": "password", "promptColor": "#9a9a9a", "prompt": "输入密码", "height": 40, "fontSize": 24, "color": "#ffffff" } }] };
        login.LoginUI = LoginUI;
    })(login = ui.login || (ui.login = {}));
})(ui || (ui = {}));
(function (ui) {
    var login;
    (function (login) {
        class LoginSceneUI extends View {
            constructor() { super(); }
            createChildren() {
                View.regComponent("ScaleAnimScript", ScaleAnimScript);
                super.createChildren();
                this.createView(ui.login.LoginSceneUI.uiView);
            }
        }
        LoginSceneUI.uiView = { "type": "View", "props": { "y": 0, "x": 0, "width": 750, "height": 1334 }, "child": [{ "type": "View", "props": { "y": 0, "x": 0, "width": 750, "var": "mainView", "name": "mainView", "height": 1334 }, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "skin": "loading/loading_bg.jpg" } }, { "type": "Button", "props": { "y": 918, "x": 206, "var": "btnStart", "stateNum": 1, "skin": "loading/start_btn.png", "name": "btnStart" }, "child": [{ "type": "Script", "props": { "runtime": "ScaleAnimScript" } }] }, { "type": "Label", "props": { "y": 1197, "x": 309, "width": 139, "text": "健康游戏公告", "strokeColor": "#000000", "stroke": 2, "height": 28, "fontSize": 24, "color": "#ffffff", "align": "center" } }, { "type": "Label", "props": { "y": 1237, "x": 43, "width": 571, "text": "抵制不良游戏，拒绝盗版游戏。注意自我保护，谨防受骗上当。", "strokeColor": "#000000", "stroke": 2, "height": 28, "fontSize": 24, "color": "#ffffff", "align": "center" } }, { "type": "Label", "props": { "y": 1272, "x": 43, "width": 571, "text": "适度游戏益脑，沉迷游戏伤身。合理安排时间，享受健康生活。", "strokeColor": "#000000", "stroke": 2, "height": 28, "fontSize": 24, "color": "#ffffff", "align": "center" } }, { "type": "Box", "props": { "y": 1059, "x": 233, "visible": false, "var": "probox" }, "child": [{ "type": "Image", "props": { "var": "progressBar", "skin": "loading/bar_bg.png" }, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "width": 0, "var": "imgBar", "skin": "loading/bar.png", "sizeGrid": "0,16,0,15" } }] }, { "type": "Label", "props": { "y": 41, "x": 42, "width": 199, "var": "lblLoadingDesc", "text": "英雄准备中...", "strokeColor": "#000000", "stroke": 2, "height": 28, "fontSize": 24, "color": "#ffffff", "bold": true, "align": "center" } }, { "type": "Label", "props": { "y": 1, "width": 280, "visible": false, "var": "lblProgress", "strokeColor": "#000000", "stroke": 3, "height": 28, "fontSize": 20, "color": "#ffffff", "align": "center" } }] }] }, { "type": "Image", "props": { "visible": false, "var": "imgStart", "top": 0, "skin": "loading/start_bg.jpg", "right": 0, "name": "imgStart", "left": 0, "bottom": 0 } }, { "type": "View", "props": { "y": 1053, "x": 507, "width": 140, "height": 53 }, "child": [{ "type": "Button", "props": { "y": 4, "x": 20, "width": 99, "visible": false, "var": "btnRefresh", "labelStrokeColor": "#000000", "labelStroke": 2, "labelSize": 22, "labelColors": "#FFFFFF", "labelBold": true, "label": "立即刷新", "height": 36 } }] }] };
        login.LoginSceneUI = LoginSceneUI;
    })(login = ui.login || (ui.login = {}));
})(ui || (ui = {}));
(function (ui) {
    var luckPrize;
    (function (luckPrize) {
        class LuckPrizeItemViewUI extends View {
            constructor() { super(); }
            createChildren() {
                View.regComponent("ScaleAnimScript", ScaleAnimScript);
                super.createChildren();
                this.createView(ui.luckPrize.LuckPrizeItemViewUI.uiView);
            }
        }
        LuckPrizeItemViewUI.uiView = { "type": "View", "props": { "width": 600, "height": 400 }, "child": [{ "type": "View", "props": { "width": 748, "name": "bgView", "height": 519, "centerX": 0 }, "child": [{ "type": "Image", "props": { "y": 214, "x": 376, "width": 600, "var": "imgLight", "skin": "images/common_bg_light.png", "name": "imgLight", "height": 600, "anchorY": 0.5, "anchorX": 0.5 } }, { "type": "Button", "props": { "y": -171, "x": 596, "stateNum": 1, "skin": "images/component/frame_close_btn.png", "name": "btnExit" }, "child": [{ "type": "Script", "props": { "runtime": "ScaleAnimScript" } }] }, { "type": "Image", "props": { "y": -147, "x": 84, "skin": "images/luckLottery/luck_item_title.png" } }, { "type": "Image", "props": { "y": 209, "x": 374, "skin": "images/component/frame_9calce_03.png", "name": "imgItemBg", "anchorY": 0.5, "anchorX": 0.5, "sizeGrid": "26,31,23,28" } }, { "type": "Image", "props": { "y": 210, "x": 374, "visible": false, "skin": "images/luckLottery/luck_prize_3.png", "name": "imgItem", "anchorY": 0.5, "anchorX": 0.5 } }, { "type": "Label", "props": { "y": 445, "x": 89, "width": 578, "text": "先知球x1", "strokeColor": "#946430", "stroke": 2, "name": "txtItemName", "height": 50, "fontSize": 50, "color": "#ffebbc", "bold": true, "align": "center" } }] }] };
        luckPrize.LuckPrizeItemViewUI = LuckPrizeItemViewUI;
    })(luckPrize = ui.luckPrize || (ui.luckPrize = {}));
})(ui || (ui = {}));
(function (ui) {
    var luckPrize;
    (function (luckPrize) {
        class LuckPrizeViewUI extends View {
            constructor() { super(); }
            createChildren() {
                View.regComponent("ScaleAnimScript", ScaleAnimScript);
                super.createChildren();
                this.createView(ui.luckPrize.LuckPrizeViewUI.uiView);
            }
        }
        LuckPrizeViewUI.uiView = { "type": "View", "props": { "y": 0, "x": 0, "width": 750, "name": "rolledTIme", "height": 1092 }, "child": [{ "type": "View", "props": { "y": 0, "x": 0, "width": 750, "var": "mainView", "name": "mainView", "height": 1092 }, "child": [{ "type": "Image", "props": { "y": 532, "x": 371, "var": "imgBg", "skin": "images/luckLottery/luck_huanpan.png", "rotation": 0, "name": "imgBg", "anchorY": 0.5, "anchorX": 0.5 }, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "skin": "images/luckLottery/luck_huanpan_light.png", "name": "imgEffect1" }, "compId": 68 }, { "type": "Image", "props": { "y": 0, "x": 0, "visible": false, "skin": "images/luck_huanpan_light.png", "name": "imgEffect2" }, "compId": 69 }] }, { "type": "Image", "props": { "y": -71, "x": 37, "skin": "images/luckLottery/luck_title.png" } }, { "type": "Label", "props": { "y": 875, "x": 167, "width": 425, "visible": false, "var": "txtTip1", "text": "单词抽奖将消耗钻石x120", "name": "txtTip1", "height": 30, "fontSize": 30, "color": "#ffffff", "bold": true, "align": "center" } }, { "type": "Label", "props": { "y": 919, "x": 64, "width": 621, "visible": false, "var": "txtTip2", "text": "00:00之后免费抽奖一次", "name": "txtTip2", "height": 30, "fontSize": 30, "color": "#fff272", "bold": true, "align": "center" } }, { "type": "Button", "props": { "y": -2, "x": 634, "var": "btnExit", "stateNum": 1, "skin": "images/component/frame_close_btn.png", "name": "btnExit" }, "child": [{ "type": "Script", "props": { "runtime": "ScaleAnimScript" } }] }, { "type": "Button", "props": { "y": 394, "x": 263, "var": "btnStart", "stateNum": 1, "skin": "images/luckLottery/luck_go.png", "name": "btnStart" }, "child": [{ "type": "Script", "props": { "runtime": "ScaleAnimScript" } }, { "type": "Image", "props": { "y": 161, "x": 83, "skin": "images/core/diamond.png", "name": "imgDiamond", "anchorY": 0.5, "anchorX": 0.5 }, "child": [{ "type": "Label", "props": { "y": 6, "x": 41, "var": "txtDiamond", "text": "120", "strokeColor": "#000000", "stroke": 2, "name": "txtDiamond", "fontSize": 28, "color": "#f4d80d", "bold": true, "align": "left" } }] }] }, { "type": "Box", "props": { "y": 130, "x": 267 }, "child": [{ "type": "Image", "props": { "skin": "images/luckLottery/luck_price_bg.png" } }, { "type": "Image", "props": { "y": 15, "x": 21, "skin": "images/core/diamond.png" } }, { "type": "Label", "props": { "y": 19, "x": 70, "var": "txt_diamond", "text": "0", "fontSize": 30, "color": "#ffffff", "bold": true } }] }] }], "animations": [{ "nodes": [{ "target": 68, "keyframes": { "alpha": [{ "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 68, "key": "alpha", "index": 0 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 68, "key": "alpha", "index": 10 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 68, "key": "alpha", "index": 20 }] } }, { "target": 69, "keyframes": { "alpha": [{ "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 69, "key": "alpha", "index": 0 }, { "value": 1, "tweenMethod": "linearNone", "tween": true, "target": 69, "key": "alpha", "index": 10 }, { "value": 0, "tweenMethod": "linearNone", "tween": true, "target": 69, "key": "alpha", "index": 20 }] } }], "name": "ani1", "id": 1, "frameRate": 24, "action": 2 }] };
        luckPrize.LuckPrizeViewUI = LuckPrizeViewUI;
    })(luckPrize = ui.luckPrize || (ui.luckPrize = {}));
})(ui || (ui = {}));
(function (ui) {
    var more;
    (function (more) {
        class MoreItemUI extends View {
            constructor() { super(); }
            createChildren() {
                super.createChildren();
                this.createView(ui.more.MoreItemUI.uiView);
            }
        }
        MoreItemUI.uiView = { "type": "View", "props": {}, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "skin": "images/more/item_bg.png" } }, { "type": "Image", "props": { "y": 13, "x": 16, "width": 111, "skin": "images/component/frame_9scale_09.png", "height": 111, "sizeGrid": "22,18,20,20" }, "child": [{ "type": "Image", "props": { "y": 12, "x": 12, "width": 88, "var": "imgAppIcon", "height": 88 } }] }, { "type": "Label", "props": { "y": 22, "x": 141, "var": "lblNickname", "text": "暴打犬夜叉", "fontSize": 30, "color": "#a17338", "align": "left" } }, { "type": "Image", "props": { "y": 78, "x": 147, "width": 119, "skin": "images/component/frame_9calce_07.png", "height": 34, "sizeGrid": "0,31,0,33" } }, { "type": "Image", "props": { "y": 75, "x": 141, "var": "imgItemIcon", "skin": "images/core/coin_40x40.png" } }, { "type": "Label", "props": { "y": 81, "x": 182, "var": "lblItemNum", "text": "2784M", "fontSize": 24, "color": "#ffffff" } }, { "type": "Button", "props": { "y": 35, "x": 419, "var": "btnObtain", "stateNum": 1, "skin": "images/component/frame_btn_small_yellow.png" }, "child": [{ "type": "Label", "props": { "y": 14, "x": 49, "width": 85, "text": "领取", "strokeColor": "#825321", "stroke": 3, "height": 33, "fontSize": 30, "color": "#ffffff", "bold": true, "align": "center" } }] }, { "type": "Button", "props": { "y": 35, "x": 420, "width": 180, "var": "btnTry", "stateNum": 1, "skin": "images/component/frame_btn_small_blue.png", "label": "label", "height": 60, "sizeGrid": "0,32,0,34" }, "child": [{ "type": "Label", "props": { "y": 13, "x": 19, "width": 144, "text": "立即试玩", "strokeColor": "#306294", "stroke": 3, "height": 33, "fontSize": 30, "color": "#ffffff", "bold": true, "align": "center" } }] }, { "type": "Button", "props": { "y": 41, "x": 426, "var": "btnStartGame", "stateNum": 1, "skin": "images/component/frame_9scale_10.png" }, "child": [{ "type": "Label", "props": { "y": 9, "x": 15, "width": 137, "text": "开始游戏", "strokeColor": "#8d5d2e", "stroke": 3, "height": 30, "fontSize": 30, "color": "#ffffff", "bold": true, "align": "center" } }] }, { "type": "Image", "props": { "y": 41, "x": 425, "var": "imgObtained", "skin": "images/component/frame_9scale_11.png" }, "child": [{ "type": "Label", "props": { "y": 9, "x": 22, "width": 120, "text": "已领取", "fontSize": 30, "color": "#fff4e1", "bold": true, "align": "center" } }] }] };
        more.MoreItemUI = MoreItemUI;
    })(more = ui.more || (ui.more = {}));
})(ui || (ui = {}));
(function (ui) {
    var more;
    (function (more) {
        class MoreViewUI extends View {
            constructor() { super(); }
            createChildren() {
                super.createChildren();
                this.createView(ui.more.MoreViewUI.uiView);
            }
        }
        MoreViewUI.uiView = { "type": "View", "props": {}, "child": [{ "type": "Image", "props": { "y": 4, "x": 0, "width": 715, "skin": "images/component/frame_9calce_01.png", "height": 1015, "sizeGrid": "168,65,62,82" } }, { "type": "Image", "props": { "y": 40, "x": 307, "skin": "images/more/title.png" } }, { "type": "Image", "props": { "y": 0, "x": 631, "var": "imgClose", "skin": "images/component/frame_close_btn.png" } }, { "type": "Image", "props": { "y": 144, "x": 33, "width": 649, "skin": "images/component/frame_9calce_02.png", "height": 153, "sizeGrid": "25,32,32,36" } }, { "type": "Image", "props": { "y": 312, "x": 33, "width": 649, "skin": "images/component/frame_9calce_02.png", "height": 668, "sizeGrid": "25,32,32,36" } }, { "type": "Image", "props": { "y": 322, "x": 194, "skin": "images/component/sub_title_bg.png" } }, { "type": "Label", "props": { "y": 331, "x": 242, "width": 228, "text": "更多好玩", "height": 45, "fontSize": 40, "color": "#ab4c17", "bold": true, "align": "center" } }, { "type": "Label", "props": { "y": 405, "x": 147, "width": 418, "text": "完整体验一个游戏，可获得奖励", "height": 37, "fontSize": 26, "color": "#845013", "bold": true, "align": "center" } }, { "type": "Image", "props": { "y": 426, "x": 37, "skin": "images/component/seperate_line.png" } }, { "type": "Button", "props": { "y": 169, "x": 172, "var": "btnCustomService", "stateNum": 1, "skin": "images/more/custom_service.png" }, "child": [{ "type": "Label", "props": { "y": 81, "x": 15, "text": "客服", "strokeColor": "#8d5d2e", "stroke": 3, "fontSize": 30, "color": "#ffffff", "bold": true, "align": "center" } }] }, { "type": "Button", "props": { "y": 170, "x": 466, "var": "btnSoundClosed", "stateNum": 1, "skin": "images/more/sound_closed.png" }, "child": [{ "type": "Label", "props": { "y": 79, "x": 17, "text": "声音", "strokeColor": "#8d5d2e", "stroke": 3, "fontSize": 30, "color": "#ffffff", "bold": true, "align": "center" } }] }, { "type": "Button", "props": { "y": 169, "x": 465, "var": "btnSoundOpend", "stateNum": 1, "skin": "images/more/sound_opened.png" }, "child": [{ "type": "Label", "props": { "y": 80, "x": 18, "text": "声音", "strokeColor": "#8d5d2e", "stroke": 3, "fontSize": 30, "color": "#ffffff", "bold": true, "align": "center" } }] }, { "type": "List", "props": { "y": 454, "x": 49, "width": 619, "var": "listMoreItem", "spaceY": 15, "repeatY": 4, "repeatX": 1, "height": 511 } }, { "type": "Label", "props": { "y": 685, "x": 147, "width": 418, "var": "lblNoneGameTips", "text": "暂时没有游戏体验哦", "strokeColor": "#845013", "stroke": 3, "height": 37, "fontSize": 36, "color": "#e2e2e2", "bold": true, "align": "center" } }] };
        more.MoreViewUI = MoreViewUI;
    })(more = ui.more || (ui.more = {}));
})(ui || (ui = {}));
(function (ui) {
    var randomReward;
    (function (randomReward) {
        class AdditionalRewardViewUI extends View {
            constructor() { super(); }
            createChildren() {
                View.regComponent("ScaleAnimScript", ScaleAnimScript);
                super.createChildren();
                this.createView(ui.randomReward.AdditionalRewardViewUI.uiView);
            }
        }
        AdditionalRewardViewUI.uiView = { "type": "View", "props": {}, "child": [{ "type": "Box", "props": { "y": 0, "x": 0, "width": 587, "height": 614 }, "child": [{ "type": "Image", "props": { "y": 334, "x": 292, "var": "imgLight", "skin": "images/core/light_01.png", "anchorY": 0.5, "anchorX": 0.5 } }, { "type": "Image", "props": { "skin": "images/randomReward/randomReward_title_02.png" } }, { "type": "Image", "props": { "y": 267, "x": 232, "skin": "images/component/frame_9calce_03.png", "sizeGrid": "26,31,23,28" } }, { "type": "Image", "props": { "y": 287, "x": 252, "skin": "images/core/diamond_icon.png", "scaleY": 1.5, "scaleX": 1.5 } }, { "type": "Label", "props": { "y": 621, "x": 188, "text": "点击空白处关闭", "fontSize": 30, "color": "#ffffff" } }, { "type": "Label", "props": { "y": 361, "x": 253, "width": 98, "var": "txt_count", "text": "x100", "strokeColor": "#946430", "stroke": 2, "height": 24, "fontSize": 24, "color": "#ffffff", "align": "right" } }, { "type": "Button", "props": { "y": 492, "x": 129, "var": "btn_get", "stateNum": 1, "skin": "images/component/yellow_btn.png", "labelStrokeColor": "#946430", "labelStroke": 2, "labelSize": 40, "labelPadding": "0,0,0,-30", "labelColors": "#FFFFFF,#FFFFFF,#FFFFFF,#FFFFFF", "labelBold": true, "label": "领取" }, "child": [{ "type": "Script", "props": { "runtime": "ScaleAnimScript" } }, { "type": "Image", "props": { "y": 33, "x": 186, "skin": "images/randomReward/randomReward_share.png" } }] }] }] };
        randomReward.AdditionalRewardViewUI = AdditionalRewardViewUI;
    })(randomReward = ui.randomReward || (ui.randomReward = {}));
})(ui || (ui = {}));
(function (ui) {
    var randomReward;
    (function (randomReward) {
        class HeroLevelViewUI extends View {
            constructor() { super(); }
            createChildren() {
                View.regComponent("ScaleAnimScript", ScaleAnimScript);
                super.createChildren();
                this.createView(ui.randomReward.HeroLevelViewUI.uiView);
            }
        }
        HeroLevelViewUI.uiView = { "type": "View", "props": {}, "child": [{ "type": "Box", "props": { "y": 0, "x": 0, "width": 638, "height": 836 }, "child": [{ "type": "Image", "props": { "y": 334, "x": 318, "var": "imgLight", "skin": "images/core/light_01.png", "anchorY": 0.5, "anchorX": 0.5 } }, { "type": "Image", "props": { "x": 25, "skin": "images/randomReward/randomReward_title_01.png" } }, { "type": "Image", "props": { "y": 518, "x": 241, "skin": "images/component/frame_9calce_03.png", "scaleY": 1.2, "scaleX": 1.2, "sizeGrid": "26,31,23,28" } }, { "type": "Image", "props": { "y": 258, "x": 241, "skin": "images/component/frame_9calce_03.png", "scaleY": 1.2, "scaleX": 1.2, "sizeGrid": "26,31,23,28" } }, { "type": "Image", "props": { "y": 429, "x": 281, "skin": "images/randomReward/randomReward_arrow.png" } }, { "type": "Image", "props": { "y": 663, "x": 320, "var": "oldHero", "skin": "images/carImg/hero_d1_18.png", "anchorY": 1, "anchorX": 0.5 } }, { "type": "Image", "props": { "y": 402, "x": 321, "var": "newHero", "skin": "images/carImg/hero_d1_18.png", "anchorY": 1, "anchorX": 0.5 } }, { "type": "Button", "props": { "y": 718, "x": 109, "width": 182, "var": "btn_exit", "stateNum": 1, "skin": "images/component/frame_btn_small_blue.png", "labelStrokeColor": "#946430", "labelStroke": 2, "labelSize": 30, "labelColors": "#FFFFFF,#FFFFFF,#FFFFFF,#FFFFFF", "labelBold": true, "label": "取消", "height": 62, "sizeGrid": "0,32,0,34" }, "child": [{ "type": "Script", "props": { "runtime": "ScaleAnimScript" } }] }, { "type": "Label", "props": { "y": 635, "x": 255, "width": 129, "var": "txt_oldLevel", "text": "1级", "strokeColor": "#946430", "stroke": 2, "height": 26, "fontSize": 26, "color": "#ffffff", "align": "center" } }, { "type": "Label", "props": { "y": 375, "x": 255, "width": 129, "var": "txt_newLevel", "text": "1级", "strokeColor": "#946430", "stroke": 2, "height": 26, "fontSize": 26, "color": "#ffffff", "align": "center" } }, { "type": "Button", "props": { "y": 719, "x": 354, "var": "btn_level", "stateNum": 1, "skin": "images/component/frame_btn_small_yellow.png", "labelStrokeColor": "#946430", "labelStroke": 2, "labelSize": 30, "labelPadding": "0,0,0,-20", "labelColors": "#FFFFFF,#FFFFFF,#FFFFFF,#FFFFFF", "labelBold": true, "label": "升级" }, "child": [{ "type": "Script", "props": { "runtime": "ScaleAnimScript" } }, { "type": "Image", "props": { "y": 12, "x": 105, "skin": "images/randomReward/randomReward_share.png", "scaleY": 0.8, "scaleX": 0.8 } }] }] }] };
        randomReward.HeroLevelViewUI = HeroLevelViewUI;
    })(randomReward = ui.randomReward || (ui.randomReward = {}));
})(ui || (ui = {}));
(function (ui) {
    var rank;
    (function (rank) {
        class RankingUI extends View {
            constructor() { super(); }
            createChildren() {
                View.regComponent("ScaleAnimScript", ScaleAnimScript);
                super.createChildren();
                this.createView(ui.rank.RankingUI.uiView);
            }
        }
        RankingUI.uiView = { "type": "View", "props": {}, "child": [{ "type": "View", "props": { "y": 0, "x": 0, "width": 715, "var": "mainView", "height": 1020 }, "child": [{ "type": "View", "props": { "y": 110, "x": 19, "width": 680, "var": "coverView", "mouseThrough": false, "height": 903 } }, { "type": "View", "props": { "y": 5, "x": 0, "width": 705, "height": 999 }, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "width": 716, "skin": "images/component/frame_9calce_01.png", "height": 1013, "sizeGrid": "168,65,62,82" } }, { "type": "Image", "props": { "y": 32, "x": 284, "skin": "images/ranking/title.png" } }, { "type": "Image", "props": { "y": 230, "x": 36, "width": 647, "skin": "images/component/frame_9calce_02.png", "height": 752, "sizeGrid": "25,32,32,36" } }, { "type": "ViewStack", "props": { "var": "viewStackRanking" }, "child": [{ "type": "Box", "props": { "y": 0, "x": 0, "name": "item0" }, "child": [{ "type": "List", "props": { "y": 253, "x": 38, "width": 639, "var": "worldRankingList", "spaceY": -1, "repeatY": 5, "repeatX": 1, "height": 582 }, "child": [{ "type": "Box", "props": { "y": -5, "x": 10, "renderType": "render" }, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "skin": "images/ranking/cell_bg_default.png", "name": "cellBar" } }, { "type": "Image", "props": { "y": 15, "x": 110, "width": 96, "skin": "images/ranking/headIcon.png", "name": "headIcon", "height": 96 } }, { "type": "Image", "props": { "y": 26, "x": 121, "width": 74, "name": "imgAvatar", "height": 74 } }, { "type": "Label", "props": { "y": 45, "x": 17, "width": 80, "text": "1", "name": "txtNo", "height": 30, "fontSize": 30, "color": "#aa540b", "bold": true, "align": "center" } }, { "type": "Image", "props": { "y": 20, "x": 11, "visible": false, "skin": "images/ranking/icon_top_1.png", "name": "imgNo" } }, { "type": "Label", "props": { "y": 23, "x": 214, "width": 240, "text": "名字最多七个字", "name": "txtName", "height": 32, "fontSize": 32, "color": "#a17338", "bold": true, "align": "left" } }, { "type": "Image", "props": { "y": 66, "x": 216, "width": 180, "skin": "images/ranking/location_bg.png", "height": 40, "sizeGrid": "15,25,16,25" } }, { "type": "Label", "props": { "y": 72, "x": 251, "width": 96, "text": "火星", "name": "txtPosition", "height": 30, "fontSize": 24, "color": "#ffffff", "align": "left" } }, { "type": "Image", "props": { "y": 72, "x": 227, "skin": "images/ranking/location_mark.png" } }, { "type": "Label", "props": { "y": 47, "x": 468, "width": 130, "text": "0", "name": "txtScore", "fontSize": 30, "color": "#aa540b", "bold": true, "align": "center" } }] }] }, { "type": "Label", "props": { "y": 440, "x": 45, "width": 600, "visible": false, "text": "暂无排名", "name": "txtHint", "height": 80, "fontSize": 50, "color": "#aa540b", "bold": true, "align": "center" } }, { "type": "Image", "props": { "y": 822, "x": 36, "skin": "images/component/seperate_line.png" } }, { "type": "View", "props": { "var": "viewMyRanking" }, "child": [{ "type": "Image", "props": { "y": 847, "x": 48, "skin": "images/ranking/cell_bg_self.png" } }, { "type": "Label", "props": { "y": 893, "x": 64, "width": 80, "text": "1", "name": "txtMyRanking", "height": 30, "fontSize": 30, "color": "#aa540b", "bold": true, "align": "center" } }, { "type": "Image", "props": { "y": 861, "x": 158, "width": 96, "skin": "images/ranking/headIcon.png", "name": "headIcon", "height": 96 } }, { "type": "Image", "props": { "y": 872, "x": 169, "width": 74, "name": "imgAvatar", "height": 74 } }, { "type": "Label", "props": { "y": 895, "x": 517, "width": 130, "text": "0", "name": "txtScore", "fontSize": 30, "color": "#aa540b", "bold": true, "align": "center" } }, { "type": "Label", "props": { "y": 869, "x": 261, "width": 240, "text": "名字最多七个字", "overflow": "hidden", "name": "txtName", "height": 32, "fontSize": 32, "color": "#a17338", "bold": true, "align": "left" } }, { "type": "Image", "props": { "y": 912, "x": 263, "width": 180, "skin": "images/ranking/location_bg.png", "height": 40, "sizeGrid": "15,25,16,25" } }, { "type": "Label", "props": { "y": 918, "x": 298, "width": 189, "text": "Shenzhen", "name": "txtPosition", "height": 30, "fontSize": 24, "color": "#ffffff", "align": "left" } }, { "type": "Image", "props": { "y": 918, "x": 274, "skin": "images/ranking/location_mark.png" } }] }] }, { "type": "Box", "props": { "y": 0, "x": 0, "width": 716, "name": "item1", "height": 967 } }] }] }, { "type": "Image", "props": { "y": 111, "x": 12, "width": 690, "name": "imgBg", "height": 900 } }, { "type": "Button", "props": { "y": 0, "x": 633, "var": "btnExit", "stateNum": 1, "skin": "images/component/frame_close_btn.png", "name": "btnExit" }, "child": [{ "type": "Script", "props": { "runtime": "ScaleAnimScript" } }] }, { "type": "View", "props": { "y": 138, "x": 112, "width": 494, "var": "tabGroup", "mouseThrough": true, "mouseEnabled": true, "height": 103 }, "child": [{ "type": "Button", "props": { "y": 10, "x": 0, "strokeColors": "#998a4e,#a86c24", "stateNum": 2, "skin": "images/component/tab_01.png", "selected": true, "labelStroke": 5, "labelSize": 36, "labelPadding": "0,0,13,0", "labelColors": "#fff4e1,#fff4e1", "labelBold": true, "labelAlign": "center", "label": "世  界" } }, { "type": "Button", "props": { "y": 10, "x": 285, "strokeColors": "#998a4e,#a86c24", "stateNum": 2, "skin": "images/component/tab_01.png", "selected": false, "labelStroke": 5, "labelSize": 36, "labelPadding": "0,0,13,0", "labelColors": "#fff4e1,#fff4e1", "labelBold": true, "labelAlign": "center", "label": "好  友" } }] }] }] };
        rank.RankingUI = RankingUI;
    })(rank = ui.rank || (ui.rank = {}));
})(ui || (ui = {}));
(function (ui) {
    var settlement;
    (function (settlement) {
        class ClearanceFailUI extends View {
            constructor() { super(); }
            createChildren() {
                super.createChildren();
                this.createView(ui.settlement.ClearanceFailUI.uiView);
            }
        }
        ClearanceFailUI.uiView = { "type": "View", "props": { "width": 580, "height": 600 }, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "skin": "images/stageSummary/failure_title.png", "name": "imgFailed", "mouseThrough": true, "mouseEnabled": true }, "child": [{ "type": "Label", "props": { "y": 293, "x": 36, "width": 500, "var": "txtTime", "text": "3", "fontSize": 190, "color": "#f1774e", "align": "center" } }, { "type": "Label", "props": { "y": 506, "x": 38, "width": 500, "text": "秒后重新开始", "fontSize": 54, "color": "#e5d6bc", "bold": true, "align": "center" } }, { "type": "Label", "props": { "y": 595, "x": 202, "text": "点击空白处关闭", "fontSize": 25, "color": "#ffffff", "bold": true, "align": "center" } }] }] };
        settlement.ClearanceFailUI = ClearanceFailUI;
    })(settlement = ui.settlement || (ui.settlement = {}));
})(ui || (ui = {}));
(function (ui) {
    var settlement;
    (function (settlement) {
        class ClearanceRewardViewUI extends View {
            constructor() { super(); }
            createChildren() {
                View.regComponent("ScaleAnimScript", ScaleAnimScript);
                super.createChildren();
                this.createView(ui.settlement.ClearanceRewardViewUI.uiView);
            }
        }
        ClearanceRewardViewUI.uiView = { "type": "View", "props": { "width": 680, "height": 546 }, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "width": 680, "var": "imgPrizeBg", "name": "imgPrizeBg", "height": 546 }, "child": [{ "type": "Image", "props": { "y": 273, "x": 339, "var": "lightImg", "skin": "images/common_bg_light.png", "anchorY": 0.5, "anchorX": 0.5 } }, { "type": "Image", "props": { "y": -111, "x": 45, "skin": "images/ClearanceReward/result_win_title.png" } }, { "type": "Button", "props": { "y": -51, "x": 585, "var": "btnExit", "stateNum": 1, "skin": "images/component/frame_close_btn.png", "name": "btnExit" }, "child": [{ "type": "Script", "props": { "y": 0, "x": 0, "runtime": "ScaleAnimScript" } }] }, { "type": "Label", "props": { "y": 450, "x": 90, "width": 500, "var": "txtDes", "text": "恭喜获得第       关奖励", "strokeColor": "#ab9004", "stroke": 2, "name": "txtDes", "fontSize": 40, "color": "#ffffff", "bold": true, "align": "center" } }, { "type": "Label", "props": { "y": 445, "x": 229, "width": 300, "var": "txtStage", "text": "1", "strokeColor": "#ab9004", "stroke": 2, "name": "txtStage", "fontSize": 50, "color": "#f9e603", "bold": true, "align": "center" } }] }, { "type": "HBox", "props": { "y": 195, "x": 145, "width": 0, "var": "hbox", "height": 0, "align": "middle" } }] };
        settlement.ClearanceRewardViewUI = ClearanceRewardViewUI;
    })(settlement = ui.settlement || (ui.settlement = {}));
})(ui || (ui = {}));
(function (ui) {
    var settlement;
    (function (settlement) {
        class ResultViewUI extends View {
            constructor() { super(); }
            createChildren() {
                View.regComponent("ScaleAnimScript", ScaleAnimScript);
                super.createChildren();
                this.createView(ui.settlement.ResultViewUI.uiView);
            }
        }
        ResultViewUI.uiView = { "type": "View", "props": { "mouseThrough": true, "mouseEnabled": true }, "child": [{ "type": "View", "props": { "y": 244, "width": 750, "var": "mainView", "name": "mainView", "mouseThrough": true, "mouseEnabled": true, "height": 712 }, "child": [{ "type": "Image", "props": { "y": 128, "x": 17, "width": 717, "visible": false, "name": "imgBg", "mouseThrough": true, "mouseEnabled": true, "height": 565 }, "child": [{ "type": "Image", "props": { "y": -25, "x": 1, "width": 716, "skin": "images/component/frame_9calce_01.png", "mouseEnabled": true, "height": 611, "sizeGrid": "168,65,62,82" } }, { "type": "Image", "props": { "y": -229, "x": 28, "skin": "images/stageSummary/success_title.png", "mouseEnabled": true } }, { "type": "Image", "props": { "y": 205, "x": 34, "width": 645, "skin": "images/component/frame_9calce_02.png", "height": 224, "sizeGrid": "25,32,32,36" } }, { "type": "Button", "props": { "y": 438, "x": 203, "strokeColors": "#946430", "stateNum": 1, "skin": "images/component/normal_btn.png", "name": "btnShare", "labelStroke": 5, "labelSize": 50, "labelColors": "#fff4e1", "labelBold": true, "label": "分享领取" }, "child": [{ "type": "Script", "props": { "y": 0, "x": 0, "runtime": "ScaleAnimScript" } }] }, { "type": "Button", "props": { "y": -24, "x": 631, "stateNum": 1, "skin": "images/component/frame_close_btn.png", "name": "btnExit" }, "child": [{ "type": "Script", "props": { "y": 0, "x": 0, "runtime": "ScaleAnimScript" } }] }, { "type": "Image", "props": { "y": 236, "x": 355, "name": "imgItemBg" } }, { "type": "HBox", "props": { "y": 258, "x": 113, "var": "hbox", "space": 50, "name": "hbox", "align": "middle" } }] }, { "type": "Image", "props": { "y": -87, "x": 87, "visible": false, "skin": "images/stageSummary/failure_title.png", "name": "imgFailed", "mouseThrough": true, "mouseEnabled": true }, "child": [{ "type": "Label", "props": { "y": 293, "x": 36, "width": 500, "text": "3", "name": "txtTime", "fontSize": 190, "color": "#f1774e", "align": "center" } }, { "type": "Label", "props": { "y": 506, "x": 38, "width": 500, "text": "秒后重新开始", "fontSize": 54, "color": "#e5d6bc", "bold": true, "align": "center" } }, { "type": "Label", "props": { "y": 595, "x": 202, "text": "点击空白处关闭", "fontSize": 25, "color": "#ffffff", "bold": true, "align": "center" } }] }] }] };
        settlement.ResultViewUI = ResultViewUI;
    })(settlement = ui.settlement || (ui.settlement = {}));
})(ui || (ui = {}));
(function (ui) {
    var shop;
    (function (shop) {
        class ShopViewUI extends View {
            constructor() { super(); }
            createChildren() {
                View.regComponent("ScaleAnimScript", ScaleAnimScript);
                super.createChildren();
                this.createView(ui.shop.ShopViewUI.uiView);
            }
        }
        ShopViewUI.uiView = { "type": "View", "props": { "y": 0, "x": 0, "width": 726, "height": 1030 }, "child": [{ "type": "View", "props": { "y": -2, "x": -1, "width": 726, "var": "mainView", "height": 1017 }, "child": [{ "type": "Image", "props": { "width": 713, "skin": "images/component/frame_9calce_01.png", "sizeGrid": "158,62,69,62", "name": "imgBg", "height": 1017 }, "child": [{ "type": "Image", "props": { "y": 26, "x": 301, "skin": "images/shop/shop_title_icon.png" }, "child": [{ "type": "Label", "props": { "y": 12, "x": -134, "width": 600, "visible": false, "valign": "middle", "text": "排行榜", "strokeColor": "#5e2818", "stroke": 2, "name": "txtTitle", "height": 60, "fontSize": 40, "color": "#fff4c0", "bold": true, "align": "center" } }] }, { "type": "Image", "props": { "y": 172, "x": 34, "width": 644, "skin": "images/component/frame_9calce_02.png", "sizeGrid": "59,56,54,51", "height": 778 } }, { "type": "Image", "props": { "y": 184, "x": 41, "skin": "images/shop/shop_bg_01.png" } }, { "type": "Image", "props": { "y": 85, "x": -15, "skin": "images/shop/shop_bg_04.png" } }, { "type": "Image", "props": { "y": 199, "x": 81, "skin": "images/shop/shop_bg_02.png", "height": 40 }, "child": [{ "type": "Image", "props": { "y": -10, "x": -14, "skin": "images/core/coin_big.png", "name": "imgMoney" }, "child": [{ "type": "Label", "props": { "y": 13, "x": 60, "var": "txtMoney", "text": "0", "strokeColor": "#946430", "stroke": 4, "name": "txtMoney", "fontSize": 30, "color": "#ffffff", "bold": true, "align": "left" } }] }] }, { "type": "Image", "props": { "y": 198, "x": 267, "skin": "images/shop/shop_bg_03.png" }, "child": [{ "type": "Image", "props": { "y": -9, "x": -22, "skin": "images/core/diamond_icon.png", "name": "imgDiamond" }, "child": [{ "type": "Label", "props": { "y": 12, "x": 60, "var": "txtDiamond", "text": "0", "strokeColor": "#946430", "stroke": 4, "name": "txtDiamond", "fontSize": 30, "color": "#ffffff", "bold": true, "align": "left" } }] }] }, { "type": "List", "props": { "y": 260, "x": 46, "width": 620, "var": "heroList", "spaceY": 15, "spaceX": 0, "repeatY": 1, "repeatX": 1, "name": "heroList", "height": 659 }, "child": [{ "type": "Box", "props": { "y": 190, "x": 110, "width": 620, "renderType": "render", "height": 150 }, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "skin": "images/shop/shop_item_bg.png" } }, { "type": "Image", "props": { "y": 128, "x": 90, "name": "imgModel", "anchorY": 1, "anchorX": 0.5 } }, { "type": "Image", "props": { "y": 62, "x": 499, "name": "imgPet", "disabled": true, "anchorY": 0.5, "anchorX": 0.5 } }, { "type": "Image", "props": { "y": 57, "x": 167, "skin": "images/shop/shop_bg_03.png", "name": "imgAtk" }, "child": [{ "type": "Label", "props": { "y": 6, "x": 13, "text": "攻击:", "strokeColor": "#946430", "stroke": 2, "fontSize": 24, "color": "#ffffff", "bold": true } }, { "type": "Label", "props": { "y": 7, "x": 71, "text": "0", "strokeColor": "#946430", "stroke": 2, "name": "txtAtk", "fontSize": 24, "color": "#ffffff", "bold": true } }] }, { "type": "Image", "props": { "y": 98, "x": 167, "skin": "images/shop/shop_bg_03.png", "name": "imgSpeed" }, "child": [{ "type": "Label", "props": { "y": 6, "x": 13, "text": "攻速:", "strokeColor": "#946430", "stroke": 2, "fontSize": 24, "color": "#ffffff", "bold": true } }, { "type": "Label", "props": { "y": 7, "x": 71, "text": "0", "strokeColor": "#946430", "stroke": 2, "name": "txtSpeed", "fontSize": 24, "color": "#ffffff", "bold": true } }] }, { "type": "Label", "props": { "y": 17, "x": 176, "text": "大黄蜂", "name": "txtName", "fontSize": 30, "color": "#d28a00", "bold": true } }, { "type": "Label", "props": { "y": 15, "x": 9, "width": 30, "text": "0", "name": "txtLevel", "fontSize": 20, "color": "#ffffff", "align": "center" } }, { "type": "Button", "props": { "y": 43, "x": 422, "stateNum": 1, "skin": "images/component/frame_btn_small_yellow.png", "name": "btnBuy", "labelSize": 30 }, "child": [{ "type": "Image", "props": { "y": 11, "x": 19, "skin": "images/core/coin_40x40.png", "name": "imgPrice" }, "child": [{ "type": "Label", "props": { "y": 5, "x": 42, "text": "1000", "strokeColor": "#946430", "stroke": 4, "name": "txtPrice", "fontSize": 30, "color": "#ffffff", "bold": true, "align": "left" } }] }, { "type": "Script", "props": { "runtime": "ScaleAnimScript" } }] }, { "type": "Button", "props": { "y": 73, "x": 422, "visible": false, "stateNum": 1, "skin": "images/shop/shop_btn_03.png", "name": "btnBuyLock", "labelSize": 30 }, "child": [{ "type": "Label", "props": { "y": -40, "x": 63, "width": 50, "text": "0", "strokeColor": "#946430", "stroke": 4, "name": "txtUnlockLevel", "fontSize": 30, "color": "#ffffff", "bold": true, "align": "center" } }, { "type": "Label", "props": { "y": 13, "x": 37, "text": "待解锁", "strokeColor": "#946430", "stroke": 4, "fontSize": 35, "color": "#ffffff", "bold": true } }, { "type": "Script", "props": { "y": -63, "x": -412, "runtime": "ScaleAnimScript" } }] }, { "type": "Button", "props": { "y": 26, "x": 332, "visible": false, "stateNum": 1, "skin": "images/core/shop_free_video.png", "name": "btnSharePrize", "labelSize": 30 }, "child": [{ "type": "Script", "props": { "runtime": "ScaleAnimScript" } }, { "type": "Image", "props": { "y": 0, "x": 55, "skin": "images/core/red_dot_hint.png", "name": "imgRedPoint" } }] }, { "type": "Button", "props": { "y": 26, "x": 335, "visible": false, "stateNum": 1, "skin": "images/shop_diamond_buy.png", "name": "btnDiamondBuy", "labelSize": 30 }, "child": [{ "type": "Script", "props": { "runtime": "ScaleAnimScript" } }] }] }] }, { "type": "Label", "props": { "y": 1016, "x": 251, "text": "点击空白处关闭", "name": "txtExit", "fontSize": 30, "color": "#ffffff" } }, { "type": "Button", "props": { "y": 192, "x": 505, "var": "btn_skillExplain", "stateNum": 1, "skin": "images/shop/shop_skill_btn.png" } }, { "type": "Button", "props": { "y": -13, "x": 633, "var": "btnExit", "stateNum": 1, "skin": "images/component/frame_close_btn.png", "name": "btnExit" }, "child": [{ "type": "Script", "props": { "runtime": "ScaleAnimScript" } }] }] }] }] };
        shop.ShopViewUI = ShopViewUI;
    })(shop = ui.shop || (ui.shop = {}));
})(ui || (ui = {}));
(function (ui) {
    var strengthen;
    (function (strengthen) {
        class StrengthenViewUI extends View {
            constructor() { super(); }
            createChildren() {
                View.regComponent("ScaleAnimScript", ScaleAnimScript);
                super.createChildren();
                this.createView(ui.strengthen.StrengthenViewUI.uiView);
            }
        }
        StrengthenViewUI.uiView = { "type": "View", "props": { "width": 714, "height": 1018 }, "child": [{ "type": "View", "props": { "var": "mainView", "name": "mainView" }, "child": [{ "type": "Image", "props": { "width": 714, "skin": "images/component/frame_9calce_01.png", "sizeGrid": "158,62,69,62", "name": "imgBg", "height": 1018 }, "child": [{ "type": "Image", "props": { "y": 205, "x": 34, "width": 645, "skin": "images/component/frame_9calce_02.png", "sizeGrid": "32,27,32,29", "height": 744 } }, { "type": "Image", "props": { "y": 32, "x": 259, "skin": "images/strengthen/strengthen_title.png" } }, { "type": "Image", "props": { "y": 154, "x": 81, "skin": "images/strengthen/strengthen_frame_bar.png", "sizeGrid": "15,34,20,37", "name": "imgEssence" } }, { "type": "Image", "props": { "y": 151, "x": 67, "skin": "images/strengthen/strengthen_item_shitou.png", "name": "imgIcon" } }, { "type": "Label", "props": { "y": 955, "x": 216, "text": "技能强化只增加触发几率", "name": "txtHint", "fontSize": 25, "color": "#d20000", "bold": true, "align": "center" } }, { "type": "Label", "props": { "y": 156, "x": 115, "var": "txtEssence", "text": "0", "strokeColor": "#946430", "stroke": 4, "name": "txtEssence", "fontSize": 26, "color": "#ffffff", "bold": true, "align": "left" } }, { "type": "Label", "props": { "y": 1011, "x": 267, "text": "点击空白处关闭", "fontSize": 25, "color": "#ffffff", "bold": true, "align": "center" } }, { "type": "Box", "props": { "y": 226, "x": 73, "name": "boxItem1" }, "child": [{ "type": "Image", "props": { "skin": "images/strengthen/strengthen_item_bg.png", "name": "imgItemBg" } }, { "type": "Image", "props": { "y": 57, "x": 71, "skin": "images/strengthen/strengthen_item3.png", "scaleY": 0.85, "scaleX": 0.85, "name": "imgItem" } }, { "type": "Label", "props": { "y": 11, "x": 46, "text": "金币加成", "strokeColor": "#9b5000", "stroke": 2, "name": "txtDes", "fontSize": 28, "color": "#ffffff", "bold": true, "align": "right" } }, { "type": "Button", "props": { "y": 281, "x": 39, "stateNum": 1, "skin": "images/component/frame_btn_small_yellow.png", "name": "btnStrengthen", "labelStrokeColor": "#e5ad1e", "labelStroke": 2, "labelSize": 30, "labelColors": "#ffffff", "labelBold": true }, "child": [{ "type": "Label", "props": { "y": 16, "x": 22, "text": "强化", "strokeColor": "#946430", "stroke": 2, "name": "txtBtn", "fontSize": 28, "color": "#f0f7f7", "bold": true, "align": "left" } }, { "type": "Script", "props": { "y": 0, "x": 0, "runtime": "ScaleAnimScript" } }, { "type": "Image", "props": { "y": 16, "x": 83, "skin": "images/strengthen/strengthen_item_shitou.png", "scaleY": 0.7, "scaleX": 0.7, "name": "imgIcon" } }, { "type": "Label", "props": { "y": 16, "x": 115, "text": "0", "strokeColor": "#946430", "stroke": 4, "name": "txtEssence", "fontSize": 26, "color": "#ffffff", "bold": true, "align": "left" } }] }, { "type": "Label", "props": { "y": 12, "x": 166, "text": "Lv0", "name": "txtLevel", "fontSize": 28, "color": "#a0880e", "bold": true } }, { "type": "Label", "props": { "y": 193, "x": 38, "text": "击杀怪物后金币收益", "fontSize": 21, "color": "#a43601", "bold": true, "align": "right" } }, { "type": "HBox", "props": { "y": 229, "x": 134, "space": 5, "name": "hbox", "anchorY": 0.5, "anchorX": 0.5, "align": "middle" }, "child": [{ "type": "Label", "props": { "y": 1, "x": 86, "text": "6%", "name": "txtAdd", "fontSize": 21, "color": "#af9801", "bold": true, "align": "right" } }, { "type": "Label", "props": { "text": "提升", "fontSize": 21, "color": "#a43601", "bold": true, "align": "right" } }] }] }, { "type": "Box", "props": { "y": 224, "x": 383, "width": 271, "name": "boxItem2", "height": 346 }, "child": [{ "type": "Image", "props": { "skin": "images/strengthen/strengthen_item_bg.png", "name": "imgItemBg" } }, { "type": "Image", "props": { "y": 56, "x": 71, "skin": "images/core/skill_01.png", "scaleY": 0.85, "scaleX": 0.85, "name": "imgItem" } }, { "type": "Label", "props": { "y": 11, "x": 46, "text": "雷神之怒", "strokeColor": "#9b5000", "stroke": 2, "name": "txtDes", "fontSize": 28, "color": "#ffffff", "bold": true, "align": "right" } }, { "type": "Button", "props": { "y": 284, "x": 39, "stateNum": 1, "skin": "images/component/frame_btn_small_yellow.png", "name": "btnStrengthen", "labelStrokeColor": "#e5ad1e", "labelStroke": 2, "labelSize": 30, "labelColors": "#ffffff", "labelBold": true }, "child": [{ "type": "Label", "props": { "y": 16, "x": 22, "text": "强化", "strokeColor": "#946430", "stroke": 4, "name": "txtBtn", "fontSize": 30, "color": "#ffffff", "bold": true, "align": "left" } }, { "type": "Script", "props": { "y": 0, "x": 0, "runtime": "ScaleAnimScript" } }, { "type": "Label", "props": { "y": 16, "x": 119, "text": "0", "strokeColor": "#946430", "stroke": 4, "name": "txtEssence", "fontSize": 26, "color": "#ffffff", "bold": true, "align": "left" } }, { "type": "Image", "props": { "y": 16, "x": 87, "skin": "images/strengthen/strengthen_item_shitou.png", "scaleY": 0.7, "scaleX": 0.7, "name": "imgIcon" } }] }, { "type": "Label", "props": { "y": 12, "x": 166, "text": "Lv0", "name": "txtLevel", "fontSize": 28, "color": "#a0880e", "bold": true } }, { "type": "Label", "props": { "y": 219, "x": 75, "text": "攻击2个怪物", "fontSize": 21, "color": "#a43601", "bold": true, "align": "right" } }, { "type": "HBox", "props": { "y": 203, "x": 134, "space": 5, "name": "hbox", "anchorY": 0.5, "anchorX": 0.5, "align": "middle" }, "child": [{ "type": "Label", "props": { "y": 1, "x": 86, "text": "6%", "name": "txtAdd", "fontSize": 21, "color": "#af9801", "bold": true, "align": "right" } }, { "type": "Label", "props": { "text": "攻击时有", "fontSize": 21, "color": "#a43601", "bold": true, "align": "right" } }, { "type": "Label", "props": { "y": 1, "x": 112, "text": "几率同时", "fontSize": 21, "color": "#a43601", "bold": true, "align": "right" } }] }] }, { "type": "Box", "props": { "y": 587, "x": 71, "width": 271, "name": "boxItem3", "height": 343 }, "child": [{ "type": "Image", "props": { "skin": "images/strengthen/strengthen_item_bg.png", "name": "imgItemBg" } }, { "type": "Image", "props": { "y": 56, "x": 71, "skin": "images/core/skill_02.png", "scaleY": 0.85, "scaleX": 0.85, "name": "imgItem", "centerX": -2 } }, { "type": "Label", "props": { "y": 11, "x": 46, "text": "冰冻之触", "strokeColor": "#9b5000", "stroke": 2, "name": "txtDes", "fontSize": 28, "color": "#ffffff", "bold": true, "align": "right" } }, { "type": "Button", "props": { "y": 281, "x": 39, "stateNum": 1, "skin": "images/component/frame_btn_small_yellow.png", "name": "btnStrengthen", "labelStrokeColor": "#e5ad1e", "labelStroke": 2, "labelSize": 30, "labelColors": "#ffffff", "labelBold": true }, "child": [{ "type": "Label", "props": { "y": 16, "x": 22, "text": "强化", "strokeColor": "#946430", "stroke": 2, "name": "txtBtn", "fontSize": 30, "color": "#f0f7f7", "bold": true, "align": "left" } }, { "type": "Script", "props": { "y": 0, "x": 0, "runtime": "ScaleAnimScript" } }, { "type": "Image", "props": { "y": 16, "x": 86, "skin": "images/strengthen/strengthen_item_shitou.png", "scaleY": 0.7, "scaleX": 0.7, "name": "imgIcon" } }, { "type": "Label", "props": { "y": 16, "x": 118, "text": "0", "strokeColor": "#946430", "stroke": 4, "name": "txtEssence", "fontSize": 26, "color": "#ffffff", "bold": true, "align": "left" } }] }, { "type": "Label", "props": { "y": 12, "x": 166, "text": "Lv0", "name": "txtLevel", "fontSize": 28, "color": "#a0880e", "bold": true, "align": "right" } }, { "type": "Label", "props": { "y": 219, "x": 32, "text": "20%减速效果,持续5秒", "fontSize": 21, "color": "#a43601", "bold": true } }, { "type": "HBox", "props": { "y": 203, "x": 135, "space": 5, "name": "hbox", "anchorY": 0.5, "anchorX": 0.5, "align": "middle" }, "child": [{ "type": "Label", "props": { "y": 1, "x": 86, "text": "6%", "name": "txtAdd", "fontSize": 21, "color": "#af9801", "bold": true, "align": "right" } }, { "type": "Label", "props": { "text": "攻击时有", "fontSize": 21, "color": "#a43601", "bold": true, "align": "right" } }, { "type": "Label", "props": { "y": 1, "x": 112, "text": "几率造成", "fontSize": 21, "color": "#a43601", "bold": true, "align": "right" } }] }] }, { "type": "Box", "props": { "y": 587, "x": 384, "width": 271, "name": "boxItem4", "height": 341 }, "child": [{ "type": "Image", "props": { "skin": "images/strengthen/strengthen_item_bg.png", "name": "imgItemBg" } }, { "type": "Image", "props": { "y": 56, "x": 71, "skin": "images/core/skill_03.png", "scaleY": 0.85, "scaleX": 0.85, "name": "imgItem", "centerX": 1 } }, { "type": "Label", "props": { "y": 12, "x": 46, "text": "幽冥毒液", "strokeColor": "#9b5000", "stroke": 2, "name": "txtDes", "fontSize": 28, "color": "#ffffff", "bold": true } }, { "type": "Button", "props": { "y": 279, "x": 39, "stateNum": 1, "skin": "images/component/frame_btn_small_yellow.png", "name": "btnStrengthen", "labelStrokeColor": "#e5ad1e", "labelStroke": 2, "labelSize": 30, "labelColors": "#ffffff", "labelBold": true }, "child": [{ "type": "Label", "props": { "y": 16, "x": 22, "text": "强化", "strokeColor": "#946430", "stroke": 2, "name": "txtBtn", "fontSize": 30, "color": "#f0f7f7", "bold": true, "align": "left" } }, { "type": "Script", "props": { "y": 0, "x": 0, "runtime": "ScaleAnimScript" } }, { "type": "Image", "props": { "y": 16, "x": 85, "skin": "images/strengthen/strengthen_item_shitou.png", "scaleY": 0.7, "scaleX": 0.7, "name": "imgIcon" } }, { "type": "Label", "props": { "y": 16, "x": 117, "text": "0", "strokeColor": "#946430", "stroke": 4, "name": "txtEssence", "fontSize": 26, "color": "#ffffff", "bold": true, "align": "left" } }] }, { "type": "Label", "props": { "y": 11, "x": 166, "text": "Lv0", "name": "txtLevel", "fontSize": 28, "color": "#a0880e", "bold": true } }, { "type": "Label", "props": { "y": 219, "x": 74, "text": "中毒伤害效果", "fontSize": 21, "color": "#a43601", "bold": true, "align": "right" } }, { "type": "HBox", "props": { "y": 203, "x": 144, "space": 5, "name": "hbox", "anchorY": 0.5, "anchorX": 0.5, "align": "middle" }, "child": [{ "type": "Label", "props": { "y": 1, "x": 86, "text": "6%", "name": "txtAdd", "fontSize": 21, "color": "#af9801", "bold": true, "align": "right" } }, { "type": "Label", "props": { "text": "攻击时有", "fontSize": 21, "color": "#a43601", "bold": true, "align": "right" } }, { "type": "Label", "props": { "y": 1, "x": 112, "text": "几率造成", "fontSize": 21, "color": "#a43601", "bold": true, "align": "right" } }] }] }, { "type": "Button", "props": { "y": 140, "x": 514, "stateNum": 1, "skin": "images/shop/shop_skill_btn.png", "name": "btn_skill" } }, { "type": "Button", "props": { "y": -6, "x": 632, "stateNum": 1, "skin": "images/component/frame_close_btn.png", "name": "btnExit" }, "child": [{ "type": "Script", "props": { "y": 0, "x": 0, "runtime": "ScaleAnimScript" } }] }] }] }] };
        strengthen.StrengthenViewUI = StrengthenViewUI;
    })(strengthen = ui.strengthen || (ui.strengthen = {}));
})(ui || (ui = {}));
(function (ui) {
    var task;
    (function (task) {
        class TaskViewUI extends View {
            constructor() { super(); }
            createChildren() {
                View.regComponent("ScaleAnimScript", ScaleAnimScript);
                super.createChildren();
                this.createView(ui.task.TaskViewUI.uiView);
            }
        }
        TaskViewUI.uiView = { "type": "View", "props": { "y": 0, "x": 0 }, "child": [{ "type": "View", "props": { "width": 750, "visible": true, "var": "mainView", "name": "mainView", "height": 1334, "centerY": 0, "centerX": 0 }, "child": [{ "type": "View", "props": { "y": 0, "x": 0, "var": "blankView", "top": 0, "right": 0, "name": "blankView", "left": 0, "bottom": 0 } }, { "type": "View", "props": { "y": 124, "x": 0, "width": 750, "name": "coverView", "mouseThrough": false, "mouseEnabled": true, "height": 1050 } }, { "type": "Image", "props": { "y": 103, "x": 19, "width": 713, "skin": "images/component/frame_9calce_01.png", "height": 1013, "sizeGrid": "168,65,62,82" } }, { "type": "Image", "props": { "y": 140, "x": 324, "skin": "images/quest/title.png" } }, { "type": "Image", "props": { "y": 338, "x": 52, "width": 646, "skin": "images/component/frame_9calce_02.png", "height": 745, "sizeGrid": "25,32,32,36" } }, { "type": "View", "props": { "y": 0, "x": 0, "var": "tabGroup" }, "child": [{ "type": "Button", "props": { "y": 249, "x": 144, "strokeColors": "#998a4e,#a86c24", "stateNum": 2, "skin": "images/component/tab_01.png", "selected": true, "labelStroke": 5, "labelSize": 36, "labelPadding": "0,0,13,0", "labelColors": "#fff4e1,#fff4e1", "labelBold": true, "labelAlign": "center", "label": "每日任务" }, "child": [{ "type": "Image", "props": { "y": -10, "x": 180, "visible": false, "skin": "images/core/red_dot_hint.png", "name": "imgRetDotHint" } }] }, { "type": "Button", "props": { "y": 249, "x": 418, "strokeColors": "#998a4e,#a86c24", "stateNum": 2, "skin": "images/component/tab_01.png", "selected": false, "labelStroke": 5, "labelSize": 36, "labelPadding": "0,0,13,0", "labelColors": "#fff4e1,#fff4e1", "labelBold": true, "labelAlign": "center", "label": "邀请好友" }, "child": [{ "type": "Image", "props": { "y": -10, "x": 180, "visible": false, "skin": "images/core/red_dot_hint.png", "name": "imgRetDotHint" } }] }] }, { "type": "ViewStack", "props": { "y": 341, "width": 750, "var": "viewStackTask", "selectedIndex": 0, "right": 0, "name": "viewStackTask", "left": 0, "height": 738 }, "child": [{ "type": "Image", "props": { "y": 1, "x": 56, "width": 637, "name": "item0", "height": 736 }, "child": [{ "type": "List", "props": { "y": 0, "x": 0, "width": 638, "var": "taskItemList", "spaceY": 15, "repeatY": 1, "repeatX": 1, "name": "taskItemList", "height": 690 }, "child": [{ "type": "Box", "props": { "y": 0, "x": 2, "visible": false, "right": 2, "renderType": "render", "left": 2, "height": 130, "cacheAs": "bitmap" }, "child": [{ "type": "Image", "props": { "y": 10, "x": 6, "skin": "images/quest/item_bg.png" } }, { "type": "Image", "props": { "y": 82, "x": 45, "skin": "images/quest/reward_bg.png" } }, { "type": "Image", "props": { "y": 81, "x": 33, "skin": "images/core/diamond.png", "name": "imgAwardIcon" } }, { "type": "Label", "props": { "y": 28, "x": 35, "width": 350, "text": "完成车辆合成30次 (0/30)", "name": "txtTitle", "fontSize": 32, "color": "#a17338", "bold": true, "align": "left" } }, { "type": "Label", "props": { "y": 85, "x": 79, "width": 100, "text": "100", "name": "txtDiamond", "fontSize": 30, "color": "#fcf4cd", "align": "left" } }, { "type": "Image", "props": { "y": 52, "x": 433, "skin": "images/component/frame_9scale_11.png", "name": "txtGet" }, "child": [{ "type": "Label", "props": { "y": 9, "x": 22, "width": 120, "text": "已领取", "fontSize": 30, "color": "#fff4e1", "bold": true, "align": "center" } }] }, { "type": "Button", "props": { "y": 44, "x": 424, "stateNum": 1, "skin": "images/quest/btn_obtain.png", "name": "btnGet", "labelStrokeColor": "#946430", "labelStroke": 3, "labelSize": 30, "labelColors": "#fff4e1", "labelBold": true, "label": "领取" } }] }] }, { "type": "Label", "props": { "y": 699, "x": -1, "width": 638, "text": "每天00:00时系统自动重置任务", "strokeColor": "#7a572b", "stroke": 2, "height": 24, "fontSize": 24, "color": "#ffffff", "bold": true, "align": "center" } }] }, { "type": "Image", "props": { "y": 0, "x": 55, "width": 639, "name": "item1", "height": 737 }, "child": [{ "type": "Image", "props": { "y": 15, "x": 13, "skin": "images/quest/banner.png" } }, { "type": "List", "props": { "y": 252, "x": 0, "width": 640, "var": "shareItemList", "spaceY": 15, "repeatY": 1, "repeatX": 1, "name": "shareItemList", "height": 486 }, "child": [{ "type": "Box", "props": { "y": 5, "x": 15, "width": 609, "visible": false, "renderType": "render", "height": 138, "cacheAs": "bitmap" }, "child": [{ "type": "Image", "props": { "y": 0, "x": -3, "skin": "images/quest/item_bg.png" } }, { "type": "Image", "props": { "y": 80, "x": 142, "skin": "images/quest/reward_bg.png" } }, { "type": "Image", "props": { "y": 23, "x": 19, "skin": "images/quest/empty_friend_icon.png", "name": "imgHead" } }, { "type": "Image", "props": { "y": 78, "x": 126, "skin": "images/quest/diamond.png", "name": "imgAwardIcon" }, "child": [{ "type": "Label", "props": { "y": 5, "x": 45, "width": 83, "text": "200", "name": "txtAward", "height": 30, "fontSize": 30, "color": "#fcf4cd", "align": "left" } }] }, { "type": "Label", "props": { "y": 33, "x": 127, "width": 272, "text": "第1个好友", "name": "txtTitle", "height": 30, "fontSize": 26, "color": "#a17338", "bold": true, "align": "left" } }, { "type": "Label", "props": { "y": 71, "x": -60, "width": 220, "visible": false, "text": "额外奖励200", "name": "txtExtra", "fontSize": 30, "color": "#cf0000", "align": "left" } }, { "type": "Image", "props": { "y": 45, "x": 421, "skin": "images/component/frame_9scale_11.png", "name": "txtGet" }, "child": [{ "type": "Label", "props": { "y": 9, "x": 22, "width": 120, "text": "已领取", "fontSize": 30, "color": "#fff4e1", "bold": true, "align": "center" } }] }, { "type": "Button", "props": { "y": 42, "x": 415, "stateNum": 1, "skin": "images/quest/btn_obtain.png", "name": "btnGet", "labelStrokeColor": "#946430", "labelStroke": 3, "labelSize": 30, "labelColors": "#fff4e1", "labelBold": true, "label": "领取" }, "child": [{ "type": "Script", "props": { "y": 0, "x": 0, "runtime": "ScaleAnimScript" } }] }, { "type": "Button", "props": { "y": 42, "x": 415, "stateNum": 1, "skin": "images/quest/invite_btn.png", "name": "btnInvite", "labelStrokeColor": "#306294", "labelStroke": 3, "labelSize": 30, "labelColors": "#fff4e1", "labelBold": true, "label": "邀请" } }] }] }] }, { "type": "Label", "props": { "y": 317, "x": 193, "width": 350, "text": "暂时没有任务", "strokeColor": "#7a572b", "name": "item2", "fontSize": 46, "color": "#d9d9d9", "bold": true, "align": "center" } }] }, { "type": "Button", "props": { "y": 99, "x": 649, "var": "btnExit", "stateNum": 1, "skin": "images/component/frame_close_btn.png", "name": "btnExit" }, "child": [{ "type": "Script", "props": { "runtime": "ScaleAnimScript" } }] }] }] };
        task.TaskViewUI = TaskViewUI;
    })(task = ui.task || (ui.task = {}));
})(ui || (ui = {}));
//# sourceMappingURL=layaUI.max.all.js.map
/*
* Buff获得界面;
*/
class BuffTipsView extends ui.buff.BuffTipsViewUI {
    constructor(data) {
        super();
        this._data = data;
        this.init();
    }
    //新建并添加到节点
    static Create(data) {
        let resList = [
            { url: "res/atlas/images/buff.atlas", type: Laya.Loader.ATLAS }
        ];
        Laya.loader.load(resList, Handler.create(null, () => {
            let nodeView = new BuffTipsView(data);
            AlignUtils.setToScreenGoldenPos(nodeView);
            M.layer.subFrameLayer.addChildWithMaskCall(nodeView, nodeView.removeSelf);
            nodeView.once(Laya.Event.REMOVED, nodeView, nodeView.removeSelf);
        }));
    }
    init() {
        let skillUrl = "";
        switch (this._data.id) {
            case SkyDropSheet.ATTACK_SPEED_INCREASE:
                this.txt_des.text = LanguageManager.Instance.getLanguageText("hallScene.label.txt.31");
                skillUrl = "images/buff/buff_1.png";
                break;
            case SkyDropSheet.ATTACK_VALUE_INCREASE:
                this.txt_des.text = LanguageManager.Instance.getLanguageText("hallScene.label.txt.32");
                skillUrl = "images/buff/buff_2.png";
                break;
            case SkyDropSheet.CRIT_RATE_INCREASE:
                this.txt_des.text = LanguageManager.Instance.getLanguageText("hallScene.label.txt.33");
                skillUrl = "images/buff/buff_3.png";
                break;
            case SkyDropSheet.COIN_OBTAIN_INCREASE:
                this.txt_des.text = LanguageManager.Instance.getLanguageText("hallScene.label.txt.34");
                skillUrl = "images/buff/buff_4.png";
                break;
        }
        this.imgIcon.skin = skillUrl;
        this.txt_time.text = (this._data.duration * 0.001).toString();
    }
}
//# sourceMappingURL=BuffTipsView.js.map
/*
* 技能Item;
*/
class SkillItem extends ui.buff.SkillItemUI {
    constructor() {
        super();
    }
    initSkill(url) {
        this.imgIcon.skin = url;
    }
    updateTime(time) {
        this.txt_time.text = time;
    }
}
//# sourceMappingURL=SkillItem.js.map
class TabGroup extends Laya.EventDispatcher {
    constructor(buttons) {
        super();
        this._selectedIndex = -1;
        this._buttons = buttons;
        this.initButtons();
    }
    initButtons() {
        let i = 0;
        const len = this._buttons.length;
        let btn;
        for (i; i < len; i++) {
            btn = this._buttons[i];
            btn.on(Laya.Event.CLICK, this, this.onButtonClick);
        }
    }
    onButtonClick(event) {
        const button = event.target;
        this._selectedIndex = this._buttons.indexOf(button);
        this.updateButtons();
    }
    updateButtons() {
        for (let i = 0; i < this._buttons.length; i++) {
            this._buttons[i].selected = i == this._selectedIndex;
        }
        this.event(Laya.Event.CHANGE, this._selectedIndex);
    }
    get selectedIndex() {
        return this._selectedIndex;
    }
    set selectedIndex(value) {
        if (this._selectedIndex == value)
            return;
        this._selectedIndex = value;
        this.updateButtons();
    }
    getButtonByIndex(index) {
        if (this._buttons.length > index) {
            return this._buttons[index];
        }
        return null;
    }
}
//# sourceMappingURL=TabGroup.js.map
class Layer extends Laya.Sprite {
    get layerId() {
        return this._layerId;
    }
    constructor(layerId, $name = null) {
        super();
        this._layerId = layerId;
        this.mouseEnabled = true;
        this.mouseThrough = true;
        this.name = $name;
    }
    getLayerId() {
        return 0;
    }
}
//# sourceMappingURL=Layer.js.map
class MaskLayer extends Layer {
    constructor(layerId, $name = null) {
        super(layerId, $name);
        this.initMask();
        this._handlers = [];
        this._maskEnabled = true;
        this._useAnimation = true;
    }
    set maskEnabled(value) {
        this._maskEnabled = value;
        if (value) {
            if (this.numChildren > 0) {
                super.addChildAt(this._mask, 0);
            }
        }
        else {
            this._mask.removeSelf();
        }
    }
    set maskAlpha(value) {
        this._mask.alpha = value;
    }
    set useAnimation(value) {
        this._useAnimation = value;
    }
    get animationComplete() {
        return this._animationComplete;
    }
    /**
     * 添加的回调只会触发，一般用来关闭已打开的视图窗口
     * @param caller
     * @param listener
     * @param args
     *
     * @param maskAlpha
     */
    addChildWithMaskCall(caller, listener, args = null, maskAlpha = MaskLayer.DEFAULT_MASK_ALPHA) {
        this.maskEnabled = true;
        if (maskAlpha !== MaskLayer.DEFAULT_MASK_ALPHA) {
            this._mask.alpha = maskAlpha;
        }
        this.addChild(caller);
        this._handlers.push(Laya.Handler.create(caller, listener, args));
    }
    addChildWithCustomMask(customMask, caller, listener, args = null) {
        if (!customMask) {
            return;
        }
        this.maskEnabled = true;
        this._usingCustomMask = true;
        this._customMask = customMask;
        if (this._customMask.parent) {
            this._customMaskParent = this._customMask.parent;
            this._customMaskIndex = this._customMask.parent.getChildIndex(this._customMask);
        }
        this._mask.alpha = 0;
        this.addChild(caller);
        this._handlers.push(Laya.Handler.create(caller, listener, args));
    }
    addChild(node) {
        this.superAddChild(node);
        if (this._usingCustomMask && this._customMask) {
            super.addChildAt(this._customMask, 0);
        }
        if (this._maskEnabled) {
            super.addChildAt(this._mask, 0);
        }
        this.event(LayerEvent.CHILD_ADDED, this.numChildren);
        return node;
    }
    removeChild(node) {
        super.removeChild(node);
        const sp = node;
        if (sp) {
            if (sp.layer_tween) {
                sp.layer_tween.complete();
                sp.scale(sp.layer_origin_scale.x, sp.layer_origin_scale.y);
                delete sp.layer_tween;
            }
        }
        if (this.numChildren === 2 && this._usingCustomMask) {
            if (this._customMask) {
                if (this._customMaskParent) {
                    this._customMaskParent.addChildAt(this._customMask, this._customMaskIndex);
                }
                this._usingCustomMask = false;
                this._customMask = null;
                this._customMaskParent = null;
                this._customMaskIndex = 0;
            }
        }
        if (this.numChildren === 1 && this.getChildAt(0) === this._mask) {
            super.removeChild(this._mask);
            this._animationComplete = false;
            this._mask.alpha = MaskLayer.DEFAULT_MASK_ALPHA;
        }
        this.event(LayerEvent.CHILD_REMOVED, this.numChildren);
        return node;
    }
    initMask() {
        this._mask = new Laya.Sprite();
        this._mask.graphics.clear();
        this._mask.graphics.drawRect(0, 0, LayerManager.stageDesignWidth, LayerManager.stageDesignHeight, Color.BLACK);
        this._mask.alpha = MaskLayer.DEFAULT_MASK_ALPHA;
        this._mask.size(LayerManager.stageDesignWidth, LayerManager.stageDesignHeight);
        this._mask.on(Laya.Event.CLICK, this, this.applyClick);
    }
    superAddChild(node, index) {
        if (this._useAnimation && !this._animationComplete) {
            const sp = node;
            if (sp && !sp.layer_tween) {
                if (!sp.layer_origin_scale) {
                    sp.layer_origin_scale = new Laya.Point(sp.scaleX, sp.scaleY);
                }
                const comp = sp;
                const size = new Laya.Point();
                if (comp) {
                    size.setTo(comp.displayWidth, comp.displayHeight);
                }
                else {
                    const rect = sp.getBounds();
                    size.setTo(rect.width, rect.height);
                }
                sp.layer_tween = Laya.Tween.from(node, { x: sp.x + (size.x >> 1), y: sp.y + (size.y >> 1), scaleX: 0, scaleY: 0 }, 300, Laya.Ease.backInOut, Handler.create(this, () => {
                    this._animationComplete = true;
                    this.event(LayerEvent.LAYER_ANIMATION_COMPLETE, this._animationComplete);
                }));
            }
        }
        if (index) {
            super.addChildAt(node, index);
        }
        else {
            super.addChild(node);
        }
        return node;
    }
    applyClick() {
        while (this._handlers.length) {
            this._handlers.pop().run();
        }
    }
}
MaskLayer.DEFAULT_MASK_ALPHA = 0.7;
//# sourceMappingURL=MaskLayer.js.map
/*
* 奖励物品Item;
*/
class RewardItem extends ui.common.item.RewardItemUI {
    constructor() {
        super();
    }
    create(url, count) {
        let self = this;
        self.itemImg.skin = url;
        self.txt_count.text = "x" + MathUtils.bytesToSize(count);
    }
}
//# sourceMappingURL=RewardItem.js.map
/*
* name;
*/
class DiamondBuyView extends ui.common.view.DiamondBuyViewUI {
    constructor(data = null, callback = null) {
        super();
        this._data = data;
        this._callback = callback;
        this.init();
    }
    //新建并添加到节点
    static Create(_parentNode, callback = null, _removeCallback = null, ...arge) {
        let resList = [
            { url: "res/atlas/images.atlas", type: Laya.Loader.ATLAS }
        ];
        Laya.loader.load(resList, Handler.create(null, () => {
            if (_parentNode) {
                let nodeView = new DiamondBuyView(arge, callback);
                AlignUtils.setToScreenGoldenPos(nodeView);
                M.layer.subFrameLayer.addChildWithMaskCall(nodeView, nodeView.removeSelf);
                nodeView.once(Laya.Event.REMOVED, nodeView, _removeCallback);
            }
        }));
    }
    //初始化
    init() {
        let self = this;
        switch (self._data[0]) {
            case DILOG_TYPE.PET:
                self.petTitleImg.visible = self.imgMonster.visible = true;
                self.accTitleImg.visible = self.accIcon.visible = false;
                self.imgMonster.skin = "images/carImg/" + self._data[2].imgUrl;
                break;
            case DILOG_TYPE.ACC:
                SDKManager.Instance.showBannerAd(true);
                self.petTitleImg.visible = self.imgMonster.visible = false;
                self.accTitleImg.visible = self.accIcon.visible = true;
                break;
        }
        self.txtDiamond.text = self._data[1];
        self.addEvents();
    }
    addEvents() {
        let self = this;
        self.btnBuy.on(Laya.Event.CLICK, self, self.onBuyHandler);
        self.btnExit.on(Laya.Event.CLICK, self, self.onCloseHandler);
    }
    removeEvents() {
        let self = this;
        self.btnBuy.off(Laya.Event.CLICK, self, self.onBuyHandler);
        self.btnExit.off(Laya.Event.CLICK, self, self.onCloseHandler);
    }
    onBuyHandler() {
        let self = this;
        let carPriceInt = Math.floor(self._data[1]);
        if (PlayerManager.Instance.Info.userDiamond >= carPriceInt) {
            if (this._callback) {
                this._callback(carPriceInt);
            }
        }
        else {
            MessageUtils.showMsgTips(LanguageManager.Instance.getLanguageText("hallScene.label.txt.04"));
        }
        self.onCloseHandler();
    }
    onCloseHandler() {
        let self = this;
        self.removeSelf();
        self.removeEvents();
    }
}
//# sourceMappingURL=DiamondBuyView.js.map
/*
* 获得免费英雄提示框;
*/
class FreeGetPetView extends ui.common.view.FreeGetPetViewUI {
    constructor(data = null) {
        super();
        this._data = data;
        this.init();
    }
    //新建并添加到节点
    static Create(_parentNode, callback = null, _removeCallback = null, ...arge) {
        let resList = [
            { url: "res/atlas/images.atlas", type: Laya.Loader.ATLAS }
        ];
        Laya.loader.load(resList, Handler.create(null, () => {
            if (_parentNode) {
                let nodeView = new FreeGetPetView(arge);
                AlignUtils.setToScreenGoldenPos(nodeView);
                M.layer.subFrameLayer.addChildWithMaskCall(nodeView, nodeView.removeSelf);
                nodeView.once(Laya.Event.REMOVED, nodeView, _removeCallback);
            }
        }));
    }
    //初始化
    init() {
        let self = this;
        self.imgPet.skin = "images/carImg/" + self._data[0].imgUrl;
        self.addEvents();
    }
    addEvents() {
        let self = this;
        self.btnExit.on(Laya.Event.CLICK, self, self.onCloseHandler);
    }
    removeEvents() {
        let self = this;
        self.btnExit.off(Laya.Event.CLICK, self, self.onCloseHandler);
    }
    onCloseHandler() {
        let self = this;
        self.removeSelf();
        self.removeEvents();
    }
}
//# sourceMappingURL=FreeGetPetView.js.map
/*
* 消息提示界面;
*/
class MessageTips extends ui.common.view.MessageTipsUI {
    constructor() {
        super();
    }
    //初始化
    init(content) {
        let self = this;
        self.txt_content.text = content;
        self.bg.width = self.hbox.displayWidth + 50;
    }
}
//# sourceMappingURL=MessageTips.js.map
/*
* 离线奖励;
*/
class OfflineRewardsView extends ui.common.view.OfflineRewardsViewUI {
    constructor(data = null, callback = null) {
        super();
        this._data = data;
        this._callback = callback;
        this.init();
    }
    //新建并添加到节点
    static Create(_parentNode, callback = null, _removeCallback = null, ...arge) {
        let resList = [
            { url: "res/atlas/images.atlas", type: Laya.Loader.ATLAS }
        ];
        Laya.loader.load(resList, Handler.create(null, () => {
            if (_parentNode) {
                let nodeView = new OfflineRewardsView(arge, callback);
                AlignUtils.setToScreenGoldenPos(nodeView);
                M.layer.subFrameLayer.addChildWithMaskCall(nodeView, nodeView.removeView);
                nodeView.once(Laya.Event.REMOVED, nodeView, _removeCallback);
            }
        }));
    }
    //初始化
    init() {
        let self = this;
        self.btnShare.visible = false;
        self.txtMoney.text = "金币+" + MathUtils.bytesToSize(self._data[0]);
        self._tween = EffectUtils.objectRotate(self.lightImg);
        self.addEvents();
    }
    addEvents() {
        let self = this;
        // self.btnShare.on(Laya.Event.CLICK, self, self.onShareHandler);
        self.btnVideo.on(Laya.Event.CLICK, self, self.onVideoHandler);
        self.btnExit.on(Laya.Event.CLICK, self, self.onCloseHandler);
    }
    removeEvents() {
        let self = this;
        // self.btnShare.off(Laya.Event.CLICK, self, self.onShareHandler);
        self.btnVideo.off(Laya.Event.CLICK, self, self.onVideoHandler);
        self.btnExit.off(Laya.Event.CLICK, self, self.onCloseHandler);
    }
    onShareHandler() {
        let self = this;
    }
    onVideoHandler() {
        let self = this;
        //显示广告
        userData.toShareAd(() => {
            self.txtMoney.text = "金币+" + MathUtils.bytesToSize(self._data[0] * 2);
            self.btnVideo.visible = false;
            M.layer.screenEffectLayer.addChild(new FlyEffect().play("rollingCoin", LayerManager.mouseX, LayerManager.mouseY));
            MessageUtils.showMsgTips("获得金币:" + MathUtils.bytesToSize(self._data[0] * 2));
        }, 1);
    }
    onCloseHandler() {
        let self = this;
        if (self.btnVideo.visible) {
            M.layer.screenEffectLayer.addChild(new FlyEffect().play("rollingCoin", LayerManager.mouseX, LayerManager.mouseY));
            MessageUtils.showMsgTips("获得金币:" + MathUtils.bytesToSize(self._data[0]));
        }
        self.removeView();
    }
    removeView() {
        let self = this;
        self._tween && (Laya.Tween.clear(self._tween));
        self._tween = null;
        self.removeSelf();
        self.removeEvents();
    }
}
//# sourceMappingURL=OfflineRewardsView.js.map
/*
* 奖励领取界面;
*/
class RewardGetView extends ui.common.view.RewardGetViewUI {
    constructor(values, items) {
        super();
        this._items = [1, 2];
        this._values = values;
        this._items = items;
        this.init();
    }
    //新建并添加到节点
    static Create(_parentNode, callback = null, values, items = [1, 2]) {
        let resList = [
            { url: "res/atlas/images.atlas", type: Laya.Loader.ATLAS }
        ];
        Laya.loader.load(resList, Handler.create(null, () => {
            if (_parentNode) {
                let nodeView = new RewardGetView(values, items);
                AlignUtils.setToScreenGoldenPos(nodeView);
                LayerManager.getInstance().subFrameLayer.addChildWithMaskCall(nodeView, nodeView.removeSelf);
                nodeView.once(Laya.Event.REMOVED, nodeView, () => {
                    callback && callback();
                    nodeView.removeView();
                });
            }
        }));
    }
    //初始化
    init() {
        let self = this;
        self._tween = EffectUtils.objectRotate(self.imgLight);
        for (let index = 0, len = this._values.length; index < len; index++) {
            let price = this._values[index];
            let itemInfo = GlobleData.getData(GlobleData.ItemVO, self._items[index]);
            let rewardItem = ObjectPool.pop(RewardItem, "RewardItem");
            let url = PathConfig.ItemUrl.replace("{0}", itemInfo.bigIcon);
            rewardItem.create(url, price);
            self.hbox.addChild(rewardItem);
        }
        self.hbox.refresh();
        self.addEvents();
    }
    addEvents() {
        let self = this;
        self.btn_get.on(Laya.Event.CLICK, self, self.removeSelf);
    }
    removeEvents() {
        let self = this;
        self.btn_get.off(Laya.Event.CLICK, self, self.removeSelf);
    }
    removeView() {
        let self = this;
        self._tween && (Laya.Tween.clear(self._tween));
        self._tween = null;
        self.removeSelf();
        self.removeEvents();
    }
}
//# sourceMappingURL=RewardGetView.js.map
/*
* 金币不足奖励提示框;
*/
class RewardGoldView extends ui.common.view.RewardGoldViewUI {
    constructor(data = null, callback = null) {
        super();
        this._data = data;
        this._callback = callback;
        this.init();
    }
    //新建并添加到节点
    static Create(_parentNode, callback = null, _removeCallback = null, ...arge) {
        let resList = [
            { url: "res/atlas/images/rewardGold.atlas", type: Laya.Loader.ATLAS }
        ];
        Laya.loader.load(resList, Handler.create(null, () => {
            if (_parentNode) {
                let nodeView = new RewardGoldView(arge, callback);
                AlignUtils.setToScreenGoldenPos(nodeView);
                M.layer.subFrameLayer.addChildWithMaskCall(nodeView, nodeView.removeSelf);
                nodeView.once(Laya.Event.REMOVED, nodeView, _removeCallback);
            }
        }));
    }
    //初始化
    init() {
        let self = this;
        SDKManager.Instance.showBannerAd(true);
        self.txt_share.visible = false; // PlayerManager.Instance.Info.dayGetGoldCount != 6 && PlayerManager.Instance.Info.dayGetGoldCount != 2;
        self.advBox.visible = !self.txt_share.visible;
        self.txt_lastCount.text = "今天剩余" + PlayerManager.Instance.Info.dayGetGoldCount + "次";
        let monsterType = userData.isEvolution() ? 2 : 1;
        let monsterLevel = userData.getCarLevel();
        let monsterInfo = BattleManager.Instance.getUnLockMonster(monsterType, monsterLevel);
        if (monsterInfo) {
            let curPrice = BattleManager.Instance.getMonsterPrice(monsterInfo.buyPrice, userData.queryBuyRecord(monsterInfo.id));
            self._money = curPrice * 0.8;
        }
        self.txt_gold.text = MathUtils.bytesToSize(self._money);
        self.addEvents();
    }
    addEvents() {
        let self = this;
        self.btn_free.on(Laya.Event.CLICK, self, self.onClickBtn);
        self.btnExit.on(Laya.Event.CLICK, self, self.onCloseHandler);
    }
    removeEvents() {
        let self = this;
        self.btn_free.off(Laya.Event.CLICK, self, self.onClickBtn);
        self.btnExit.off(Laya.Event.CLICK, self, self.onCloseHandler);
    }
    onClickBtn() {
        let self = this;
        if (GlobalConfig.DEBUG) {
            if (self._callback)
                self._callback(self._money);
        }
        else {
            // if (self.txt_share.visible) {
            //     userData.toShareAd(() => {
            //         if (self._callback) self._callback(self._money);
            //     });
            // } else 
            // if (self.advBox.visible) {
            let adStage = userData.toShareAd(() => {
                if (self._callback)
                    self._callback(self._money);
            }, 12);
            //没有广告就走分享
            if (adStage > 0) {
                MessageUtils.showMsgTips("今日广告已经观看完毕!");
                FriendConcurView.Create(self);
                // userData.toShareAd(() => {
                //     if (self._callback) self._callback(self._money);
                // });
            }
            // }
        }
        self.onCloseHandler();
    }
    onCloseHandler() {
        let self = this;
        self.removeSelf();
        self.removeEvents();
    }
}
//# sourceMappingURL=RewardGoldView.js.map
/*
* 技能说明界面;
*/
class SkillExplainView extends ui.common.view.SkillExplainViewUI {
    constructor(data = null, callback = null) {
        super();
        this._data = data;
        this._callback = callback;
        this.init();
    }
    //新建并添加到节点
    static Create(_parentNode, callback = null, _removeCallback = null, ...arge) {
        let resList = [
            { url: "res/atlas/images.atlas", type: Laya.Loader.ATLAS }
        ];
        Laya.loader.load(resList, Handler.create(null, () => {
            if (_parentNode) {
                let nodeView = new SkillExplainView(arge, callback);
                AlignUtils.setToScreenGoldenPos(nodeView);
                M.layer.subFrameLayer.addChildWithMaskCall(nodeView, nodeView.removeSelf);
                nodeView.once(Laya.Event.REMOVED, nodeView, _removeCallback);
            }
        }));
    }
    //初始化
    init() {
        let self = this;
        self.btnExit.offAll(Laya.Event.CLICK);
        self.btnExit.on(Laya.Event.CLICK, self, self.onClickClose);
    }
    onClickClose() {
        this.removeSelf();
    }
}
//# sourceMappingURL=SkillExplainView.js.map
/*
* TER0821-每日签到;
*/
class DaySignView extends ui.daySign.DaySignViewUI {
    constructor() {
        super();
        var that = this;
        that.frameOnce(1, that, () => {
            that.init();
        });
    }
    //新建并添加到节点
    static Create(onAddHandler) {
        let resList = [
            { url: "res/atlas/images/dailySign.atlas", type: Laya.Loader.ATLAS },
            { url: "images/dailySign/item_bg_7th_day.png", type: Laya.Loader.IMAGE },
        ];
        Laya.loader.load(resList, Handler.create(null, () => {
            if (!this._view) {
                this._view = new DaySignView();
                this._view.requestCompleteHandler = onAddHandler;
                AlignUtils.setToScreenGoldenPos(this._view);
            }
            else {
                M.layer.frameLayer.addChildWithMaskCall(this._view, this._view.removeSelf);
            }
        }));
    }
    //初始化
    init() {
        var that = this;
        //按钮事件
        if (DaySignView.signData) {
            that.refreshList(DaySignView.signData);
        }
        if (Laya.Browser.onMiniGame) {
            that.btnExit.on(Laya.Event.CLICK, that, that.removeSelf);
            that.btnGet.on(Laya.Event.CLICK, that, that.onClickGet);
            if (!M.novice.isRunning) {
                that.requestSignInfo((_data) => {
                    if (_data) {
                        DaySignView.signData = _data;
                        that.refreshList(_data);
                        if (_data.sign.status === 0) {
                            M.layer.frameLayer.addChildWithMaskCall(that, that.removeSelf);
                        }
                        if (that.requestCompleteHandler) {
                            that.requestCompleteHandler.runWith(that);
                        }
                    }
                });
            }
            else {
                Laya.timer.once(5 * 1000, that, that.init);
            }
        }
        else {
            console.log("@FREEMAN: 不在微信小游戏环境下，不请求签到数据！");
        }
    }
    removeSelf() {
        this.event(DaySignView.REMOVE_FROM_STAGE);
        return super.removeSelf();
    }
    onClickGet() {
        let that = this;
        AnimationUtils.lockBtnStage(that.btnGet);
        if (DaySignView.signData && DaySignView.signData.sign) {
            let day = DaySignView.signData.sign.day;
            that.requestPrize(day, (_res) => {
                if (_res) {
                    if (_res.code === 1) {
                        MessageUtils.showMsgTips("领取成功");
                        MessageUtils.shopMsgByObj(that.btnGet, " +" + DaySignView.signData.prize['day_' + day]["diamond"], EFFECT_TYPE.DIAMOND);
                        const essenceNum = DaySignView.signData.prize['day_' + day]["essence"];
                        if (essenceNum) {
                            Laya.timer.once(Time.SEC_IN_MILI, this, () => {
                                MessageUtils.shopMsgByObj(that.btnGet, " +" + essenceNum, EFFECT_TYPE.ESSENCE);
                            });
                        }
                        DaySignView.signData.sign.status = 1;
                        HttpManager.Instance.requestDiamondData();
                        userData.removeDailySignRedPoint();
                        that.removeSelf();
                    }
                    else if (_res.code == 2) {
                        MessageUtils.showMsgTips("今日奖励已领取");
                    }
                    else {
                        MessageUtils.showMsgTips("奖励领取失败");
                    }
                }
            });
        }
    }
    //初始化list
    refreshList(_data) {
        if (_data == null) {
            return;
        }
        let that = this;
        let dayIndex = _data.sign.day; //1~7
        let status = _data.sign.status; //0未领取,1已领取
        let prizeData = _data.prize;
        let listDatas = [1, 2, 3, 4, 5, 6]; //_data.prize;
        that.signItemList.vScrollBarSkin = '';
        that.signItemList.repeatY = 3;
        that.signItemList.array = listDatas;
        that.signItemList.renderHandler = new Laya.Handler(that, (cell, index) => {
            if (index > listDatas.length) {
                return;
            }
            // console.log(cell, index);
            let item = listDatas[index];
            if (item == null) {
                return;
            }
            let cellIndex = index + 1;
            let txtTitle = cell.getChildByName('txtTitle');
            if (txtTitle) {
                txtTitle.changeText('第' + cellIndex + '天');
            }
            const imgIcon = cell.getChildByName("imgIcon");
            if (imgIcon) {
                imgIcon.skin = "images/dailySign/icon_day_" + cellIndex + ".png";
            }
            let txtDiamond = cell.getChildByName('txtDiamond');
            if (txtDiamond) {
                txtDiamond.changeText('钻石x' + prizeData['day_' + cellIndex]["diamond"]);
            }
            // let imgGet = cell.getChildByName('imgGet') as Laya.Image;
            // if (imgGet) {
            //     imgGet.visible = cellIndex <dayIndex;
            //     if (cellIndex ==dayIndex) {
            //         imgGet.visible = (status==1);
            //         that.curGetIcon = imgGet;
            //     }
            // }
            // cell.gray = cellIndex >dayIndex;
            if (cellIndex < dayIndex) {
                // 已经领取的
                setObtainedState();
            }
            else if (cellIndex === dayIndex) {
                if (status === 0) {
                    const btnBox = cell.getChildByName('btnBox');
                    if (btnBox) {
                        btnBox.skin = "images/dailySign/item_bg_obtainable.png";
                    }
                }
                else {
                    setObtainedState();
                }
            }
            function setObtainedState() {
                // 已经领取的
                const obtainMark = cell.getChildByName('imgObtainedMark');
                obtainMark && (obtainMark.visible = true);
                const mask = cell.getChildByName('imgMask');
                mask && (mask.visible = true);
            }
        });
        let cell = that.lastItemBox;
        if (cell) {
            let cellIndex = 7;
            let txtTitle = cell.getChildByName('txtTitle');
            if (txtTitle) {
                txtTitle.changeText('第' + cellIndex + '天');
            }
            let txtDiamond = cell.getChildByName('txtDiamond');
            if (txtDiamond) {
                txtDiamond.changeText(prizeData['day_' + cellIndex]["diamond"]);
            }
            let lblEssense = cell.getChildByName('lblEssence');
            if (lblEssense) {
                lblEssense.changeText(prizeData['day_' + cellIndex]["essence"]);
            }
            if (cellIndex === dayIndex) {
                if (status === 1) {
                    // const btnBox = cell.getChildByName('btnBox') as Laya.Button;
                    // if(btnBox){
                    //     btnBox.skin = "images/dailySign/item_bg_obtainable.png"
                    // }
                    // } else {
                    // 已经领取的
                    const obtainMark = cell.getChildByName('imgObtainedMark');
                    obtainMark && (obtainMark.visible = true);
                    const mask = cell.getChildByName('imgMask');
                    mask && (mask.visible = true);
                }
            }
        }
    }
    //拉取签到信息
    requestSignInfo(_callback) {
        let that = this;
        let HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: 'v1/sign/info',
            success: function (res) {
                console.log("@FREEMAN: 请求签到数据:", res);
                _callback && _callback(res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    //拉取奖励
    requestPrize(_itemId, _callback) {
        let that = this;
        let HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: 'v1/sign/commit/' + _itemId,
            success: function (res) {
                console.log("@FREEMAN: requestPrize:", res);
                _callback && _callback(res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
}
DaySignView.REMOVE_FROM_STAGE = "REMOVE_FROM_STAGE";
DaySignView.signData = null;
//# sourceMappingURL=DaySignView.js.map
class DebugView extends Laya.View {
    constructor() {
        super();
        this.mouseThrough = true;
        this.ui = new ui.common.view.DebugViewUI();
        this.addChild(this.ui);
        this._switches = [];
        Laya.Browser.onFreeman && (this._switches.push("onFreeman"));
        Laya.Browser.onDavid && (this._switches.push("onDavid"));
        Laya.Browser.onSong && (this._switches.push("onSong"));
        Laya.Browser.onMing && (this._switches.push("onMing"));
        Laya.timer.once(3000, this, () => {
            this.ui.btnUid.label = "UID: " + userData.userId;
        });
        this.ui.btnUid.on(Laya.Event.CLICK, this, () => {
            this.ui.btnUid.label = "UID: " + userData.userId;
            console.log("@FREEMAN: UserData =>", userData);
            HttpManager.Instance.requestUserinfoData(null);
        });
        let b = 0;
        this.ui.btnShowStats.on(Laya.Event.CLICK, this, () => {
            b ^= 1;
            b && Laya.Stat.show(LayerManager.left, LayerManager.top);
            !b && Laya.Stat.hide();
        });
        this.ui.btnCompleteNovice.on(Laya.Event.CLICK, this, () => {
            M.novice.complete();
        });
        this.ui.btnResetKingLevel.on(Laya.Event.CLICK, this, () => {
            DebugView.GameView.setKingLevel(1);
        });
        this.ui.btnAddGold.on(Laya.Event.CLICK, this, () => {
            EventsManager.Instance.event(EventsType.GLOD_CHANGE, { money: userData.gold += (userData.gold * 2) + 1e100 });
        });
        this.ui.btnAddDiamond.on(Laya.Event.CLICK, this, () => {
            EventsManager.Instance.event(EventsType.DIAMOND_CHANGE, { diamond: userData.diamond += 1000 });
        });
        this.ui.btnCrearStorage.on(Laya.Event.CLICK, this, () => {
            userData.clearLocalData();
            Laya.stage.renderingEnabled = false;
            Laya.timer.clearAll(DebugView.GameView);
            if (Laya.Browser.onMiniGame) {
                Laya.Browser.window.wx.exitMiniProgram();
            }
        });
        this.ui.btnExitGame.on(Laya.Event.CLICK, this, () => {
            if (Laya.Browser.onMiniGame) {
                Laya.Browser.window.wx.exitMiniProgram();
            }
        });
        this.ui.viewStackArrow.selectedIndex = 0;
        this.ui.viewStackArrow._childs.forEach((child, index, children) => {
            child.on(Laya.Event.CLICK, this, () => {
                this._switches.map((key) => {
                    Laya.Browser[key] = !Laya.Browser[key];
                });
                this.ui.viewStackArrow.selectedIndex ^= 1;
                Laya.Tween.clearAll(this.ui.viewBtnContainer);
                if (this.ui.viewStackArrow.selectedIndex) {
                    Laya.Tween.to(this.ui.viewBtnContainer, { x: 180 }, 500, Laya.Ease.quadOut);
                }
                else {
                    Laya.Tween.to(this.ui.viewBtnContainer, { x: 0 }, 500, Laya.Ease.quadOut);
                }
            });
        });
    }
    hide() {
    }
}
//# sourceMappingURL=DebugView.js.map
/*
* 守卫进化界面
*/
class EvolutionAdvancedView extends ui.evolution.EvolutionAdvancedViewUI {
    constructor(_stage = -1) {
        super();
        this.indexArray = [10, 1, 3, 2];
        this.init(_stage);
    }
    //新建并添加到节点
    static Create(_parentNode, _callback = null, _removeCallback = null, _stage = -1) {
        let resList = [
            { url: "res/atlas/images/luckLottery.atlas", type: Laya.Loader.ATLAS }
        ];
        Laya.loader.load(resList, Handler.create(null, () => {
            if (_parentNode) {
                if (EvolutionAdvancedView.isOpen)
                    return;
                EvolutionAdvancedView.isOpen = true;
                let nodeView = new EvolutionAdvancedView(_stage);
                AlignUtils.setToScreenGoldenPos(nodeView);
                M.layer.subFrameLayer.addChildWithMaskCall(nodeView, nodeView.removeSelf);
                _callback && _callback(nodeView);
                nodeView.once(Laya.Event.REMOVED, nodeView, () => {
                    EvolutionAdvancedView.isOpen = false;
                    nodeView.removeUI();
                    _removeCallback && _removeCallback();
                });
            }
        }));
    }
    //初始化
    init(_stage) {
        let that = this;
        //界面初始化
        let imgBg = that.mainView.getChildByName("imgBg");
        if (imgBg) {
            let btnExit = imgBg.getChildByName("btnExit");
            if (btnExit) {
                btnExit.offAll(Laya.Event.CLICK);
                btnExit.on(Laya.Event.CLICK, btnExit, () => {
                    that.removeSelf();
                });
            }
        }
    }
    //移除界面
    removeUI() {
        EventsManager.Instance.offAll(EventsType.ESSENCE_CHANGE);
    }
    //设置强化数据
    refreshBoxUI(_callback) {
        let that = this;
        let kingLevel = userData.getKingLevel();
        let kingVO = GlobleData.getData(GlobleData.KindLevelConfigVO, kingLevel);
        //界面初始化
        let imgBg = that.mainView.getChildByName("imgBg");
        if (imgBg && kingVO) {
            //升级条件
            let itemId1 = 130;
            let itemNum1 = userData.caculateMonsterCount(itemId1);
            let needItemNum1 = 3;
            //奖励
            let prizeDiamond = 500;
            let prizeEssence = 50;
            let btnUpdate = imgBg.getChildByName("btnUpdate");
            if (btnUpdate) {
                btnUpdate.offAll(Laya.Event.CLICK);
                btnUpdate.on(Laya.Event.CLICK, that, () => {
                    that.requestUpdateEvolutionLevel(2, prizeDiamond, prizeEssence, (_res) => {
                        if (_res) {
                            MessageUtils.showMsgTips("进化成功");
                            _callback && _callback(2, _res.diamond, _res.essence);
                            that.removeSelf();
                        }
                    });
                });
                btnUpdate.disabled = (itemNum1 < needItemNum1);
            }
            that.txtNeedItem1.text = Math.min(itemNum1, needItemNum1) + '/' + needItemNum1;
            that.txtItemPrize2.text = prizeDiamond + "";
            that.txtItemPrize3.text = prizeEssence + "";
        }
    }
    //请求进化
    requestUpdateEvolutionLevel(_level, _diamond, _essence, _callback = null) {
        let that = this;
        let dataString = 'level=' + _level + '&diamond=' + _diamond + '&essence=' + _essence;
        let HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: 'v1/evolution',
            method: 'Post',
            data: dataString,
            success: function (res) {
                console.log("requestUpdateEvolutionLevel", res);
                _callback && _callback(res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
}
EvolutionAdvancedView.isOpen = false;
//# sourceMappingURL=EvolutionAdvancedView.js.map
/*
* 守卫升级界面
*/
class EvolutionView extends ui.evolution.EvolutionViewUI {
    constructor(_stage = -1) {
        super();
        this.init(_stage);
    }
    //新建并添加到节点
    static Create(_parentNode, _callback = null, _removeCallback = null, _stage = -1) {
        let resList = [
            { url: "res/atlas/images.atlas", type: Laya.Loader.ATLAS }
        ];
        Laya.loader.load(resList, Handler.create(null, () => {
            if (_parentNode) {
                if (EvolutionView.isOpen) {
                    return;
                }
            }
            else {
                EvolutionView.isOpen = true;
                let nodeView = new EvolutionView(_stage);
                M.layer.frameLayer.addChildWithMaskCall(nodeView, nodeView.removeSelf);
                _callback && _callback(nodeView);
                nodeView.once(Laya.Event.REMOVED, nodeView, () => {
                    EvolutionView.isOpen = false;
                    nodeView.removeUI();
                    _removeCallback && _removeCallback();
                });
            }
        }));
    }
    //初始化
    init(_stage) {
        let self = this;
        //界面初始化
        self.btnUpdate.offAll(Laya.Event.CLICK);
        self.btnExit.offAll(Laya.Event.CLICK);
        self.btnExit.on(Laya.Event.CLICK, self, () => {
            self.removeSelf();
        });
        M.layer.frameLayer.on(LayerEvent.LAYER_ANIMATION_COMPLETE, this, (complete) => {
            if (complete) {
                if (!NoviceManager.isComplete) {
                    M.novice.on(NoviceEvent.ACTIVATE_TARGET, self, (eventParam) => {
                        if (eventParam === NoviceTarget.FOREST_KING_UPGRADE) {
                            M.novice.activateClickTarget(self.btnUpdate, eventParam, self.btnUpdate.parent);
                        }
                        else if (eventParam === NoviceTarget.FOREST_KING_CLOSE) {
                            M.novice.ui.btnReturnNovice2.visible = true;
                            M.novice.activateClickTarget(self.btnExit, eventParam, self.btnExit.parent);
                        }
                    });
                }
                M.novice.manuallyEventOut();
            }
        });
    }
    //移除界面
    removeUI() {
        EventsManager.Instance.offAll(EventsType.ESSENCE_CHANGE);
    }
    //设置强化数据
    refreshBoxUI(_callback) {
        let self = this;
        let kingLevel = userData.getKingLevel();
        let kingVO = GlobleData.getData(GlobleData.KindLevelConfigVO, kingLevel);
        //界面初始化
        if (kingVO) {
            //加成属性
            let atk = kingVO.attack;
            let atkSpeed = kingVO.interval;
            let atkAdd = kingVO.shatk * kingLevel;
            let doubleAdd = kingVO.crit * kingLevel;
            let heroData = BattleManager.Instance.getMonsterItem(EvolutionManager.Instance.getHeroId());
            let heroName = "英雄" + " Lv" + EvolutionManager.Instance.getHeroLevel() + ":";
            if (heroData) {
                heroName = heroData.name + " Lv" + EvolutionManager.Instance.getHeroLevel() + ":";
            }
            let currHeroCount = userData.caculateMonsterCount(EvolutionManager.Instance.getHeroId());
            let needHeroCount = 3;
            //需要钻石
            let diamond = userData.diamond;
            let needDiamond = MathUtils.parseInt(kingVO.gemxh.toString());
            if (kingLevel > 10) {
                self.btnUpdate.disabled = (diamond < needDiamond) || (currHeroCount < needHeroCount);
            }
            else {
                self.btnUpdate.disabled = diamond < needDiamond;
            }
            self.txtKingLevel.text = kingLevel + "";
            self.txtAtk.text = MathUtils.bytesToSize(atk);
            self.txtAtkAdd.text = MathUtils.numToPercent(atkAdd);
            self.txtAtkSpeed.text = MathUtils.bytesToSize(atkSpeed) + "s";
            self.txtDoubleAdd.text = MathUtils.numToPercent(doubleAdd);
            let isShow = kingLevel > 10;
            self.heroBox.visible = isShow;
            self.txtItemName.text = heroName;
            self.txtNeedItem.text = Math.min(currHeroCount, needHeroCount) + '/' + needHeroCount;
            self.txtNeedDiamond.text = Math.min(diamond, needDiamond) + '/' + needDiamond;
            if (isShow) {
                self.diamondBox.pos(32, 558);
            }
            else {
                self.diamondBox.pos(32, 507);
            }
            self.nameHbox.refresh();
            self.btnUpdate.on(Laya.Event.CLICK, self, () => {
                if (diamond >= needDiamond) {
                    HttpManager.Instance.requestUpdateKingLevel(EvolutionView.kingEvolutionType, kingLevel, needDiamond, (_res) => {
                        if (_res && _res.type) {
                            MessageUtils.showMsgTips("升级成功");
                            HallManager.Instance.hallData.isUpdate = false;
                            _callback && _callback(kingLevel + 1, _res.diamond);
                            self.refreshBoxUI(_callback);
                        }
                    });
                    if (GlobalConfig.DEBUG) {
                        HallManager.Instance.hallData.isUpdate = false;
                        _callback && _callback(kingLevel + 1, userData.diamond - needDiamond);
                        self.refreshBoxUI(_callback);
                    }
                }
                else {
                    MessageUtils.showMsgTips("钻石不足");
                }
            });
        }
    }
}
EvolutionView.isOpen = false;
EvolutionView.kingEvolutionType = 101;
//# sourceMappingURL=EvolutionView.js.map
/*
* 英雄升级界面;
*/
class LevelHeroView extends ui.evolution.LevelHeroViewUI {
    constructor(callback = null, cancenCallback = null) {
        super();
        this._callback = callback;
        this._cancenCallback = cancenCallback;
        this.addEvents();
        this.init();
    }
    //新建并添加到节点
    static Create(_parentNode, callback = null, cancenCallback = null) {
        let resList = [
            { url: "res/atlas/images/levelHero.atlas", type: Laya.Loader.ATLAS }
        ];
        Laya.loader.load(resList, Handler.create(null, () => {
            if (_parentNode) {
                let nodeView = new LevelHeroView(callback, cancenCallback);
                AlignUtils.setToScreenGoldenPos(nodeView);
                M.layer.subFrameLayer.addChildWithMaskCall(nodeView, nodeView.removeView);
            }
        }));
    }
    init() {
        let levelData = EvolutionManager.Instance.getEvolutionLevelData();
        this.txt_name.text = levelData.name + "Lv" + EvolutionManager.Instance.getHeroLevel();
        this.txt_count.text = "x" + EvolutionManager.Instance.needHeroCount;
        this.txt_diamond.text = userData.diamond + "/" + EvolutionManager.Instance.getEvolutionLevelDiamond();
        this.txt_level.text = "Lv" + userData.getKingLevel();
        this.txt_uplevel.text = "Lv" + (userData.getKingLevel() + 1);
        this.btn_sure.disabled = !EvolutionManager.Instance.getIsEvolutionLevel();
    }
    addEvents() {
        this.btn_sure.on(Laya.Event.CLICK, this, this.onClickSure);
        this.btn_next.on(Laya.Event.CLICK, this, this.removeView);
        this.btn_exit.on(Laya.Event.CLICK, this, this.removeView);
    }
    removeEvents() {
        this.btn_sure.off(Laya.Event.CLICK, this, this.onClickSure);
        this.btn_next.off(Laya.Event.CLICK, this, this.removeView);
        this.btn_exit.off(Laya.Event.CLICK, this, this.removeView);
    }
    onClickSure() {
        if (EvolutionManager.Instance.getIsEvolutionLevel()) {
            if (GlobalConfig.DEBUG) {
                MessageUtils.showMsgTips("升级成功");
                HallManager.Instance.hallData.isUpdate = false;
                this._callback && this._callback(userData.getKingLevel() + 1, userData.diamond - EvolutionManager.Instance.getEvolutionLevelDiamond());
            }
            else {
                HttpManager.Instance.requestUpdateKingLevel(EvolutionView.kingEvolutionType, userData.getKingLevel(), EvolutionManager.Instance.getEvolutionLevelDiamond(), (_res) => {
                    if (_res && _res.type) {
                        MessageUtils.showMsgTips("升级成功");
                        HallManager.Instance.hallData.isUpdate = false;
                        this._callback && this._callback(userData.getKingLevel() + 1, _res.diamond);
                    }
                });
            }
            this.removeEvents();
            this.removeSelf();
        }
    }
    removeView() {
        this.removeEvents();
        this.removeSelf();
        this._cancenCallback && this._cancenCallback();
    }
}
//# sourceMappingURL=LevelHeroView.js.map
/*
* 关注奖励;
*/
class FollowRewardView extends BaseView {
    constructor() {
        super(LAYER_TYPE.FRAME_LAYER, ui.follow.FollowRewardViewUI, false);
        this.setResources(["images/followReward"]);
    }
    //初始化
    initUI() {
        super.initUI();
        var that = this;
        //按钮事件
        that.ui.btnExit.on(Laya.Event.CLICK, that, that.onClickExit);
        that.ui.btnGet.on(Laya.Event.CLICK, that, that.onClickGet);
        that.requestOfficialAccData((_res) => {
            if (that.ui.imgBg && _res && _res.image && (_res.image.indexOf(".png") || _res.image.indexOf(".jpg"))) {
                that.ui.imgBg.skin = _res.image;
            }
        });
    }
    onClickExit() {
        ViewMgr.Ins.close(ViewConst.FollowRewardView);
    }
    onClickGet() {
        let that = this;
        that.requestPrize();
    }
    //拉取奖励
    requestPrize() {
        let that = this;
        let HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: 'v1/subscription/rewards',
            success: function (res) {
                console.log("requestPrize", res);
                if (res.code == 1) {
                    MessageUtils.showMsgTips("奖励领取成功");
                    HttpManager.Instance.requestDiamondData();
                    //移除红点
                    if (userData) {
                        userData.removeFollowRedPoint();
                    }
                }
                else if (res.code == 2) {
                    MessageUtils.showMsgTips("未关注公众号");
                }
                else if (res.code == 3) {
                    MessageUtils.showMsgTips("奖励已领取");
                }
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    //拉取公众二维码
    requestOfficialAccData(_callback) {
        let that = this;
        let HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: 'v1/subscription/get_info',
            success: function (res) {
                console.log("requestOfficialAccData", res);
                _callback && _callback(res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
}
//# sourceMappingURL=FollowRewardView.js.map
/*
* 好友互助Item;
*/
class FriendConcurItem extends ui.friendConcur.FriendConcurItemUI {
    constructor() {
        super();
    }
    set dataSource(value) {
        let self = this;
        if (value) {
            self._data = value;
            self._rewards = [];
            self.txt_time.text = value.create_time;
            self.rewardGold();
            if (value.uid == userData.userId) {
                self.txt_des0.text = "您帮助";
                self.txt_des1.text = StringUtils.omitStringByByteLen(platform.decode(value.p_nick_name), 10);
                self.txt_des2.text = "赢取了金币奖励";
                self.btn_get.disabled = value.status != 0;
                self.rewardDiamond(self._data.diamond);
            }
            else {
                self.txt_des0.text = "有位好友";
                self.txt_des1.text = StringUtils.omitStringByByteLen(platform.decode(value.nick_name), 10);
                self.txt_des2.text = "为我助力";
                self.btn_get.disabled = value.p_status != 0;
                self.rewardDiamond(self._data.p_diamond);
            }
            if (self.btn_get.disabled) {
                self.btn_get.label = "已领取";
            }
            else {
                self.btn_get.label = "领取";
            }
            self.hbox.refresh();
            this.btn_get.on(Laya.Event.CLICK, this, this.onGetReward);
        }
    }
    rewardGold() {
        let self = this;
        let monsterType = userData.isEvolution() ? 2 : 1;
        let monsterInfo = BattleManager.Instance.getUnLockMonster(monsterType, userData.getCarLevel());
        if (monsterInfo) {
            if (HallManager.Instance.hallData.concurGoldDic.ContainsKey(self._data.id)) {
                self._gold = HallManager.Instance.hallData.concurGoldDic.TryGetValue(self._data.id);
            }
            else {
                let curPrice = BattleManager.Instance.getMonsterPrice(monsterInfo.buyPrice, userData.queryBuyRecord(monsterInfo.id));
                self._gold = curPrice * 0.4;
                HallManager.Instance.hallData.concurGoldDic.Add(self._data.id, self._gold);
                userData.setCache(CacheKey.CONCUR, HallManager.Instance.hallData.concurGoldDic.toJsonObject());
            }
            self.txt_gold.text = MathUtils.bytesToSize(self._gold) + "";
            self._rewards.push(self._gold);
        }
    }
    rewardDiamond(diamond) {
        let self = this;
        self.diamondBox.visible = Number(diamond) > 0;
        if (self.diamondBox.visible) {
            self.txt_diamond.text = diamond;
            self._rewards.push(Number(diamond));
        }
    }
    /** 领取奖励 */
    onGetReward() {
        let self = this;
        if (self._data) {
            HttpManager.Instance.requestReward(self._data.id, (res) => {
                RewardGetView.Create(self, () => {
                    M.layer.screenEffectLayer.addChild(new FlyEffect().play("rollingCoin", LayerManager.mouseX, LayerManager.mouseY));
                    FriendConcurView.redPointNum--;
                    if (FriendConcurView.redPointNum < 1) {
                        if (userData) {
                            userData.removeFriendConcurRedPoint();
                        }
                        FriendConcurView.redPointNum = 0;
                    }
                    EventsManager.Instance.event(EventsType.GLOD_CHANGE, { money: userData.gold += self._gold });
                    if (self.diamondBox.visible && self._rewards.length > 1) {
                        EventsManager.Instance.event(EventsType.DIAMOND_CHANGE, { diamond: userData.diamond += self._rewards[1] });
                    }
                    EventsManager.Instance.event(EventsType.FRIEND_CONCUR_GET_REWARD);
                }, self._rewards);
            });
        }
    }
}
//# sourceMappingURL=FriendConcurItem.js.map
/*
* 好友互助;
*/
class FriendConcurView extends ui.friendConcur.FriendConcurUI {
    constructor() {
        super();
        this.addEvetns();
        this.init();
    }
    //新建并添加到节点
    static Create(_parentNode) {
        let resList = [
            { url: "res/atlas/images/friendConcur.atlas", type: Laya.Loader.ATLAS }
        ];
        Laya.loader.load(resList, Handler.create(null, () => {
            if (_parentNode) {
                let nodeView = new FriendConcurView();
                AlignUtils.setToScreenGoldenPos(nodeView);
                LayerManager.getInstance().frameLayer.addChildWithMaskCall(nodeView, nodeView.removeView);
                nodeView.once(Laya.Event.REMOVED, nodeView, nodeView.removeView);
            }
        }));
    }
    //初始化
    init() {
        let self = this;
        self.rewardList.visible = false;
        self.rewardList.itemRender = FriendConcurItem;
        self.rewardList.vScrollBarSkin = "";
        HttpManager.Instance.requestFriendConcurList((res) => {
            self.refreshRewarList(res);
        });
    }
    addEvetns() {
        let self = this;
        self.btn_exit.on(Laya.Event.CLICK, self, self.removeView);
        self.btn_send.on(Laya.Event.CLICK, self, self.onSendShareHandler);
        EventsManager.Instance.on(EventsType.FRIEND_CONCUR_GET_REWARD, self, self.onUpdateFriendList);
    }
    removeEvents() {
        let self = this;
        self.btn_exit.off(Laya.Event.CLICK, self, self.removeView);
        self.btn_send.off(Laya.Event.CLICK, self, self.onSendShareHandler);
        EventsManager.Instance.off(EventsType.FRIEND_CONCUR_GET_REWARD, self, self.onUpdateFriendList);
    }
    /** 发送分享 */
    onSendShareHandler() {
        userData.toShareAd(() => {
            MessageUtils.showMsgTips("分享成功");
        }, 14);
    }
    refreshRewarList(data) {
        let self = this;
        if (data == null)
            return console.log("好友互动 -- 拉取不到数据。。。");
        self.rewardList.visible = true;
        let listData = data;
        listData.sort((pre, next) => {
            if (pre.static == 1 && next.static == 1) {
                return pre.p_status - next.p_status;
            }
            return pre.status - next.status;
        });
        listData.forEach((data, index, list) => {
            if (data.uid == userData.userId) {
                FriendConcurView.redPointNum += (data.status == 0 ? 1 : 0);
            }
            else {
                FriendConcurView.redPointNum += (data.p_status == 0 ? 1 : 0);
            }
        });
        self.rewardList.repeatY = listData.length;
        self.rewardList.array = listData;
    }
    onUpdateFriendList() {
        let self = this;
        HttpManager.Instance.requestFriendConcurList((res) => {
            if (res)
                self.refreshRewarList(res);
        });
    }
    removeView() {
        let self = this;
        self.removeSelf();
        self.removeEvents();
    }
}
FriendConcurView.redPointNum = 0;
//# sourceMappingURL=FriendConcurView.js.map
class NoviceManager extends EventDispatcher {
    static getInstance() {
        if (!this._instance) {
            this._instance = new NoviceManager();
        }
        return this._instance;
    }
    // private _targetCircleAnim: Animation;
    init(groupId = 1) {
        this._currGroupId = groupId;
        this._finalGroupId =
            NoviceGuide.dataArr[NoviceGuide.dataArr.length - 1].groupId;
        this._activateTargets = [];
    }
    get isComplete() {
        return this._currGroupId > this._finalGroupId;
    }
    get isRunning() {
        return this.ui && this.ui.parent && this.ui.visible;
    }
    get currGroupId() {
        return this._currGroupId;
    }
    set saveFunc(func) {
        this._saveFunc = func;
    }
    start(container) {
        NoviceManager.isComplete = this.isComplete;
        if (NoviceManager.isComplete) {
            return;
        }
        if (container) {
            this._container = container;
        }
        else {
            this._container = M.layer.guideLayer;
        }
        this._currStepId = 0;
        this._currGroupSheets = [].concat(NoviceGuide.getSheetByFieldValue("groupId", this._currGroupId));
        this.ui = new ui.guide.NoviceViewUI();
        this.ui.mouseEnabled = true;
        this.ui.mouseThrough = true;
        this.ui.viewStackNovice.selectedIndex = NoviceType.NONE;
        this.ui.visible = false;
        this.ui.btnReturnNovice1.on(Laya.Event.CLICK, this, this.onCompleteNovice);
        this.ui.btnReturnNovice2.on(Laya.Event.CLICK, this, this.onCompleteNovice);
        this._container.addChild(this.ui);
        Laya.timer.frameOnce(10, this, this.nextStep);
    }
    onCompleteNovice() {
        M.novice.complete();
    }
    nextGroup() {
        this._currGroupId++;
        this.saveGroupId(this._currGroupId);
        if (!this.isComplete) {
            this._currGroupSheets = [].concat(NoviceGuide.getSheetByFieldValue("groupId", this._currGroupId));
            this._currStepId = 0;
            this.nextStep();
        }
        else {
            NoviceManager.isComplete = true;
            // ButtonManager.ENABLED = true;
            this.offAll();
            if (this._activateTargets.length) {
                this.recoverTargets();
            }
            this._currGroupSheets.length = 0;
            this._currGroupSheets = null;
            this._currSheet = null;
            this.ui.destroy();
            this.ui = null;
        }
    }
    nextStep() {
        Laya.Tween.clearAll(this.ui.imgFinger);
        this.ui.visible = true;
        this.ui.viewInteract.visible = false;
        this._currStepId++;
        if (this._currGroupSheets &&
            this._currStepId <= this._currGroupSheets.length) {
            const sheet = this._currGroupSheets[this._currStepId - 1];
            this._currSheet = sheet;
            if (sheet.activateType !== 0) {
                this._currStepId = 0;
                this.ui.removeSelf();
                this.sendWaitingEvent();
                return;
            }
            if (!this.ui.parent) {
                this._container.addChild(this.ui);
            }
            if (sheet.completed === 1) {
                // UserModel.novice.saveGroupId(this._currGroupId + 1);
                this.saveGroupId(this._currGroupId + 1);
            }
            this._currStepType = sheet.type;
            const position = StringUtils.splitStringToPoint(sheet.position);
            if (this._currStepType === NoviceType.DEFAULT) {
                // 剧情对话
                M.layer.guideLayer.maskEnabled = true;
                this.ui.viewStackNovice.selectedIndex = NoviceType.DEFAULT - 1;
                this.updateDisplay(sheet, position.x, position.y);
                this.activateMaskClick();
            }
            else if (this._currStepType === NoviceType.CLICK) {
                // 点击指引
                M.layer.guideLayer.maskEnabled = false;
                this.ui.mouseEnabled = true;
                this.ui.viewStackNovice.selectedIndex = NoviceType.CLICK - 1;
                this.ui.viewStackNovice.mouseEnabled = true;
                this.updateDisplay(sheet, position.x, position.y);
                // 手指位置更新，手指位置注册点是图片左上角，坐标系的零点是点击区域的中间
                if (sheet.fingerPosition) {
                    const fingerPos = StringUtils.splitStringToPoint(sheet.fingerPosition);
                    this.ui.imgFinger.pos(fingerPos.x, fingerPos.y);
                }
                else {
                    this.ui.imgFinger.pos(30, 30);
                }
                this.manuallyEventOut();
            }
            else if (this._currStepType === NoviceType.DRAG) {
                // 拖拽指引
                M.layer.guideLayer.maskEnabled = false;
                this.ui.viewStackNovice.selectedIndex = NoviceType.CLICK - 1;
                this.ui.viewStackNovice.mouseEnabled = false;
                this.ui.viewInteract.visible = true;
                this.updateDisplay(sheet, position.x, position.y);
                this.updateSpecialInteractArea(sheet);
                if (sheet.fingerPosition) {
                    const points = StringUtils.splitStringToKV(sheet.fingerPosition);
                    this.doDragAnimation(parseInt(points[0].key), parseInt(points[0].value), parseInt(points[1].key), parseInt(points[1].value));
                }
                this.manuallyEventOut();
            }
            else {
                console.log("指引类型未实现！");
            }
        }
        else {
            this.nextGroup();
        }
    }
    manuallyEventOut() {
        if (this._currSheet) {
            Laya.timer.once(Time.SEC_IN_MILI * 0.05, this, () => {
                this.event(NoviceEvent.ACTIVATE_TARGET, this._currSheet.eventParam);
            });
        }
    }
    sendWaitingEvent() {
        if (this._currSheet) {
            Laya.timer.once(Time.SEC_IN_MILI * 0.05, this, () => {
                this.event(NoviceEvent.WAITING, { type: this._currSheet.activateType, value: this._currSheet.activateValue });
            });
        }
    }
    complete() {
        if (!this.isComplete) {
            this._currGroupId = 999;
            this.nextStep();
        }
    }
    activateTargets(targetObjs) {
        if (targetObjs) {
            for (const targetObj of targetObjs) {
                const childIdx = targetObj.parent.getChildIndex(targetObj.target);
                targetObj.childIdx = childIdx;
                PointUtils.parentToParent(targetObj.target, this.ui.viewClickTargetContainer, true);
                this.ui.viewClickTargetContainer.addChild(targetObj.target);
                this._activateTargets.push(targetObj);
            }
        }
    }
    // prettier-ignore
    activateClickTarget(target, targetName, parent, subTargets) {
        this.activateTargets(subTargets);
        const childIdx = parent.getChildIndex(target);
        target.on(Laya.Event.CLICK, this, this.onTargetClick, [target, targetName, parent, childIdx, subTargets]);
        PointUtils.parentToParent(target, this.ui.viewClickTargetContainer, true);
        this.ui.viewClickTargetContainer.addChild(target);
        this._activateTargets.push({ target, parent, childIdx });
    }
    // prettier-ignore
    onTargetClick(target, targetName, parent, childIdx, subTargets) {
        if (!this._currSheet || !this._currSheet.eventParam)
            return;
        if (targetName === this._currSheet.eventParam) {
            M.layer.guideLayer.maskEnabled = true;
            target.off(Laya.Event.CLICK, this, this.onTargetClick);
            this.recoverTargets();
            this.nextStep();
        }
    }
    recoverTargets() {
        while (this._activateTargets.length) {
            const targetObj = this._activateTargets.pop();
            PointUtils.parentToParent(targetObj.target, targetObj.parent, true);
            targetObj.parent.addChildAt(targetObj.target, targetObj.childIdx);
        }
    }
    updateDisplay(sheet, sx, sy) {
        // 对话位置，注册点是角色的左上角
        this.ui.imgDialogCharacter.pos(sx, sy);
        this.ui.imgClickCharacter.pos(sx, sy);
        // 对话文本
        this.ui.lblDialogScript.text = sheet.script;
        this.ui.lblClickScript.text = sheet.script;
        // 蒙板抠图位置更新
        if (sheet.interactPosition) {
            const maskPos = StringUtils.splitStringToPoint(sheet.interactPosition);
            this.ui.viewInteractArea.pos(maskPos.x, maskPos.y);
        }
        else {
            this.ui.viewInteractArea.pos(0, 0);
        }
    }
    updateSpecialInteractArea(sheet) {
        if (sheet && sheet.specialInteractArea) {
            const rect = StringUtils.splitStringToArr(sheet.specialInteractArea);
            this.ui.imgTop.pos(0, 0).size(LayerManager.stageDesignWidth, parseInt(rect[1]));
            this.ui.imgRight.pos(parseInt(rect[0]) + parseInt(rect[2]), parseInt(rect[1])).size((LayerManager.stageDesignWidth - (parseInt(rect[0]) + parseInt(rect[2]))), parseInt(rect[3]));
            this.ui.imgBottom.pos(0, parseInt(rect[1]) + parseInt(rect[3])).size(LayerManager.stageDesignWidth, (LayerManager.stageDesignHeight - (parseInt(rect[1]) + parseInt(rect[3]))));
            this.ui.imgLeft.pos(0, parseInt(rect[1])).size(parseInt(rect[0]), parseInt(rect[3]));
        }
    }
    doDragAnimation(sx, sy, tx, ty) {
        this.ui.imgFinger.pos(sx, sy);
        Laya.Tween.to(this.ui.imgFinger, { x: tx, y: ty }, 500, null, Laya.Handler.create(this, () => {
            Laya.timer.once(500, this, this.doDragAnimation, [sx, sy, tx, ty]);
        }), 500);
    }
    activateMaskClick() {
        Laya.timer.once(Time.SEC_IN_MILI * 0.05, this, () => {
            // prettier-ignore
            M.layer.guideLayer.on(Laya.Event.CLICK, this, this.onMaskClick);
        });
    }
    onMaskClick() {
        if (this._currStepType === NoviceType.DEFAULT) {
            M.layer.guideLayer.off(Laya.Event.CLICK, this, this.onMaskClick);
            this.nextStep();
        }
    }
    saveGroupId(groupId) {
        if (this._saveFunc) {
            this._saveFunc(groupId);
        }
    }
}
NoviceManager.isComplete = false;
NoviceManager.cache = {};
var NoviceType;
(function (NoviceType) {
    NoviceType[NoviceType["NONE"] = 0] = "NONE";
    NoviceType[NoviceType["DEFAULT"] = 1] = "DEFAULT";
    NoviceType[NoviceType["CLICK"] = 2] = "CLICK";
    NoviceType[NoviceType["DRAG"] = 3] = "DRAG";
})(NoviceType || (NoviceType = {}));
var NoviceActivateType;
(function (NoviceActivateType) {
    NoviceActivateType[NoviceActivateType["DEFAULT"] = 0] = "DEFAULT";
    NoviceActivateType[NoviceActivateType["LEVEL"] = 1] = "LEVEL";
    NoviceActivateType[NoviceActivateType["SYNTHESIS_LEVEL"] = 2] = "SYNTHESIS_LEVEL";
})(NoviceActivateType || (NoviceActivateType = {}));
class NoviceTarget {
}
NoviceTarget.QUICK_PURCHASE_MONSTER = "QUICK_PURCHASE_MONSTER";
NoviceTarget.FOREST_KING = "FOREST_KING";
NoviceTarget.FOREST_KING_UPGRADE = "FOREST_KING_UPGRADE";
NoviceTarget.FOREST_KING_CLOSE = "FOREST_KING_CLOSE";
NoviceTarget.MONSTER_CELL_2 = "MONSTER_CELL_2";
class NoviceEvent {
}
NoviceEvent.ACTIVATE_TARGET = "ACTIVATE_TARGET";
NoviceEvent.WAITING = "WAITING";
NoviceEvent.DEFAULT = "DEFAULT";
NoviceEvent.CLICK = "CLICK";
//# sourceMappingURL=NoviceManager.js.map
/*
* 大厅管理类
*/
class HallManager extends Laya.EventDispatcher {
    setup() {
        let self = this;
        self._model = new HallModel();
    }
    /** 创建英雄 */
    createPet(carparkList, iKind, isBackward = false) {
        let self = this;
        let curIndex = 0;
        let element = null;
        for (let index = 0; index < self._model.parkMonsterCount; index++) {
            curIndex = index;
            if (isBackward) {
                curIndex = self._model.parkMonsterCount - index - 1;
            }
            element = carparkList.getCell(curIndex);
            if (element) {
                let carParkSp = element.getChildByName('car');
                if (carParkSp && carParkSp.isEmpty() && !carParkSp.isBox() && !carParkSp.isLock()) {
                    carParkSp.setKind(iKind, curIndex);
                    carParkSp.setStage(1);
                    //本地保存
                    userData.setCarparkSave(carParkSp);
                    return carParkSp;
                }
            }
        }
        if (!isBackward) {
            MessageUtils.showMsgTips(LanguageManager.Instance.getLanguageText("hallScene.label.txt.01"));
            return null;
        }
    }
    /** 获取每秒收益 */
    getCalculateIncomePerSec(carparkList) {
        let self = this;
        let incomePerSec = 0;
        let element = null;
        if (carparkList) {
            for (let index = 0; index < self._model.parkMonsterCount; index++) {
                element = carparkList.getCell(index);
                if (element) {
                    let carParkSp = element.getChildByName('car');
                    if (carParkSp && carParkSp.isRunning()) {
                        incomePerSec += carParkSp.getIncomePerSecond() *
                            self._model.userExtraIncome *
                            self._model.userAcceValue *
                            PlayerManager.Instance.Info.userLevelExtraIncome;
                    }
                }
            }
        }
        return incomePerSec;
    }
    /** 获取森林王是否可以升级 */
    getKingIsUpgrade() {
        let self = this;
        if (!HallManager.Instance.hallData.isUpdate) {
            let kingLevel = userData.getKingLevel();
            let kingVO = GlobleData.getData(GlobleData.KindLevelConfigVO, kingLevel);
            //需要钻石
            let diamond = userData.diamond;
            let needDiamond = kingVO.gemxh;
            //升级条件
            let monsterLevel = 0;
            let itemId1 = 0;
            let itemId2 = 0;
            let itemId3 = 0;
            //进化设定
            if (userData.isEvolution()) {
                monsterLevel = ((kingLevel - 30) % 60) + 1;
                itemId1 = 1000 + monsterLevel;
                itemId2 = 2000 + monsterLevel;
                itemId3 = 3000 + monsterLevel;
            }
            else {
                monsterLevel = ((kingLevel - 1) % 30) + 1;
                itemId1 = 100 + monsterLevel;
                itemId2 = 200 + monsterLevel;
                itemId3 = 300 + monsterLevel;
            }
            let itemNum1 = userData.caculateMonsterCount(itemId1);
            let itemNum2 = userData.caculateMonsterCount(itemId2);
            let itemNum3 = userData.caculateMonsterCount(itemId3);
            let needItemNum1 = 1;
            let needItemNum2 = 1;
            let needItemNum3 = 1;
            if (kingLevel > 10) {
                HallManager.Instance.hallData.isUpdate = !((diamond < needDiamond) || (itemNum1 < needItemNum1) || (itemNum2 < needItemNum2) || (itemNum3 < needItemNum3));
            }
            else {
                HallManager.Instance.hallData.isUpdate = !((diamond < needDiamond));
            }
        }
        return HallManager.Instance.hallData.isUpdate;
    }
    /** 更新精华碎片数 */
    updateEssence(value) {
        let that = this;
        PlayerManager.Instance.Info.userEssence = value;
        //本地保存
        userData.setEssence(PlayerManager.Instance.Info.userEssence);
    }
    /** 更新每秒收益 */
    updateIncomePerSec(value) {
        HallManager.Instance.hallData.userIncomePerSec = value;
    }
    /** 新手引导 */
    isGuide() {
        if (userData && userData.isGuide()) {
            return true;
        }
        return false;
    }
    /** 显示通关奖励礼包界面 */
    showClearanceRewardView() {
        if (this._hall) {
            let lastStage = HallManager.Instance.hallData.stagePrizeList.pop();
            //显示获得的奖品
            let stagePrizeCfg = GlobleData.getData(GlobleData.BarrierRewardVO, lastStage);
            if (stagePrizeCfg) {
                //发送奖励
                let bossM = MathUtils.parseStringNum(stagePrizeCfg.bossM);
                let gold = BattleManager.Instance.getBarrierRewardToGold(lastStage, MathUtils.parseStringNum(stagePrizeCfg.gold));
                let gem = MathUtils.parseStringNum(stagePrizeCfg.gem);
                HttpManager.Instance.requestStagePrizeDiamond(lastStage, gem, bossM, (_res) => {
                    let stage = _res;
                    if (stage > 0) {
                        ClearanceRewardView.Create(this._hall, null, null, stage);
                        HttpManager.Instance.requestDiamondData();
                        HttpManager.Instance.requestEssenceData();
                    }
                });
                if (gold > 0) { //金币礼包
                    this._hall.updateGold(PlayerManager.Instance.Info.userMoney + gold);
                }
            }
        }
    }
    set hallData(value) { this._model = value; }
    /** 大厅中的数据 */
    get hallData() { return this._model; }
    get hall() {
        return this._hall;
    }
    set hall(value) {
        this._hall = value;
    }
    static get Instance() {
        if (HallManager._instance == null) {
            HallManager._instance = new HallManager();
        }
        return HallManager._instance;
    }
}
var ITEM_ID;
(function (ITEM_ID) {
    ITEM_ID[ITEM_ID["GOLD"] = 1] = "GOLD";
    ITEM_ID[ITEM_ID["DIAMOND"] = 2] = "DIAMOND";
})(ITEM_ID || (ITEM_ID = {}));
//# sourceMappingURL=HallManager.js.map
/*
* 大厅主场景
*/
class HallScene extends ui.hall.HallSceneUI {
    constructor() {
        super();
        this.parkMonsterModelSp = null;
        this.curMonsterSprite = null;
        this._giveCarTime = 0; //定时赠送怪物
        this._giveTempTime = 0; //定时赠送怪物
        /** 更新在线奖励时间 */
        this._diamondTime = 0;
        var self = this;
        self.frameOnce(5, self, () => {
            self.addEvents();
            self.init();
        });
    }
    //新建并添加到节点
    static Create(_parentNode) {
        let resList = [
            { url: "res/atlas/images.atlas", type: Laya.Loader.ATLAS },
            { url: "res/atlas/images/component.atlas", type: Laya.Loader.ATLAS },
            { url: "res/atlas/images/hall.atlas", type: Laya.Loader.ATLAS },
            { url: "res/atlas/images/core.atlas", type: Laya.Loader.ATLAS },
            { url: "res/atlas/images/novice.atlas", type: Laya.Loader.ATLAS },
            { url: "sheets/sheet.json", type: Laya.Loader.JSON }
        ];
        Laya.loader.load(resList, Handler.create(null, () => {
            EffectUtils.stopWaitEffect();
            if (_parentNode) {
                let viewTag = "HallScene";
                let nodeViewOld = _parentNode.getChildByName(viewTag);
                if (nodeViewOld) {
                    return;
                }
                let nodeView = new HallScene();
                nodeView.name = viewTag;
                _parentNode.addChild(nodeView);
            }
        }));
        //加载网络声音
        let resSoundList = [
            { url: "musics/unlock.mp3", type: Laya.Loader.SOUND },
            { url: "musics/makecar.mp3", type: Laya.Loader.SOUND },
            { url: "musics/cartorunway.mp3", type: Laya.Loader.SOUND },
            { url: "musics/accecar.mp3", type: Laya.Loader.SOUND },
            { url: "musics/drawcar.mp3", type: Laya.Loader.SOUND },
            { url: "musics/atk.mp3", type: Laya.Loader.SOUND },
            { url: "musics/kingUpdate.mp3", type: Laya.Loader.SOUND },
            { url: "musics/evolutions.mp3", type: Laya.Loader.SOUND }
        ];
        Laya.loader.load(resSoundList, Laya.Handler.create(null, () => {
            console.log("load music finish");
        }));
    }
    //初始化
    init() {
        let self = this;
        HallManager.Instance.hall = self;
        self.btnMiniProgram.visible = false;
        if (self.btnMiniProgram && userData.miniImageUrl().length > 0) {
            Laya.loader.load(userData.miniImageUrl(), Laya.Handler.create(self, (_imgTexture) => {
                if (_imgTexture && _imgTexture.url) {
                    self.btnMiniProgram.skin = _imgTexture.url;
                }
            }));
        }
        self.carStoreBtnEnabled();
        self.progressBarPower.changeHandler = new Handler(self, self.powerAcceChangeHandler);
        self.powerAcceChangeHandler(self.progressBarPower.value);
        self.btnPower.visible = false; //加速炮台暂时屏蔽
        if (GlobalConfig.DEBUG) {
            DebugView.GameView = self;
            LayerManager.getInstance().debugLayer.addChild(new DebugView());
        }
        Sheet.initSheets(Laya.loader.getRes("sheets/sheet.json"));
        M.novice.init(userData.noviceGroupId);
        M.novice.saveFunc = groupId => {
            userData.saveNovice(groupId);
        };
        M.novice.start();
        BuffController.getInstance().init(self.viewBuffContainer);
        SkyDropController.getInstance().init(self.viewSkyDropContainer);
        Laya.timer.once(1e3, this, () => {
            if (Laya.Browser.window.wxUserInfo) {
                PlayerManager.Instance.Info.wxUserInfo = Laya.Browser.window.wxUserInfo;
            }
        });
        Laya.timer.once(2e3, this, () => {
            self.showDaySignView();
        });
        if (!NoviceManager.isComplete) {
            M.novice.on(NoviceEvent.ACTIVATE_TARGET, self, (eventParam) => {
                if (eventParam === NoviceTarget.QUICK_PURCHASE_MONSTER) {
                    M.novice.activateClickTarget(self.btnShopShortcut, eventParam, self.btnShopShortcut.parent);
                }
                else if (eventParam === NoviceTarget.FOREST_KING) {
                    M.novice.ui.btnReturnNovice2.visible = false;
                    M.novice.activateClickTarget(self.btnEvolution, eventParam, self.btnEvolution.parent, [{ target: self.spMountGuard, parent: self.spMountGuard.parent }]);
                }
                else if (eventParam === NoviceTarget.MONSTER_CELL_2) {
                    NoviceManager.cache.synthesiseComplete = () => {
                        M.novice.nextStep();
                    };
                }
            });
            M.novice.on(NoviceEvent.WAITING, self, ({ type, value }) => {
                if (type === NoviceActivateType.LEVEL) {
                    NoviceManager.cache.checkLevel = (level) => {
                        if (level >= value) {
                            M.novice.nextGroup();
                            delete NoviceManager.cache.synthesiseComplete;
                        }
                    };
                }
                else if (type === NoviceActivateType.SYNTHESIS_LEVEL) {
                    NoviceManager.cache.checkPetSynthesisLevel = (synthesisLevel) => {
                        if (synthesisLevel >= value) {
                            M.novice.nextGroup();
                            delete NoviceManager.cache.checkPetSynthesisLevel;
                        }
                    };
                }
            });
        }
        self.navToMiniAni.play(0, true);
        /** 初始化用户数据 */
        self.initUserData();
        self.initCarUI();
        self.initCarparkList();
        //投诉建议
        if (self.btnFeedback) {
            const rect = LayerManager.getRealStageRect(self.btnFeedback);
            platform.createFeedbackButton({
                x: rect.x, y: rect.y,
                width: rect.width, height: rect.height
            });
        }
        //启动游戏出怪
        self.timerOnce(2000, self, () => {
            HallManager.Instance.hallData.gameStatus = 1;
            self.createMonster(HallManager.Instance.hallData.passStage, HallManager.Instance.hallData.passSection);
        });
        //守卫
        if (self.spMountGuard) {
            let bossId = userData.isEvolution() ? 100003 : 100002;
            self.spMountGuard.setKind(bossId);
        }
        //训练提示
        self.imgTrain.visible = false;
        self.gameTimeImg.visible = self.gameTimebg.visible = self.txtGameTime.visible = false;
        //检查守卫是否可以升级
        self.checkKingIsUpdate();
        StrengthenManager.Instance.checkRedPoint();
        self.showStagePrize(true);
        SDKManager.Instance.createBanner(false);
    }
    /** 初始化用户数据 */
    initUserData() {
        let self = this;
        //初始化用户数据
        if (userData) {
            HallManager.Instance.updateIncomePerSec(HallManager.Instance.hallData.userIncomePerSec);
            self.updateGold(userData.gold);
            self.updateDiamond(userData.diamond);
            HallManager.Instance.updateEssence(userData.essence);
            self.setPassStage(userData.getPassStage());
            self.setPassSection(userData.getPassSection());
            self.setKingLevel(userData.getKingLevel());
            self.refreshShortcutCreateBtn();
            //延迟处理
            self.frameOnce(50, self, () => {
                //离线收益
                if (userData && userData.hasOfflinePrize == false) {
                    userData.hasOfflinePrize = true;
                    userData.requestOfflinePrizeData();
                }
                else {
                    self.onOffLineRevenue();
                }
                self.showSurpassView();
                if (userData) {
                    let acceLeftTime = userData.getAcceLeftTime();
                    if (acceLeftTime > 0) {
                        let imgAcce = self.btnAcce.getChildByName("imgAcce");
                        if (imgAcce.visible == false) {
                            self.playAcceEffectView(acceLeftTime, false);
                        }
                    }
                }
                //先到后台拉取未领取的奖励
                HttpManager.Instance.requestStagePrizeData((_prizeList) => {
                    if (_prizeList == null || _prizeList.length < 1)
                        return;
                    let prizeList = [];
                    let totalCount = _prizeList.length;
                    for (var index = 0; index < totalCount; index++) {
                        var element = _prizeList[totalCount - 1 - index];
                        if (element && element.stage < HallManager.Instance.hallData.passStage) {
                            if (element.stage < (HallManager.Instance.hallData.passStage - 5)) {
                                break; //最近5关
                            }
                            prizeList.push(element.stage); //过滤当前关卡
                            if (prizeList.length > 4) {
                                break; //最大5关
                            }
                        }
                    }
                    if (totalCount > 0) {
                        HallManager.Instance.hallData.stagePrizeList = prizeList.reverse();
                        self.showStagePrize(HallManager.Instance.hallData.stagePrizeList.length > 0);
                    }
                });
            });
            //获取钻石数据
            HttpManager.Instance.requestDiamondData();
            //获取精华碎片
            HttpManager.Instance.requestEssenceData();
            //每日签到红点
            if (userData.isShowDailySignRedPoint()) {
                self.showDailySignRedPoint();
            }
            //怪物商店红点
            if (userData.isShowCarShopRedPoint()) {
                self.showCarportRedPoint();
            }
            //任务红点
            if (userData.isShowTaskRedPoint()) {
                self.showTaskRedPoint();
            }
            //转盘红点
            if (userData.isShowLuckPrizeRedPoint()) {
                self.showLuckPrizeRedPoint();
            }
            //关注红点
            if (userData.isShowFollowRedPoint()) {
                self.showFollowRewardRedPoint();
            }
            //好友互助红点
            if (userData.isShowFriendConcurRedPoint()) {
                self.showFriendConcurRedPoint();
            }
            self.menuRedPointIsShow();
            self.updateDiamondTime(HallManager.Instance.hallData.offlineTotalTime);
        }
    }
    addEvents() {
        let self = this;
        self.btnPower.on(Laya.Event.CLICK, self, self.onPowerAcce);
        self.btnShop.on(Laya.Event.CLICK, self, self.onShowCarport);
        self.btnCarStore.on(Laya.Event.CLICK, self, self.onCarStore);
        self.btnEvolution.on(Laya.Event.CLICK, self, self.onEvolution);
        self.btnAcce.on(Laya.Event.CLICK, self, self.onGameAccelerate);
        self.btnStrengthen.on(Laya.Event.CLICK, self, self.onStrengthen);
        self.btnStagePrize.on(Laya.Event.CLICK, self, self.onStagePrize);
        self.btnMiniProgram.on(Laya.Event.CLICK, self, self.onMiniProgram);
        self.btnLuckPrize.on(Laya.Event.CLICK, self, self.showLuckPrizeView);
        self.btn_fly.on(Laya.Event.CLICK, self, self.onClickMiniProgram);
        self.btn_block.on(Laya.Event.CLICK, self, self.onClickMiniProgram);
        self.btn_eliminate.on(Laya.Event.CLICK, self, self.onClickMiniProgram);
        self.btn_arrow.on(Laya.Event.CLICK, self, self.onClickMenuHandler);
        self.btn_concur.on(Laya.Event.CLICK, self, self.onClickConcur); //好友互助 
        self.btn_ranking.on(Laya.Event.CLICK, self, self.onRanking); //排行榜
        self.btn_sign.on(Laya.Event.CLICK, self, self.showDaySignView); //签到
        self.btn_follow.on(Laya.Event.CLICK, self, self.onClickFollow); //关注
        self.btn_online.on(Laya.Event.CLICK, self, self.onGetOffLineReward); //在线奖励
        this.btnMore.on(Laya.Event.CLICK, this, () => {
            M.more.show();
        });
        if (self.btnTask)
            self.btnTask.on(Laya.Event.CLICK, self, self.showTaskView);
        if (self.surpassView)
            self.surpassView.on(Laya.Event.CLICK, self, self.onFriendRanking);
        BattleManager.Instance.on(BattleEventsConst.BATTLE_CLEARANC, self, self.onBattleClearanc);
        BattleManager.Instance.on(BattleEventsConst.BATTLE_NO_CLEARANC, self, self.onBattleNoClearanc);
        EventsManager.Instance.on(EventsType.OFFLINE, self, self.onOffLineRevenue); //离线收益
        EventsManager.Instance.on(EventsType.DIAMOND_CHANGE, self, self.onRefreshDiamond); //钻石刷新
        EventsManager.Instance.on(EventsType.GLOD_CHANGE, self, self.onRefreshGold); //金币刷新
        EventsManager.Instance.on(EventsType.DAY_SIGN_RED_POINT, self, self.onUpdateSignRenPoint); //每日签到红点移除事件
        EventsManager.Instance.on(EventsType.TASK_RED_POINT, self, self.onUpdateTaskRedPoint); //任务红点移除事件
        EventsManager.Instance.on(EventsType.LUCK_PRIZED_RED_POINT, self, self.onUpdatePrizeRedPoint); //转盘红点移除事件
        EventsManager.Instance.on(EventsType.HERO_SHOP_RED_POINT, self, self.onUpdatePetShopRedPoint); //英雄商店红点事件
        EventsManager.Instance.on(EventsType.ACCE_CHANGE, self, self.onUpdateAccelerateBtnState); //加速按钮状态
        EventsManager.Instance.on(EventsType.LUCK_PRIZE, self, self.onUpdatePrizeState); //更新幸运抽奖状态
        EventsManager.Instance.on(EventsType.STRENGTHEN_RED_POINT, self, self.onUpdateStrengthenRedPoint); //强化红点移除事件
        EventsManager.Instance.on(EventsType.FOLLOW_RED_POINT, self, self.onFollowRewardRedPoint); //关注红点事件
        EventsManager.Instance.on(EventsType.FRIEND_CONCUR_RED_POINT, self, self.onFriendConcurRedPoint); //好友互助红点事件
        EventsManager.Instance.on(EventsType.UPDATE_HALL_DATA, self, self.onUpdateHallData);
    }
    onClickMiniProgram(evt) {
        let self = this;
        let appId = "";
        switch (evt.target) {
            case self.btn_fly:
                appId = "wx5bf2e598a2acbb50";
                break;
            case self.btn_block:
                appId = "wx9daa52931f687adc";
                break;
            case self.btn_eliminate:
                appId = "wx06f4827d100da314";
                break;
        }
        SDKManager.Instance.navigateToMiniProgram(appId);
    }
    onUpdateHallData() {
        let self = this;
        self.updateGold(userData.gold);
        self.updateDiamond(userData.diamond);
    }
    /** 等级礼包 */
    showStagePrize(value) {
        let self = this;
        if (self._levelReward == null && value) {
            self._levelReward = Laya.Pool.getItemByClass(userData.ANIMATION_POOL_NAME, Laya.Animation);
            self.btnStagePrize.addChild(self._levelReward);
            // 加载动画图集,加载成功后执行回调方法
            let aniAtlas = "images/effect/levelReward/levelReward.atlas";
            self._levelReward.loadAtlas(aniAtlas, Handler.create(self, () => {
                self._levelReward.interval = 77;
                self._levelReward.play();
            }));
        }
        self.btnStagePrize.visible = value;
    }
    //显示超越好友视窗
    showSurpassView() {
        let that = this;
        if (userData) {
            userData.setUserCloudStorage();
        }
        let openDataContext = platform.getOpenDataContext();
        if (that.surpassView && openDataContext) {
            that.surpassView.visible = true;
            // openDataContext.postMessage({
            //   text: 'hello',
            //   year: (new Date()).getFullYear()
            // })
            // @ts-ignore
            let sharedCanvas = openDataContext.canvas;
            sharedCanvas.width = that.width;
            sharedCanvas.height = that.height;
            let rankSpName = "rank_sprite_key";
            let rankSprite = that.surpassView.getChildByName(rankSpName);
            if (rankSprite == null) {
                rankSprite = new Laya.Sprite();
                rankSprite.name = rankSpName;
                that.surpassView.addChild(rankSprite);
                rankSprite.zOrder = 1;
            }
            //添加本场景
            let rankTexture = new Laya.Texture(sharedCanvas);
            rankTexture.bitmap.alwaysChange = true; //小游戏使用，非常费，每帧刷新
            rankSprite.graphics.clear();
            rankSprite.graphics.drawTexture(rankTexture, 0, 0, sharedCanvas.width, sharedCanvas.height);
            Laya.timer.once(200, that, function () {
                rankTexture.bitmap.alwaysChange = false; //关闭每帧刷新
            });
            //通知域刷新
            platform.postMessage({
                message: "showSurpassFriend"
            });
        }
    }
    refreshShortcutCreateBtn(_buyType = 0) {
        let self = this;
        let monsterType = _buyType;
        monsterType = userData.isEvolution() ? 2 : 1;
        HallManager.Instance.hallData.buyMonsterType = monsterType;
        let monsterLevel = userData.getCarLevel();
        let monsterInfo = BattleManager.Instance.getUnLockMonster(monsterType, monsterLevel);
        let btnBuy = self.btnShopShortcut;
        if (monsterInfo && btnBuy) {
            if (HallManager.Instance.hallData.curNewMonsterId != monsterInfo.id) {
                HallManager.Instance.hallData.curNewMonsterId = monsterInfo.id;
                btnBuy.off(Laya.Event.CLICK, self, self.onBuyPet);
                btnBuy.on(Laya.Event.CLICK, self, self.onBuyPet, [monsterInfo, btnBuy]);
            }
            let curPrice = BattleManager.Instance.getMonsterPrice(monsterInfo.buyPrice, userData.queryBuyRecord(monsterInfo.id));
            let imgPrice = btnBuy.getChildByName("imgPrice");
            if (imgPrice) {
                let txtPrice = imgPrice.getChildByName("txtPrice");
                if (txtPrice) {
                    txtPrice.text = MathUtils.bytesToSize(curPrice);
                    //字体颜色提示
                    if (PlayerManager.Instance.Info.userMoney < curPrice) {
                        txtPrice.color = "#FF0000";
                    }
                    else {
                        txtPrice.color = "#fff1ba";
                    }
                }
                //当前购买怪物级别
                let txtLevel = btnBuy.getChildByName("txtLevel");
                if (txtLevel) {
                    txtLevel.text = ("英雄" + " Lv" + BattleManager.Instance.getLevel(monsterInfo.id));
                }
            }
        }
    }
    //离线收益
    onOffLineRevenue() {
        let self = this;
        if (userData) {
            let offlinePrize = userData.offlinePrize();
            //离线超过10分钟才算奖励
            if (offlinePrize > 10 * 60 && HallManager.Instance.hallData.passStage > 0 && HallManager.Instance.isGuide() == false) {
                // 当前关卡收益*(挂机时间/180)*0.1 (挂机时间最大2小时)
                let prizeValue = 0;
                let secondForHour = 60 * 60;
                let secHourMax = 2 * secondForHour;
                let stageIncome = BattleManager.Instance.getBarrierIncome(HallManager.Instance.hallData.passStage);
                if (offlinePrize > secHourMax) {
                    prizeValue = (secHourMax / 180 * stageIncome) * 0.01;
                }
                else {
                    prizeValue = (offlinePrize / 180 * stageIncome) * 0.01;
                }
                if (prizeValue > 0) {
                    if (HallManager.Instance.hallData.passStage > 1) { //离线奖励
                        OfflineRewardsView.Create(self, null, () => {
                            self.updateGold(PlayerManager.Instance.Info.userMoney + prizeValue);
                        }, prizeValue);
                    }
                    else {
                        MessageUtils.showMsgTips("获得离线奖励:" + MathUtils.bytesToSize(prizeValue));
                    }
                }
            }
        }
    }
    onFriendRanking() {
        let that = this;
        RankingView.Create(() => {
            that.showSurpassView();
        }, true);
        //锁定按钮
        AnimationUtils.lockBtnStage(that.surpassView);
    }
    //金币购买英雄
    onBuyPet(_carInfo = null, btnObj = null) {
        let self = this;
        let carPrice = BattleManager.Instance.getMonsterPrice(_carInfo.buyPrice, userData.queryBuyRecord(_carInfo.id));
        if (PlayerManager.Instance.Info.userMoney >= carPrice) {
            if (BattleManager.Instance.createPet(_carInfo.id) == null)
                return;
            self.updateGold(PlayerManager.Instance.Info.userMoney - carPrice);
            //刷新消费记录
            userData.refreshBuyRecord(_carInfo.id);
            let curPrice = BattleManager.Instance.getMonsterPrice(_carInfo.buyPrice, userData.queryBuyRecord(_carInfo.id));
            if (btnObj) {
                let imgPrice = btnObj.getChildByName("imgPrice");
                if (imgPrice) {
                    let txtPrice = imgPrice.getChildByName("txtPrice");
                    if (txtPrice) {
                        txtPrice.text = MathUtils.bytesToSize(curPrice);
                    }
                    MessageUtils.shopMsgByObj(btnObj, LanguageManager.Instance.getLanguageText("hallScene.label.txt.07"));
                }
            }
            self.refreshShortcutCreateBtn();
        }
        else {
            if (PlayerManager.Instance.Info.dayGetGoldCount > 0) {
                RewardGoldView.Create(self, (money) => {
                    PlayerManager.Instance.Info.dayGetGoldCount--;
                    self.updateGold(PlayerManager.Instance.Info.userMoney + money);
                    userData.saveLocal();
                }, () => {
                    SDKManager.Instance.closeBannerAd(true);
                });
            }
            else {
                MessageUtils.showMsgTips(LanguageManager.Instance.getLanguageText("hallScene.label.txt.19"));
                FriendConcurView.Create(self);
            }
        }
    }
    /** 钻石购买 */
    onDiamondBuy(_carInfo = null) {
        let that = this;
        let carPrice = BattleManager.Instance.getMonsterDiamondPrice(_carInfo.id, userData.queryBuyRecord(_carInfo.id, true));
        DiamondBuyView.Create(that, (carPriceInt) => {
            HttpManager.Instance.requestDiamondBuyOrder(carPriceInt, (_res) => {
                if (_res) {
                    if (BattleManager.Instance.createPet(_carInfo.id) == null)
                        return;
                    HttpManager.Instance.requestDiamondBuy(_res.order_id, (_res) => {
                        MessageUtils.showMsgTips("购买成功");
                        HttpManager.Instance.requestDiamondData();
                        //刷新消费记录
                        userData.refreshBuyRecord(_carInfo.id, true);
                    });
                }
                else {
                    MessageUtils.showMsgTips("购买失败");
                }
            });
        }, null, DILOG_TYPE.PET, carPrice, _carInfo);
    }
    //强化
    onStrengthen(_btnObj = null) {
        ViewMgr.Ins.open(ViewConst.StrengthenView);
    }
    //森林之王进化
    onEvolution(_btnObj = null) {
        let that = this;
        if (userData.isEvolution() == false && userData.getKingLevel() >= 30) {
            //先进化
            EvolutionAdvancedView.Create(that, (_nodeView) => {
                _nodeView.refreshBoxUI((_evolutionLevel, _diamond, _essence) => {
                    //进化成功
                    that.onEvolutionShop(_evolutionLevel);
                    //奖励
                    if (_diamond > 0) {
                        that.updateDiamond(_diamond);
                    }
                    if (_essence > 0) {
                        HallManager.Instance.updateEssence(_essence);
                    }
                    that.spMountGuard.setKind(100003);
                    that.playKingUpdateEffect();
                    Laya.SoundManager.playSound("musics/evolutions.mp3");
                    userData.saveLocal(true);
                });
            });
        }
        else {
            //升级
            EvolutionView.Create(null, (_nodeView) => {
                _nodeView.refreshBoxUI((_kingLevel, _money) => {
                    if (_kingLevel > HallManager.Instance.hallData.userKingLevel) {
                        that.setKingLevel(_kingLevel);
                    }
                    //刷新钻石
                    if (_money >= 0) {
                        that.updateDiamond(_money);
                    }
                    that.playKingUpdateEffect();
                    Laya.SoundManager.playSound("musics/kingUpdate.mp3");
                    that.checkKingIsUpdate();
                });
            });
        }
    }
    //商店进化
    onEvolutionShop(_level) {
        let that = this;
        if (HallManager.Instance.hallData.giveMonsterAllTime > 0)
            HallManager.Instance.hallData.giveMonsterAllTime = 1;
        //设置进化等级
        userData.updateEvolutionLevel(_level);
        //强行重置精灵等级为1
        userData.resetMonsterLevel();
        //重置快捷购买按钮
        that.refreshShortcutCreateBtn();
        //奖励三个高级精灵
        let prizeMonsterArray = [1001, 1001, 1001];
        if (that.carparkList) {
            for (var index = 0; index < HallManager.Instance.hallData.parkMonsterCount; index++) {
                var element = that.carparkList.getCell(index);
                if (element) {
                    let carParkSp = element.getChildByName("car");
                    if (carParkSp && carParkSp.monsterId > 0) {
                        if (index < 3) {
                            carParkSp.setKind(prizeMonsterArray[index]);
                        }
                        else {
                            carParkSp.clearStage();
                        }
                        userData.setCarparkSave(carParkSp);
                    }
                }
            }
        }
    }
    //未领取通关奖励
    onStagePrize() {
        this.showPassStageResult(HallManager.Instance.hallData.passStage, null, true);
    }
    //敌方出怪
    createMonster(_stage, _section) {
        let that = this;
        let stageSectionCfg = BattleManager.Instance.getBarrierSectionConfig(_stage, _section); // getStageSectionConfig(_stage, _section);
        if (stageSectionCfg) {
            let mBlood = MathUtils.parseStringNum(stageSectionCfg["blood"]);
            let mMoney = MathUtils.parseStringNum(stageSectionCfg["earnings"]);
            for (let i = 1; i < 5; i++) {
                let mId = stageSectionCfg["mId" + i];
                let mEnterTime = stageSectionCfg["mEnterTime" + i];
                let mNum = stageSectionCfg["mNum" + i];
                if (mId > 0) {
                    Laya.timer.once(mEnterTime * 1400, that, () => {
                        if (HallManager.Instance.hallData.gameStatus < 1 || HallManager.Instance.hallData.monsterArray.length > 10)
                            return;
                        for (let k = 0; k < mNum; k++) {
                            let monsterSp = new MonsterSprite();
                            monsterSp.setBornDelayFun(that, 1200 * k, () => {
                                that.roadView.addChild(monsterSp);
                                monsterSp.setKind(mId);
                                monsterSp.pos(that.imgBorn.x, that.imgBorn.y + that.imgBorn.height / 2);
                                monsterSp.playMoveAction();
                                monsterSp.setDropMoney(mMoney); //收集金币
                                monsterSp.setDropMoneyFun((dropMoney) => {
                                    if (dropMoney > 0) {
                                        let skyDropBuff = BuffController.getInstance().getBuffValueById(BuffSheet.COIN_OBTAIN_INCREASE);
                                        let skillBuff = userData.getSkillAdditionProbability(10);
                                        let resultCoin = dropMoney * (1 + skillBuff + skyDropBuff);
                                        let txtPos = new Laya.Point(monsterSp.x - 20, monsterSp.y - 50);
                                        EffectUtils.playImageTextEffect(that.roadView, "images/core/coin_40x40.png", "+" + MathUtils.bytesToSize(resultCoin), txtPos, monsterSp.zOrder + 100);
                                        that.updateGold(PlayerManager.Instance.Info.userMoney + resultCoin);
                                    }
                                });
                            });
                            //设置血量
                            monsterSp.updateBlood(0, mBlood);
                            //保存怪物列表
                            if (HallManager.Instance.hallData.monsterArray && monsterSp) {
                                HallManager.Instance.hallData.monsterArray.push(monsterSp);
                            }
                        }
                    });
                }
                else {
                    BattleManager.Instance.preloadingNextMonsters(HallManager.Instance.hallData.passStage, HallManager.Instance.hallData.passSection + 1);
                    break;
                }
            }
        }
    }
    /** 钻石购买加速 */
    onDiamondBuyAcce() {
        let self = this;
        let carPrice = 60;
        //钻石加速超过5次处理
        // let acceTimes = userData.diamondAcceTimes() - 5;
        // if (acceTimes > 0) {
        //     carPrice = carPrice * Math.pow(1.18, acceTimes);
        // }
        DiamondBuyView.Create(self, (carPriceInt) => {
            HttpManager.Instance.requestDiamondBuyOrder(carPriceInt, (_res) => {
                if (_res) {
                    HttpManager.Instance.requestDiamondBuy(_res.order_id, (_res) => {
                        self.playAcceEffectView();
                        HttpManager.Instance.requestDiamondData();
                        //钻石加速次数加1
                        userData.diamondAcceTimes(true);
                    });
                }
                else {
                    MessageUtils.showMsgTips(LanguageManager.Instance.getLanguageText("hallScene.label.txt.05"));
                }
            }, 1);
        }, () => {
            SDKManager.Instance.closeBannerAd(true);
        }, DILOG_TYPE.ACC, carPrice);
    }
    onShareFreeCar(_carInfo = null, btnObj = null) {
        let that = this;
        //显示广告
        userData.toShareAd((_res) => {
            if (userData) {
                let carParkSp = BattleManager.Instance.createPet(_carInfo.id, true);
                if (carParkSp == null) {
                    that.saveCarStore(_carInfo.id);
                }
                MessageUtils.showMsgTips(LanguageManager.Instance.getLanguageText("hallScene.label.txt.03"));
                FreeGetPetView.Create(that, null, null, _carInfo);
                if (btnObj) {
                    //观看次数已用完
                    if (userData.getAdTimes(11) < 1 && userData.getShareTimes(11) < 1) {
                        btnObj.visible = false;
                    }
                    else {
                        if (userData.isAdStage(11)) {
                            btnObj.skin = "images/core/shop_free_video.png";
                        }
                        else {
                            btnObj.skin = "images/core/shop_free_share.png";
                        }
                    }
                }
                userData.removeCarShopRedPoin();
                // 30分钟后检测是否还有红点
                that.startShopRedpointTime();
            }
        }, 11, false, true);
    }
    onShowCarport() {
        let self = this;
        ShopView.Create(self, (_nodeView) => {
            if (_nodeView) {
                _nodeView.name = "nodeShopView";
                _nodeView.btnBuyFun = Laya.Handler.create(self, self.onBuyPet, null, false);
                _nodeView.btnFreeFun = Laya.Handler.create(self, self.onShareFreeCar, null, false);
                _nodeView.btnDiamondFun = Laya.Handler.create(self, self.onDiamondBuy, null, false);
                _nodeView.evolutionFun = Laya.Handler.create(self, self.onEvolutionShop, null, false);
                _nodeView.refreshMoney(PlayerManager.Instance.Info.userMoney, PlayerManager.Instance.Info.userDiamond);
            }
        }, () => {
            SDKManager.Instance.closeBannerAd(true);
        });
    }
    //能量加速
    onPowerAcce() {
        let that = this;
        that.progressBarPower.value += 0.06;
        if (that.progressBarPower.value >= 1) {
            that.progressBarPower.value = 1;
            that.btnPower.disabled = true;
            that.btnPower.frameOnce(10, that, () => {
                that.playAcceEffectView(10);
                //加速次数统计
                HttpManager.Instance.requestShareAdFinish("manual_acce");
            });
            EffectUtils.playCoinEffect(that.imgPowerCar, "images/core/coin_40x40.png");
        }
        that.btnPower.timerLoop(100, that, that.powerAcceTime);
    }
    powerAcceChangeHandler(_per) {
        let that = this;
        if (that.imgPowerCar) {
            that.imgPowerCar.x = 20 + that.progressBarPower.width * (1 - _per);
        }
        if (that.imgPowerBg) {
            if (that.imgPowerBg.visible == false && _per > 0) {
                that.imgPowerBg.scaleY = 0;
                let boxAnimation = (target, onEvtFinish = null) => {
                    let timeLine = new Laya.TimeLine();
                    timeLine.addLabel("show1", 0).to(target, { scaleY: 1 }, 100);
                    if (onEvtFinish != null) {
                        timeLine.on(Laya.Event.COMPLETE, target, () => {
                            onEvtFinish();
                            timeLine.destroy();
                            timeLine = null;
                        });
                    }
                    timeLine.play(0);
                };
                boxAnimation(that.imgPowerBg);
            }
            that.imgPowerBg.visible = _per > 0;
        }
    }
    powerAcceTime() {
        let that = this;
        that.progressBarPower.value -= 1.0 / 100;
        if (that.progressBarPower.value <= 0) {
            that.progressBarPower.value = 0;
            that.btnPower.clearTimer(that, that.powerAcceTime);
            that.btnPower.disabled = false;
        }
    }
    //显示怪物商店红点
    showCarportRedPoint(_show = true) {
        let that = this;
        if (that.btnShop) {
            let imgRedPoint = that.btnShop.getChildByName("imgRedPoint");
            if (imgRedPoint) {
                imgRedPoint.visible = _show;
                let checkTime = userData.shiftShopRedpointTime(false);
                if (checkTime > 0) {
                    that.startShopRedpointTime(checkTime);
                    imgRedPoint.visible = false;
                }
            }
        }
    }
    // 30分钟后检测是否还有红点
    startShopRedpointTime(_time = 1800) {
        let that = this;
        that.timerOnce(1000 * _time, that, () => {
            userData.shiftShopRedpointTime();
            if (userData.isShowCarShopRedPoint()) {
                that.showCarportRedPoint();
            }
        });
        userData.saveShopRedpointTime(_time);
    }
    //显示签到红点
    showDailySignRedPoint(_show = true) {
        let that = this;
        if (that.btn_sign) {
            let imgRedPoint = that.btn_sign.getChildByName("imgRedPoint");
            if (imgRedPoint) {
                imgRedPoint.visible = _show;
            }
        }
    }
    /** 显示强化红点 */
    showStrengthenRedPoint(show = true) {
        let self = this;
        self.strengthenRedPoint.visible = show;
    }
    /** 显示关注奖励红点 */
    showFollowRewardRedPoint(show = true) {
        let self = this;
        if (self.btn_follow) {
            let imgRedPoint = self.btn_follow.getChildByName("imgRedPoint");
            if (imgRedPoint) {
                imgRedPoint.visible = show;
            }
        }
    }
    //显示任务红点
    showTaskRedPoint(_show = true) {
        let that = this;
        if (that.btnTask) {
            let imgRedPoint = that.btnTask.getChildByName("imgRedPoint");
            if (imgRedPoint) {
                imgRedPoint.visible = _show;
            }
        }
    }
    //显示转盘红点
    showLuckPrizeRedPoint(_show = true) {
        let that = this;
        if (that.btnLuckPrize) {
            let imgRedPoint = that.btnLuckPrize.getChildByName("imgRedPoint");
            if (imgRedPoint) {
                imgRedPoint.visible = _show;
            }
        }
    }
    //初始化怪物/跑道
    initCarUI() {
        var that = this;
        if (that.mainView) {
            that.mainView.on(Laya.Event.MOUSE_DOWN, that, (e = null) => {
                //只支持单选
                if (that.curMonsterSprite)
                    return;
                if (that.carparkList) {
                    for (var index = 0; index < HallManager.Instance.hallData.parkMonsterCount; index++) {
                        var element = that.carparkList.getCell(index);
                        if (element) {
                            let carParkSp = element.getChildByName("car");
                            if (carParkSp && carParkSp.visible && ObjectUtils.isHit(carParkSp)) {
                                if (carParkSp.isEnabled()) {
                                    carParkSp.setStage(3);
                                    that.curMonsterSprite = carParkSp;
                                    //复制模型
                                    that.parkMonsterModelSp = ObjectPool.pop(MonsterSprite, "NewMonsterSprite");
                                    that.parkMonsterModelSp.setKind(carParkSp.monsterId, index);
                                    that.parkMonsterModelSp.anim.pos(0, 0);
                                    that.parkMonsterModelSp.pos(that.mainView.mouseX, that.mainView.mouseY);
                                    that.mainView.addChild(that.parkMonsterModelSp);
                                    //高亮提示
                                    that.setCarparkLight(carParkSp);
                                }
                                else if (carParkSp.isRunning()) {
                                    that.curMonsterSprite = carParkSp;
                                }
                                else if (carParkSp.isBox()) {
                                    that.curMonsterSprite = carParkSp;
                                }
                                that.btnDelete.skin = "images/huishou_icon_1.png";
                                return;
                            }
                        }
                    }
                }
            });
            that.mainView.on(Laya.Event.MOUSE_MOVE, that, (e = null) => {
                if (that.parkMonsterModelSp) {
                    that.parkMonsterModelSp.pos(that.mainView.mouseX, that.mainView.mouseY);
                }
            });
            that.mainView.on(Laya.Event.MOUSE_UP, that, (e = null) => {
                //移除高亮提示
                that.setCarparkLight();
                if (that.parkMonsterModelSp && that.curMonsterSprite) {
                    if (that.btnDelete && ObjectUtils.isHit(that.btnDelete) && HallManager.Instance.isGuide() == false) {
                        let obtainMoney = that.curMonsterSprite.getSellPrice();
                        that.curMonsterSprite.clearStage();
                        let imgDest = that.btnDelete;
                        if (imgDest) {
                            //飘金币
                            EffectUtils.playCoinEffect(imgDest, "images/core/coin_40x40.png");
                            //飘数字
                            EffectUtils.playTextEffect(imgDest, "+" + MathUtils.bytesToSize(obtainMoney));
                        }
                        //刷新金币数
                        that.updateGold(PlayerManager.Instance.Info.userMoney + obtainMoney);
                        //本地保存
                        userData.setCarparkSave(that.curMonsterSprite);
                    }
                    else {
                        //恢复拖动状态
                        that.curMonsterSprite.setStage(1);
                        //判断是否合并或交换位置
                        if (that.carparkList) {
                            for (var index = 0; index < HallManager.Instance.hallData.parkMonsterCount; index++) {
                                var element = that.carparkList.getCell(index);
                                if (element) {
                                    let heroItem = element.getChildByName("car");
                                    if (heroItem && ObjectUtils.isHit(heroItem) && heroItem != that.curMonsterSprite) {
                                        if (!heroItem.isBox() && !heroItem.isLock()) {
                                            let heroId = heroItem.monsterId;
                                            const currHeroLevel = BattleManager.Instance.getLevel(heroId);
                                            if (that.curMonsterSprite.isSameLevel(heroId)) {
                                                //合并
                                                if (heroItem.isMaxLevel()) {
                                                    MessageUtils.showMsgTips(LanguageManager.Instance.getLanguageText("hallScene.label.txt.06"));
                                                }
                                                else if (currHeroLevel >= EvolutionManager.Instance.getHeroLevel()) { //提示守卫是否可以升级
                                                    if (currHeroLevel > 10) {
                                                        LevelHeroView.Create(this, (kingLevel, money) => {
                                                            //英雄升级
                                                            this.handlerHeroLevel(heroItem, heroId, index, currHeroLevel);
                                                            if (kingLevel > HallManager.Instance.hallData.userKingLevel) {
                                                                that.setKingLevel(kingLevel);
                                                            }
                                                            if (money >= 0) { //刷新钻石
                                                                that.updateDiamond(money);
                                                            }
                                                            that.playKingUpdateEffect();
                                                            Laya.SoundManager.playSound("musics/kingUpdate.mp3");
                                                            that.checkKingIsUpdate();
                                                        }, () => {
                                                            that.curMonsterSprite = null;
                                                        });
                                                    }
                                                    else {
                                                        MessageUtils.showMsgTips(LanguageManager.Instance.getLanguageText("hallScene.label.txt.02"));
                                                    }
                                                }
                                                else { //英雄升级
                                                    this.handlerHeroLevel(heroItem, heroId, index, currHeroLevel);
                                                }
                                            }
                                            else if (!heroItem.isRunning() && HallManager.Instance.isGuide() == false) {
                                                //交换
                                                let isEmpty = heroItem.isEmpty();
                                                heroItem.setKind(that.curMonsterSprite.monsterId);
                                                heroItem.setStage(that.curMonsterSprite.monsterStage);
                                                if (isEmpty) {
                                                    that.curMonsterSprite.clearStage();
                                                }
                                                else {
                                                    that.curMonsterSprite.setKind(heroId);
                                                }
                                                //本地保存
                                                userData.setCarparkSave(heroItem, that.curMonsterSprite);
                                                Laya.SoundManager.playSound("musics/drawcar.mp3");
                                                that.curMonsterSprite = null;
                                            }
                                        }
                                        break;
                                    }
                                }
                            }
                        }
                    }
                    //移除模型
                    ObjectPool.push(that.parkMonsterModelSp);
                    that.parkMonsterModelSp.removeSelf();
                    that.btnDelete.skin = "images/huishou_icon_0.png";
                }
                else if (that.curMonsterSprite && HallManager.Instance.isGuide() == false) {
                    //取消选中状态
                    if (ObjectUtils.isHit(that.curMonsterSprite)) {
                        if (that.curMonsterSprite.isRunning()) {
                            that.curMonsterSprite.setStage(1);
                            //本地保存
                            userData.setCarparkSave(that.curMonsterSprite);
                        }
                        else if (that.curMonsterSprite.isBox()) {
                            that.curMonsterSprite.openBoxEffect();
                        }
                        return;
                    }
                }
            });
        }
        BattleManager.Instance.hallScene = that;
        BattleManager.Instance.startBattle();
    }
    /** 英雄升级 */
    handlerHeroLevel(heroItem, heroId, index, currHeroLevel) {
        let self = this;
        let nextCardId = heroId + 1;
        userData.synthesisCount++;
        //随机奖励
        if (userData.synthesisCount % 48 == 0) {
            let randomNum = Math.random();
            if (randomNum < 0.4) {
                self.showRandomDiamondReward();
                heroItem.setKind(nextCardId, index);
            }
            else {
                let upLevel = nextCardId + 2;
                let kingLevel = userData.isEvolution() ? userData.getKingLevel() - 30 : userData.getKingLevel();
                let heroLv = BattleManager.Instance.getLevel(upLevel);
                if (heroLv > kingLevel) {
                    self.showRandomDiamondReward();
                    heroItem.setKind(nextCardId, index);
                }
                else {
                    HeroLevelView.Create(self, () => {
                        MessageUtils.showMsgTips("升级成功！");
                        heroItem.setKind(upLevel, index);
                    }, () => {
                        MessageUtils.showMsgTips("升级失败！");
                        heroItem.setKind(nextCardId, index);
                    }, nextCardId, upLevel);
                }
            }
        }
        else {
            heroItem.setKind(nextCardId, index);
        }
        if (NoviceManager.cache.synthesiseComplete) {
            NoviceManager.cache.synthesiseComplete();
        }
        if (NoviceManager.cache.checkPetSynthesisLevel) {
            NoviceManager.cache.checkPetSynthesisLevel(currHeroLevel + 1);
        }
        self.curMonsterSprite.clearStage();
        heroItem.playMergeEffetc(self.mainView, heroId);
        //检测等级刷新
        if (userData.updateCarLevel(BattleManager.Instance.getLevel(nextCardId))) {
            //显示红点
            if (userData.isShowCarShopRedPoint() && userData.getCarLevel() == 6) {
                self.showCarportRedPoint();
            }
            Laya.SoundManager.playSound("musics/unlock.mp3");
        }
        else {
            Laya.SoundManager.playSound("musics/makecar.mp3");
        }
        //刷新快捷买怪物按钮
        self.refreshShortcutCreateBtn();
        HallManager.Instance.updateIncomePerSec(HallManager.Instance.getCalculateIncomePerSec(self.carparkList));
        //本地保存
        userData.setCarparkSave(heroItem, self.curMonsterSprite);
        //任务统计
        HttpManager.Instance.requestDailyTaskData(1);
        //检查守卫是否可以升级
        self.checkKingIsUpdate();
        self.curMonsterSprite = null;
    }
    /** 随机钻石奖励界面 */
    showRandomDiamondReward() {
        let self = this;
        HttpManager.Instance.requestShowRandomRewardDiamond((res) => {
            AdditionalRewardView.Create(self, res);
        });
    }
    //初始化兵营
    initCarparkList() {
        var that = this;
        if (userData == null)
            return;
        var listDatas = userData.parkcarInfoArray;
        that.carparkList.vScrollBarSkin = "";
        that.carparkList.repeatY = HallManager.Instance.hallData.parkMonsterCount / 4;
        that.carparkList.array = listDatas;
        that.carparkList.renderHandler = new Laya.Handler(that, (cell, index) => {
            if (index > that.carparkList.array.length)
                return;
            let parkcarInfo = listDatas[index];
            let hero = cell.getChildByName("car");
            if (hero) {
                if (parkcarInfo && parkcarInfo.carId > 0) {
                    hero.setKind(parkcarInfo.carId, index);
                }
                else {
                    hero.setKind(-1, index);
                }
            }
        });
    }
    /** 更新金币数量 */
    updateGold(_value) {
        let that = this;
        var isInitMoney = (PlayerManager.Instance.Info.userMoney == 0);
        PlayerManager.Instance.Info.userMoney = _value;
        if (that.txtMoney) {
            that.txtMoney.changeText(MathUtils.bytesToSize(PlayerManager.Instance.Info.userMoney));
        }
        if (that.imgMoney && !isInitMoney) {
            that.imgMoney.scale(1.2, 1.2);
            Laya.Tween.to(that.imgMoney, { scaleX: 1, scaleY: 1 }, 300, null, Laya.Handler.create(that, () => {
                Laya.Tween.clearTween(that.imgMoney);
            }, null, true));
        }
        //刷新快捷买怪物按钮
        that.refreshShortcutCreateBtn(HallManager.Instance.hallData.buyMonsterType);
        //本地保存
        userData.setGoldSave(PlayerManager.Instance.Info.userMoney);
    }
    /** 更新钻石数 */
    updateDiamond(_value) {
        let that = this;
        PlayerManager.Instance.Info.userDiamond = _value;
        if (that.txtDiamond) {
            that.txtDiamond.changeText(MathUtils.bytesToSize(PlayerManager.Instance.Info.userDiamond).toString());
        }
        //本地保存
        userData.setDiamond(PlayerManager.Instance.Info.userDiamond);
    }
    //设置兵营高亮状态
    setCarparkLight(_monsterSp = null) {
        let that = this;
        if (that.carparkList) {
            let monsterId = 0;
            if (_monsterSp) {
                monsterId = _monsterSp.monsterId;
            }
            for (var index = 0; index < HallManager.Instance.hallData.parkMonsterCount; index++) {
                var element = that.carparkList.getCell(index);
                if (element) {
                    let carParkSp = element.getChildByName("car");
                    if (carParkSp && carParkSp != _monsterSp) {
                        if (carParkSp.isSameLevel(monsterId)) {
                            carParkSp.setLight(true);
                        }
                        else if (carParkSp.isLight()) {
                            carParkSp.setLight(false);
                        }
                    }
                }
            }
        }
    }
    //设置关卡
    setPassStage(_value) {
        let that = this;
        HallManager.Instance.hallData.passStage = Math.min(_value, BattleManager.Instance.maxBarrier);
        if (HallManager.Instance.hallData.passStage > BattleManager.Instance.maxBarrier) {
            HallManager.Instance.hallData.passStage = 1;
        }
        let stageCfgArray = BattleManager.Instance.getBarrierSectionConfig(HallManager.Instance.hallData.passStage);
        if (stageCfgArray) {
            HallManager.Instance.hallData.maxSection = stageCfgArray.length;
        }
        if (that.txtLevel) {
            that.txtLevel.changeText("" + HallManager.Instance.hallData.passStage);
        }
        if (NoviceManager.cache.checkLevel) {
            NoviceManager.cache.checkLevel(HallManager.Instance.hallData.passStage);
            delete NoviceManager.cache.checkLevel;
        }
        BattleManager.Instance.checkLandIsOpen(that.carparkList, BattleManager.Instance.getBarrierSeatNum(HallManager.Instance.hallData.passStage));
        userData.updatePassStage(HallManager.Instance.hallData.passStage);
    }
    //设置章节
    setPassSection(_value) {
        let that = this;
        HallManager.Instance.hallData.passSection = _value;
        if (HallManager.Instance.hallData.passSection > HallManager.Instance.hallData.maxSection) {
            HallManager.Instance.hallData.passSection = HallManager.Instance.hallData.maxSection;
        }
        if (that.txtSection) {
            that.txtSection.changeText(HallManager.Instance.hallData.passSection + "/" + HallManager.Instance.hallData.maxSection);
        }
        if (that.progressBarExp) {
            that.progressBarExp.value = (1.0 * HallManager.Instance.hallData.passSection / HallManager.Instance.hallData.maxSection);
        }
    }
    //设置森林之王等级
    setKingLevel(_value) {
        let that = this;
        HallManager.Instance.hallData.userKingLevel = _value;
        if (that.txtKingLevel) {
            that.txtKingLevel.changeText("" + HallManager.Instance.hallData.userKingLevel);
        }
        userData.updateKingLevel(HallManager.Instance.hallData.userKingLevel);
    }
    /** 赠送英雄中 */
    handlerGiveMonster() {
        let self = this;
        if (HallManager.Instance.isGuide()) { //新手关闭赠送
            return;
        }
        HallManager.Instance.hallData.giveMonsterAllTime = 3 * 60 * 60;
        self.imgTrain.visible = HallManager.Instance.hallData.giveMonsterAllTime > 0;
        if (!self.gameTimeImg.visible)
            EffectUtils.showTrainingTimeEffect(self);
        self.gameTimeImg.visible = self.gameTimebg.visible = self.txtGameTime.visible = true;
        TimerManager.Instance.doFrame(1, 0, self.doGiveMonster, self);
    }
    /** 执行赠送英雄 */
    doGiveMonster() {
        let self = this;
        if (HallManager.Instance.hallData.giveMonsterAllTime <= 0) {
            TimerManager.Instance.remove(self.doGiveMonster, self);
            self._giveCarTime = 0;
            self._giveTempTime = 0;
            self.imgTrain.visible = false;
            self.gameTimeImg.visible = self.gameTimebg.visible = self.txtGameTime.visible = false;
        }
        if (HallManager.Instance.hallData.giveMonsterAllTime > 0) {
            HallManager.Instance.hallData.giveMonsterAllTime--;
            let tempTime = Math.floor(HallManager.Instance.hallData.giveMonsterAllTime / 60);
            if (self._giveTempTime != tempTime) {
                self._giveTempTime = tempTime;
                let minute = Math.floor(self._giveTempTime / 60);
                let sec = self._giveTempTime % 60;
                if (self.txtGameTime) {
                    self.txtGameTime.text = (minute < 10 ? ("0" + minute) : minute) + ":" + (sec < 10 ? ("0" + sec) : sec);
                }
            }
        }
        //是否训练中
        if (HallManager.Instance.hallData.giveMonsterAllTime > 0 && self._giveCarTime > 60 * HallManager.Instance.hallData.dropTime) {
            self._giveCarTime = 0;
            // 1级：掉1级的怪物
            // 2-7级：掉落1、2级的怪物
            // 8级之后：随机掉落，最小值：当前金币最高解锁的等级-7，最大值=当前最高金币可购买怪物-4。
            let boxDropCfg = GlobleData.getData(GlobleData.TrainDropVO, userData.getCarLevel());
            let randCarId = 101;
            let dropId = 100;
            if (!boxDropCfg) { //先不走表的规则去掉落
                let dropCarArray = [boxDropCfg.dropHeroLevel3, boxDropCfg.dropHeroLevel2, boxDropCfg.dropHeroLevel1];
                let randIndex = Math.floor(Math.random() * 10) % 3;
                dropId = userData.isEvolution() ? 1000 : 100;
                randCarId = dropId + dropCarArray[randIndex];
            }
            else { // 默认掉落
                if (HallManager.Instance.hallData.passStage < 1) {
                    randCarId = 101;
                }
                else if (HallManager.Instance.hallData.passStage < 8) {
                    dropId = userData.isEvolution() ? 1000 : 100;
                    randCarId = dropId + (Math.random() < 0.5 ? 1 : 2);
                }
                else {
                    let monsterLevel = userData.getCarLevel();
                    let monsterInfo = BattleManager.Instance.getUnLockMonster(HallManager.Instance.hallData.buyMonsterType, monsterLevel);
                    randCarId = RandomUtils.rangeInt(monsterInfo.id - 6, monsterInfo.id - 4);
                }
                if (randCarId <= 100 && !userData.isEvolution()) {
                    randCarId = 101;
                }
                else if (randCarId <= 1000 && userData.isEvolution()) {
                    randCarId = 1001;
                }
                let carParkSp = BattleManager.Instance.createPet(randCarId, true);
                if (carParkSp) {
                    carParkSp.dropBoxEffect(self.mainView);
                }
            }
        }
        self._giveCarTime++;
    }
    /** 检查守护是否可以升级 */
    checkKingIsUpdate() {
        let self = this;
        self.kingUpdateImg.visible = HallManager.Instance.getKingIsUpgrade();
    }
    //显示通关结果(_isManual:手动调用)
    showPassStageResult(_stage, _callback = null, _isManual = false) {
        let that = this;
        if (M.novice.isRunning)
            return;
        if (_stage > 0) { //通关陈功
            ResultView.Create((_nodeView) => {
                if (_nodeView) {
                    if (_stage > 0) {
                        if (_isManual == false) {
                            HallManager.Instance.hallData.stagePrizeList.push(_stage);
                            //只取最近5条
                            if (HallManager.Instance.hallData.stagePrizeList.length > 5) {
                                HallManager.Instance.hallData.stagePrizeList.shift();
                            }
                            if (that.btnStagePrize) {
                                that.showStagePrize(HallManager.Instance.hallData.stagePrizeList.length > 0);
                            }
                        }
                        _nodeView.showPrizeUI(HallManager.Instance.hallData.stagePrizeList, (lastStage) => {
                            if (that.btnStagePrize) {
                                that.showStagePrize(HallManager.Instance.hallData.stagePrizeList.length > 0);
                            }
                            // MessageUtils.showMsgTips(LanguageManager.Instance.getLanguageText("hallScene.label.txt.09"));
                            // Laya.timer.once(3000, that, () => {
                            if (userData) {
                                //显示获得的奖品
                                let stagePrizeCfg = GlobleData.getData(GlobleData.BarrierRewardVO, lastStage);
                                if (stagePrizeCfg) {
                                    //发送奖励
                                    let bossM = MathUtils.parseStringNum(stagePrizeCfg.bossM);
                                    let gold = BattleManager.Instance.getBarrierRewardToGold(lastStage, MathUtils.parseStringNum(stagePrizeCfg.gold));
                                    let gem = MathUtils.parseStringNum(stagePrizeCfg.gem);
                                    HttpManager.Instance.requestStagePrizeDiamond(lastStage, gem, bossM, (_res) => {
                                        let stage = _res;
                                        if (stage > 0) {
                                            _nodeView.removeSelf();
                                            ClearanceRewardView.Create(that, null, () => {
                                                if (that.btnStagePrize.visible) {
                                                    that.showPassStageResult(HallManager.Instance.hallData.passStage, null, true);
                                                }
                                            }, stage);
                                            HttpManager.Instance.requestDiamondData();
                                            HttpManager.Instance.requestEssenceData();
                                        }
                                    });
                                    if (gold > 0) { //金币礼包
                                        that.updateGold(PlayerManager.Instance.Info.userMoney + gold);
                                    }
                                }
                            }
                            // });
                        });
                    }
                }
            }, _callback, _stage);
        }
        else { //通关失败
            ClearanceFail.Create(that, null, _callback);
        }
    }
    //任务界面
    showTaskView() {
        let that = this;
        TaskView.Create(null, () => {
            SDKManager.Instance.closeBannerAd(true);
        }, true);
    }
    //幸运抽奖界面
    showLuckPrizeView() {
        LuckPrizeView.Create(null, () => {
            SDKManager.Instance.closeBannerAd(true);
        });
    }
    //跳转小程序
    onMiniProgram() {
        platform.navigateToMiniProgram({
            // appId: 'wx10e1554b604d7568',
            appId: userData.miniCode(),
            path: userData.miniPagePath(),
            // extraData: {
            //     box: '1'
            // },
            // envVersion: 'develop',
            success(res) {
                console.log("mini跳转成功", res);
            }
        });
        //小程序跳转次数统计
        HttpManager.Instance.requestShareAdFinish("minipro_" + userData.miniCode());
    }
    //怪物储存箱
    onCarStore() {
        let that = this;
        let carId = that.getCarStore();
        if (carId > 0) {
            let carParkSp = BattleManager.Instance.createPet(carId);
            if (carParkSp) {
                that.getCarStore(true);
                that.carStoreBtnEnabled();
            }
        }
    }
    carStoreBtnEnabled() {
        let that = this;
        if (that.btnCarStore) {
            that.btnCarStore.visible = that.getCarStore() > 0;
        }
    }
    //保存怪物到本地
    saveCarStore(_carId) {
        if (_carId < 1)
            return;
        let that = this;
        let carArray = [];
        let storage = window.localStorage;
        let dataJson = storage.getItem(HallManager.Instance.hallData.monsterStoreKey);
        if (dataJson) {
            let jsonObj = JSON.parse(dataJson);
            if (jsonObj) {
                carArray = jsonObj;
            }
        }
        if (carArray) {
            carArray.push(_carId);
            let dataJson = JSON.stringify(carArray);
            if (dataJson) {
                console.log("@FREEMAN: 本地数据保存追踪 - car_store_key");
                storage.setItem(HallManager.Instance.hallData.monsterStoreKey, dataJson);
            }
        }
        that.carStoreBtnEnabled();
    }
    //本地取出怪物
    getCarStore(_isRemove = false) {
        let storage = window.localStorage;
        let dataJson = storage.getItem(HallManager.Instance.hallData.monsterStoreKey);
        if (dataJson) {
            let jsonObj = JSON.parse(dataJson);
            if (jsonObj) {
                let carId = jsonObj.shift();
                //保存移除
                if (_isRemove) {
                    let dataJson = JSON.stringify(jsonObj);
                    if (dataJson) {
                        console.log("@FREEMAN: 本地数据保存追踪 - car_store_key 2");
                        storage.setItem(HallManager.Instance.hallData.monsterStoreKey, dataJson);
                    }
                }
                if (carId) {
                    return carId;
                }
            }
        }
        return 0;
    }
    //显示加速效果
    playAcceEffectView(_acceTime = 90, _isEffect = true) {
        let that = this;
        if (HallManager.Instance.hallData.userAcceTime > 1) {
            HallManager.Instance.hallData.userAcceTime += _acceTime;
            return;
        }
        HallManager.Instance.hallData.userAcceTime += _acceTime;
        if (that.acceEffectView) {
            if (_isEffect) {
                that.acceEffectView.visible = true;
                if (that.ani2) {
                    that.ani2.play(0, false);
                }
                Laya.timer.frameOnce(90, that, () => {
                    that.acceEffectView.visible = false;
                });
            }
            //加速开始
            that.setCarAcce(2);
            that.refreshAcceTime();
            Laya.timer.loop(1000, that, that.refreshAcceTime);
            Laya.SoundManager.playSound("musics/accecar.mp3");
        }
    }
    refreshAcceTime() {
        let that = this;
        //显示倒计时
        if (that.btnAcce) {
            let imgAcce = that.btnAcce.getChildByName("imgAcce");
            if (imgAcce) {
                imgAcce.visible = true;
                let txtAcceTime = imgAcce.getChildByName("txtAcceTime");
                if (txtAcceTime) {
                    let minute = Math.floor(HallManager.Instance.hallData.userAcceTime / 60);
                    let sec = HallManager.Instance.hallData.userAcceTime % 60;
                    txtAcceTime.text = (minute < 10 ? ("0" + minute) : minute) + ":" + (sec < 10 ? ("0" + sec) : sec);
                }
            }
            that.btnAcce.mouseEnabled = false;
        }
        if (HallManager.Instance.hallData.userAcceTime > 0) {
            HallManager.Instance.hallData.userAcceTime--;
            if (userData) {
                userData.saveAcceLeftTime(HallManager.Instance.hallData.userAcceTime);
            }
        }
        else {
            that.setCarAcce(1);
            Laya.timer.clear(that, that.refreshAcceTime);
            if (that.btnAcce) {
                let imgAcce = that.btnAcce.getChildByName("imgAcce");
                if (imgAcce) {
                    imgAcce.visible = false;
                }
                that.btnAcce.mouseEnabled = true;
            }
            return;
        }
        //金币雨
        if (HallManager.Instance.hallData.userAcceTime > 0) {
            EffectUtils.playCoinRainEffect("images/core/coin_40x40.png");
        }
    }
    setCarAcce(_acceValue) {
        let self = this;
        HallManager.Instance.hallData.userAcceValue = _acceValue;
        //精灵加速
        BattleManager.Instance.doPetAccelerate(self.carparkList);
        //怪物加速
        BattleManager.Instance.doMonsterAccelerate();
        //更新每秒收益
        HallManager.Instance.updateIncomePerSec(HallManager.Instance.getCalculateIncomePerSec(self.carparkList));
    }
    playBossEnterEffect() {
        let self = this;
        // 加载动画图集,加载成功后执行回调方法
        let aniPath = "bossEnter";
        let aniInterval = 120;
        let frameCount = 9;
        if (self._showBossIcon == null) {
            self._showBossIcon = Laya.Pool.getItemByClass(userData.ANIMATION_POOL_NAME, Laya.Animation);
            LayerManager.getInstance().screenEffectLayer.addChild(self._showBossIcon);
            let aniKey = "dx_bosslx_";
            let aniAtlas = PathConfig.EffectUrl.replace("{0}", aniPath);
            self._showBossIcon.loadAtlas(aniAtlas, Handler.create(self, () => {
                //创建动画模板dizziness
                Laya.Animation.createFrames(AnimationUtils.aniUrls(aniKey, frameCount, aniPath + "/"), aniPath);
                //设置坐标
                let aniGraphics = self._showBossIcon.frames[1];
                if (aniGraphics) {
                    let aniBounds = aniGraphics.getBounds();
                    self._showBossIcon.pos((LayerManager.stageDesignWidth - aniBounds.width) / 2, LayerManager.stageDesignWidth * 0.35 - aniBounds.height * 0.5);
                }
                self._showBossIcon.interval = aniInterval;
                self._showBossIcon.play(0, false, aniPath);
            }));
        }
        else {
            self._showBossIcon.visible = true;
            self._showBossIcon.play(0, false, aniPath);
        }
        self._showBossIcon.timerOnce(aniInterval * frameCount, self, () => {
            self._showBossIcon.stop();
            self._showBossIcon.visible = false;
        });
    }
    /** king升级特效 */
    playKingUpdateEffect() {
        let that = this;
        if (that.spMountGuard == null)
            return;
        let monsterAni = Laya.Pool.getItemByClass(userData.ANIMATION_POOL_NAME, Laya.Animation);
        that.spMountGuard.addChild(monsterAni);
        // 加载动画图集,加载成功后执行回调方法
        let aniPath = "kingUpdate";
        let aniKey = "sj_";
        let aniAtlas = PathConfig.EffectUrl.replace("{0}", aniPath);
        let aniInterval = 120;
        let frameCount = 5;
        monsterAni.loadAtlas(aniAtlas, Handler.create(that, () => {
            //创建动画模板dizziness
            Laya.Animation.createFrames(AnimationUtils.aniUrls(aniKey, frameCount, aniPath + "/"), aniPath);
            //设置坐标
            let aniGraphics = monsterAni.frames[1];
            if (aniGraphics) {
                let aniBounds = aniGraphics.getBounds();
                monsterAni.pos(-aniBounds.width * 0.4, -aniBounds.height * 0.6);
            }
            monsterAni.interval = aniInterval;
            monsterAni.play(0, false, aniPath);
        }));
        monsterAni.timerOnce(aniInterval * frameCount, that, () => {
            monsterAni.removeSelf();
            Laya.Pool.recover(userData.ANIMATION_POOL_NAME, monsterAni);
        });
    }
    /** 更新幸运抽奖状态 */
    onUpdatePrizeState($data) {
        let self = this;
        if ($data.id == 7) {
            if ($data.num > 0) {
                self.updateGold(PlayerManager.Instance.Info.userMoney + $data.num);
            }
        }
        else if ($data.id == 3) {
            if ($data.num > 0) {
                self.playAcceEffectView($data.num);
            }
        }
        else if ($data.id == 4) {
            let carId = $data.carId;
            if (carId) {
                let carParkSp = BattleManager.Instance.createPet(carId, true);
                if (carParkSp == null) {
                    //保存失败则防止储存箱
                    self.saveCarStore(carId);
                }
            }
        }
    }
    /** 更新加速按钮状态 */
    onUpdateAccelerateBtnState() {
        let self = this;
        if (self.btnMiniProgram && userData.miniImageUrl().length > 0) {
            Laya.loader.load(userData.miniImageUrl(), Laya.Handler.create(self, (_imgTexture) => {
                if (_imgTexture && _imgTexture.url) {
                    self.btnMiniProgram.skin = _imgTexture.url;
                }
            }));
        }
    }
    /** 更新英雄商店红点 */
    onUpdatePetShopRedPoint($data) {
        let self = this;
        if ($data == "show") {
            self.showCarportRedPoint();
        }
        else {
            self.showCarportRedPoint(false);
        }
    }
    /** 更新转盘红点 */
    onUpdatePrizeRedPoint($data) {
        let self = this;
        if ($data == "show") {
            self.showLuckPrizeRedPoint();
        }
        else {
            self.showLuckPrizeRedPoint(false);
        }
    }
    /** 更新任务红点 */
    onUpdateTaskRedPoint($data) {
        let self = this;
        if ($data == "show") {
            self.showTaskRedPoint();
        }
        else {
            self.showTaskRedPoint(false);
        }
    }
    /** 更新签到红点 */
    onUpdateSignRenPoint($data) {
        let self = this;
        if ($data == "show") {
            self.showDailySignRedPoint();
        }
        else {
            self.showDailySignRedPoint(false);
        }
        self.menuRedPointIsShow();
    }
    /** 更新强化红点 */
    onUpdateStrengthenRedPoint($data) {
        let self = this;
        if ($data == "show") {
            self.showStrengthenRedPoint();
        }
        else {
            self.showStrengthenRedPoint(false);
        }
    }
    /** 更新关注红点 */
    onFollowRewardRedPoint($data) {
        let self = this;
        if ($data == "show") {
            self.showFollowRewardRedPoint();
        }
        else {
            self.showFollowRewardRedPoint(false);
        }
        self.menuRedPointIsShow();
    }
    /** 更新好友互助红点 */
    onFriendConcurRedPoint($data) {
        let self = this;
        if ($data == "show") {
            self.showFriendConcurRedPoint();
        }
        else {
            self.showFriendConcurRedPoint(false);
        }
        self.menuRedPointIsShow();
    }
    /** 显示好友互助红点 */
    showFriendConcurRedPoint(show = true) {
        let self = this;
        if (self.btn_concur) {
            let imgRedPoint = self.btn_concur.getChildByName("imgRedPoint");
            if (imgRedPoint) {
                imgRedPoint.visible = show;
            }
        }
    }
    /** 菜单红点是否显示 */
    menuRedPointIsShow() {
        let self = this;
        self.menuRedPoint.visible = userData.menuRedPointCount > 0;
    }
    /** 刷新金币 */
    onRefreshGold() {
        let self = this;
        self.updateGold(userData.gold);
    }
    /** 刷新钻石 */
    onRefreshDiamond($data) {
        let self = this;
        if ($data && $data.diamond) {
            self.updateDiamond($data.diamond);
        }
        else {
            self.updateDiamond(userData.diamond);
        }
    }
    /** 游戏加速 */
    onGameAccelerate() {
        let self = this;
        if (GlobalConfig.DEBUG) {
            self.playAcceEffectView();
        }
        else {
            //显示广告
            let adStage = userData.toShareAd((_res) => {
                self.playAcceEffectView();
            }, 10, false, true);
            //无分享广告则显示钻石购买
            if (adStage > 0) {
                self.onDiamondBuyAcce();
            }
        }
    }
    /** 战斗通过 */
    onBattleClearanc() {
        let self = this;
        if (HallManager.Instance.hallData.passSection >= HallManager.Instance.hallData.maxSection) {
            self.showPassStageResult(HallManager.Instance.hallData.passStage);
            //上传腾讯云
            userData.setUserCloudStorage();
        }
        else if (HallManager.Instance.hallData.passSection >= (HallManager.Instance.hallData.maxSection - 1)) {
            //是否进入boss关
            self.timerOnce(600, self, self.playBossEnterEffect);
        }
        self.timerOnce(2000, self, () => {
            HallManager.Instance.hallData.gameStatus = 1;
            //过关
            let curSection = HallManager.Instance.hallData.passSection;
            if (curSection < HallManager.Instance.hallData.maxSection) {
                curSection++;
            }
            else {
                curSection = 1;
                self.setPassStage(HallManager.Instance.hallData.passStage + 1);
            }
            self.setPassSection(curSection);
            //创建怪物
            self.createMonster(HallManager.Instance.hallData.passStage, HallManager.Instance.hallData.passSection);
        });
    }
    /** 战斗没有通过 */
    onBattleNoClearanc() {
        let self = this;
        self.showPassStageResult(-1, () => {
            HallManager.Instance.hallData.gameStatus = 1;
            //未通关，重新开始
            self.setPassSection(1);
            //创建怪物
            self.createMonster(HallManager.Instance.hallData.passStage, HallManager.Instance.hallData.passSection);
            //定时赠送精灵
            if (!M.novice.isRunning) {
                self.handlerGiveMonster();
            }
        });
    }
    /** 功能菜单 */
    onClickMenuHandler() {
        let self = this;
        self.btn_arrow.mouseEnabled = false;
        if (self.btn_arrow.scaleX == 1) {
            Laya.Tween.to(self.menuBox, { left: -390 }, 350, null, Laya.Handler.create(self, () => {
                Laya.Tween.clearTween(self.menuBox);
                self.btn_arrow.mouseEnabled = true;
                self.btn_arrow.scaleX = -1;
            }, null, true));
        }
        else {
            Laya.Tween.to(self.menuBox, { left: 0 }, 350, null, Laya.Handler.create(self, () => {
                Laya.Tween.clearTween(self.menuBox);
                self.btn_arrow.mouseEnabled = true;
                self.btn_arrow.scaleX = 1;
            }, null, true));
        }
    }
    /** 好友互助 */
    onClickConcur() {
        FriendConcurView.Create(this);
    }
    /** 关注 */
    onClickFollow() {
        ViewMgr.Ins.open(ViewConst.FollowRewardView);
        // FollowRewardView.Create(this, () => {
        // });
    }
    //每日签到界面
    showDaySignView() {
        const that = this;
        DaySignView.Create(Laya.Handler.create(this, (view) => {
            if (view) {
                view.on(DaySignView.REMOVE_FROM_STAGE, this, () => {
                    resolveDailyPrizeVisible();
                });
            }
            resolveDailyPrizeVisible();
            function resolveDailyPrizeVisible() {
                // if (DaySignView.signData) {
                //   that.btnDailyPrize.visible = DaySignView.signData.sign.status === 0;
                // } else {
                //   that.btnDailyPrize.visible = true;
                // }
            }
        }));
    }
    //排行
    onRanking() {
        let self = this;
        RankingView.Create(() => {
            self.showSurpassView();
        });
    }
    updateDiamondTime(time) {
        let self = this;
        self._diamondTime = time;
        if (userData.offlineRewardCount > 0) {
            if (self._diamondTime > 0) {
                self.txt_diamondTime.text = TimeUtil.S2H(self._diamondTime, ":", false);
                TimerManager.Instance.doTimer(1000, 0, self.onUpdateTime, self);
            }
            else if (self._diamondTime <= 0) {
                self.txt_diamondTime.text = LanguageManager.Instance.getLanguageText("hallScene.label.txt.28");
            }
        }
        else {
            self.txt_diamondTime.text = LanguageManager.Instance.getLanguageText("hallScene.label.txt.29");
        }
    }
    onUpdateTime() {
        let self = this;
        if (self._diamondTime > 0) {
            self._diamondTime -= 1000;
            self.txt_diamondTime.text = TimeUtil.S2H(self._diamondTime, ":", false);
        }
        else {
            TimerManager.Instance.remove(self.onUpdateTime, self);
            self.txt_diamondTime.text = LanguageManager.Instance.getLanguageText("hallScene.label.txt.28");
        }
    }
    /** 领取在线奖励 */
    onGetOffLineReward() {
        let self = this;
        if (self._diamondTime < 1 && userData.offlineRewardCount > 0) {
            HttpManager.Instance.requestGetOffLineReward((res) => {
                RewardGetView.Create(self, () => {
                    M.layer.screenEffectLayer.addChild(new FlyEffect().play("diamond", LayerManager.mouseX, LayerManager.mouseY, 38, 83));
                    MessageUtils.showMsgTips(LanguageManager.Instance.getLanguageText("hallScene.label.txt.20", "钻石", res.diamond));
                    EventsManager.Instance.event(EventsType.DIAMOND_CHANGE, { diamond: userData.diamond = res.total_diamond });
                    userData.offlineRewardCount = res.remain_online_num;
                    self.updateDiamondTime(HallManager.Instance.hallData.offlineTotalTime);
                }, [res.diamond], [2]);
            });
        }
        else {
            if (userData.offlineRewardCount <= 0) {
                MessageUtils.showMsgTips(LanguageManager.Instance.getLanguageText("hallScene.label.txt.30"));
            }
            else {
                MessageUtils.showMsgTips(LanguageManager.Instance.getLanguageText("hallScene.label.txt.27"));
            }
        }
    }
}
//# sourceMappingURL=HallScene.js.map
/*
* TER0903-幸运抽奖;
*/
class LuckPrizeView extends ui.luckPrize.LuckPrizeViewUI {
    constructor() {
        super();
        this.costDiamond = 120;
        this.freeTimes = 0; //免费次数
        this.freeTime = 0; //免费时间
        this.nextFreeTime = 0; //离下次免费时间
        this.isTryAgain = false; //再来一次
        this.isFreeDrawing = false; //是否正在免费抽奖
        this.prizeItemTable = [
            { id: 1, name: "腾讯季卡", num: 1, imgUrl: "images/luckLottery/luck_prize_4.png" },
            { id: 2, name: "大量钻石", num: 300, imgUrl: "images/luckLottery/luck_prize_6.png" },
            { id: 3, name: "双倍加速", num: 1, imgUrl: "images/luckLottery/luck_prize_2.png" },
            { id: 4, name: "宝箱", num: 1, imgUrl: "images/luckLottery/luck_prize_3.png" },
            { id: 5, name: "再来一次", num: 1, imgUrl: "images/luckLottery/luck_prize_0.png" },
            { id: 6, name: "精华碎片", num: 1, imgUrl: "images/luckLottery/luck_prize_5.png" },
            { id: 7, name: "大量金币", num: 1, imgUrl: "images/core/coin_stack_01.png" },
            { id: 8, name: "游戏T恤", num: 1, imgUrl: "images/luckLottery/luck_prize_7.png" }
        ]; //奖励物品列表
        var that = this;
        that.frameOnce(1, that, () => {
            that.init();
        });
    }
    //新建并添加到节点
    static Create(_parentNode, _callback = null) {
        let resList = [
            { url: "res/atlas/images/luckLottery.atlas", type: Laya.Loader.ATLAS }
        ];
        Laya.loader.load(resList, Handler.create(null, () => {
            let viewTag = "LuckPrizeView";
            if (_parentNode) {
                let nodeViewOld = _parentNode.getChildByName(viewTag);
                if (nodeViewOld) {
                    nodeViewOld.visible = true;
                    nodeViewOld.initPrizeInfo();
                    return;
                }
            }
            else {
                let nodeView = new LuckPrizeView();
                nodeView.name = viewTag;
                AlignUtils.setToScreenGoldenPos(nodeView);
                LayerManager.getInstance().frameLayer.addChildWithMaskCall(nodeView, nodeView.removeSelf);
                nodeView.once(Laya.Event.REMOVED, nodeView, _callback);
            }
        }));
    }
    //初始化
    init() {
        var self = this;
        SDKManager.Instance.showBannerAd(true);
        //按钮事件
        self.btnExit.on(Laya.Event.CLICK, self, self.onClickExit);
        self.btnStart.on(Laya.Event.CLICK, self, self.onStart);
        self.initPrizeInfo((_res) => {
            if (self.txtTip1) {
                self.txtTip1.visible = true;
                self.txtTip1.text = LanguageManager.Instance.getLanguageText("hallScene.label.txt.23", self.costDiamond);
            }
            //消耗钻石
            let refreshDiamondText = () => {
                if (self.txtDiamond) {
                    if (self.freeTime > 0 || self.isTryAgain) {
                        self.txtDiamond.text = LanguageManager.Instance.getLanguageText("hallScene.label.txt.24");
                    }
                    else {
                        self.txtDiamond.changeText('' + self.costDiamond);
                    }
                }
            };
            refreshDiamondText();
            if (self.txtTip2) {
                self.txtTip2.visible = true;
                let loopFun = () => {
                    if (self.freeTime > 0) {
                        self.txtTip2.text = LanguageManager.Instance.getLanguageText("hallScene.label.txt.25", TimeUtil.timeFormatStr(self.freeTime, true));
                        self.txtTip2.color = "#66CD00";
                        self.freeTime--;
                    }
                    else if (self.nextFreeTime > 0) {
                        self.txtTip2.text = LanguageManager.Instance.getLanguageText("hallScene.label.txt.26", TimeUtil.timeFormatStr(self.nextFreeTime, true));
                        self.txtTip2.color = "#EE6363";
                        self.nextFreeTime--;
                        self.freeTimes = 0; //免费次数清零
                    }
                    else {
                        if (self.txtTip2.visible) {
                            self.initPrizeInfo();
                        }
                        self.txtTip2.visible = false;
                    }
                    //消耗钻石
                    refreshDiamondText();
                };
                loopFun();
                self.timerLoop(1000, self, loopFun);
            }
        });
        //移除红点
        if (userData) {
            userData.removeLuckPrizeRedPoint();
        }
        self.showMyDiamond(PlayerManager.Instance.Info.userDiamond);
        EventsManager.Instance.on(EventsType.DIAMOND_CHANGE, self, (_data) => {
            if (_data && _data.diamond) {
                self.showMyDiamond(_data.diamond);
            }
            else {
                self.showMyDiamond(userData.diamond);
            }
        });
    }
    initPrizeInfo(_showCallback = null) {
        let that = this;
        that.requestPrizeInfo((_res) => {
            if (!_res)
                return;
            if (that.isFreeDrawing == false) {
                that.freeTimes = MathUtils.parseInt(_res.free_num);
                that.freeTime = MathUtils.parseInt(_res.remain_time);
                that.nextFreeTime = MathUtils.parseInt(_res.next_free);
            }
            that.costDiamond = MathUtils.parseInt(_res.roulette_price);
            //免费次数已用完
            if (that.freeTimes < 1) {
                that.freeTime = 0;
            }
            _showCallback && _showCallback(_res);
        });
    }
    onClickExit() {
        this.removeSelf();
    }
    //开始抽奖
    onStart() {
        let that = this;
        that.startBtnEnabled(true);
        if (that.isTryAgain) {
            that.isTryAgain = false;
            //再来一次
            that.requestDrawPrize(2, (_res) => {
                if (!_res || _res.id == null) {
                    console.log("无法正常抽奖again");
                    that.startBtnEnabled(false);
                    return;
                }
                let itemId = _res.id;
                let rotation = (8 - itemId) * 360 / 8 + 360 / 16;
                that.onRotation(360 * 7 + rotation, itemId);
            });
        }
        else if (that.freeTimes > 0) {
            //免费抽奖
            that.requestDrawPrize(0, (_res) => {
                if (!_res || _res.id == null) {
                    console.log("无法正常抽奖free");
                    that.startBtnEnabled(false);
                    return;
                }
                that.isFreeDrawing = true;
                let itemId = _res.id;
                let rotation = (8 - itemId) * 360 / 8 + 360 / 16;
                that.onRotation(360 * 7 + rotation, itemId);
                that.freeTimes--;
                that.freeTime = 0;
                //移除红点
                if (userData) {
                    userData.removeLuckPrizeRedPoint();
                }
            });
        }
        else if (userData.diamond >= that.costDiamond) {
            //钻石抽奖
            that.requestDrawPrize(1, (_res) => {
                if (!_res || _res.id == null) {
                    console.log("无法正常抽奖diamond");
                    that.startBtnEnabled(false);
                    return;
                }
                let itemId = _res.id;
                let rotation = (8 - itemId) * 360 / 8 + 360 / 16;
                that.onRotation(360 * 7 + rotation, itemId);
                that.freeTimes--;
                that.freeTime = 0;
                //刷新钻石数量
                HttpManager.Instance.requestDiamondData();
            });
        }
        else {
            MessageUtils.showMsgTips(LanguageManager.Instance.getLanguageText("hallScene.label.txt.04"));
            that.startBtnEnabled(false);
        }
    }
    startBtnEnabled(_isEnabled = true) {
        let that = this;
        if (that.btnStart) {
            that.btnStart.disabled = _isEnabled;
        }
    }
    //转盘
    onRotation(_rotation, _itemId) {
        let that = this;
        if (that.imgBg) {
            let fAdd = 0.2;
            that.imgBg.rotation = that.imgBg.rotation % 360;
            if (that.imgBg.rotation > _rotation) {
                fAdd = -fAdd;
            }
            let fAddLength = 0;
            let fTotalLength = Math.abs(_rotation - that.imgBg.rotation);
            let animFun = () => {
                if (fAdd > 0) {
                    if (that.imgBg.rotation < _rotation) {
                        let progress = fAddLength / fTotalLength;
                        //加速
                        if (progress < 0.2) {
                            fAdd += 0.2;
                        }
                        else if (progress > 0.6) {
                            fAdd -= 0.1;
                        }
                        if (fAdd < 0.2) {
                            fAdd = 0.2;
                        }
                        fAddLength += fAdd;
                        that.imgBg.rotation += fAdd;
                    }
                    else {
                        that.imgBg.rotation = _rotation;
                        that.imgBg.clearTimer(that, animFun);
                        //显示奖励物品
                        that.showPrizeItem(_itemId);
                    }
                }
                else if (fAdd < 0) {
                    if (that.imgBg.rotation > _rotation) {
                        that.imgBg.rotation += fAdd;
                    }
                    else {
                        that.imgBg.rotation = _rotation;
                        that.imgBg.clearTimer(that, animFun);
                        that.startBtnEnabled(true);
                    }
                }
            };
            that.imgBg.timerLoop(10, that, animFun);
        }
    }
    //抽奖物品
    showPrizeItem(_itemId = null) {
        let that = this;
        that.isFreeDrawing = false;
        let itemDialog = new ui.luckPrize.LuckPrizeItemViewUI();
        AlignUtils.setToScreenGoldenPos(itemDialog);
        M.layer.subFrameLayer.addChildWithMaskCall(itemDialog, itemDialog.removeSelf);
        let bgView = itemDialog.getChildByName("bgView");
        if (bgView) {
            let tween = EffectUtils.objectRotate(itemDialog.imgLight);
            let btnExit = bgView.getChildByName("btnExit");
            if (btnExit) {
                btnExit.on(Laya.Event.CLICK, btnExit, () => {
                    Laya.Tween.clear(tween);
                    itemDialog.removeSelf();
                });
            }
            let itemData = that.prizeItemTable[_itemId - 1];
            if (itemData) {
                let imgItemBg = bgView.getChildByName("imgItemBg");
                let imgItem = bgView.getChildByName("imgItem");
                if (imgItem && itemData.imgUrl) {
                    imgItem.visible = true;
                    imgItem.skin = itemData.imgUrl;
                }
                if (_itemId == 1 || _itemId == 8) { //T恤/腾讯卡
                    let txtItemName = bgView.getChildByName("txtItemName");
                    if (txtItemName) {
                        txtItemName.text = LanguageManager.Instance.getLanguageText("hallScene.label.txt.20", itemData.name, itemData.num);
                    }
                    that.requestPrizeCensus(_itemId, 1);
                }
                else if (_itemId == 2) { //钻石
                    let txtItemName = bgView.getChildByName("txtItemName");
                    if (txtItemName) {
                        txtItemName.text = LanguageManager.Instance.getLanguageText("hallScene.label.txt.20", itemData.name, itemData.num);
                    }
                    //刷新钻石数量
                    HttpManager.Instance.requestDiamondData();
                    that.requestPrizeCensus(_itemId, 1);
                }
                else if (_itemId == 3) { //加速
                    let txtItemName = bgView.getChildByName("txtItemName");
                    if (txtItemName) {
                        txtItemName.text = LanguageManager.Instance.getLanguageText("hallScene.label.txt.20", itemData.name, 1);
                    }
                    if (EventsManager.Instance) {
                        EventsManager.Instance.event(EventsType.LUCK_PRIZE, { id: _itemId, num: 90 });
                    }
                    that.requestPrizeCensus(_itemId, 1);
                }
                else if (_itemId == 4) { //先知球
                    let txtItemName = bgView.getChildByName("txtItemName");
                    if (txtItemName) {
                        txtItemName.text = LanguageManager.Instance.getLanguageText("hallScene.label.txt.22", itemData.name);
                    }
                    let skinPath = "";
                    let monsterType = 1;
                    let diamondPokemonId = 0; //钻石档英雄
                    let diamondPokemonCfg = BattleManager.Instance.getPreMonster(monsterType * 100 + userData.getCarLevel(), 1); // getPreMonsterConfig(monsterType * 100 + userData.getCarLevel(), 1);
                    if (diamondPokemonCfg) {
                        diamondPokemonId = diamondPokemonCfg.id;
                        skinPath = "images/carImg/" + diamondPokemonCfg.imgUrl;
                    }
                    let imgItem = bgView.getChildByName("imgItem");
                    if (imgItem && skinPath.length > 0) {
                        imgItem.skin = skinPath;
                        imgItem.scale(2, 2);
                        imgItem.anchorY = 0.65;
                        imgItem.anchorX = 0.51;
                    }
                    if (EventsManager.Instance) {
                        EventsManager.Instance.event(EventsType.LUCK_PRIZE, { id: _itemId, carId: diamondPokemonId });
                    }
                    that.requestPrizeCensus(_itemId, diamondPokemonId);
                }
                else if (_itemId == 6) { //精华碎片
                    let txtItemName = bgView.getChildByName("txtItemName");
                    if (txtItemName) {
                        txtItemName.text = LanguageManager.Instance.getLanguageText("hallScene.label.txt.20", itemData.name, itemData.num);
                    }
                    HttpManager.Instance.requestEssenceData();
                    that.requestPrizeCensus(_itemId, 1);
                }
                else if (_itemId == 7) { //金币
                    let money = 0;
                    let monsterType = userData.isEvolution() ? 2 : 1;
                    let monsterLevel = userData.getCarLevel();
                    let monsterInfo = BattleManager.Instance.getUnLockMonster(monsterType, monsterLevel);
                    if (monsterInfo) {
                        let curPrice = BattleManager.Instance.getMonsterPrice(monsterInfo.buyPrice, userData.queryBuyRecord(monsterInfo.id));
                        if (_itemId == 7) {
                            money = curPrice * 0.8;
                        }
                        else {
                            money = curPrice * 0.2;
                        }
                    }
                    else {
                        console.log("精灵不存在");
                    }
                    let txtItemName = bgView.getChildByName("txtItemName");
                    if (txtItemName) {
                        LayerManager.getInstance().screenEffectLayer.addChild(new FlyEffect().play("rollingCoin", LayerManager.mouseX, LayerManager.mouseY));
                        txtItemName.text = LanguageManager.Instance.getLanguageText("hallScene.label.txt.20", itemData.name, MathUtils.bytesToSize(money));
                    }
                    if (EventsManager.Instance) {
                        EventsManager.Instance.event(EventsType.LUCK_PRIZE, { id: _itemId, num: money });
                    }
                    that.requestPrizeCensus(_itemId, money);
                }
                else {
                    let txtItemName = bgView.getChildByName("txtItemName");
                    if (txtItemName) {
                        txtItemName.text = LanguageManager.Instance.getLanguageText("hallScene.label.txt.21", itemData.name);
                    }
                    that.isTryAgain = true;
                    that.requestPrizeCensus(_itemId, 1);
                }
            }
        }
        that.startBtnEnabled(false);
    }
    showMyDiamond(value) {
        let self = this;
        self.txt_diamond.text = value + "";
    }
    //获取抽奖信息
    requestPrizeInfo(_callback) {
        let that = this;
        let HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: 'v1/activity/get/roulette',
            success: function (res) {
                console.log("requestPrizeInfo", res);
                _callback && _callback(res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    //转盘抽奖
    requestDrawPrize(_itemId, _callback) {
        let that = this;
        let HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: 'v1/activity/roulette/' + _itemId,
            success: function (res) {
                console.log("requestDrawPrize", res);
                _callback && _callback(res);
            },
            fail: function (res) {
                console.log(res);
                _callback && _callback(false);
            }
        });
    }
    //统计
    requestPrizeCensus(_itemId, _num) {
        let dataString = 'prizeId=' + _itemId + '&prizeNum=' + _num;
        console.log("requestPrizeCensus:", dataString);
        let HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: 'v1/activity/roulette/log',
            method: 'Post',
            data: dataString,
            success: function (res) {
                console.log("requestPrizeCensus:", res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
}
//# sourceMappingURL=LuckPrizeView.js.map
class MoreController extends Laya.EventDispatcher {
    static getInstance() {
        if (!this._instance) {
            this._instance = new MoreController();
        }
        return this._instance;
    }
    get model() {
        return this._model;
    }
    constructor() {
        super();
        this.init();
    }
    init() {
        this._model = new MoreModel();
        this.addEvents();
    }
    addEvents() {
        this.on(MoreEvent.SUBSCRIBE_STATUS, this, (flag) => {
            this._model.subscribable = flag;
        });
    }
    show() {
        if (this._view) {
            M.layer.frameLayer.addChildWithMaskCall(this._view, this._view.removeSelf);
        }
        else {
            const assets = [
                { url: "res/atlas/images/more.atlas", type: Laya.Loader.ATLAS }
            ];
            EffectUtils.showWaitEffect();
            Laya.loader.load(assets, Handler.create(this, () => {
                EffectUtils.stopWaitEffect();
                this._view = new MoreView(this, this._model);
                this.show();
            }));
        }
    }
    switchMute() {
        this._model.mute = !this._model.mute;
        this.applyMute(this._model.mute);
    }
    applyMute(mute) {
        if (!mute) {
            if (this._model.mute === undefined) {
                return;
            }
            mute = this._model.mute;
        }
        Laya.SoundManager.musicMuted = mute;
        Laya.SoundManager.soundMuted = mute;
        if (!mute) {
            if (!this._bgChannel) {
                Laya.loader.load("musics/bgmusic.mp3", Laya.Handler.create(this, () => {
                    this._bgChannel = Laya.SoundManager.playMusic("musics/bgmusic.mp3", 0);
                }));
            }
            else {
                this._bgChannel.play();
            }
        }
    }
}
//# sourceMappingURL=MoreController.js.map
class MoreModel extends Laya.EventDispatcher {
    get mute() {
        return this._mute;
    }
    set mute(value) {
        this._mute = value;
        userData.setCache(CacheKey.SOUND_MUTE, this._mute);
    }
    get subscribable() {
        return this._subscribable;
    }
    set subscribable(value) {
        this._subscribable = value;
        this.event(MoreEvent.SUBSCRIBE_STATUS, value);
    }
    get itemList() {
        return this._itemList;
    }
    constructor() {
        super();
        this.init();
    }
    init() {
        this._itemList = [];
        // this._itemList.push(new MoreViewListItemVO());
        // this._itemList.push(new MoreViewListItemVO());
        // this._itemList.push(new MoreViewListItemVO());
        // this._itemList.push(new MoreViewListItemVO());
        // this._itemList.push(new MoreViewListItemVO());
    }
}
//# sourceMappingURL=MoreModel.js.map
class MoreView extends Laya.Component {
    constructor(controller, model) {
        super();
        this._controller = controller;
        this._model = model;
        this.ui = new ui.more.MoreViewUI();
        this.updateMuteImg();
        this.size(this.ui.width, this.ui.height);
        this.addChild(this.ui);
        AlignUtils.setToScreenGoldenPos(this);
        this.initList();
        this.addEvents();
    }
    initList() {
        this.ui.listMoreItem.itemRender = MoreViewListItem;
        this.ui.listMoreItem.vScrollBarSkin = "";
        this.ui.listMoreItem.optimizeScrollRect = true;
        const len = this._model.itemList.length;
        this.ui.lblNoneGameTips.visible = len <= 0;
        this.ui.listMoreItem.visible = len > 0;
        if (len) {
            this.ui.listMoreItem.array = this._model.itemList;
        }
    }
    addEvents() {
        this.ui.btnCustomService.on(Laya.Event.CLICK, this, this.onCustomService);
        this.ui.btnSoundOpend.on(Laya.Event.CLICK, this, this.onSwitchMute);
        this.ui.btnSoundClosed.on(Laya.Event.CLICK, this, this.onSwitchMute);
        this.ui.imgClose.on(Laya.Event.CLICK, this, this.removeSelf);
    }
    onSwitchMute() {
        this._controller.switchMute();
        this.updateMuteImg();
    }
    updateMuteImg() {
        this.ui.btnSoundOpend.visible = !this._model.mute;
        this.ui.btnSoundClosed.visible = this._model.mute;
    }
    onCustomService() {
        platform.openCustomerService({
            sessionFrom: "",
            showMessageCard: false,
            sendMessageTitle: "wellcome",
            sendMessagePath: "",
            sendMessageImg: "",
            success: function (res) {
            },
            fail: function (res) {
            }
        });
    }
}
//# sourceMappingURL=MoreView.js.map
class MoreViewListItem extends Laya.Component {
    constructor() {
        super();
        this.ui = new ui.more.MoreItemUI();
        this.addChild(this.ui);
        this.addEvents();
    }
    set dataSource(value) {
        if (value) {
            this._vo = value;
            this.ui.imgAppIcon.skin = this._vo.avatarUrl;
            this.ui.lblNickname.changeText(this._vo.nickName);
            this.ui.lblItemNum.changeText(MathUtils.bytesToSize(this._vo.itemNum));
            this.updateBtnStatus();
        }
    }
    updateBtnStatus() {
        this.ui.btnTry.visible = this._vo.completeStatus === MoreQuestCompleteStatus.NOT_YET_PLAY;
        this.ui.btnStartGame.visible = this._vo.completeStatus === MoreQuestCompleteStatus.PLAYING;
        this.ui.btnObtain.visible = this._vo.completeStatus === MoreQuestCompleteStatus.COMPLETE_PLAY;
        this.ui.imgObtained.visible = this._vo.completeStatus === MoreQuestCompleteStatus.AWARD_OBTAINED;
    }
    addEvents() {
        const e = Laya.Event.CLICK;
        this.ui.btnTry.on(e, this, this.naviToApp);
        this.ui.btnStartGame.on(e, this, this.naviToApp);
        this.ui.btnObtain.on(e, this, this.requestsMoreQuestAward);
    }
    naviToApp() {
        if (platform) {
            platform.navigateToMiniProgram(null);
        }
    }
    requestsMoreQuestAward() {
        // 请求奖励
    }
}
//# sourceMappingURL=MoreViewListItem.js.map
/*
* 额外奖励界面;
*/
class AdditionalRewardView extends ui.randomReward.AdditionalRewardViewUI {
    constructor(data) {
        super();
        this._data = data;
        this.addEvetns();
        this.init();
    }
    //新建并添加到节点
    static Create(_parentNode, data) {
        let resList = [
            { url: "res/atlas/images/randomReward.atlas", type: Laya.Loader.ATLAS }
        ];
        Laya.loader.load(resList, Handler.create(null, () => {
            if (_parentNode) {
                let nodeView = new AdditionalRewardView(data);
                AlignUtils.setToScreenGoldenPos(nodeView);
                LayerManager.getInstance().subFrameLayer.addChildWithMaskCall(nodeView, nodeView.removeView);
                // nodeView.once(Laya.Event.REMOVED, nodeView, nodeView.removeView);
            }
        }));
    }
    //初始化
    init() {
        let self = this;
        self._tween = EffectUtils.objectRotate(self.imgLight);
        self.txt_count.text = "x" + self._data.diamond;
    }
    addEvetns() {
        let self = this;
        self.btn_get.on(Laya.Event.CLICK, self, self.onGetReward);
    }
    removeEvents() {
        let self = this;
        self.btn_get.off(Laya.Event.CLICK, self, self.onGetReward);
    }
    /** 领取奖励 */
    onGetReward() {
        let self = this;
        userData.toShareAd(() => {
            HttpManager.Instance.requestRandomRewardDiamond(self._data.diamond, (res) => {
                self.removeView();
                let point = PointUtils.localToGlobal(self.btn_get);
                M.layer.screenEffectLayer.addChild(new FlyEffect().play("diamond", point.x, point.y, 38, 73));
                EventsManager.Instance.event(EventsType.DIAMOND_CHANGE, { diamond: userData.diamond = res.total_diamond });
                MessageUtils.showMsgTips("获得钻石:" + self._data.diamond);
            });
        });
    }
    removeView() {
        let self = this;
        self._tween && (Laya.Tween.clear(self._tween));
        self._tween = null;
        self.removeSelf();
        self.removeEvents();
    }
}
//# sourceMappingURL=AdditionalRewardView.js.map
/*
* 英雄升级;
*/
class HeroLevelView extends ui.randomReward.HeroLevelViewUI {
    constructor(callBack, arg) {
        super();
        this._callback = callBack;
        this._arg = arg;
        this.addEvetns();
        this.init();
    }
    //新建并添加到节点
    static Create(_parentNode, callBack, closeCallBack, ...arg) {
        let resList = [
            { url: "res/atlas/images/randomReward.atlas", type: Laya.Loader.ATLAS }
        ];
        Laya.loader.load(resList, Handler.create(null, () => {
            if (_parentNode) {
                let nodeView = new HeroLevelView(callBack, arg);
                nodeView._closeCallback = closeCallBack;
                AlignUtils.setToScreenGoldenPos(nodeView);
                LayerManager.getInstance().subFrameLayer.addChild(nodeView);
                nodeView.once(Laya.Event.REMOVED, nodeView, nodeView.removeView);
            }
        }));
    }
    //初始化
    init() {
        let self = this;
        let oldInfo = BattleManager.Instance.getMonsterItem(self._arg[0]);
        self.oldHero.skin = "images/carImg/" + oldInfo.imgUrl;
        self.txt_oldLevel.text = (userData.isEvolution() ? oldInfo.id - 1000 : oldInfo.id - 100) + "级";
        let newInfo = BattleManager.Instance.getMonsterItem(self._arg[1]);
        self.newHero.skin = "images/carImg/" + newInfo.imgUrl;
        self.txt_newLevel.text = (userData.isEvolution() ? newInfo.id - 1000 : newInfo.id - 100) + "级";
    }
    addEvetns() {
        let self = this;
        self.btn_level.on(Laya.Event.CLICK, self, self.onHeroLevel);
        self.btn_exit.on(Laya.Event.CLICK, self, self.onCancelHandler);
    }
    removeEvents() {
        let self = this;
        self.btn_level.off(Laya.Event.CLICK, self, self.onHeroLevel);
        self.btn_exit.off(Laya.Event.CLICK, self, self.onCancelHandler);
    }
    /** 英雄升级 */
    onHeroLevel() {
        let self = this;
        if (GlobalConfig.DEBUG) {
            if (self._callback)
                self._callback();
        }
        else {
            if (Math.random() < 0.5) {
                SDKManager.Instance.showVideoAd((_res) => {
                    if (_res && _res.isEnded || _res === undefined) {
                        if (self._callback)
                            self._callback();
                        self.removeView();
                    }
                }, () => {
                    userData.toShareAd(() => {
                        if (self._callback)
                            self._callback();
                        self.removeView();
                    });
                });
            }
            else {
                userData.toShareAd(() => {
                    if (self._callback)
                        self._callback();
                    self.removeView();
                });
            }
        }
    }
    onCancelHandler() {
        let self = this;
        self._closeCallback && self._closeCallback();
        self.removeSelf();
    }
    removeView() {
        let self = this;
        self.removeSelf();
        self.removeEvents();
    }
}
//# sourceMappingURL=HeroLevelView.js.map
/*
* 排行榜界面
*/
class RankingView extends ui.rank.RankingUI {
    constructor(_isFriend) {
        super();
        this.curSelectedIndex = -1;
        this.init(_isFriend);
    }
    //新建并添加到节点
    static Create(_callback = null, _isFriend = false) {
        let resList = [
            { url: "images/ranking/headIcon.png", type: Laya.Loader.IMAGE },
            { url: "images/ranking/surpass_bg.png", type: Laya.Loader.IMAGE },
            { url: "images/ranking/title.png", type: Laya.Loader.IMAGE },
            { url: "images/ranking/cell_bg_top1.png", type: Laya.Loader.IMAGE },
            { url: "images/ranking/cell_bg_default.png", type: Laya.Loader.IMAGE },
            { url: "images/ranking/cell_bg_self.png", type: Laya.Loader.IMAGE },
            { url: "images/ranking/icon_top_1.png", type: Laya.Loader.IMAGE },
            { url: "images/ranking/icon_top_2.png", type: Laya.Loader.IMAGE },
            { url: "images/ranking/icon_top_3.png", type: Laya.Loader.IMAGE },
            { url: "images/ranking/location_bg.png", type: Laya.Loader.IMAGE },
            { url: "images/ranking/location_mark.png", type: Laya.Loader.IMAGE },
            { url: "images/ranking/seperate_line.png", type: Laya.Loader.IMAGE },
        ];
        Laya.loader.load(resList, Handler.create(null, () => {
            let nodeView = new RankingView(_isFriend);
            AlignUtils.setToScreenGoldenPos(nodeView);
            M.layer.frameLayer.addChildWithMaskCall(nodeView, () => {
                nodeView.removeSelf();
                _callback && _callback();
            });
        }));
    }
    //初始化
    init(_isFriend) {
        let that = this;
        this._tabGroup = new TabGroup(that.tabGroup._childs);
        this._tabGroup.on(Laya.Event.CHANGE, that, that.onTabChange);
        this._tabGroup.selectedIndex = _isFriend ? RankingSubView.FRIEND_RANKING : RankingSubView.WORLD_RANKING;
        //按钮事件
        this.btnExit.on(Laya.Event.CLICK, that, that.onClickExit);
        this.coverView.on(Laya.Event.CLICK, that, () => {
            console.log("coverView");
        });
    }
    //点击事件
    onClickExit() {
        this.removeSelf();
    }
    onTabChange(selectedIndex) {
        const index = this._tabGroup.selectedIndex;
        this.viewStackRanking.selectedIndex = index;
        if (index === RankingSubView.WORLD_RANKING) {
            this.requestWorldRankingData();
            this.requestMyWorldRankingData();
        }
        else if (index === RankingSubView.FRIEND_RANKING) {
            this.openFriendRankingView();
        }
    }
    openWorldRankingView(data) {
        var that = this;
        var listDatas = [];
        //移除收益为0或以下的数据
        if (data) {
            data.forEach(element => {
                let asset = MathUtils.parseStringNum(element.stage);
                if (asset > 0) {
                    listDatas.push(element);
                }
            });
        }
        that.worldRankingList.vScrollBarSkin = "";
        that.worldRankingList.repeatY = 5;
        that.worldRankingList.array = listDatas;
        that.worldRankingList.renderHandler = new Laya.Handler(that, (cell, index) => {
            if (index > that.worldRankingList.array.length)
                return;
            let item = that.worldRankingList.array[index];
            if (item) {
                const cellBar = cell.getChildByName("cellBar");
                if (cellBar) {
                    if (index < 1) {
                        cellBar.skin = "images/ranking/cell_bg_top1.png";
                    }
                    else {
                        cellBar.skin = "images/ranking/cell_bg_default.png";
                    }
                }
                let imgNo = cell.getChildByName('imgNo');
                if (imgNo) {
                    imgNo.visible = index < 3;
                    if (index < 1) {
                        imgNo.skin = "images/ranking/icon_top_1.png";
                    }
                    else if (index < 2) {
                        imgNo.skin = "images/ranking/icon_top_2.png";
                    }
                    else if (index < 3) {
                        imgNo.skin = "images/ranking/icon_top_3.png";
                    }
                }
                let txtNo = cell.getChildByName('txtNo');
                if (txtNo) {
                    txtNo.changeText((index + 1).toString());
                }
                let imgAvatar = cell.getChildByName('imgAvatar');
                if (imgAvatar) {
                    imgAvatar.skin = item.avatar_url;
                }
                let txtName = cell.getChildByName('txtName');
                if (txtName) {
                    txtName.text = StringUtils.omitStringByByteLen(platform.decode(item.nick_name));
                }
                let txtPosition = cell.getChildByName('txtPosition');
                if (txtPosition) {
                    txtPosition.text = (item.city ? item.city : '火星');
                }
                let txtScore = cell.getChildByName('txtScore');
                if (txtScore) {
                    let asset = MathUtils.parseStringNum(item.stage);
                    if (asset < 0) {
                        asset = 0;
                    }
                    txtScore.changeText(MathUtils.bytesToSize(asset));
                }
            }
        }, null, false);
        let txtHint = that.viewStackRanking.selection.getChildByName('txtHint');
        if (txtHint) {
            txtHint.visible = that.worldRankingList.array.length < 1;
        }
    }
    //好友排行
    openFriendRankingView() {
        let that = this;
        let openDataContext = platform.getOpenDataContext();
        if (openDataContext) {
            // openDataContext.postMessage({
            //   text: 'hello',
            //   year: (new Date()).getFullYear()
            // })
            let sharedCanvas = openDataContext.canvas;
            sharedCanvas.width = that.width;
            sharedCanvas.height = that.height;
            var rankSprite = new Laya.Sprite();
            that.viewStackRanking.selection.removeChildren();
            that.viewStackRanking.selection.addChild(rankSprite);
            rankSprite.zOrder = 1;
            Laya.timer.once(40, that, function () {
                var rankTexture = new Laya.Texture(sharedCanvas);
                rankTexture.bitmap.alwaysChange = true; //小游戏使用，非常费，每帧刷新
                rankSprite.graphics.drawTexture(rankTexture, 0, 0, sharedCanvas.width, sharedCanvas.height);
            });
            platform.postMessage({
                message: "showFriendRanking"
            });
        }
    }
    //我当前的世界排名
    showMyRankingView(_ranking, _stage) {
        let that = this;
        if (that.viewMyRanking) {
            let txtMyRanking = that.viewMyRanking.getChildByName('txtMyRanking');
            if (txtMyRanking) {
                txtMyRanking.changeText(_ranking.toString());
            }
            const wxUserInfo = PlayerManager.Instance.Info.wxUserInfo;
            if (wxUserInfo) {
                const imgAvatar = that.viewMyRanking.getChildByName('imgAvatar');
                if (imgAvatar) {
                    imgAvatar.skin = wxUserInfo.avatarUrl;
                }
                let txtName = that.viewMyRanking.getChildByName('txtName');
                if (txtName) {
                    txtName.changeText(wxUserInfo.nickName);
                }
                let txtPosition = that.viewMyRanking.getChildByName('txtPosition');
                if (txtPosition) {
                    txtPosition.changeText(wxUserInfo.city ? wxUserInfo.city : '火星');
                }
            }
            let txtScore = that.viewMyRanking.getChildByName('txtScore');
            if (txtScore) {
                txtScore.changeText(MathUtils.bytesToSize(_stage));
            }
        }
    }
    //请求周排行数据
    requestWorldRankingData(_callback = null) {
        var that = this;
        var HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: 'v1/rank/stage',
            success: function (res) {
                console.log("requestWorldRankingData:", res);
                that.openWorldRankingView(res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    //请求我的周排行数据
    requestMyWorldRankingData(_callback = null) {
        var that = this;
        var HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: 'v1/rank/my_stage',
            success: function (res) {
                console.log("requestMyWorldRankingData:", res);
                that.showMyRankingView(res, userData.getPassStage());
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
}
var RankingSubView;
(function (RankingSubView) {
    RankingSubView[RankingSubView["WORLD_RANKING"] = 0] = "WORLD_RANKING";
    RankingSubView[RankingSubView["FRIEND_RANKING"] = 1] = "FRIEND_RANKING";
})(RankingSubView || (RankingSubView = {}));
//# sourceMappingURL=RankingView.js.map
/*
* 通关失败;
*/
class ClearanceFail extends ui.settlement.ClearanceFailUI {
    constructor() {
        super();
        this.countdown = 3;
        this.showFailedUI();
    }
    //新建并添加到节点
    static Create(_parentNode, callback = null, _removeCallback = null, ...arge) {
        let resList = [
            { url: "res/atlas/images.atlas", type: Laya.Loader.ATLAS }
        ];
        Laya.loader.load(resList, Handler.create(null, () => {
            if (_parentNode) {
                let nodeView = new ClearanceFail();
                nodeView.removeCallback = _removeCallback;
                AlignUtils.setToScreenGoldenPos(nodeView);
                M.layer.subFrameLayer.addChildWithMaskCall(nodeView, nodeView.removeSelf);
                nodeView.once(Laya.Event.REMOVED, nodeView, nodeView.removeView);
            }
        }));
    }
    //显示失败界面
    showFailedUI() {
        let self = this;
        self.txtTime.changeText('' + self.countdown);
        TimerManager.Instance.doTimer(1000, 0, self.onFailTime, self);
    }
    onFailTime() {
        let self = this;
        if (self.countdown > 0) {
            self.countdown--;
        }
        else {
            TimerManager.Instance.remove(self.onFailTime, self);
            self.removeSelf();
        }
        self.txtTime.changeText('' + self.countdown);
    }
    removeView() {
        let self = this;
        TimerManager.Instance.remove(self.onFailTime, self);
        this.removeCallback && this.removeCallback();
        self.removeSelf();
    }
}
//# sourceMappingURL=ClearanceFail.js.map
/*
* 通关获得奖励提示框;
*/
class ClearanceRewardView extends ui.settlement.ClearanceRewardViewUI {
    constructor(data = null, callback = null) {
        super();
        this._data = data;
        this._callback = callback;
        this.init();
    }
    //新建并添加到节点
    static Create(_parentNode, callback = null, _removeCallback = null, ...arge) {
        let resList = [
            { url: "res/atlas/images/ClearanceReward.atlas", type: Laya.Loader.ATLAS }
        ];
        Laya.loader.load(resList, Handler.create(null, () => {
            if (_parentNode) {
                let nodeView = new ClearanceRewardView(arge, callback);
                AlignUtils.setToScreenGoldenPos(nodeView);
                LayerManager.getInstance().subFrameLayer.addChildWithMaskCall(nodeView, nodeView.removeSelf);
                nodeView.once(Laya.Event.REMOVED, nodeView, nodeView.removeView);
            }
        }));
    }
    //初始化
    init() {
        let self = this;
        //关卡
        self.txtStage.text = self._data[0] + "";
        //当前奖励物品
        let stagePrizeCfg = GlobleData.getData(GlobleData.BarrierRewardVO, self._data[0]);
        if (stagePrizeCfg == null) {
            return;
        }
        let bossM = MathUtils.parseStringNum(stagePrizeCfg.bossM);
        let gold = BattleManager.Instance.getBarrierRewardToGold(self._data[0], MathUtils.parseStringNum(stagePrizeCfg.gold));
        let gem = MathUtils.parseStringNum(stagePrizeCfg.gem);
        let itemArray = [
            { img: "images/ClearanceReward/result_prize_item2.png", value: gold },
            { img: "images/ClearanceReward/result_prize_item3.png", value: gem },
            { img: "images/ClearanceReward/result_prize_item4.png", value: bossM }
        ];
        for (var index = 0, len = itemArray.length; index < len; index++) {
            let cfgData = itemArray[index];
            let rewardItem = ObjectPool.pop(RewardItem, "RewardItem");
            rewardItem.create(cfgData.img, cfgData.value);
            self.hbox.addChild(rewardItem);
        }
        self._tween = EffectUtils.objectRotate(self.lightImg);
        self.addEvents();
    }
    addEvents() {
        let self = this;
        self.btnExit.on(Laya.Event.CLICK, self, self.onCloseHandler);
    }
    removeEvents() {
        let self = this;
        self.btnExit.off(Laya.Event.CLICK, self, self.onCloseHandler);
    }
    onCloseHandler() {
        let self = this;
        let rewardItem = self.hbox.getChildAt(0);
        if (rewardItem) {
            let pos = PointUtils.localToGlobal(rewardItem);
            LayerManager.getInstance().screenEffectLayer.addChild(new FlyEffect().play("rollingCoin", pos.x, pos.y));
        }
        else {
            LayerManager.getInstance().screenEffectLayer.addChild(new FlyEffect().play("rollingCoin", LayerManager.mouseX, LayerManager.mouseY));
        }
        DisplayUtils.removeAllChildren(self.hbox);
        self.removeSelf();
    }
    removeView() {
        let self = this;
        if (self._tween)
            Laya.Tween.clear(self._tween);
        self.removeSelf();
        self.removeEvents();
    }
}
//# sourceMappingURL=ClearanceRewardView.js.map
/*
* terry 2018/11/07;
*/
class ResultView extends ui.settlement.ResultViewUI {
    constructor(_stage = -1) {
        super();
        this.prizeList = null;
        this.curStage = 0;
        this.lastStage = 0;
        this.init(_stage);
    }
    //新建并添加到节点
    static Create(_callback = null, _removeCallback = null, _stage = -1) {
        let resList = [
            { url: "res/atlas/images/ClearanceReward.atlas", type: Laya.Loader.ATLAS }
        ];
        Laya.loader.load(resList, Handler.create(null, () => {
            let nodeView = new ResultView(_stage);
            nodeView.removeCallback = _removeCallback;
            M.layer.frameLayer.addChildWithMaskCall(nodeView, () => {
                nodeView.removeSelf();
            });
            _callback && _callback(nodeView);
        }));
    }
    //初始化
    init(_stage) {
        let that = this;
        that.curStage = _stage;
    }
    removeSelf() {
        this.removeCallback && this.removeCallback();
        return super.removeSelf();
    }
    //显示成功奖励界面
    showPrizeUI(_prizeList, _callback = null) {
        let that = this;
        that.prizeList = _prizeList;
        let imgBg = that.mainView.getChildByName("imgBg");
        if (imgBg) {
            imgBg.visible = true;
            let btnExit = imgBg.getChildByName("btnExit");
            if (btnExit) {
                btnExit.offAll(Laya.Event.CLICK);
                btnExit.on(Laya.Event.CLICK, btnExit, () => {
                    DisplayUtils.removeAllChildren(this.hbox);
                    that.removeSelf();
                });
            }
            let btnShare = imgBg.getChildByName("btnShare");
            if (btnShare) {
                btnShare.offAll(Laya.Event.CLICK);
                btnShare.on(Laya.Event.CLICK, btnShare, () => {
                    if (GlobalConfig.DEBUG) {
                        that.prizeList.pop(); //移除最后一个
                        _callback && _callback(that.lastStage);
                        if (that.prizeList.length > 0) {
                            that.showPrizeUI(that.prizeList, _callback);
                        }
                        else {
                            DisplayUtils.removeAllChildren(this.hbox);
                            that.removeSelf();
                        }
                    }
                    else {
                        userData.toShareAd(() => {
                            // that.prizeList.pop();//移除最后一个
                            // _callback && _callback(that.lastStage);
                            // if (that.prizeList.length > 0) {
                            //     that.showPrizeUI(that.prizeList, _callback);
                            // } else {
                            //     DisplayUtils.removeAllChildren(this.hbox);
                            //     that.removeSelf();
                            // }
                            DisplayUtils.removeAllChildren(this.hbox);
                            that.removeSelf();
                        }, 15);
                    }
                });
            }
            let imgItemBg = imgBg.getChildByName("imgItemBg");
            if (imgItemBg) {
                this.hbox.removeChildren();
                imgItemBg.removeChildren();
                //可奖励关卡
                let prizeCount = _prizeList.length;
                for (var index = 0; index < prizeCount; index++) {
                    let stageValue = _prizeList[index];
                    let itemPos = { x: imgItemBg.width / 2 + (index - (prizeCount - 1) / 2) * 120, y: -70 };
                    let imgItemKey = "imgStage" + index;
                    let imgItem = imgItemBg.getChildByName(imgItemKey);
                    if (imgItem == null) {
                        imgItem = new Laya.Button("images/component/tab_02.png");
                        imgItem.stateNum = 2;
                        imgItemBg.addChild(imgItem);
                        imgItem.name = imgItemKey;
                        imgItem.pos(itemPos.x, itemPos.y);
                        imgItem.anchorX = 0.5;
                        imgItem.anchorY = 0.5;
                        imgItem.selected = true;
                        imgItem.mouseEnabled = false;
                        //关数
                        let txtStage = imgItem.addChild(new Laya.Label("images/component/frame_9calce_03.png"));
                        txtStage.text = '' + stageValue;
                        txtStage.bold = true;
                        txtStage.font = "SimHei";
                        txtStage.fontSize = 36;
                        txtStage.color = "#ffffff";
                        txtStage.stroke = 3;
                        txtStage.strokeColor = "#857536";
                        txtStage.pos(imgItem.width / 2, imgItem.height / 2.8);
                        txtStage.anchorX = 0.5;
                        txtStage.anchorY = 0.5;
                        //红点
                        if (index < prizeCount - 1) {
                            imgItem.selected = false;
                            txtStage.strokeColor = "#9d621c";
                        }
                    }
                    that.lastStage = stageValue;
                }
                //当前奖励物品
                let stagePrizeCfg = GlobleData.getData(GlobleData.BarrierRewardVO, that.lastStage);
                if (stagePrizeCfg == null)
                    return;
                let bossM = MathUtils.parseStringNum(stagePrizeCfg.bossM);
                let gold = BattleManager.Instance.getBarrierRewardToGold(that.lastStage, MathUtils.parseStringNum(stagePrizeCfg.gold));
                let gem = MathUtils.parseStringNum(stagePrizeCfg.gem);
                let itemArray = [
                    { img: "images/ClearanceReward/result_prize_item2.png", value: gold },
                    { img: "images/ClearanceReward/result_prize_item3.png", value: gem },
                    { img: "images/ClearanceReward/result_prize_item4.png", value: bossM }
                ];
                for (var index = 0, len = itemArray.length; index < len; index++) {
                    let cfgData = itemArray[index];
                    let rewardItem = ObjectPool.pop(RewardItem, "RewardItem");
                    rewardItem.create(cfgData.img, cfgData.value);
                    this.hbox.addChild(rewardItem);
                }
            }
        }
    }
}
//# sourceMappingURL=ResultView.js.map
/*
* 商店界面
*/
class ShopView extends ui.shop.ShopViewUI {
    constructor(_kind) {
        super();
        this.btnBuyFun = null; //购买回调
        this.btnFreeFun = null; //购买回调
        this.btnDiamondFun = null; //购买回调
        this.evolutionFun = null; //进化回调
        this.isScroll = true;
        this.init(_kind);
    }
    //新建并添加到节点
    static Create(_parentNode, _callback = null, _removeCallback = null, _kind = 0) {
        let resList = [
            { url: "res/atlas/images/shop.atlas", type: Laya.Loader.ATLAS }
        ];
        Laya.loader.load(resList, Handler.create(null, () => {
            if (_parentNode) {
                let nodeView = new ShopView(_kind);
                AlignUtils.setToScreenGoldenPos(nodeView);
                M.layer.frameLayer.addChildWithMaskCall(nodeView, nodeView.removeSelf);
                _callback && _callback(nodeView);
                nodeView.once(Laya.Event.REMOVED, nodeView, _removeCallback);
            }
        }));
    }
    //初始化
    init(_kind) {
        let self = this;
        SDKManager.Instance.showBannerAd(true);
        //按钮事件
        self.removeEvents();
        self.btnExit.on(Laya.Event.CLICK, self, self.onClickExit);
        self.btn_skillExplain.on(Laya.Event.CLICK, self, self.onSkillExplain);
        self.initList();
    }
    removeEvents() {
        let self = this;
        self.btnExit.off(Laya.Event.CLICK, self, self.onClickExit);
        self.btn_skillExplain.off(Laya.Event.CLICK, self, self.onSkillExplain);
    }
    onSkillExplain() {
        let self = this;
        SkillExplainView.Create(self);
    }
    //点击事件
    onClickExit() {
        this.removeSelf();
    }
    //刷新金币与钻石
    refreshMoney(_money, _diamond) {
        let that = this;
        if (that.txtMoney) {
            that.txtMoney.changeText(MathUtils.bytesToSize(_money));
        }
        if (that.txtDiamond) {
            that.txtDiamond.changeText(MathUtils.bytesToSize(_diamond));
        }
    }
    //初始化列表
    initList() {
        let self = this;
        let monsterType = userData.isEvolution() ? 2 : 1;
        let heroesData = BattleManager.Instance.getAllMonsterByType(monsterType);
        self.heroList.vScrollBarSkin = '';
        self.heroList.repeatY = heroesData.length;
        self.heroList.array = heroesData;
        // if (self.isScroll) self.heroList.visible = false;
        let firstLockId = 0; //第一个被锁项目
        let shareFreeCarId = 0; //免费得车Id
        let shareFreeCarCfg = BattleManager.Instance.getPreMonster(monsterType * 100 + userData.getCarLevel(), -1);
        if (shareFreeCarCfg) {
            shareFreeCarId = shareFreeCarCfg.id;
        }
        let curBuyIndex = BattleManager.Instance.getLevel(shareFreeCarId) - 1; //滚屏位置
        let count = 1;
        let moveY = 50;
        self.heroList.renderHandler = new Laya.Handler(self, (cell, index) => {
            if (index > self.heroList.array.length)
                return;
            // if (index >= curBuyIndex && self.isScroll) {
            //     if (!self.heroList.visible) self.heroList.visible = true;
            //     moveY = index < 4 ? 150 : 50;
            //     Laya.Tween.from(cell, { y: cell.y + moveY * (count + 1) }, 100 * count, null, Laya.Handler.create(self, () => {
            //         Laya.Tween.clearTween(cell);
            //         if (count >= (curBuyIndex + 3)) {
            //             self.isScroll = false;
            //         }
            //     }));
            //     count++;
            // }
            let carInfo = self.heroList.array[index];
            if (carInfo) {
                let monsterType = BattleManager.Instance.getType(carInfo.id);
                let monsterLevel = BattleManager.Instance.getLevel(carInfo.id);
                let imgModel = cell.getChildByName('imgModel');
                if (imgModel) {
                    if (imgModel && carInfo.imgUrl) {
                        imgModel.skin = "images/carImg/" + carInfo.imgUrl;
                        //变黑
                        if (userData.getCarLevel() < monsterLevel) {
                            if (!imgModel.filters) {
                                imgModel.filters = DisplayUtils.createColorFilter(2);
                            }
                        }
                        else {
                            imgModel.filters = [];
                        }
                    }
                }
                let txtLevel = cell.getChildByName('txtLevel');
                if (txtLevel) {
                    txtLevel.changeText('' + BattleManager.Instance.getLevel(carInfo.id));
                }
                let txtName = cell.getChildByName('txtName');
                if (txtName) {
                    txtName.text = carInfo.name;
                }
                let imgAtk = cell.getChildByName('imgAtk');
                if (imgAtk) {
                    let txtValue = imgAtk.getChildByName('txtAtk');
                    if (txtValue) {
                        txtValue.changeText('' + MathUtils.bytesToSize(Number(carInfo.atk)));
                    }
                }
                let imgSpeed = cell.getChildByName('imgSpeed');
                if (imgSpeed) {
                    let txtValue = imgSpeed.getChildByName('txtSpeed');
                    if (txtValue) {
                        txtValue.changeText('' + carInfo.ias);
                    }
                }
                let buyBtnLock = (userData.getCarLevel() < carInfo.unLockId);
                let btnBuy = cell.getChildByName('btnBuy');
                if (btnBuy) {
                    btnBuy.offAll(Laya.Event.CLICK);
                    btnBuy.on(Laya.Event.CLICK, self, (_carInfo = null, _btnObj = null) => {
                        self.btnBuyFun && self.btnBuyFun.runWith([_carInfo, _btnObj]);
                    }, [carInfo, btnBuy]);
                    btnBuy.visible = !buyBtnLock;
                    btnBuy.disabled = buyBtnLock;
                    self.updateMoney(carInfo, btnBuy);
                }
                let btnBuyLock = cell.getChildByName('btnBuyLock');
                if (btnBuyLock) {
                    btnBuyLock.visible = buyBtnLock;
                    btnBuyLock.offAll(Laya.Event.CLICK);
                    btnBuyLock.on(Laya.Event.CLICK, self, () => {
                        MessageUtils.shopMsgByObj(btnBuyLock, LanguageManager.Instance.getLanguageText("hallScene.label.txt.02"));
                    });
                    let imgPet = cell.getChildByName("imgPet");
                    if (imgPet) {
                        imgPet.visible = btnBuyLock.visible;
                        let monsterInfo2 = BattleManager.Instance.getMonsterItem(monsterType * 100 + carInfo.unLockId);
                        if (monsterInfo2) {
                            imgPet.skin = "images/carImg/" + monsterInfo2.imgUrl;
                        }
                        //变黑
                        if (!imgPet.filters) {
                            imgPet.filters = DisplayUtils.createColorFilter(2);
                        }
                        imgPet.alpha = 0.6;
                    }
                    let txtUnlockLevel = btnBuyLock.getChildByName('txtUnlockLevel');
                    if (txtUnlockLevel) {
                        txtUnlockLevel.text = "" + carInfo.unLockId;
                        //最后4辆车铜钱禁售
                        if (carInfo.unLockId >= 1000) {
                            txtUnlockLevel.text = "?";
                        }
                    }
                }
                //视频分享
                let btnSharePrize = cell.getChildByName('btnSharePrize');
                if (btnSharePrize) {
                    btnSharePrize.visible = (shareFreeCarId == carInfo.id);
                    btnSharePrize.offAll(Laya.Event.CLICK);
                    btnSharePrize.on(Laya.Event.CLICK, self, (_carInfo = null, _btnObj = null) => {
                        self.btnFreeFun && self.btnFreeFun.runWith([_carInfo, _btnObj]);
                    }, [carInfo, btnSharePrize]);
                    //观看次数已用完
                    if (userData.getAdTimes(11) < 1 && userData.getShareTimes(11) < 1) {
                        btnSharePrize.visible = false;
                    }
                    else {
                        if (userData.isAdStage(11)) {
                            btnSharePrize.skin = "images/core/shop_free_video.png";
                        }
                        else {
                            btnSharePrize.skin = "images/core/shop_free_share.png";
                        }
                    }
                }
                //钻石购买
                if (carInfo.unLockId < 1000 && userData.getCarLevel() < carInfo.unLockId && firstLockId < 1) {
                    firstLockId = carInfo.unLockId;
                }
                let btnDiamondBuy = cell.getChildByName('btnDiamondBuy');
                if (btnDiamondBuy) {
                    if (firstLockId > 0) {
                        btnDiamondBuy.visible = (firstLockId == carInfo.unLockId);
                        if (btnDiamondBuy.visible) {
                            btnDiamondBuy.offAll(Laya.Event.CLICK);
                            btnDiamondBuy.on(Laya.Event.CLICK, self, (_carInfo = null, _btnObj = null) => {
                                self.btnDiamondFun && self.btnDiamondFun.runWith([_carInfo, _btnObj]);
                            }, [carInfo, btnDiamondBuy]);
                        }
                    }
                    else {
                        btnDiamondBuy.visible = false;
                    }
                }
            }
        });
        self.frameOnce(5, self, () => {
            if (self.heroList && curBuyIndex > 0) {
                self.heroList.scrollTo(curBuyIndex);
            }
        });
    }
    updateMoney(carInfo, btnBuy) {
        let that = this;
        let curPrice = BattleManager.Instance.getMonsterPrice(carInfo.buyPrice, userData.queryBuyRecord(carInfo.id));
        let imgPrice = btnBuy.getChildByName('imgPrice');
        if (imgPrice) {
            let txtPrice = imgPrice.getChildByName('txtPrice');
            if (txtPrice) {
                txtPrice.text = MathUtils.bytesToSize(curPrice);
            }
        }
    }
}
//# sourceMappingURL=ShopView.js.map
/*
* 强化界面
*/
class StrengthenView extends BaseView {
    constructor() {
        super(LAYER_TYPE.FRAME_LAYER, ui.strengthen.StrengthenViewUI);
        this.indexArray = [10, 2, 1, 3];
        this.setResources(["images/strengthen"]);
    }
    //初始化
    initUI() {
        super.initUI();
        let self = this;
        SDKManager.Instance.showBannerAd(true);
        //界面初始化
        let imgBg = self.ui.mainView.getChildByName("imgBg");
        if (imgBg) {
            let btnExit = imgBg.getChildByName("btnExit");
            if (btnExit) {
                btnExit.offAll(Laya.Event.CLICK);
                btnExit.on(Laya.Event.CLICK, btnExit, () => {
                    ViewMgr.Ins.close(ViewConst.StrengthenView);
                });
            }
            let btnSkill = imgBg.getChildByName("btn_skill");
            if (btnSkill) {
                btnSkill.offAll(Laya.Event.CLICK);
                btnSkill.on(Laya.Event.CLICK, btnSkill, () => {
                    SkillExplainView.Create(self);
                });
            }
        }
        //box
        for (var index = 0; index < 4; index++) {
            let skillId = self.indexArray[index];
            self.refreshBoxUI(skillId);
        }
        //精华碎片刷新
        self.setEssence(userData.essence);
        EventsManager.Instance.on(EventsType.ESSENCE_CHANGE, self, (_data) => {
            self.setEssence(userData.essence);
        });
        HttpManager.Instance.requestEssenceData();
    }
    //刷新精华碎片数
    setEssence(_value) {
        let that = this;
        if (that.ui.txtEssence) {
            that.ui.txtEssence.changeText(MathUtils.bytesToSize(_value).toString());
        }
    }
    //设置强化数据
    refreshBoxUI($skillId) {
        let that = this;
        for (var index = 0; index < 4; index++) {
            let skillId = that.indexArray[index];
            if ($skillId == skillId) {
                let strengthenLevel = userData.querySkillAddition($skillId);
                let curProbability = SkillManager.Instance.getSkillStrengthenLevelProbability($skillId, strengthenLevel);
                // let probability: number = SkillManager.Instance.getSkillStrengthenProbability(skillId, 1);
                let price = SkillManager.Instance.getSkillStrengthenCost($skillId, strengthenLevel + 1);
                let imgBg = that.ui.mainView.getChildByName("imgBg");
                if (imgBg) {
                    let strBoxKey = "boxItem" + (index + 1);
                    let boxItem = imgBg.getChildByName(strBoxKey);
                    if (boxItem) {
                        //加成
                        let txtAdd = boxItem.getChildByName("txtAdd");
                        if (txtAdd) {
                            txtAdd.text = (MathUtils.numToPercent(curProbability));
                        }
                        let hbox = boxItem.getChildByName("hbox");
                        if (hbox) {
                            hbox.refresh();
                        }
                        let txtLevel = boxItem.getChildByName("txtLevel");
                        if (txtLevel) {
                            txtLevel.text = "Lv" + strengthenLevel;
                        }
                        //按钮
                        let btnStrengthen = boxItem.getChildByName("btnStrengthen");
                        if (btnStrengthen) {
                            btnStrengthen.offAll(Laya.Event.CLICK);
                            btnStrengthen.on(Laya.Event.CLICK, that, (_btnObj, _btnInfo) => {
                                if (userData.essence < _btnInfo.price) {
                                    MessageUtils.showMsgTips(LanguageManager.Instance.getLanguageText("hallScene.label.txt.17"));
                                    return;
                                }
                                if (userData.querySkillAddition(_btnInfo.skillId) >= 50) {
                                    return MessageUtils.showMsgTips(LanguageManager.Instance.getLanguageText("hallScene.label.txt.16"));
                                }
                                HttpManager.Instance.requestSkillStrengthen(_btnInfo.skillId, 1, _btnInfo.price, 1, (_res) => {
                                    if (_res && _res.type) {
                                        userData.refreshSkillAddition(_btnInfo.skillId);
                                        that.refreshBoxUI(_btnInfo.skillId);
                                        MessageUtils.showMsgTips(LanguageManager.Instance.getLanguageText("hallScene.label.txt.18"));
                                        StrengthenManager.Instance.checkRedPoint();
                                        if (_res.hasOwnProperty("essence")) {
                                            userData.setEssence(MathUtils.parseInt(_res.essence));
                                            that.setEssence(userData.essence);
                                        }
                                    }
                                });
                            }, [btnStrengthen, { skillId: skillId, price: price }]);
                            let txtEssence = btnStrengthen.getChildByName("txtEssence");
                            if (txtEssence) {
                                txtEssence.text = ("" + price);
                            }
                        }
                    }
                }
            }
        }
    }
    close(...param) {
        super.close(param);
        EventsManager.Instance.offAll(EventsType.ESSENCE_CHANGE);
    }
}
//# sourceMappingURL=StrengthenView.js.map
/*
* TER0807-任务界面;
*/
class TaskView extends ui.task.TaskViewUI {
    constructor(_isTask) {
        super();
        var that = this;
        that.frameOnce(1, that, () => {
            that.visible = true;
            that.init(_isTask);
        });
        that.visible = false;
    }
    //新建并添加到节点
    static Create(_parentNode, _callback = null, _isTask = false) {
        let resList = [
            { url: "res/atlas/images.atlas", type: Laya.Loader.ATLAS },
            { url: "res/atlas/images/quest.atlas", type: Laya.Loader.ATLAS },
            { url: "res/atlas/images/component.atlas", type: Laya.Loader.ATLAS }
        ];
        Laya.loader.load(resList, Handler.create(null, () => {
            let viewTag = _isTask ? "taskView" : "shareGiftView";
            if (_parentNode) {
                let nodeViewOld = _parentNode.getChildByName(viewTag);
                if (nodeViewOld) {
                    return;
                }
            }
            else {
                let nodeView = new TaskView(_isTask);
                nodeView.name = viewTag;
                M.layer.frameLayer.addChildWithMaskCall(nodeView, nodeView.removeSelf);
                nodeView.once(Laya.Event.REMOVED, nodeView, _callback);
            }
        }));
    }
    //初始化
    init(_isTask) {
        var self = this;
        SDKManager.Instance.showBannerAd(true);
        //按钮事件
        self.btnExit.on(Laya.Event.CLICK, self, self.onClickExit);
        self.blankView.on(Laya.Event.CLICK, self, self.onClickExit);
        self._tabGroup = new TabGroup(self.tabGroup._childs);
        self._tabGroup.on(Laya.Event.CHANGE, self, self.onTabChange);
        self._tabGroup.selectedIndex = _isTask ? QuestSubView.DAILY_QUEST : QuestSubView.INVITE_AWARD;
    }
    onClickExit() {
        this.removeSelf();
    }
    onTabChange(selectedIndex) {
        const index = this._tabGroup.selectedIndex;
        this.viewStackTask.selectedIndex = index;
        if (index === QuestSubView.DAILY_QUEST) {
            this.requestTaskInfo();
        }
        else if (index === QuestSubView.INVITE_AWARD) {
            this.requestShareInfo();
        }
    }
    updateTabRetDot(subViewType, isShow) {
        const redDot = this._tabGroup.getButtonByIndex(subViewType).getChildByName("imgRetDotHint");
        redDot && (redDot.visible = isShow);
    }
    //初始化list
    //任务
    refreshTaskList(_data) {
        if (_data == null) {
            return;
        }
        let that = this;
        let listData = _data; // [1,3,5,7,8,10];
        let redPointNum = 0;
        listData.sort((pre, next) => {
            if (pre.task_status !== next.task_status) {
                return next.task_status - pre.task_status;
            }
            return pre.id - next.id;
        });
        listData.forEach((data, index, list) => {
            redPointNum += (data.task_status === 1 ? 1 : 0);
        });
        this.updateTabRetDot(QuestSubView.DAILY_QUEST, redPointNum > 0);
        if (listData.length <= 0) {
            this.viewStackTask.selectedIndex = QuestSubView.EMPTY_QUEST;
            return;
        }
        that.taskItemList.vScrollBarSkin = '';
        that.taskItemList.repeatY = 5;
        that.taskItemList.array = listData;
        that.taskItemList.renderHandler = new Laya.Handler(that, (cell, index) => {
            if (index > listData.length) {
                return;
            }
            // console.log(cell, index);
            let item = listData[index];
            if (!item) {
                return;
            }
            let itemTitle = item.title;
            let awardNum = item.reward || 0;
            let totalNum = item.num || 0;
            let finishNum = item.task_num || 0;
            let boxStage = item.task_status;
            let txtTitle = cell.getChildByName('txtTitle');
            if (txtTitle) {
                if (finishNum > totalNum) {
                    finishNum = totalNum;
                }
                txtTitle.changeText(itemTitle + ' (' + finishNum + '/' + totalNum + ')');
            }
            const imgAwardIcon = cell.getChildByName('imgAwardIcon');
            if (imgAwardIcon) {
                switch (item.reward_type) {
                    case "essence":
                        imgAwardIcon.skin = "images/core/essence.png";
                        break;
                    default:
                        imgAwardIcon.skin = "images/core/diamond.png";
                        break;
                }
                const txtDiamond = cell.getChildByName('txtDiamond');
                if (txtDiamond) {
                    txtDiamond.changeText('' + awardNum);
                }
            }
            //领取
            let btnGet = cell.getChildByName('btnGet');
            if (btnGet) {
                btnGet.visible = true;
                if (boxStage > 0) {
                    if (boxStage > 1) {
                        //已领取
                        // btnGet.disabled = true;
                        // btnGet.text.changeText("已领取");
                        btnGet.visible = false;
                    }
                    else {
                        btnGet.disabled = false;
                        // btnGet.text.changeText("领取");
                        // btnGet.mouseEnabled = true;
                        btnGet.offAll(Laya.Event.CLICK);
                        btnGet.on(Laya.Event.CLICK, btnGet, (_item, _btnObj) => {
                            // console.log("领取奖励")
                            that.requestTaskPrize(_item.id, (_res) => {
                                if (_res) {
                                    if (_res.code === 1) {
                                        MessageUtils.showMsgTips("奖励领取成功");
                                        MessageUtils.shopMsgByObj(btnGet, "+" + awardNum, EFFECT_TYPE.DIAMOND);
                                        // userData.requestDiamondData();
                                        if (EventsManager.Instance) {
                                            EventsManager.Instance.event(EventsType.DIAMOND_CHANGE, _res);
                                        }
                                        _btnObj.visible = false;
                                        _item.task_status = 2;
                                        redPointNum--;
                                        this.updateTabRetDot(QuestSubView.DAILY_QUEST, redPointNum > 0);
                                        if (redPointNum < 1) {
                                            if (userData) {
                                                userData.removeTaskRedPoint();
                                            }
                                        }
                                        Laya.Tween.to(cell, { x: -cell.displayWidth }, 250, Laya.Ease.quadOut, Handler.create(that, () => {
                                            listData.splice(index, 1);
                                            Laya.timer.once(100, that, () => {
                                                that.requestTaskInfo();
                                            });
                                        }));
                                    }
                                    else if (_res.code === 2) {
                                        MessageUtils.showMsgTips("领取失败！");
                                    }
                                }
                            });
                        }, [item, btnGet]);
                    }
                }
                else {
                    btnGet.disabled = true;
                    // btnGet.text.changeText("领取");
                }
            }
        });
    }
    //分享
    refreshShareList(_data) {
        if (_data == null) {
            return;
        }
        let that = this;
        let finishNum = _data.share_num;
        let listDatas = _data.share_status; // [1,3,5,7,8,10];
        let redPointNum = 0;
        //排序红点提示
        // for (var key in listDatas) {
        //     var element = listDatas[key];
        //     if (element) {
        //         if (element.status ==1) {
        //             redPointNum ++; //统计红点
        //         }
        //     }
        // }
        listDatas.forEach((item, index, list) => {
            if (item.status === 1) {
                redPointNum++;
            }
        });
        this.updateTabRetDot(QuestSubView.INVITE_AWARD, redPointNum > 0);
        // listDatas = tempListDatas;
        that.shareItemList.vScrollBarSkin = '';
        that.shareItemList.repeatY = 3;
        that.shareItemList.array = listDatas;
        that.shareItemList.renderHandler = new Laya.Handler(that, (cell, index) => {
            if (index > listDatas.length) {
                return;
            }
            // console.log(cell, index);
            let item = listDatas[index];
            if (item == null) {
                return;
            }
            let collectNum = item.num;
            let invitePeople = finishNum;
            let extraDiamond = item.extra_diamond;
            let boxStage = item.status;
            if (invitePeople >= collectNum) {
                invitePeople = collectNum;
            }
            let txtTitle = cell.getChildByName('txtTitle');
            if (txtTitle) {
                // txtTitle.changeText('邀请' +collectNum +'位好友 (' +(invitePeople +'/' +collectNum) +')');
                txtTitle.changeText('第' + collectNum + '个好友');
            }
            let awardNum;
            const imgAwardIcon = cell.getChildByName('imgAwardIcon');
            if (imgAwardIcon) {
                switch (item.reward_type) {
                    case "essence":
                        awardNum = item.essence;
                        imgAwardIcon.skin = "images/core/essence.png";
                        break;
                    default:
                        awardNum = item.diamond;
                        imgAwardIcon.skin = "images/core/diamond.png";
                        break;
                }
                let txtDiamond = imgAwardIcon.getChildByName('txtAward');
                if (txtDiamond) {
                    txtDiamond.changeText('' + awardNum);
                }
            }
            const imgHead = cell.getChildByName('imgHead');
            if (imgHead) {
                imgHead.offAll(Laya.Event.CLICK);
                imgHead.on(Laya.Event.CLICK, imgHead, () => {
                    AnimationUtils.lockBtnStage(imgHead);
                    userData.toShareAd(null, 0, true);
                });
            }
            //领取
            let btnGet = cell.getChildByName('btnGet');
            const btnInvite = cell.getChildByName("btnInvite");
            if (btnGet) {
                btnGet.visible = true;
                if (boxStage > 0) {
                    btnInvite && (btnInvite.visible = false);
                    if (boxStage > 1) {
                        //已领取
                        btnGet.visible = false;
                    }
                    else {
                        if (imgHead && item.avatarUrl) {
                            imgHead.skin = item.avatarUrl;
                            imgHead.offAll(Laya.Event.CLICK);
                        }
                        redPointNum++;
                        btnGet.disabled = false;
                        btnGet.offAll(Laya.Event.CLICK);
                        btnGet.on(Laya.Event.CLICK, btnGet, (_item, _btnObj) => {
                            that.requestPrize(_item.id, (_res) => {
                                if (_res) {
                                    MessageUtils.showMsgTips("奖励领取成功");
                                    if (item.reward_type === "diamond") {
                                        MessageUtils.shopMsgByObj(btnGet, "+" + awardNum, EFFECT_TYPE.DIAMOND);
                                    }
                                    else if (item.reward_type === "essence") {
                                        MessageUtils.shopMsgByObj(btnGet, "+" + awardNum, EFFECT_TYPE.ESSENCE);
                                    }
                                    HttpManager.Instance.requestDiamondData();
                                    _btnObj.visible = false;
                                    _item.status = 2;
                                    redPointNum--;
                                    this.updateTabRetDot(QuestSubView.INVITE_AWARD, redPointNum > 0);
                                    if (redPointNum < 1) {
                                        //移除红点
                                        if (userData) {
                                            userData.removeShareGiftRedPoint();
                                        }
                                    }
                                }
                            });
                        }, [item, btnGet]);
                    }
                }
                else {
                    btnGet.visible = false;
                    if (btnInvite) {
                        btnInvite.visible = true;
                        btnInvite.offAll(Laya.Event.CLICK);
                        btnInvite.on(Laya.Event.CLICK, btnInvite, () => {
                            AnimationUtils.lockBtnStage(btnInvite);
                            userData.toShareAd(null, 0, true);
                        });
                    }
                }
            }
        });
    }
    //拉取任务信息
    requestTaskInfo(_callback) {
        let that = this;
        let HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: 'v1/task/info',
            success: function (res) {
                console.log("@FREEMAN: requestTaskInfo =>", res);
                TaskView.questData = res;
                that.refreshTaskList(res);
                _callback && _callback(res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    //拉取奖励
    requestTaskPrize(_itemId, _callback) {
        let that = this;
        let HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: 'v1/task/rewards/' + _itemId,
            success: function (res) {
                console.log("requestTaskPrize", res);
                _callback && _callback(res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    //拉取分享信息
    requestShareInfo(_callback) {
        let that = this;
        let HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: 'v1/share/friend_num',
            success: function (res) {
                console.log("@FREEMAN: requestShareInfo =>", res);
                TaskView.inviteData = res;
                that.refreshShareList(res);
                _callback && _callback(res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    //拉取奖励
    requestPrize(_itemId, _callback) {
        let HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: 'v1/share/friend_rewards/' + _itemId,
            success: function (res) {
                console.log("requestPrize", res);
                _callback && _callback(res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
}
TaskView.questData = null;
TaskView.inviteData = null;
var QuestSubView;
(function (QuestSubView) {
    QuestSubView[QuestSubView["DAILY_QUEST"] = 0] = "DAILY_QUEST";
    QuestSubView[QuestSubView["INVITE_AWARD"] = 1] = "INVITE_AWARD";
    QuestSubView[QuestSubView["EMPTY_QUEST"] = 2] = "EMPTY_QUEST";
})(QuestSubView || (QuestSubView = {}));
//# sourceMappingURL=TaskView.js.map
class LoginView extends Laya.Component {
    constructor() {
        super();
        this.ui = new ui.login.LoginUI();
        this.addChild(this.ui);
        this.addEvents();
    }
    addEvents() {
        this.ui.btnSubmit.on(Laya.Event.CLICK, this, () => {
            const account = this.ui.inputAccount.text;
            const pwd = this.ui.inputPwd.text;
            if (!account || !pwd) {
                alert("帐号或密码不能为空！");
            }
            else {
                this.event(LoginView.SUBMIT, { account, pwd });
            }
        });
    }
}
LoginView.SUBMIT = "SUBMIT";
//# sourceMappingURL=LoginView.js.map
class MainLoadingView extends Laya.Sprite {
    constructor() {
        super();
        this.ui = new ui.login.LoginSceneUI();
        this.ui.probox.visible = false;
        this.addChild(this.ui);
        this.tweenAd();
    }
    startCountDown() {
        Laya.timer.once(15e3, this, () => {
            this.ui.btnRefresh.visible = true;
            this.ui.btnRefresh.on(Laya.Event.CLICK, this, () => {
                this.prepareAccount();
            });
        });
    }
    prepareAccount() {
        if (Laya.Browser.onMiniGame) {
            this.checkAuthority();
        }
        else {
            this.loadCache();
        }
    }
    loadCache(complete) {
        userData.loadCache();
        GlobleData.Instance.setup(() => {
            userData.loadStorage(() => {
                this.startToLoad();
            });
        });
    }
    startToLoad() {
        this.ui.probox.visible = true;
        this.ui.btnStart.visible = false;
        this.startCountDown();
        if (Laya.Browser.onMiniGame) {
            this.loadSubPackages();
        }
        else {
            this.loadRemoteRes();
        }
    }
    loadSubPackages() {
        const self = this;
        platform.startLoading((percentage) => {
            self.updateLoadingProgress(percentage, 1);
            if (percentage >= 100) {
                self.loadRemoteRes();
            }
        });
    }
    // private _time:number = 0;
    loadRemoteRes() {
        // if(this._time == 0){
        //     this._time++;
        //     return;
        // }
        let resList = BattleManager.Instance.getStartLoadPetData();
        if (resList.length) {
            console.log("@David 预加载英雄资源，数量：" + resList.length);
            Laya.loader.load(resList, Handler.create(this, () => {
                this.startGame();
            }), Handler.create(this, (percentage) => {
                this.updateLoadingProgress(percentage * 100, 2);
            }, null, false));
        }
        else {
            this.startGame();
        }
    }
    checkAuthority() {
        let curStatus = 0;
        const rect = LayerManager.getRealStageRect(this.ui.btnStart);
        platform.authenticLogin((res) => {
            if (res) {
                new Token().verify(Laya.Handler.create(this, () => {
                    userData.versionCheck(() => {
                        if (res && res.userInfo) {
                            M.player.account = res.userInfo.nickName;
                            HttpManager.Instance.requestSaveWxUserinfoData(platform.encode(res.userInfo.nickName), res.userInfo.avatarUrl, res.userInfo.city, res.userInfo.gender);
                            this.loadCache();
                        }
                    });
                }));
            }
        }, {
            x: rect.x, y: rect.y,
            width: rect.width, height: rect.height
        }, (_status) => {
            if (curStatus == _status) {
                return;
            }
            curStatus = _status;
            if (_status > 0 && _status < 3) {
                //微信授权登录
                EffectUtils.showWaitEffect("正在登录");
            }
            else if (_status == 3) {
                //进入游戏
                EffectUtils.stopWaitEffect();
            }
        });
    }
    updateLoadingProgress(percentage, type) {
        let percent = Math.floor(percentage);
        percent = percent < 0 ? 0 : percent > 100 ? 100 : percent;
        this.ui.lblProgress.visible = this.ui.progressBar.visible = this.ui.lblLoadingDesc.visible = percent < 100;
        this.ui.imgBar.width = 284 * percent / 100;
        this.ui.lblProgress.text = "" + percent + "%";
        if (type === 1) {
            // 加载小游戏分包
            this.ui.lblLoadingDesc.changeText("正在构建英雄世界... ");
        }
        else if (type === 2) {
            // 加载远程资源
            this.ui.lblLoadingDesc.changeText("正在召唤英雄... ");
        }
    }
    tweenAd() {
        if (this.ui.imgStart) {
            console.log("@FREEMAN：广告屏切换开始");
            this.ui.imgStart.visible = true;
            Laya.Tween.to(this.ui.imgStart, { alpha: 0 }, 300, Laya.Ease.linearNone, Laya.Handler.create(this, () => {
                console.log("@FREEMAN：广告屏切换结束");
                this.ui.imgStart.destroy();
                this.prepareAccount();
            }), 1e3);
        }
    }
    startGame() {
        HallScene.Create(M.layer.renderLayer);
        Laya.timer.clearAll(this);
        this.destroy();
    }
}
//# sourceMappingURL=MainLoadingView.js.map
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
class DebugPlatform {
    getUserInfo() {
        return __awaiter(this, void 0, void 0, function* () {
            return { nickName: M.player.account };
        });
    }
    // @ts-ignore
    login() {
        return __awaiter(this, void 0, void 0, function* () {
        });
    }
    // @ts-ignore
    startLoading(_callback) {
        return __awaiter(this, void 0, void 0, function* () {
        });
    }
    authenticLogin(_callback, _btnVect, _statusCallback) {
        _callback && _callback(true);
    }
    hideAuthenticLoginBtn() { }
    createFeedbackButton(_btnVect) { }
    onShow(_callback) {
        return __awaiter(this, void 0, void 0, function* () { });
    }
    onHide(_callback) {
        return __awaiter(this, void 0, void 0, function* () { });
    }
    getShareInfo(shareTicket, callback, failCallback) {
        return __awaiter(this, void 0, void 0, function* () { });
    }
    httpToken(_url, _callback, _forceNew = false) {
        return "yaoguai_8f4cd7953ac7232e79ea04a7f9e27947"; //M.player.token;
    }
    httpRequest(_url, _params, _noToken = false) {
    }
    onShare(_data) { }
    isSharing() { }
    navigateToMiniProgram(_data) { }
    createBannerAd(_param) { }
    createRewardedVideoAd(_param) { }
    openCustomerService(_param) { }
    setUserCloudStorage(_kvDataList) { }
    getOpenDataContext() { }
    postMessage(_data) { }
    //编码（名字表情）
    encode(_txt) {
        return _txt;
    }
    //解码（名字表情）
    decode(_txt) {
        return _txt;
    }
}
if (!window.platform) {
    window.platform = new DebugPlatform();
}
//# sourceMappingURL=platform.js.map
class ManagerShortcuts {
    constructor() {
        this.novice = NoviceManager.getInstance();
        this.layer = LayerManager.getInstance();
        this.more = MoreController.getInstance();
        this.player = PlayerManager.Instance;
        this.hall = HallManager.Instance;
    }
}
//# sourceMappingURL=ManagerShortcuts.js.map
xiaoduo = window.xiaoduo;
const M = new ManagerShortcuts();
const userData = new UserData();
class Main {
    constructor() {
        Laya.MiniAdpter.init();
        Laya.MiniAdpter['getUrlEncode'] = (url, type) => {
            if (url.indexOf(".fnt") != -1 || url.indexOf("sheet.json") != -1 || url.indexOf("language.txt") != -1 || url.indexOf(".json") != -1) {
                return "utf8";
            }
            else if (type == "arraybuffer") {
                return "";
            }
            return "ascii";
        };
        Laya.init(750, 1334, Laya.WebGL);
        Laya.stage.scaleMode = Laya.Stage.SCALE_NOSCALE;
        M.layer.initLayer(Laya.stage, 750, 1334);
        LayerMgr.Instance.initLayer(Laya.stage, 750, 1334);
        SDKManager.Instance.initWX();
        if (!Laya.Browser.onMiniGame) {
            if (GlobalConfig.DEBUG) {
                this.beginLoad();
                return;
            }
            this._loginView = new LoginView();
            this._loginView.ui.inputAccount.changeText("xdyx");
            this._loginView.ui.inputPwd.changeText("123456");
            this._loginView.on(LoginView.SUBMIT, this, this.onLoginSubmit);
            M.layer.renderLayer.addChild(this._loginView);
        }
        else {
            Laya.ResourceVersion.enable("version.json", Handler.create(null, this.beginLoad), Laya.ResourceVersion.FILENAME_VERSION);
        }
    }
    onLoginSubmit({ account, pwd }) {
        EffectUtils.showWaitEffect();
        let HttpReqHelper = new HttpRequestHelper(PathConfig.AppUrl);
        HttpReqHelper.request({
            url: 'v1/token/user',
            method: "Post",
            data: StringUtils.toUrlQueryString({ userName: account, password: pwd }),
            success: res => {
                console.log("@FREEMAN: 请求帐号密码登录:", { account, pwd }, res);
                M.player.account = account;
                M.player.token = res.token;
                Laya.ResourceVersion.enable("version.json", Handler.create(null, this.beginLoad), Laya.ResourceVersion.FILENAME_VERSION);
            },
            fail: ({ error_code, msg }) => {
                console.log("@FREEMAN: 帐号或密码错误:", { error_code, msg });
                EffectUtils.stopWaitEffect();
                MessageUtils.showMsgTips(msg);
            }
        });
    }
    beginLoad() {
        Laya.loader.load(["loading/start_bg.jpg", "loading/start_btn.png", "loading/tip_bg.png", "loading/loading01.png", "loading/loading02.png", "loading/tip_symbol_01.png"], Handler.create(this, () => {
            EffectUtils.stopWaitEffect();
            M.layer.renderLayer.addChild(new MainLoadingView());
        }));
    }
}
setTimeout(() => {
    new Main();
}, 1e3);
//# sourceMappingURL=Main.js.map