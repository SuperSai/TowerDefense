/*
* 子弹
*/
class Buttle extends Laya.Sprite {

    public kind: number = 0; //类型
    private _bulletImg: Laya.Image;

    static aniTable: Array<any> = [
        {
            aniPath: "ice",
            aniKey: "s_",
            frameCount: 4
        },
        {
            aniPath: "electric",
            aniKey: "dian_",
            frameCount: 5
        },
        {
            aniPath: "drug",
            aniKey: "du_",
            frameCount: 4
        },
        {
            aniPath: "fireball",
            aniKey: "sw_jz",
            frameCount: 5
        }
    ];

    //设置子弹类型
    public setBulletType(vo: MonsterVO): void {
        let self = this;
        self._bulletImg = new Laya.Image();
        if (vo) {
            self._bulletImg.skin = PathConfig.GameResUrl.replace("{0}", vo.buttleName);
        } else {
            self._bulletImg.skin = "images/effect_water001.png";
        }
        self.addChild(self._bulletImg);
    }

    //攻击目标
    public attackTarget(_targetSp: MonsterSprite, _collionCallback: any = null): void {
        let that = this;
        let effectSp = that;
        let targetPos: Laya.Point = null;
        if (_targetSp.calcuteNextMovePosFun) {
            targetPos = _targetSp.calcuteNextMovePosFun();
        } else {
            targetPos = new Laya.Point(_targetSp.x, _targetSp.y);
        }
        //动画
        let timeLine: Laya.TimeLine = new Laya.TimeLine();
        timeLine.addLabel("tl1", 0).to(effectSp, { x: targetPos.x - 30, y: targetPos.y - 80 }, 300, Laya.Ease.linearNone);
        if (!timeLine.hasListener(Laya.Event.COMPLETE)) {
            let timeLineHandler = () => {
                //创建动画实例
                let aniData: any = Buttle.aniTable[that.kind - 1];
                if (aniData && effectSp.parent) {
                    let effectAni: Laya.Animation = new Laya.Animation();
                    effectSp.parent.addChild(effectAni);
                    effectAni.zOrder = effectSp.zOrder;
                    // 加载动画图集,加载成功后执行回调方法
                    let aniPath: string = aniData.aniPath;
                    let aniKey: string = aniData.aniKey;
                    let aniAtlas: string = PathConfig.EffectUrl.replace("{0}", aniPath);
                    let aniInterval: number = 50;
                    let frameCount: number = aniData.frameCount;
                    effectAni.loadAtlas(aniAtlas, Handler.create(that, () => {
                        //创建动画模板dizziness
                        Laya.Animation.createFrames(AnimationUtils.aniUrls(aniKey, frameCount, aniPath + '/', true), aniPath);
                        //设置坐标
                        let aniGraphics = effectAni.frames[1] as Laya.Graphics;
                        if (aniGraphics) {
                            let aniBounds = aniGraphics.getBounds() as Laya.Rectangle;
                            effectAni.pos(effectSp.x + (effectSp.width - aniBounds.width) / 2, effectSp.y + (effectSp.height - aniBounds.width) / 2);
                        }
                        effectAni.interval = aniInterval;
                        effectAni.play(0, false, aniPath);
                    }));
                    effectAni.timerOnce(aniInterval * frameCount, that, () => {
                        effectAni.removeSelf();
                    });
                };
                effectSp.removeChildren();
                if (_collionCallback && _collionCallback(that.kind)) {
                    effectSp.removeSelf();
                } else {
                    effectSp.removeSelf();
                }
                ObjectPool.push(effectSp);
                timeLine.destroy();
                timeLine = null;
            }
            timeLine.once(Laya.Event.COMPLETE, effectSp, timeLineHandler);
            timeLine.play(0, false);
        }
    }

    //连接目标（雷电专用）
    public joinTarget(_targetPos: Laya.Point, _collionCallback: any = null): void {
        let that = this;
        let effectSp = that;
        effectSp.loadImage("images/effect_electric002.png");
        effectSp.pivotX = 8;
        effectSp.pivotY = effectSp.height / 2;
        effectSp.rotation = MathUtils.calulatePointAnagle(effectSp.x, effectSp.y, _targetPos.x, _targetPos.y);
        effectSp.scaleX = _targetPos.distance(effectSp.x, effectSp.y) / 100 + 0.1;
        //动画
        let timeLine: Laya.TimeLine = new Laya.TimeLine();
        timeLine.addLabel("tl1", 0).to(effectSp, { scaleY: -1 }, 50, Laya.Ease.linearNone)
            .addLabel("tl2", 0).to(effectSp, { scaleY: 1 }, 50, Laya.Ease.linearNone)
            .addLabel("tl3", 0).to(effectSp, { alpha: 0 }, 100, Laya.Ease.linearNone);
        timeLine.once(Laya.Event.COMPLETE, effectSp, () => {
            effectSp.removeChildren();
            if (_collionCallback && _collionCallback(that.kind)) {
                effectSp.removeSelf();
            } else {
                effectSp.removeSelf();
            }
            timeLine.destroy();
            timeLine = null;
        });
        timeLine.play(0, false);
    }
}